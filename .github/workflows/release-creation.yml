name: 🏷️ Release Creation Workflow

on:
  push:
    branches:
      - 'main'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}

jobs:
  code-ql:
    name: CodeQL Scan ❇️
    runs-on: ubuntu-latest
    timeout-minutes: 360
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v4

      - name: Initialize CodeQL ⚙️
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: AutoBuild 🌡️
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis ❇️
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:javascript"

  install:
    name: Install ⚙️
    runs-on: ubuntu-latest
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v4

      - name: Install pnpm 🏗️
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Setup NodeJS ✨
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - name: Cache pnpm dependencies 🥡
        uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-pnpm-v3-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Install project dependencies 📦
        run: pnpm install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'

  mutant-tests:
    name: Mutant Tests 👽
    runs-on: ubuntu-latest
    env:
      STRYKER_DASHBOARD_API_KEY: ${{ secrets.STRYKER_DASHBOARD_API_KEY }}
      STRYKER_REPORT_PATH: tests/stryker/coverage
      VERSION: 'main'
    needs:
      - install
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v4

      - name: Install pnpm 🏗️
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Setup NodeJS ✨
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - name: Restore pnpm dependencies from cache 🥡
        uses: actions/cache/restore@v4
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-pnpm-v3-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Create Nuxt types ⛰️
        run: pnpm run postinstall

      - name: Mutant tests 👽
        id: mutant-tests
        continue-on-error: true
        run: pnpm run test:stryker:ci

      - name: Save stryker report as artifact 💎
        uses: actions/upload-artifact@v4
        with:
          name: stryker-html-report
          path: ${{ env.STRYKER_REPORT_PATH }}/index.html

      - name: Save stryker report in GitHub Pages 📑
        uses: PavanMudigonda/html-reporter-github-pages@v1.2
        with:
          test_results: ${{ env.STRYKER_REPORT_PATH }}
          report_url: ${{ env.REPORTS_URL }}
          keep_reports: 1
          gh_pages: gh_pages
          subfolder: reports
          tool_name: stryker
          workflow_name: ${{ github.event_name }}
          env: main
          token: ${{ secrets.GH_PAGES_REPORTS_TOKEN }}

      - name: Exit with error if mutant tests failed 🚨
        if: steps.mutant-tests.outcome != 'success'
        run: exit 1;

  release:
    name: Release 🏷️
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install pnpm 🏗️
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Setup NodeJS ✨
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - name: Restore pnpm dependencies from cache 🥡
        uses: actions/cache/restore@v4
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-pnpm-v3-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Release 🏷️
        id: release
        run: npx semantic-release

    outputs:
      new-release-published: ${{ steps.release.outputs.new-release-published }}
      new-release-version: ${{ steps.release.outputs.new-release-version }}

  unit-tests:
    name: Unit Tests 🧪
    runs-on: ubuntu-latest
    env:
      UNIT_TESTS_COVERAGE_REPORTS_PATH: tests/unit/coverage
    needs:
      - install
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v4

      - name: Install pnpm 🏗️
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Setup NodeJS ✨
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - name: Restore pnpm dependencies from cache 🥡
        uses: actions/cache/restore@v4
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-pnpm-v3-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Create Nuxt types ⛰️
        run: pnpm run postinstall

      - name: Unit tests 🧪
        id: unit-tests
        continue-on-error: true
        run: pnpm run test:unit:cov

      - name: Save tests coverage in cache 🥡
        uses: actions/cache/save@v4
        id: cache-unit-tests-coverage
        with:
          path: tests/unit/coverage
          key: ${{ runner.os }}-tests-unit-coverage-v3-${{hashFiles('tests/unit/coverage/lcov.info')}}

      - name: Save unit tests coverage report as artifact 💎
        uses: actions/upload-artifact@v4
        with:
          name: unit-tests-coverage-report
          path: ${{ env.UNIT_TESTS_COVERAGE_REPORTS_PATH }}

      - name: Save unit tests reports in GitHub Pages 📑
        uses: PavanMudigonda/html-reporter-github-pages@v1.2
        with:
          test_results: ${{ env.UNIT_TESTS_COVERAGE_REPORTS_PATH }}
          report_url: ${{ env.REPORTS_URL }}
          keep_reports: 1
          gh_pages: gh_pages
          subfolder: reports
          tool_name: vitest
          workflow_name: ${{ github.event_name }}
          env: main
          token: ${{ secrets.GH_PAGES_REPORTS_TOKEN }}

      - name: Exit with error if unit tests failed 🚨
        if: steps.unit-tests.outcome != 'success'
        run: exit 1;

  sonarcloud:
    name: SonarCloud Analysis 🌥️
    runs-on: ubuntu-latest
    needs:
      - unit-tests
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm 🏗️
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Restore pnpm dependencies from cache 🥡
        uses: actions/cache/restore@v4
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-pnpm-v3-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Restore tests coverage from cache 🥡
        uses: actions/cache/restore@v4
        id: cache-unit-tests-coverage
        with:
          path: tests/unit/coverage
          key: ${{ runner.os }}-tests-unit-coverage-v3-
          restore-keys: |
            ${{ runner.os }}-tests-unit-coverage-v3-

      - name: Create Nuxt types ⛰️
        run: pnpm run postinstall

      - name: SonarCloud Scan 🌥️
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}