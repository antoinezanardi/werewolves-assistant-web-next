{
  "shared": {
    "werewolvesAssistant": "Werewolves Assistant",
    "yes": "Yes",
    "no": "No",
    "and": "and",
    "actions": {
      "add": "Add",
      "close": "Close",
      "next": "Next",
      "back": "Back",
      "cancel": "Cancel"
    },
    "time": {
      "second": "1 second | {count} seconds",
      "minute": "1 minute | {count} minutes"
    },
    "role": {
      "name": {
        "werewolf": "Werewolf | Werewolves",
        "big-bad-wolf": "Big Bad Wolf",
        "accursed-wolf-father": "Accursed Wolf-Father",
        "white-werewolf": "White Werewolf",
        "villager": "Villager | Villagers",
        "villager-villager": "Villager-Villager",
        "seer": "Seer",
        "cupid": "Cupid",
        "witch": "Witch",
        "hunter": "Hunter",
        "little-girl": "Little Girl",
        "defender": "Defender",
        "elder": "Elder",
        "scapegoat": "Scapegoat",
        "idiot": "Idiot",
        "two-sisters": "Two Sisters | Sisters",
        "three-brothers": "Three Brothers | Brothers",
        "fox": "Fox",
        "bear-tamer": "Bear Tamer",
        "stuttering-judge": "Stuttering Judge",
        "rusty-sword-knight": "Rusty Sword Knight",
        "thief": "Thief",
        "wild-child": "Wild Child",
        "wolf-hound": "Wolf-Hound",
        "angel": "Angel",
        "pied-piper": "Pied Piper",
        "scandalmonger": "Scandalmonger",
        "prejudiced-manipulator": "Prejudiced Manipulator",
        "actor": "Actor",
        "devoted-servant": "Devoted Servant"
      },
      "definiteName": {
        "werewolf": "The Werewolf | The Werewolves",
        "big-bad-wolf": "The Big Bad Wolf",
        "accursed-wolf-father": "The Accursed Wolf-Father",
        "white-werewolf": "The White Werewolf",
        "villager": "The Villager | The Villagers",
        "villager-villager": "The Villager-Villager",
        "seer": "The Seer",
        "cupid": "Cupid",
        "witch": "The Witch",
        "hunter": "The Hunter",
        "little-girl": "The Little Girl",
        "defender": "The Defender",
        "elder": "The Elder",
        "scapegoat": "The Scapegoat",
        "idiot": "The Idiot",
        "two-sisters": "The Two Sisters",
        "three-brothers": "The Three Brothers",
        "fox": "The Fox",
        "bear-tamer": "The Bear Tamer",
        "stuttering-judge": "The Stuttering Judge",
        "rusty-sword-knight": "The Rusty Sword Knight",
        "thief": "The Thief",
        "wild-child": "The Wild Child",
        "wolf-hound": "The Wolf-Hound",
        "angel": "The Angel",
        "pied-piper": "The Pied Piper",
        "scandalmonger": "The Scandalmonger",
        "prejudiced-manipulator": "The Prejudiced Manipulator",
        "actor": "The Actor",
        "devoted-servant": "The Devoted Servant"
      },
      "indefiniteName": {
        "werewolf": "a Werewolf",
        "big-bad-wolf": "a Big Bad Wolf",
        "accursed-wolf-father": "an Accursed Wolf-Father",
        "white-werewolf": "a White Werewolf",
        "villager": "a Villager",
        "villager-villager": "a Villager-Villager",
        "seer": "a Seer",
        "cupid": "Cupid",
        "witch": "a Witch",
        "hunter": "a Hunter",
        "little-girl": "a Little Girl",
        "defender": "a Defender",
        "elder": "an Elder",
        "scapegoat": "a Scapegoat",
        "idiot": "an Idiot",
        "two-sisters": "a Sister from the Two Sisters",
        "three-brothers": "a Brother from the Three Brothers",
        "fox": "a Fox",
        "bear-tamer": "a Bear Tamer",
        "stuttering-judge": "a Stuttering Judge",
        "rusty-sword-knight": "a Rusty Sword Knight",
        "thief": "a Thief",
        "wild-child": "a Wild Child",
        "wolf-hound": "a Wolf-Hound",
        "angel": "an Angel",
        "pied-piper": "a Pied Piper",
        "scandalmonger": "a Scandalmonger",
        "prejudiced-manipulator": "a Prejudiced Manipulator",
        "actor": "an Actor",
        "devoted-servant": "a Devoted Servant"
      },
      "descriptions": {
        "werewolf": {
          "hisGoalIsToKillVillagers": "Their goal is to eliminate the Villagers.",
          "eachNightEatsVillager": "Each night, they devour a Villager. During the day, they try to conceal their nocturnal identity to escape public vengeance.",
          "numberOfWolvesVaries": "Their number may vary depending on the number of players and applied variants.",
          "werewolvesCantEatEachOther": "Under no circumstances can a lone Werewolf devour another Werewolf."
        },
        "big-bad-wolf": {
          "hisGoalIsToKillVillagers": "His goal is to eliminate the Villagers.",
          "eatsALot": "In the village of Miller's Hollow, little pigs aren't the only ones to fear the Big Bad Wolf. It is enormous, and its appetite is gigantic. Because of it, entire villages were wiped off the map!",
          "eachNightEatsAnotherVictimTwice": "Each night, it wakes up and feasts with the other Werewolves. But as long as no Werewolf, Wolf-Hound turned wolf, or Wild Child who lost his model is eliminated, it wakes up alone a second time and devours another victim.",
          "cannotEatAnotherWolf": "It cannot devour another Werewolf."
        },
        "accursed-wolf-father": {
          "hisGoalIsToKillVillagers": "His goal is to eliminate the Villagers.",
          "spreadEngeanceAndSleep": "The very first Werewolf in our lands, the father of all their fathers, had two powers: the first was to spread its progeny through a special bite, and the second was to escape this world by sleeping for a few centuries.",
          "awokenWithHunger": "Fortunately for our recent ancestors, it had long since dozed off. The authors of this work wish good luck to today's Villagers and note that the Accursed Wolf-Father has just awakened from a long sleep and is very hungry!",
          "eachNightCanInfect": "Each night, it wakes up and feasts with the other Werewolves. But once in the game, if it desires, after the Werewolves have fallen asleep, it raises its hand. This means the victim is not devoured but infected.",
          "infectOncePerGame": "The Accursed Wolf-Father can use its power only once in the game. The game master then touches the infected inhabitant, who immediately (and secretly) becomes a Werewolf and will now participate in the Werewolves' feast.",
          "usePowerAndAwokenWithWolves": "If it possessed a nighttime power, it will be awakened by the game master in the following turns to use this power, in addition to being called with the Werewolves."
        },
        "white-werewolf": {
          "heMustRemainAlone": "His goal is to be the sole survivor of the village. Only in that case do they win the game.",
          "hatesBothWerewolvesAndVillagers": "This very malevolent character hates both Werewolves and Villagers equally!",
          "strangeMutationInPopulation": "In a recent work titled 'The Village,' it is said that a strange mutation occurred within the lycanthropic population itself.",
          "eachNightCanEatAnotherWolf": "Each night, it wakes up and feasts with the other Werewolves. But every other night, at the game master's call, it wakes up alone and can eliminate a Werewolf."
        },
        "villager": {
          "hisGoalIsToKillWerewolves": "Their goal is to eliminate the Werewolves.",
          "noSpecialSkills": "They have no special skills.",
          "analyticalMind": "Their only weapons are the ability to analyze behaviors to identify the Werewolves."
        },
        "villager-villager": {
          "hisGoalIsToKillWerewolves": "Their goal is to eliminate the Werewolves.",
          "pureSoul": "This character possesses a clear and transparent soul like the water of a mountain stream. It will deserve the attentive listening of its peers and make its word decisive in crucial moments.",
          "inspiringTrust": "What power can be as great as inspiring absolute trust in honest people?",
          "wolfHuntStrategy": "Will the Werewolves rush to eliminate this powerless being? Will they prefer to uncover Villagers with more threatening powers?",
          "certaintyAsInnocent": "On both faces, this card has the illustration of a Simple Villager. During distribution, the village will have absolute certainty that its owner is indeed an innocent Simple Villager.",
          "trustedAdvisor": "Game master's advice: This character can become a trusted Captain or Constable."
        },
        "seer": {
          "herGoalIsToKillWerewolves": "Her goal is to eliminate the Werewolves.",
          "nightlyVision": "Each night, she sees the card of a player of her choice.",
          "helpfulButDiscreet": "She must assist the other Villagers but remain discreet to avoid being unmasked by the Werewolves."
        },
        "cupid": {
          "hisGoalIsToKillWerewolves": "His goal is to eliminate the Werewolves.",
          "magicArrows": "By shooting his famous magic arrows, Cupid has the power to make 2 people fall in love forever.",
          "firstNightPairing": "On the first night, he designates the 2 players (or players) in love. Cupid can, if he wants, designate himself as one of the two Lovers.",
          "tragicEnd": "If one of the Lovers is eliminated, the other dies of sorrow immediately. A Lover must never eliminate their beloved, nor cause them any harm (even pretending!).",
          "warningForMixedPairs": "Warning: if one of the Lovers is a Villager and the other a Werewolf or the Piper, the goal of the game changes for the Lovers: indeed, to live their love peacefully and win the game, they must eliminate all other players, Werewolves, and Villagers, following the rules of the game."
        },
        "witch": {
          "herGoalIsToKillWerewolves": "Her goal is to eliminate the Werewolves.",
          "potentPotions": "She knows how to concoct 2 extremely powerful potions: a healing potion to resurrect the player devoured by the Werewolves and a poisoning potion used at night to eliminate a player.",
          "oneUsePerGame": "The Witch can use each potion only once in the game.",
          "doublePotionUse": "She can use both potions on the same night.",
          "morningAfterEffect": "In the morning, depending on the potions used, there may be 2 eliminated players or none!",
          "selfHealingOption": "The Witch can also use the healing potion for herself, thus healing herself if she has just been devoured by the Werewolves."
        },
        "hunter": {
          "hisGoalIsToKillWerewolves": "His goal is to eliminate the Werewolves.",
          "revengeUponDeath": "If devoured by the Werewolves or accidentally eliminated by the Villagers, the Hunter must retaliate before passing away by immediately eliminating any other player of his choice.",
          "loversFarewell": "If the Hunter is the lover of an eliminated player, before leaving the game, the Hunter must immediately eliminate another player of his choice.",
          "potentialNoSurvivors": "This can lead to a game where no players survive. In this case, victory belongs to neither of the two factions."
        },
        "little-girl": {
          "herGoalIsToKillWerewolves": "Her goal is to eliminate the Werewolves.",
          "nightlyEspionage": "The Little Girl can, by slightly opening her eyes, spy on the Werewolves during their wake-up.",
          "riskOfDiscovery": "If she is caught by one of the Werewolves, she can be devoured immediately (silently), in place of the designated victim.",
          "nightTimeObservation": "The Little Girl can only spy at night during the Werewolves' wake-up turn. She is not allowed to pretend to be a Werewolf and open her eyes wide."
        },
        "defender": {
          "hisGoalIsToKillWerewolves": "His goal is to eliminate the Werewolves.",
          "protectiveRole": "This character can shield the Villagers from the bite of the Werewolves… Each night, the Defender is called before the Werewolves.",
          "playerDesignation": "The Defender then designates a player to the game master. (It is customary for the Defender to first reproduce with his hands the figure drawn on the card).",
          "nightlyProtection": "The player thus designated will be protected during the night (and only that night) against the Werewolves. Even if chosen by them, they will not be eliminated from the game.",
          "selfProtection": "The Defender has the right to self-protect. They are not allowed to protect the same player for two consecutive nights.",
          "limitations": "The protection of the Defender has no effect on the Little Girl. (She is in the midst of preadolescent crisis, and nothing can save her from getting into trouble).",
          "exclusions": "The Defender does not protect against the Piper or infection by the Accursed Wolf-Father."
        },
        "elder": {
          "hisGoalIsToKillWerewolves": "His goal is to eliminate the Werewolves.",
          "remarkableResilience": "He has victoriously traversed all the terrible trials of life and acquired an extraordinary resistance! The Werewolves will have to try twice to devour him.",
          "survivalTrait": "The first time the Elder of the village is devoured by the Werewolves, he survives. The game master does not flip his card. The Elder is eliminated only the second time he is devoured.",
          "quickElimination": "The village vote, the Witch's poisoning potion, the Hunter's shot, and the Barber's razor eliminate the Elder on the first attempt.",
          "specialConsequence": "But despairing at having eliminated such a well of knowledge, the Villagers lose their special powers until the end of the game. He is not affected by the Accursed Wolf-Father if it is the first time he is bitten.",
          "healingOption": "Warning: If the Elder of the village is healed by the Witch, he recovers only one life."
        },
        "scapegoat": {
          "hisGoalIsToKillWerewolves": "His goal is to eliminate the Werewolves.",
          "unfortunateRole": "It's quite sad, but in Miller's Hollow, when something goes wrong, he always unjustly suffers the consequences…",
          "tiebreakerElimination": "If the village vote results in a tie, the Scapegoat is eliminated instead of the tied players.",
          "additionalRoleAfterElimination": "It's up to him to maneuver well to avoid this sad conclusion. If the Scapegoat is eliminated, he still has one prerogative to exercise. He designates who will or will not vote during the next day.",
          "cautionaryNote": "Caution: designating only one player to vote is risking that he will be devoured by the Werewolves the following night. There will then be no village vote. (Unless, of course, the designated player is a Werewolf, or the Werewolves deliberately choose not to eliminate him…)"
        },
        "idiot": {
          "hisGoalIsToKillWerewolves": "His goal is to eliminate the Werewolves.",
          "quirkyVillager": "What village doesn't have its Idiot? He does things a bit recklessly, but he's so endearing that no one would want to harm him…",
          "mistakenVote": "If the village votes against him, the Village Idiot flips his card. At that moment, the Villagers realize their mistake and immediately pardon him. From now on, he continues to play, but he has lost his voting rights. What would be the worth of an Idiot's vote… There will be no hanging this round.",
          "wolfElimination": "Warning: if the Werewolves devour him, the Village Idiot is eliminated. If the Idiot is eliminated while he was the Captain of the village, he does not pass on his function. If the Hunter shoots the Idiot, he is eliminated."
        },
        "two-sisters": {
          "theirGoalIsToKillWerewolves": "Their goal is to eliminate the Werewolves.",
          "confusingTwins": "Some Miller's Hollow residents confuse them when they encounter one of the Two Sisters around a bend in a hollow path.",
          "siblingBond": "In any case, the Two Sisters get along like fingers on a hand or hairs from the same strand. It's certainly encouraging to have a close one to rely on in these uncertain moments!",
          "nightlyConsultation": "On the first night, at the game master's call, they wake up together and recognize each other. Then, during the game, every other night, they wake up again and quickly and silently consult on the decisions to save the village.",
          "signLanguageTip": "Game master's advice: particularly powerful with users of sign language."
        },
        "three-brothers": {
          "theirGoalIsToKillWerewolves": "Their goal is to eliminate the Werewolves.",
          "joyfulSiblings": "The whole village resonates with their joyful verbal bursts when they return home after fieldwork.",
          "nonverbalAgreement": "During debates, a simple glance between them allows them to make a good decision about the village's future.",
          "nightlyRecognition": "On the first night, at the game master's call, they wake up together and recognize each other. Then, during the game, every other night, they wake up again and quickly and silently consult on the decisions to save the village.",
          "signLanguageTip": "Game master's advice: particularly powerful with users of sign language. Only to be used in large villages. If the village is very large, you can even associate the Two Sisters with them!"
        },
        "fox": {
          "hisGoalIsToKillWerewolves": "His goal is to eliminate the Werewolves.",
          "appreciatedCharacter": "In Miller's Hollow, everyone appreciates the keen and discreet character, except perhaps the hens and especially the Werewolves.",
          "nightlyDesignation": "At night, at the game master's call, the Fox can designate a group of three neighboring players, pointing to the central player.",
          "powerOutcome": "If there is at least one Werewolf in this group, then the game master signals affirmatively to the Fox. In this case, the Fox can use his power again on the following night.",
          "powerLoss": "If no Werewolf is in the designated group, the Fox permanently loses his power; however, he gains valuable information, exonerating three players at once.",
          "reminder": "Note: the game master calls the Fox every night, but he is by no means obliged to use his power every night.",
          "meneurNote": "Game master's advice: The Fox does not see the cards; the game master simply indicates whether there are Werewolves among these three players."
        },
        "bear-tamer": {
          "hisGoalIsToKillWerewolves": "His goal is to eliminate the Werewolves.",
          "nostalgicTale": "Ah! How sweet to my memory is the sound of chains trickling down the cobblestones of \"the place des Trois Routes,\" accompanied by Ursus's growl.",
          "goldenEra": "Ah! How far away is that time when Titan, the Bear Showman, directed his companion with mastery in a ballet so graceful that we cried every summer in Miller's Hollow. Ursus also had the precious power to detect lurking lycanthropes.",
          "powerActivation": "Every morning, just after the revelation of any nocturnal victims, if at least one Werewolf is or becomes directly adjacent to the Bear Showman, then the game master growls to signal to the players that the bear has sensed the danger.",
          "neighborCriteria": "Only neighbors still in the game are taken into account.",
          "meneurNote": "Game master's advice: to simplify things, eliminated players leave the game or move away from the table. If the Bear Showman is infected, the game master will growl every round until the Bear Showman is eliminated."
        },
        "stuttering-judge": {
          "hisGoalIsToKillWerewolves": "His goal is to eliminate the Werewolves.",
          "backgroundStory": "The miller's youngest son was gifted for studies and dreamt of becoming a lawyer. As his father had succeeded in bamboozling his clients, he sent him to study law in the nearby grand city.",
          "speechImpediment": "A slight pronunciation defect denied the young man the coveted prestige of being the defender of widows and orphans. However, he returned to the village of Miller's Hollow adorned with the no less prestigious title of itinerant judge.",
          "doubleVoteDecision": "Once in the game, the Stuttering Judge can decide that there will be two consecutive votes and two eliminations of suspects.",
          "uniqueSign": "The Stuttering Judge signals his decision to the game master with a particular sign that he uses to designate a resident during the village vote. The second vote is immediately triggered without debate by the game master, right after the elimination due to the first vote. The \"St-stuttering-Ju-judge\" will have shown this particular sign during the first night, at the game master's call.",
          "meneurTip": "Game master's advice: always pay attention to the Stuttering Judge's behavior during votes to not miss his particular sign."
        },
        "rusty-sword-knight": {
          "hisGoalIsToKillWerewolves": "His goal is to eliminate the Werewolves.",
          "veteranKnight": "\"Don Quitousse\" is a very old retired knight. He is quite exhausted from a life of quests around the world and no longer takes good care of his noble tool.",
          "rustyBlade": "Rust has gradually settled on the dull edge of his faithful protective blade, but he will never exchange it for another. He still sleeps with it every night these days: beware of intruders!",
          "wolfContamination": "If the Knight is devoured, he is eliminated, but one of the Werewolves is contaminated by the rusty sword. Among the Werewolves guilty of this elimination, the first Werewolf to the left of the Knight will be eliminated the following night.",
          "contaminationRevelation": "The game master will reveal this elimination due to illness the morning after the disappearance of the Werewolf. He will have survived his injury for a day.",
          "caution": "Caution: players can deduce that all residents between the deceased Rusty Sword Knight and the sick Werewolf are innocent villagers."
        },
        "thief": {
          "hisGoalIsToKillWerewolvesButCanSwitchSide": "His goal is to eliminate the Werewolves, but his goal can change depending on the chosen card.",
          "additionalCards": "To play the Thief, two additional cards must be added in addition to the basic composition. The two cards are placed face down in the center of the table.",
          "nightlyExchange": "On the first night, the Thief can familiarize himself with these two cards and exchange his card for one of the two cards. If these cards are two Werewolves, he is obliged to exchange his card for one of the two Werewolves. He will now play this character until the end of the game."
        },
        "wild-child": {
          "hisGoalIsToKillWerewolvesUntilModelDies": "His goal is to eliminate the Werewolves as long as his model is alive.",
          "abandonedChildhood": "Abandoned in the forest by his parents in his tender childhood, he was raised by wolves. As soon as he could walk on all fours, the Wild Child began to roam around the outskirts of Miller's Hollow.",
          "secretAdmiration": "One day, fascinated by a villager who walked upright with grace and elegance, he made this person his secret model.",
          "integration": "He then decided to join the Miller's Hollow community and entered the village, anxious. The community was moved by his fragility, adopted him, and welcomed him into their midst.",
          "innerStruggle": "What will he become: an honest Villager or a terrible Werewolf? Throughout his existence, the Wild Child's heart will swing between these two alternatives. May his model confirm him in his newfound humanity.",
          "nightlyAction": "The Wild Child is a Villager. On the first night, at the game master's call, he designates a model player. If, during the game, the designated player is eliminated, the Wild Child becomes a Werewolf and will wake up the next night with his peers, devouring with them every night until the end of the game.",
          "villageInvolvement": "However, as long as his model is alive, the Wild Child remains a Villager. Whether his model turns out to be a Werewolf or not makes no difference! Nothing prevents the Wild Child from participating in the elimination of his model if he wishes.",
          "winningConditions": "If his model is alive when all the Werewolves are eliminated, he wins with the Villagers. If his model is eliminated, and only Werewolves survive with him, it is also a victory for our Wild Child.",
          "meneurTip": "Game master's advice: not revealing the true nature of the Wild Child eliminated by the village vote can be amusing. Doubt about his true identity then persists: was he a Villager or a Werewolf before being eliminated?"
        },
        "wolf-hound": {
          "hisGoalDependsOnChosenSide": "His goal is to eliminate the Werewolves if he remains a dog or to eliminate the Villagers if he decides to become a wolf.",
          "ancestralConnection": "All dogs know deep down that their ancestors were wolves and that it is Man who has kept them in this state of childish and fearful, but loyal and generous companions.",
          "freeWill": "In any case, only the Wolf-Hound can decide whether he will obey his human and civilized master or listen to the call of the wild nature buried within him.",
          "initialChoice": "On the first night, he chooses whether he wants to be a Simple Villager or a Werewolf.",
          "nightlyParticipation": "If he wants to be a Werewolf, he will wake up with them every night and will now participate in designating the devoured victim. Otherwise, he keeps his eyes closed and wins with the Villagers.",
          "finalDecision": "This choice is final!",
          "meneurTip": "Game master's advice: not revealing the true nature of the Wolf-Hound eliminated by the village vote can be amusing. Doubt about his true identity then persists: was he a Villager or a Werewolf before being eliminated?"
        },
        "angel": {
          "hisGoalIsToDieFirst": "His goal is to die in the first round, either by the first vote or by the Werewolves during the first night. If one of the conditions is fulfilled, he wins the game alone.",
          "disgustWithVillage": "The muddy life of a village infested with malevolent creatures disgusts him; he wishes to be a victim of the worst nightmare to finally wake up peacefully in his cozy bed.",
          "gameStart": "When the Angel is in the game, the game always begins with the village debate followed by an eliminatory vote and then the first night.",
          "winningConditions": "If the Angel manages to attract the discriminatory vote of the Villagers or the devouring vindictiveness of the lycanthropes to be eliminated in the first round, he can emerge victorious from the nightmare and win the game.",
          "gameEnd": "Then the game ends: players can start a new game. If he fails, he becomes a Simple Villager for the rest of the game.",
          "meneurTip": "Game master's advice: do not hesitate to remind the possible presence of the Angel on the first day! The debates will be more animated, with eloquent speakers being protected by this angelic threat!"
        },
        "pied-piper": {
          "hisGoalIsToCharm": "His goal is to charm all living players.",
          "revengePlot": "Ignominiously chased from the village, he returned years later under the guise of a false identity to exact his terrible revenge.",
          "nightlyAction": "Every night, at the game master's call, the Piper charms two new players. As soon as only charmed players remain, the Piper wins against all others. (Even if this happens through a village vote or thanks to the Werewolves).",
          "wolfTransformation": "If he is infected by the Infected Father of the Werewolves, he becomes a simple Werewolf. His initial goal of charming all players is thus abandoned. He will collaborate with the Werewolves for their common victory.",
          "attentionNote": "Caution: the Pied Piper cannot self-charm. The Defender does not protect against charm. The Witch does not heal from charm. Werewolves are not immune to charm. Charmed players retain all their powers and characteristics. Charm is not transmitted between Lovers."
        },
        "scandalmonger": {
          "hisGoalIsToKillWerewolves": "His goal is to eliminate the Werewolves.",
          "uniqueCharacteristics": "This individual loves to make his guilt suspicions known, marking, just before dawn, the player of his choice. His impact is certain despite our bird's lack of courage!",
          "nightlyDecision": "Every end of the night, after the Werewolves have gone back to sleep, at the call of his role, the Raven can designate a player he suspects or skip his turn.",
          "voteInfluence": "The game master then places the \"Curse of the Scandalmonger\" marker in front of the designated player. This player will automatically have 2 more votes against him in the next vote count."
        },
        "prejudiced-manipulator": {
          "hisGoalIsToKillEveryStrangers": "His goal is to eliminate all players who are not in his group.",
          "troubledPast": "Since his childhood, and perhaps due to a lack of love or interest from his close ones, this poor wretch did not like himself at all.",
          "transferredHatred": "Growing up, he transferred this hatred to everyone who is a stranger to him. That's why he is now called the \"Prejudiced Manipulator\".",
          "groupDivision": "Before the start of the game, the game master divides the village into 2 groups, according to an obvious criterion (gender, glasses, height, age, etc.) and announces it aloud to the village. The Abominable Sectarian will inevitably be part of one or the other of the 2 groups.",
          "eliminationObjective": "The goal of this character is the elimination of all players from the group he hates, which is the one he does not belong to.",
          "victoryCondition": "In this case, and only in this case, he wins the game. He has no special power: his ability to manipulate the villagers is his only weapon. If he is infected by the Infected Father of the Werewolves, he becomes a Werewolf.",
          "meneurTip": "Game master's advice: it is not mandatory to form 2 groups of equal sizes. Do not hesitate, if necessary, to announce to everyone to which group each villager belongs."
        },
        "actor": {
          "hisGoalIsToKillWerewolves": "His goal is to eliminate the Werewolves.",
          "entertainerBackground": "An indefatigable performer, he stopped by the village to give a few performances before descending to spend the winter in more hospitable lands. As skilled at appreciating jokes and comedies as he is at interpreting the great tragic texts, he has all the talents to perform the repertoire of national theater.",
          "cardSelection": "Before the game, the game master chooses 3 character cards with special abilities. After the roles are distributed, these cards are placed face up in the center of the table.",
          "nightlyAction": "Every night, at the game master's call, the Actor can designate one of these cards and use the corresponding power until the next night. If the Actor uses a character card, the game master removes that card from the table. It can no longer be used.",
          "restrictionNote": "Caution: the proposed cards cannot be Werewolf cards.",
          "meneurTips": "Game master's advice: in choosing the cards proposed to the Actor, you can introduce a bit of chaos into the village or, on the contrary, counter a very powerful clan of wolves.",
          "additionalNote": "If the Thief is also present, you must first place the 2 Thief cards, and only then the 3 Actor cards."
        },
        "devoted-servant": {
          "herGoalIsToKillWerewolves": "Her initial goal is to eliminate the Werewolves or fulfill the objective of the role she has stolen.",
          "idealServant": "Who could dream of a better servant than one who gives her life for her masters? Do not rejoice too soon, because the devouring ambition that possesses her could cause the end of the village!",
          "revealBeforeCouncil": "Before revealing the card of the player eliminated by the village council, she can reveal herself by showing her card. In this case, the Devoted Servant loses her card, then she takes the card of the eliminated player without revealing it to others and assumes the role of the eliminated player until the end of the game.",
          "loveRestriction": "Caution: if she is in love, the Devoted Servant cannot use her power. Her love is stronger than her desire to change characters.",
          "servantTipTemporizeRevelation": "Game master's advice: delay the revelation of the card of the player eliminated by the village to give the Devoted Servant time to reveal herself. If she takes on a role with a power, the game master will call the former Devoted Servant on the following nights under the name of this new role. Especially the first night after, to \"reset\" this new role.",
          "servantTipNewRoleRenewal": "In general, this new role taken on by the Devoted Servant has its ability completely renewed and must be played as if it were the first night. On the other hand, any previous effects applied to the eliminated player are canceled.",
          "servantTipEliminatedPlayerConditions": "Clarifications: if the eliminated player was infected, in love, charmed, Captain, Rural Guard, or Cupid, the former Devoted Servant is not.",
          "servantTipNoLongerCharmCaptainGuard": "If the former Devoted Servant was charmed, Captain, or Rural Guard, she is no longer.",
          "servantTipRemainsInfectedIfWas": "If the former Devoted Servant was infected, she still is.",
          "servantTipAfterTransformation": "If the former Devoted Servant becomes: ",
          "servantTipFlutePlayerCharmIndication": "- Flute Player, the game master informs this new Flute Player who the previously charmed players are.",
          "servantTipActorGuardGypsyNoNewCards": "- Actor, Rural Guard, Gypsy (without Potion): new cards are not distributed; only those unused remain."
        }
      },
      "type": {
        "werewolf": "Werewolf",
        "villager": "Villager",
        "lonely": "Lonely",
        "ambiguous": "Ambiguous"
      },
      "side": {
        "villagers": "Villagers",
        "werewolves": "Werewolves"
      },
      "definiteSide": {
        "villagers": "The Villagers",
        "werewolves": "The Werewolves"
      }
    },
    "game": {
      "phase": {
        "night": "Night",
        "day": "Day",
        "twilight": "Twilight"
      },
      "definitePhase": {
        "night": "The Night",
        "day": "The Day",
        "twilight": "The Twilight"
      },
      "player": {
        "attribute": {
          "name": {
            "sheriff": "Sheriff"
          },
          "definiteName": {
            "sheriff": "The Sheriff"
          }
        },
        "group": {
          "name": {
            "survivors": "Survivors",
            "villagers": "Villagers",
            "werewolves": "Werewolves",
            "lovers": "Lovers",
            "charmed": "Charmed"
          },
          "definiteName": {
            "survivors": "The Survivor | The Survivors",
            "villagers": "The Villager | The Villagers",
            "werewolves": "The Werewolf | The Werewolves",
            "lovers": "The Lovers",
            "charmed": "The Charmed"
          }
        }
      }
    },
    "keyboard": {
      "shiftKey": "Shift",
      "leftArrowKey": "Left arrow",
      "rightArrowKey": "Right arrow",
      "enterKey": "Enter"
    }
  },
  "pages": {
    "index": {
      "play": "Play",
      "about": "What is it?",
      "werewolvesAssistantLogo": "Werewolves Assistant logo",
      "perfectToolForGameMasters": "The perfect tool for game masters of the Werewolves of Miller's Hollow™"
    },
    "about": {
      "whyAnAssistant": "Why an assistant?",
      "backToHome": "Back to home",
      "imageTitle": "Werewolf illustration",
      "seoDescription": "What is the Werewolves Assistant and why is it useful for game masters?"
    },
    "gameLobby": {
      "startGame": "Start a game",
      "seoDescription": "Create a new game right now with the Werewolves Assistant."
    },
    "game": {
      "loadingGame": "Loading game…",
      "playingGame": "Playing game"
    }
  },
  "composables": {
    "useWerewolvesAssistantApiError": {
      "statusCode": {
        "400": "Bad request",
        "401": "Unauthorized",
        "403": "Forbidden",
        "404": "Not found",
        "500": "Internal server error"
      },
      "checkConsoleForMoreDetails": "Check the console for more details"
    },
    "useCreateGameDtoValidation": {
      "minimumOfPlayersNotReached": "The minimum number of players is not reached",
      "notAllRolesAreSet": "Not all roles are set among players",
      "noVillagerSidedRole": "At least one villager sided role is needed",
      "noWerewolfSidedRole": "At least one werewolf sided role is needed",
      "twoSistersMinimumPlayersNotReached": "The Two Sisters role requires at least 2 players with this role",
      "threeBrothersMinimumPlayersNotReached": "The Three Brothers role requires at least 3 players with this role",
      "thiefAdditionalCardsNotSet": "The Thief's additional cards are not set (not implemented yet)",
      "actorAdditionalCardsNotSet": "The Actor's additional cards are not set (not implemented yet)",
      "prejudicedManipulatorGroupsNotSet": "The players groups needed for Prejudiced Manipulator are not set (not implemented yet)"
    }
  },
  "components": {
    "App": {
      "seoDescription": "The Werewolves Assistant is a free tool to help game masters manage their Werewolves of Miller's Hollow games."
    },
    "Error": {
      "unexpectedError": "An unexpected error occurred",
      "notNormalTeamNotified": "This is not normal… The team has been notified of the problem.",
      "pageNotFound": "Page not found",
      "youAreLost": "Looks like you're lost… You were trying to flee the Werewolves, weren't you?",
      "goBackToSafePlace": "Go back to a safe place"
    },
    "IndexFooter": {
      "contact": "Contact the creator"
    },
    "NavBar": {
      "navBar": "Navigation bar",
      "parameters": "Parameters",
      "homePageLink": "Home page link",
      "homePage": "Home page",
      "werewolvesAssistantLogo": "Werewolves Assistant logo",
      "parametersMenu": "Parameters menu"
    },
    "ParametersMenu": {
      "backToHome": "Back to home",
      "parameters": "Parameters",
      "parametersMenu": "Parameters menu",
      "game": "Game",
      "cancelGame": "Cancel game",
      "gameCanceled": "Game canceled"
    },
    "AboutWerewolvesGame": {
      "werewolvesAssistantGame": "The Werewolves of Miller's Hollow™ game",
      "iDontKnowWerewolvesGame": "I don't know this game",
      "watchTutorialVideoOnYoutube": "Watch an explanatory video on YouTube",
      "whatIsWerewolvesGame": "The Werewolves of Miller's Hollow™ is a captivating social board game, where each participant takes on the role of either a Villager or a Werewolf. Under the guidance of a game master, each session unveils a range of surprises, betrayals, twists, and even moments filled with laughter and sometimes tears.",
      "whyGameMasterIsImportant": "The success of a game relies on the shoulders of the game master, tasked with creating an enchanting atmosphere, maintaining a dynamic pace, and mastering the subtleties of the game rules. Managing a sizable group of players, lacking experience, or being in a state of distraction make this task a significant challenge."
    },
    "AboutWerewolvesAssistant": {
      "werewolvesAssistantInThePlace": "The Werewolves Assistant takes the stage!",
      "toHelpGameMaster": "To ease the heavy task that falls on the game master when hosting a Werewolves game, the Werewolves Assistant proves to be the ideal tool!",
      "assistantHasManyFeatures": "This Assistant offers a variety of features, including:",
      "gameLayout": "A game composition screen allowing the creation of sessions for 4 to 40 players, with the option to randomly assign roles.",
      "intuitiveUserInterface": "A playful game tracking interface, providing a pleasant visual experience.",
      "inputForEachEvent": "For each key event, the ability to input players' choices, such as the selection of the Werewolves' target or the election of the mayor.",
      "gamePlaysQueue": "The Assistant handles the scheduling of game turns, displaying deaths and other events, as well as retaining all choices made during the game.",
      "gameHistory": "At the end of the game, a summary is generated, indicating the victorious camp and providing a complete history of past actions.",
      "assistantGoodForYouAndFreeToPlay": "In summary, the Werewolves Assistant invites you to (re)discover the joy of taking on the role of the game master in a Werewolves game. Accessible from any device with an internet browser, this tool is and will remain entirely FREE.",
      "pleaseBeAware": "However, please be aware",
      "physicalGameIsNeeded": "The Werewolves Assistant has no intention of replacing the original Werewolves of Miller's Hollow™ game. Its use requires prior possession of a game with its cards.",
      "assistantIsABonus": "It is important to emphasize that the Assistant positions itself as an exclusive aid to the game master, facilitating game management without altering the essence and experience unique to the original board game. Thus, it complements and enhances the game's dynamics while preserving its authentic character."
    },
    "AboutAvailableRoles": {
      "availableRoles": "Available roles",
      "availableRolesImage": "Illustration of the available roles title",
      "loadingRoles": "Loading roles…",
      "assistantHasManyRoles": "In this version of the Werewolves Assistant, {n} roles are available:",
      "clickToExpandRoleDescription": "Click to expand the description of the {role} role",
      "availableRoleImage": "Illustration of the {role} role"
    },
    "AboutAvailableRoleDescription": {
      "roleDescriptionLeftImageAlt": "Illustration of the {role} role on the left description"
    },
    "RoleTypeBadge": {
      "roleType": "Role Type",
      "descriptions": {
        "werewolf": "His goal is to eliminate all Villagers.",
        "villager": "His goal is to eliminate all Werewolves.",
        "lonely": "His goal is to achieve his objective independently of his own side.",
        "ambiguous": "His goal is to make his side win, which can change during the game."
      }
    },
    "RoleOriginBadge": {
      "roleOrigin": "Role Origin",
      "classic": "Base Game",
      "new-moon": "New Moon Expansion",
      "the-village": "The Village Expansion",
      "characters": "Characters Expansion",
      "unconventional": "Invented Role by the community"
    },
    "AboutHowToContribute": {
      "howToContribute": "How to contribute to this project?",
      "thereAreManyWaysToContribute": "There are several ways to contribute to this project:",
      "openSourceProject": "The Werewolf Assistant is an open-source project! Available on GitHub, whether you are a developer, graphic designer, or even a tester, your help is welcome. If you like the project, feel free to star it or follow the creator!",
      "accessGitHubRepository": "Access the project on GitHub",
      "thisProjectIsFree": "This project is intended to remain a free service. However, both hosting and tool infrastructure are paid for. If you would like to contribute or appreciate the creator's work, you can make a donation on their Buy Me A Coffee page.",
      "talkAboutThisProject": "Talk about this project around you! Word of mouth will encourage many role-play enthusiasts to embark on the grand adventure of the game master with the Werewolf Assistant."
    },
    "GitHubRepositoryButton": {
      "thisProjectIsOpenSource": "This project is open-source!"
    },
    "AboutCreator": {
      "wordFromCreator": "A word from the creator",
      "creatorBackground": "I am Antoine ZANARDI, a Full-Stack Web developer and a fan of open source in general. If you want to learn more about me, I invite you to explore my portfolio.",
      "whyWerewolvesGameIsGreat": "For me, Werewolves of Miller's Hollow™ game is one of the best games to play with friends or family around a table, where alliances and betrayals intertwine, much like in Mario Kart. As the game progresses, the true nature of each player is revealed, masks fall, and everyone feels threatened. Each game is a unique adventure, full of unexpected twists.",
      "whyWerewolvesAssistant": "As a big fan of the game master role, I've always wanted to share the rewarding feeling of being the conductor during a game. So, I created this assistant so that anyone can take on this important role, in any game configuration.",
      "pleaseShareFeedback": "Your feedback on this assistant is welcome. It was created to serve all game masters, whether novice or expert, and make your games memorable. Have fun!",
      "myPortfolio": "My portfolio"
    },
    "RoleImage": {
      "back": "Back of the card"
    },
    "GameLobbyPlayerInput": {
      "playerName": "Player name",
      "maxPlayersReached": "Maximum number of players reached",
      "pleaseEnterPlayerName": "Please enter a player name",
      "playerNameIsAlreadyTaken": "This player name is already taken",
      "playerNameMaxLengthReached": "The player name must not exceed 30 characters"
    },
    "GameLobbyHeader": {
      "gameLobby": "Game Lobby"
    },
    "PlayerCard": {
      "playerCardRoleImageAlt": "Role image of the player {playerName}"
    },
    "GameLobbyPlayerCard": {
      "removePlayer": "Remove player {playerName}",
      "roleNotSelected": "Role not selected"
    },
    "GameLobbyRandomCompositionButton": {
      "randomComposition": "Random composition",
      "minPlayersNotReached": "The minimum number of players is not reached"
    },
    "GameLobbyStartGameButton": {
      "startGame": "Start game",
      "gameCreated": "Game created"
    },
    "GameLobbyPlayersParty": {
      "addPlayersWithInputAbove": "Add player names with the input above"
    },
    "GameNotFound": {
      "gameNotFound": "Game not found… Did you get lost?"
    },
    "GameCanceled": {
      "gameCanceled": "Game canceled"
    },
    "BackToHomeButton": {
      "backToHome": "Back to home"
    },
    "CreateAnotherGameButton": {
      "createAnotherGame": "Create another game"
    },
    "GameTeamSide": {
      "aliveTeamPlayers": "{alivePlayers} / {totalPlayers} alive",
      "sideAltText": {
        "villagers": "Villagers side",
        "werewolves": "Werewolves side"
      }
    },
    "GameTeamSidePlayer": {
      "roleImageAlt": "Role image of the player {playerName}"
    },
    "GameTeamSidePlayerName": {
      "thisPlayerIsDead": "This player is dead"
    },
    "GameTeamSidePlayerRoleName": {
      "thisPlayerRoleIsRevealed": "This player's role is revealed"
    },
    "GamePlaygroundHeaderCurrentPlay": {
      "currentPlayAltText": "Current play icon",
      "unknownGamePlay": "Unknown game play",
      "accursedWolfFatherInfects": "Accursed Wolf-Father infects",
      "actorChoosesCard": "Actor chooses a card",
      "bearTamerGrowls": "Bear Tamer growls",
      "bigBadWolfEats": "Big Bad Wolf eats",
      "charmedPeopleMeetEachOther": "Charmed people meet each other",
      "cupidCharms": "Cupid charms",
      "defenderProtects": "Defender protects",
      "foxSniffs": "Fox sniffs",
      "hunterShoots": "Hunter shoots",
      "loversMeetEachOther": "Lovers meet each other",
      "piedPiperCharms": "Pied Piper charms",
      "scandalmongerMarks": "Scandalmonger marks",
      "scapegoatBansVoting": "Scapegoat bans voting",
      "seerLooks": "Seer looks",
      "sheriffDelegates": "Sheriff delegates",
      "sheriffSettlesVotes": "Sheriff settles votes",
      "stutteringJudgeRequestsAnotherVote": "Stuttering Judge requests another vote",
      "survivorsBuryDeadBodies": "Survivors bury dead bodies",
      "survivorsElectSheriff": "Survivors elect the Sheriff",
      "survivorsVote": "Survivors vote",
      "thiefChoosesCard": "Thief chooses a card",
      "threeBrothersMeetEachOther": "Three Brothers meet each other",
      "twoSistersMeetEachOther": "Two Sisters meet each other",
      "werewolvesEat": "Werewolves eat",
      "whiteWerewolfEats": "White Werewolf eats",
      "wildChildChoosesModel": "Wild Child chooses a model",
      "witchUsesPotions": "Witch uses potions",
      "wolfHoundChoosesSide": "Wolf-Hound chooses side"
    },
    "gamePlaygroundHeaderCard": {
      "roleImageAlt": "Role image of the current play"
    },
    "GamePlaygroundFooterMakePlayButton": {
      "makePlay": "Make play",
      "makePlayAndProceedToNextOne": "Make play and proceed to the next one"
    },
    "GameVotePlaygroundVoters": {
      "nobodyCanVote": "Nobody can vote…"
    },
    "GamePlaygroundPlayerCardVoteInput": {
      "voteFor": "Vote for",
      "noAvailableOptions": "No available options"
    },
    "GameTeamSidePlayerAttribute": {
      "unknownPlayerAttribute": "Unknown player attribute.",
      "actingByActor": "The player is acting, he's playing another role for the current turn.",
      "cantVoteBySurvivors": "The survivors decided that this player can't vote.",
      "cantVoteByScapegoat": "The scapegoat decided that this player can't vote.",
      "charmedByPiedPiper": "The Pied Piper charmed this player.",
      "contaminatedByRustySwordKnight": "The Rusty Sword Knight contaminated this player, he'll be eliminated the next night.",
      "drankDeathPotionByWitch": "The Witch gave a death potion to this player, he'll die the next morning.",
      "drankLifePotionByWitch": "The Witch gave a life potion to this player, he'll be saved from werewolves.",
      "eatenByWerewolves": "The Werewolves ate this player, he'll die the next morning.",
      "eatenByWhiteWerewolf": "The White Werewolf ate this player, he'll die the next morning.",
      "eatenByBigBadWolf": "The Big Bad Wolf ate this player, he'll die the next morning.",
      "inLoveByCupid": "Cupid made this player fall in love with another one.",
      "powerlessByActor": "The player can't act anymore, he's powerless.",
      "powerlessByWerewolves": "The player became powerless because he became a werewolf.",
      "powerlessByAccursedWolfFather": "The player became powerless because he was infected by the Accursed Wolf-Father.",
      "powerlessByFox": "The player became powerless because he didn't sniff a werewolf in his last turn.",
      "powerlessByElder": "The player became powerless because one or more villagers eliminated the Elder.",
      "protectedByDefender": "The Defender protects this player from the werewolves for the current night.",
      "scandalmongerMarkedByScandalmonger": "The Scandalmonger marked this player, he'll have 2 more votes against him the next morning.",
      "seenBySeer": "The Seer saw this player and thus knows his role.",
      "sheriffBySheriff": "The player became the Sheriff because the previous Sheriff delegated his role to him.",
      "sheriffBySurvivors": "The survivors elected this player as the Sheriff.",
      "stolenRoleByDevotedServant": "The Devoted Servant stole the role of this player.",
      "worshipedByWildChild": "The Wild Child chose this player as his model."
    },
    "NoActionNeeded": {
      "noActionNeeded": "No action needed, the game can proceed"
    },
    "GameDevotedServantStealsRolePlayground": {
      "doesDevotedServantStealRole": "Does the Devoted Servant wants to steal the role of the eliminated player? | Does the Devoted Servant wants to steal the role of one of the eliminated players?",
      "sheStealsRole": "She steals the role",
      "sheDoesntStealRole": "She doesn't steal the role"
    },
    "GameRequestAnotherVotePlayground": {
      "heRequestsAnotherVote": "He requests another vote",
      "heDoesntRequestAnotherVote": "He doesn't request another vote"
    },
    "GameChooseSidePlayground": {
      "villagersSide": "Villagers side",
      "werewolvesSide": "Werewolves side"
    },
    "CurrentPlayQuestion": {
      "unknownQuestionForCurrentPlay": "??",
      "doesAccursedWolfFatherWantToInfect": "Does the Accursed Wolf-Father want to infect the player eaten by the Werewolves?",
      "doesActorWantToChooseCard": "Does the Actor want to choose a card and act the role?",
      "whichPlayerDoesBigBadWolfEat": "Which player does the Big Bad Wolf want to eat?",
      "whichPlayersDoesCupidCharm": "Which players does Cupid want to charm?",
      "whichPlayerDoesDefenderProtect": "Which player does the Defender want to protect?",
      "doesFoxWantToSniff": "Does the Fox want to sniff a group of players?",
      "whichPlayerDoesHunterShoot": "Which player does the Hunter want to shoot?",
      "whichPlayersDoesPiedPiperCharm": "Which players does the Pied Piper want to charm?",
      "doesScandalmongerWantToMark": "Does the Scandalmonger want to mark a player?",
      "doesScapegoatWantToBanVoting": "Does the Scapegoat want to ban one or more players from voting?",
      "whichPlayerDoesSeerLook": "Which player does the Seer want to look at?",
      "whichPlayerDoesSheriffDelegate": "Which player does the Sheriff want to delegate his role to?",
      "whichPlayerDoesSheriffSettleVotes": "Which player does the Sheriff want to settle the votes with?",
      "whichPlayerDoesSurvivorsElectSheriffOnTie": "Which player do the survivors want to elect as Sheriff to break the tie?",
      "doesJudgeRequestAnotherVote": "Does the Stuttering Judge want to request another vote?",
      "whichPlayerDoesSurvivorsElectAsSheriff": "Which player do the survivors want to elect as the Sheriff?",
      "whichPlayerDoesSurvivorsVoteFor": "Which player do the survivors want to vote for?",
      "whichPlayerDoesSurvivorsVoteForOnJudgeRequest": "Which player do the survivors want to vote for on the Stuttering Judge's request?",
      "whichPlayerDoesSurvivorsVoteForOnTie": "Which player do the survivors want to vote for to break the tie?",
      "doesThiefWantToChooseCard": "Does the Thief want to choose a card and take the role?",
      "whichPlayerDoesWerewolvesEat": "Which player do the Werewolves want to eat?",
      "doesWhiteWerewolfWantToEat": "Does the White Werewolf want to eat another Werewolf?",
      "whichPlayerDoesWildChildChoose": "Which player does the Wild Child want to choose as his model?",
      "doesWitchWantToUsePotions": "Does the Witch want to use her potions?",
      "whichSideDoesWolfHoundChoose": "Which side does the Wolf-Hound want to choose?",
      "bearGrowled": "The Bear growled, some Werewolves are next to him…",
      "charmedPeopleMeetEachOther": "The charmed people meet each other, watch out for the Pied Piper last victims!",
      "loversMeetEachOther": "The lovers meet each other, it's a love at first sight!",
      "threeBrothersMeetEachOther": "The Three Brothers convene and consult with each other.",
      "twoSistersMeetEachOther": "The Two Sisters meet and consult one another."
    },
    "GameTargetPlaygroundTargets": {
      "nobodyCanBeTargeted": "Nobody can be targeted…"
    },
    "GameUsePotionsPlayground": {
      "witchHasUsedBothPotions": "The Witch has used both potions, the game can proceed"
    },
    "WitchUsePotionsTabView": {
      "giveLifePotion": "Give life potion to save the player…",
      "giveDeathPotion": "Give death potion to kill the player…",
      "lifePotionImageAlt": "Image of the life potion",
      "deathPotionImageAlt": "Image of the death potion"
    },
    "GameOverVictoryText": {
      "trophyImageAlt": "Trophy icon",
      "victoryTypeImageAlt": "Victory type icon",
      "angelWins": "The Angel wins by himself!",
      "angelComesBackToParadise": "The Angel has been eliminated during the first vote or the first night by the werewolves. He wins alone and comes back to the Good Place.",
      "loversWin": "The Lovers win together!",
      "loversAreTogetherForever": "The two people in love from Cupid's arrow are the only survivors. They win together and will be together forever.",
      "loversAndCupidWin": "The Lovers and Cupid win together!",
      "loversAndCupidAreTogetherForever": "The two people in love from Cupid's arrow and Cupid himself are the only survivors. The team of Love wins!",
      "nobodyWins": "Draw! Everyone is dead in the village…",
      "everybodyMurderedEachOther": "Everybody murdered each other. A deadly silence reigns in the village…",
      "piedPiperWins": "The Pied Piper wins by himself!",
      "piedPiperHasControl": "The Pied Piper managed to charm all the living players. He wins alone and has control over the village.",
      "prejudicedManipulatorWins": "The Prejudiced Manipulator wins with his group!",
      "prejudicedManipulatorGroupRemainsAlive": "All of the players from the group The Prejudiced Manipulator hates are dead. He wins with his own group while laughing.",
      "villagersWin": "The Villagers win!",
      "villagersHaveSurvivedWerewolves": "All of the Werewolves are dead. The village is safe at last.",
      "werewolvesWin": "The Werewolves win!",
      "werewolvesHaveEatenALot": "All of the Villagers are dead. The Werewolves have eaten a lot and are now full, eventually.",
      "whiteWerewolfWins": "The White Werewolf wins by himself!",
      "whiteWerewolfWinsAlone": "The White Werewolf is the only survivor. He wins alone and can be proud of his victory."
    },
    "BuyMeACoffeeButton": {
      "alt": "Buy me a coffee"
    },
    "GameOverActions": {
      "createAnotherGame": "Create another game",
      "showGameHistory": "Show game history",
      "loadingGameHistory": "Loading game history…"
    },
    "GameOver": {
      "gameOver": "Game over"
    },
    "GameLobbyRolePickerHeader": {
      "pickRoleForPlayer": "Pick a role for the player {playerName}",
      "currentRole": "Current role",
      "noRole": "None"
    },
    "GameLobbyRolePickerFooter": {
      "pickRole": "Pick role for the player"
    },
    "GameLobbyRolePickerGridElement": {
      "random": "Random"
    },
    "GameLobbyRolePickerGridElementBadges": {
      "totalInParty": "Total in the party",
      "minInGameNotReached": "Minimum in the party not reached ({count} left to pick)"
    },
    "GameLobbyRolePickerDescription": {
      "pickARole": "Pick a role"
    },
    "RoleSideBadge": {
      "werewolvesSide": "Werewolves side",
      "villagersSide": "Villagers side"
    },
    "GameLobbyRolePickerDescriptionBoundaries": {
      "roleCountInParty": "None in the party | 1 in the party | {count} in the party",
      "roleCountMaxReached": "Maximum reached",
      "recommendedMinPlayers": "Recommended for {count} players minimum",
      "minInGameNotReached": "Minimum in the party not reached ({count} left to pick)"
    },
    "GameOverHistoryRecordIcon": {
      "gameHistoryRecordIconAltText": "Game history record icon"
    },
    "GameOverHistoryRecordAction": {
      "actionIconAltText": "Action icon",
      "infected": "infected",
      "growled": "growled",
      "madeFallInLove": "made fall in love",
      "protected": "protected from Werewolves",
      "sniffed": "sniffed",
      "shot": "shot at",
      "metEachOther": "met each other",
      "charmed": "charmed",
      "markedWithFeather": "marked with a feather",
      "bannedFromVotes": "banned from votes",
      "seen": "have seen the role of",
      "delegated": "delegated his role to",
      "settledVotes": "settled the votes",
      "requestedAnotherVote": "requested another vote",
      "buriedDeadBodies": "buried",
      "electedAsSheriff": "elect as Sheriff",
      "voted": "voted for",
      "choseCard": "chose the card",
      "ate": "ate",
      "choseAsModel": "chose as model",
      "usedPotions": "used potions",
      "choseSide": "joined the side of",
      "skippedTurn": "skipped turn"
    },
    "GameOverHistoryRecordDecisionTarget": {
      "lifePotion": "Life potion",
      "deathPotion": "Death potion"
    },
    "GameOverHistoryRecordDecisionBuriedPlayer": {
      "stolenRoleByDevotedServant": "Stolen role by the Devoted Servant",
      "stolenRoleByDevotedServantIcon": "Stolen role by the Devoted Servant icon"
    },
    "GameOverHistory": {
      "endOfGame": "End of the game",
      "gameHistory": "Game history"
    },
    "GameLobbyHeaderOptionButton": {
      "gameOptions": "Game options"
    },
    "GameLobbyOptionsHub": {
      "gameOptions": "Game options"
    },
    "GameLobbyOptionsHubTabView": {
      "roles": "Roles",
      "composition": "Composition",
      "votes": "Votes",
      "compositionTabImageAlt": "Composition tab icon",
      "votesTabImageAlt": "Votes tab icon"
    },
    "GameLobbyOptionsHubRolesTabGeneral": {
      "general": "General",
      "options": {
        "doSkipCallIfNoTarget": {
          "label": "Skip the call if no target",
          "descriptions": {
            "yes": "The Assistant won't call the role if there is no target to choose among players.",
            "no": "The Assistant will call the role even if there is no target to choose among players."
          }
        },
        "areRevealedOnDeath": {
          "label": "Revealed on death",
          "descriptions": {
            "yes": "The role of the player is revealed to others when he dies.",
            "no": "The role of the player is not revealed to others when he dies."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabSheriff": {
      "sheriff": "Sheriff",
      "sheriffAlt": "Sheriff icon",
      "options": {
        "isEnabled": {
          "label": "Play with the Sheriff",
          "descriptions": {
            "yes": "The game will have a Sheriff.",
            "no": "The game will not have a Sheriff."
          }
        },
        "mustSettleTieInVotes": {
          "label": "The Sheriff must settle the votes",
          "descriptions": {
            "yes": "The Sheriff must settle the votes when there is a tie.",
            "no": "The Sheriff doesn't have to settle the votes when there is a tie. A second vote will be called."
          }
        },
        "hasDoubledVote": {
          "label": "The Sheriff has a doubled vote",
          "descriptions": {
            "yes": "When the survivors vote to eliminate a player, the Sheriff has a doubled vote during the votes.",
            "no": "The Sheriff doesn't have a doubled vote during the votes but a regular one like any other player."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabSheriffElection": {
      "options": {
        "electedAt": {
          "turn": {
            "label": "Sheriff election turn"
          },
          "label": "Sheriff election time",
          "description": "The Sheriff will be elected on {phase} of the turn {turn}."
        }
      }
    },
    "GameLobbyOptionsHubRolesTabBigBadWolf": {
      "options": {
        "isPowerlessIfWerewolfDies": {
          "label": "The Big Bad Wolf is powerless if a Werewolf dies",
          "descriptions": {
            "yes": "If a player from the Werewolf side dies, the Big Bad Wolf becomes powerless for the rest of the game.",
            "no": "If a Werewolf dies, the Big Bad Wolf remains powerful."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabWhiteWerewolf": {
      "options": {
        "wakingUpInterval": {
          "label": "White Werewolf waking up interval",
          "description": "The White Werewolf will wake up every night to eat another Werewolf. | The White Werewolf will wake up every {interval} nights to eat another Werewolf."
        }
      }
    },
    "GameLobbyOptionsHubRolesTabSeer": {
      "options": {
        "isTalkative": {
          "label": "The Seer is talkative",
          "descriptions": {
            "yes": "When the Seer looks at a player, the Game Master reveals the role of the player out loud.",
            "no": "When the Seer looks at a player, the Game Master reveals the role of the player only to her (by miming it for example)."
          }
        },
        "canSeeRoles": {
          "label": "The Seer can see the roles",
          "descriptions": {
            "yes": "When the Seer looks at a player, the Game Master reveals the role of the player to her.",
            "no": "When the Seer looks at a player, the Game Master doesn't reveal the role of the player to her but his side (Villager or Werewolf)."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabCupid": {
      "options": {
        "mustWinWithLovers": {
          "label": "Cupid must win with the Lovers",
          "descriptions": {
            "yes": "Cupid teams up with the Lovers : if the Lovers and Cupid are the only survivors, they win together. Lovers can win alone without Cupid winning. Warning : Cupid can't charm himself with this option!",
            "no": "Cupid doesn't team up with the Lovers. "
          }
        },
        "lovers": {
          "doRevealRoleToEachOther": {
            "label": "The Lovers reveal their role to each other",
            "descriptions": {
              "yes": "The Lovers reveal their role to each other when they meet right after being charmed.",
              "no": "The Lovers don't reveal their role to each other when they meet right after being charmed."
            }
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabLittleGirl": {
      "options": {
        "isProtectedByDefender": {
          "label": "The Little Girl is protected by the Defender",
          "descriptions": {
            "yes": "If the Little Girl is the target of the Werewolves, the Defender can save her with his protection.",
            "no": "If the Little Girl is the target of the Werewolves, the Defender can't save her with his protection."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabDefender": {
      "options": {
        "canProtectTwice": {
          "label": "The Defender can protect twice",
          "descriptions": {
            "yes": "The Defender can protect the same player twice or more in a row during the game.",
            "no": "The Defender can't protect the same player twice in a row during the game."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabElder": {
      "options": {
        "livesCountAgainstWerewolves": {
          "label": "The Elder lives count against the Werewolves",
          "description": "The Elder has only one life against the Werewolves. | The Elder has {livesCount} lives against the Werewolves."
        },
        "doesTakeHisRevenge": {
          "label": "The Elder takes his revenge",
          "descriptions": {
            "yes": "If the Elder is eliminated by a player from the Villagers side (votes from Survivors, potion from Witch, shot from Hunter, etc.), all the players from the Villagers side loose their power for the rest of the game.",
            "no": "If the Elder is eliminated by a player from the Werewolves side, nothing happens."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabIdiot": {
      "options": {
        "doesDieOnElderDeath": {
          "label": "The revealed Idiot dies on Elder's death",
          "descriptions": {
            "yes": "If the Elder is eliminated in any way and the Idiot has his role revealed, the Idiot dies.",
            "no": "If the Elder is eliminated in any way and the Idiot has his role revealed, the Idiot doesn't die."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabTwoSisters": {
      "options": {
        "wakingUpInterval": {
          "label": "Two Sisters waking up interval",
          "description": "The Two Sisters will wake up only the first night to meet each other. | The Two Sisters will wake up every night to meet each other. | The Two Sisters will wake up every {interval} nights to meet each other."
        }
      }
    },
    "GameLobbyOptionsHubRolesTabThreeBrothers": {
      "options": {
        "wakingUpInterval": {
          "label": "Three Brothers waking up interval",
          "description": "The Three Brothers will wake up only the first night to meet each other. | The Three Brothers will wake up every night to meet each other. | The Three Brothers will wake up every {interval} nights to meet each other."
        }
      }
    },
    "GameLobbyOptionsHubRolesTabFox": {
      "options": {
        "isPowerlessIfMissesWerewolf": {
          "label": "The Fox is powerless if he misses to sniff a Werewolf",
          "descriptions": {
            "yes": "If the Fox doesn't sniff a Werewolf among the group of 3 players, he becomes powerless for the rest of the game.",
            "no": "If the Fox doesn't sniff a Werewolf among the group of 3 players, he remains powerful."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabBearTamer": {
      "options": {
        "doesGrowlOnWerewolvesSide": {
          "label": "The Bear Tamer growls on the Werewolves side",
          "descriptions": {
            "yes": "If the Bear Tamer is infected by the Vile Father Of Wolves, his bear will growl every morning.",
            "no": "The bear will growl only if he has a neighbor from the Werewolves side, whether the Bear Tamer is infected or not."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabStutteringJudge": {
      "options": {
        "voteRequestsCount": {
          "label": "Stuttering Judge vote requests",
          "description": "The Stuttering Judge can only request one more vote during the game. | The Stuttering Judge can request another vote {count} times during the game."
        }
      }
    },
    "GameLobbyOptionsHubRolesTabWildChild": {
      "options": {
        "isTransformationRevealed": {
          "label": "The Wild Child's transformation is revealed",
          "descriptions": {
            "yes": "When the Wild Child becomes a Werewolf as his model dies, the Game Master reveals his transformation to the other players.",
            "no": "When the Wild Child becomes a Werewolf as his model dies, the Game Master doesn't reveal his transformation to the other players."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabWolfHound": {
      "options": {
        "isChosenSideRevealed": {
          "label": "The Wolf-Hound's chosen side is revealed",
          "descriptions": {
            "yes": "When the Wolf-Hound chooses a side, the Game Master reveals his choice to the other players.",
            "no": "When the Wolf-Hound chooses a side, the Game Master doesn't reveal his choice to the other players."
          }
        },
        "isSideRandomlyChosen": {
          "label": "The Wolf-Hound's side is randomly chosen",
          "descriptions": {
            "yes": "The Wolf-Hound won't have the choice to choose a side at the beginning of the game. His side will be randomly chosen by the Assistant.",
            "no": "The Wolf-Hound chooses his side at the beginning of the game."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabThief": {
      "options": {
        "mustChooseBetweenWerewolves": {
          "label": "The Thief must choose between only Werewolves",
          "descriptions": {
            "yes": "If all the cards designated to the Thief are from the Werewolves side, he must choose one of them and can't skip his turn.",
            "no": "The Thief can skip his turn, even if all the cards designated to him are from the Werewolves side."
          }
        },
        "isChosenCardRevealed": {
          "label": "The chosen card is revealed",
          "descriptions": {
            "yes": "The Thief's chosen card is revealed to the other players.",
            "no": "The Thief's chosen card is not revealed to the other players."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabPiedPiper": {
      "options": {
        "charmedPeopleCountPerNight": {
          "label": "Charmed people count per night",
          "description": "The Pied Piper can charm only one player per night. | The Pied Piper can charm {count} players per night."
        },
        "isPowerlessOnWerewolvesSide": {
          "label": "The Pied Piper is powerless on the Werewolves side",
          "descriptions": {
            "yes": "If the Pied Piper is infected by the Vile Father Of Wolves, he becomes powerless for the rest of the game.",
            "no": "The Pied Piper remains powerful even he is infected by the Vile Father Of Wolves."
          }
        },
        "areCharmedPeopleRevealed": {
          "label": "Charmed people are revealed",
          "descriptions": {
            "yes": "The charmed people are revealed to the other players.",
            "no": "The charmed people are not revealed to the other players."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabScandalmonger": {
      "options": {
        "markPenalty": {
          "label": "Mark penalty",
          "description": "The Scandalmonger marks a player with a feather. The player will have one more vote against him the next vote. | The Scandalmonger marks a player with a feather. The player will have {markPenalty} more votes against him the next vote."
        }
      }
    },
    "GameLobbyOptionsHubRolesTabWitch": {
      "options": {
        "doesKnowWerewolvesTargets": {
          "label": "The Witch knows the Werewolves targets",
          "descriptions": {
            "yes": "The Witch knows the targets of the Werewolves when she can still use her death potion.",
            "no": "The Witch doesn't know the targets of the Werewolves at all."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabPrejudicedManipulator": {
      "options": {
        "isPowerlessOnWerewolvesSide": {
          "label": "The Prejudiced Manipulator is powerless on the Werewolves side",
          "descriptions": {
            "yes": "If the Prejudiced Manipulator is infected by the Vile Father Of Wolves, he becomes powerless for the rest of the game.",
            "no": "The Prejudiced Manipulator remains powerful even he is infected by the Vile Father Of Wolves."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabActor": {
      "options": {
        "isPowerlessOnWerewolvesSide": {
          "label": "The Actor is powerless on the Werewolves side",
          "descriptions": {
            "yes": "If the Actor is infected by the Vile Father Of Wolves, he becomes powerless for the rest of the game.",
            "no": "The Actor remains powerful even he is infected by the Vile Father Of Wolves."
          }
        }
      }
    },
    "GameLobbyOptionsHubCompositionTab": {
      "options": {
        "isHidden": {
          "label": "Composition is hidden",
          "descriptions": {
            "yes": "The composition of the party is hidden to the players.",
            "no": "The composition of the party is revealed to the players at the beginning of the game."
          }
        }
      }
    },
    "GameLobbyOptionsHubVotesTab": {
      "options": {
        "canBeSkipped": {
          "label": "Votes can be skipped",
          "descriptions": {
            "yes": "The players can skip their vote without any consequences.",
            "no": "The players can't skip their vote, someone must die."
          }
        },
        "duration": {
          "label": "Votes duration in seconds",
          "description": "The survivors have {time} to vote. It's only a recommendation, the Game Master can decide to extend or shorten this time."
        }
      }
    },
    "GameEventsMonitorFooter": {
      "previous": "Previous",
      "skip": "Skip",
      "goBackToPreviousGameEvent": "Go back to the previous game event",
      "skipCurrentGameEvent": "Skip the current game event"
    },
    "GameEventPreviousTextButton": {
      "previousEventText": "Back to the previous event text"
    },
    "GameEventNextTextButton": {
      "nextEventText": "Next event text"
    },
    "GameStartsEvent": {
      "welcomeToTheVillage": "Welcome everyone in the village of the Millers Hollow!",
      "gameCompositionEvent": "The composition for this game is : {composition}",
      "looksLifeSomeWerewolvesSneakedIntoTheVillage": "Looks like some Werewolves sneaked into the village…",
      "villagersMurderWerewolves": "Villagers, take your torches and pitchforks, it's time to hunt down the Werewolves!",
      "letsElectSheriffBefore": "But before that, let's elect the Sheriff.",
      "compositionIsHidden": "The composition of this party is hidden! You'll have to find out who is who by yourself…"
    },
    "GameTurnStartsEvent": {
      "unknownGameTurnStartsEvent": "Unknown game turn starts event"
    },
    "GameSurvivorsTurnStartsEvent": {
      "gameStartsWithVoteBecauseOfAngelPresence": "The game starts with a vote because the Angel is present in the village.",
      "watchOutForAngelOrHeWins": "Watch out for the Angel, if he's eliminated during this vote, he wins the game alone immediately!",
      "voteBecauseOfStutteringJudge": "Survivors will vote again because the Stuttering Judge requested another vote.",
      "voteBecauseOfPreviousTies": "Survivors will vote again because the previous vote ended in a tie.",
      "survivorsMustVoteBetween": "The village must vote between {players}. If there is a tie, there won't be any elimination.",
      "survivorsVote": "Survivors, it's time to vote and eliminate a player from the village.",
      "survivorsBuryDeadBodies": "Survivors, it's time to bury the dead bodies of the village.",
      "survivorsElectSheriff": "Survivors, it's time to elect the Sheriff for the village.",
      "sheriffElectionBecauseOfPreviousTies": "Survivors will elect again the Sheriff because the previous vote ended in a tie.",
      "survivorsMustElectBetween": "The village must elect the Sheriff between {players}. If there is a tie, the Sheriff will be elected randomly."
    },
    "GameAccursedWolfFatherTurnStartsEvent": {
      "accursedWolfFatherCanInfect": "The Accursed Wolf-Father wakes up and can infect a player eaten by the Werewolves if he wants to."
    },
    "GameActorTurnStartsEvent": {
      "actorCanChooseCardToPlay": "The Actor wakes up and can choose a card to play for this turn."
    },
    "GameBearTamerTurnStartsEvent": {
      "bearGrowls": "The Bear Tamer wakes up and his bear growls. One or more Werewolves are next to him…"
    },
    "GameBigBadWolfTurnStartsEvent": {
      "bigBadWolfEatsVillager": "The Big Bad Wolf wakes up and will eat a Villager.",
      "bigBadWolfCanEatWerewolves": "In this special game, the Big Bad Wolf can eat another Werewolf if he wants to."
    },
    "GameCharmedTurnStartsEvent": {
      "charmedPeopleMeetEachOther": "The first charmed person by the Pied Piper wakes up. | The first charmed people by the Pied Piper wake up and meet each other.",
      "charmedPeopleMeetEachOtherWithOldOnes": "The new charmed person by the Pied Piper wakes up with the old ones. Watch out for the Pied Piper last victims! | The new charmed people by the Pied Piper wake up and meet each other with the old ones. Watch out for the Pied Piper last victims!"
    },
    "GameCupidTurnStartsEvent": {
      "cupidChoosesTwoPlayersToBeLovers": "Cupid wakes up and chooses two players to be in love with each other.",
      "cupidCanChooseHimself": "Cupid can choose himself to be in love if he wants to.",
      "cupidMustWinWithLovers": "In this special game, Cupid must win with the Lovers he will choose. Thus, he can't charm himself."
    },
    "GameDefenderTurnStartsEvent": {
      "defenderProtectsAnyone": "The Defender wakes up and will protect anyone from the Werewolves.",
      "defenderProtectsAnyoneExceptLastProtectedPlayer": "The Defender wakes up and will protect anyone from the Werewolves except the last protected player."
    },
    "GameFoxTurnStartsEvent": {
      "foxSniffesGroupOfPlayers": "The Fox wakes up and will sniff a group of 3 players to find out if there is a Werewolf among them."
    },
    "GameHunterTurnStartsEvent": {
      "hunterShootsAtPlayer": "In his last breath, the Hunter will shoot at a player and kill him right away."
    },
    "GameLoversTurnStartsEvent": {
      "loversMeetEachOther": "The Lovers wake up and meet each other. They are in love and will win together if they are the only survivors.",
      "loversAndCupidMeetEachOther": "The Lovers wake up and meet each other. They are in love and will win together if they are the only survivors. Cupid wins with them if he survives with them.",
      "ifOneLoveDiesOtherDiesToo": "If one of the Lovers dies, the other one will die too.",
      "ifOneLoveDiesOtherDiesTooButNotCupid": "If one of the Lovers dies, the other one will die too. If Cupid dies, the Lovers will survive and also the other way around.",
      "loversRevealEachOtherRoles": "In this special game, the Lovers reveal their roles to each other."
    },
    "GamePiedPiperTurnStartsEvent": {
      "piedPiperCharmsPeople": "The Pied Piper wakes up and will charm only one player. | The Pied Piper wakes up and will charm {count} players."
    },
    "GameScandalmongerTurnStartsEvent": {
      "scandalmongerCanMarkPlayer": "The Scandalmonger wakes up and can mark a player with a feather.",
      "playerWillHavePenaltyForNextVotes": "The player marked with a feather will have one more vote against him the next vote. | The player marked with a feather will have {penalty} more votes against him the next vote."
    },
    "GameScapegoatTurnStartsEvent": {
      "scapegoatCanBanPlayerFromVoting": "The Scapegoat wakes up and can ban one or more players from voting in the votes of the next day."
    },
    "GameSeerTurnStartsEvent": {
      "seerSeesRoles": "The Seer wakes up and will look at a player's role.",
      "seerSeesSides": "The Seer wakes up and will look at a player's side."
    },
    "GameSheriffTurnStartsEvent": {
      "sheriffDelegates": "In his last breath, the Sheriff will delegate his role to another player.",
      "sheriffSettlesVotes": "The Sheriff will settle the votes between {players}. The chosen player will be eliminated."
    },
    "GameStutteringJudgeTurnStartsEvent": {
      "stutteringJudgeCanRequestAnotherVote": "After this vote, the Stuttering Judge can request another one immediately.",
      "everyonePutHandsInBackAndGameMasterWillRecognizeSign": "Every player must put their hands in their back. The Game Master walk around and recognize the sign of the Stuttering Judge if he wants to request another vote."
    },
    "GameThiefTurnStartsEvent": {
      "thiefCanStealCard": "The Thief wakes up and can choose the additional card for him. If he decides so, he will take the role of it for the rest of the game. | The Thief wakes up and can choose an additional card among the {count} for him. If he decides so, he will take the role of it for the rest of the game.",
      "gameMasterWillFlipThiefCards": "The Game Master will flip the card for the Thief to see it. | The Game Master will flip the {count} cards for the Thief to see them."
    },
    "GameThreeBrothersTurnStartsEvent": {
      "threeBrothersMeetEachOtherForFirstTime": "The Three Brothers wake up and meet each other for the first time. They can trust each other from now on.",
      "threeBrothersMeetEachOther": "The Three Brothers wake up and meet each other. They can consult with each other quietly."
    },
    "GameTwoSistersTurnStartsEvent": {
      "twoSistersMeetEachOtherForFirstTime": "The Two Sisters wake up and meet each other for the first time. They can trust each other from now on.",
      "twoSistersMeetEachOther": "The Two Sisters wake up and meet each other. They can consult with each other quietly."
    },
    "GameWerewolvesTurnStartsEvent": {
      "werewolvesMeetEachOtherForFirstTime": "The Werewolves wake up and meet each other for the first time.",
      "whenMeetOverWerewolvesEat": "When the meeting is over, the Werewolves will eat a Villager.",
      "werewolvesEat": "The Werewolves wake up and will eat a Villager.",
      "werewolvesCanEatEachOther": "In this special game, the Werewolves can eat each other if they want to. A good way to remove all suspicions…"
    },
    "GameWhiteWerewolfTurnStartsEvent": {
      "whiteWerewolfCanEatAnotherWolf": "The White Werewolf wakes up and can eat another Werewolf if he wants to."
    },
    "GameWildChildTurnStartsEvent": {
      "wildChildChoosesModel": "The Wild Child wakes up and can choose a model among the players.",
      "ifModelDiesWildChildBecomesWolf": "If the model dies, the Wild Child will join the Werewolves side."
    },
    "GameWitchTurnStartsEvent": {
      "witchCanUsePotions": "The Witch wakes up and can use her life and/or death potions.",
      "gameMasterWillAskHerEventIfUsed": "The Game Master will ask her will for each potion, even if she already used them."
    },
    "GameWolfHoundTurnStartsEvent": {
      "wolfHoundSideRandomlyChosen": "In this special game, the Wolf-Hound's side is randomly chosen by the Assistant.",
      "wolfHoundChoosesSide": "The Wolf-Hound wakes up and chooses which side he wants to join between Villagers and Werewolves."
    },
    "GamePhaseStartsEvent": {
      "dayRises": "The day rises in the village of the Millers Hollow!",
      "nightFalls": "The night falls on the village of the Millers Hollow…"
    },
    "GamePlayerDiesEvent": {
      "cantFindDeadPlayer": "The Assistant can't find the dead player… Please proceed.",
      "playerDies": "{playerName} is dead! What a tragedy…",
      "playerCanRevealRole": "He or she can reveal his role to the others.",
      "playerDoesntRevealRole": "In this special game, the role of the dead player is not revealed to the others. The mystery remains…"
    },
    "RoleFlippingImageSvgIcon": {
      "iconAlt": "Role icon"
    },
    "GameSeerHasSeenEvent": {
      "cantFindTargetedPlayer": "The seen player can't be found… Please proceed.",
      "gameMasterWillMimeSide": "Because the Seer is quiet, the Game Master will mime the side of the seen player.",
      "gameMasterWillMimeRole": "Because the Seer is quiet, the Game Master will mime the role of the seen player.",
      "seerHasSeenSide": "The Seer has seen a player from the {side} side!",
      "seerHasSeenRole": "The Seer has seen {role}!"
    },
    "GameSheriffHasBeenElectedEvent": {
      "cantFindElectedSheriff": "The elected Sheriff can't be found… Please proceed.",
      "sheriffHasBeenElectedBySurvivors": "The survivors have elected {playerName} as the Sheriff of the village!",
      "sheriffCanMakeSpeech": "The new Sheriff can make a powerful speech to his fellow villagers.",
      "sheriffHasBeenElectedByDelegation": "{playerName} is the new Sheriff of the village!"
    },
    "MuteButton": {
      "mute": "Mute",
      "unmute": "Unmute"
    },
    "GameScandalmongerHasMarkedEvent": {
      "scandalMongerDidntMarkAnyone": "The Scandalmonger didn't mark anyone for this night. He flew away…",
      "scandalmongerHasMarkedAPlayer": "The Scandalmonger has marked a player with a feather.",
      "gameMasterWillPutScandalmongerMark": "The Game Master will put the mark in front of the player to remember the penalty for the next vote."
    },
    "GameAccursedWolfFatherMayHaveInfectedEvent": {
      "accursedWolfFatherMayHaveInfectedAPlayer": "The Accursed Wolf-Father may have infected a player eaten by the Werewolves.",
      "gameMasterWillTapAccursedWolfFatherMarkVictim": "If so, the Game Master goes around every player and taps in the back the player infected by the Accursed Wolf-Father. This player is from now a Werewolf but will keep his old villagers powers."
    },
    "GameVillagerVillagerIntroductionEvent": {
      "cantFindVillagerVillager": "The Villager-Villager can't be found… Please proceed.",
      "villagerVillagerIntroduction": "{playerName} is the Villager-Villager of the village! His/Her role is revealed to the others.",
      "idealPlayerForSheriff": "Without any special power, the other players can fully trust him/her. Why not elect him/her as the Sheriff?"
    },
    "GamePiedPiperHasCharmedEvent": {
      "piedPiperHasCharmed": "The Pied Piper just charmed a player. | The Pied Piper just charmed {charmedCount} players.",
      "gameMasterWillTapCharmedPlayers": "The Game Master will tap in the back the charmed player so he knows he is charmed. | The Game Master will tap in the back the {charmedCount} charmed players so they know they are charmed.",
      "charmedPeopleAreRevealed": "In this special game, the charmed players are revealed to the others.",
      "peopleAreCharmed": "{charmedPeople} has been charmed! | {charmedPeople} have been charmed!"
    },
    "GameWolfHoundHasChosenSideEvent": {
      "cantFindWolfHoundOrChosenSide": "The Wolf-Hound or his chosen side can't be found… Please proceed.",
      "assistantChoseSideForWolfHoundRevelation": "The Assistant assigned the Wolf-Hound to the side of the … {side}!",
      "wolfHoundChoseSideRevelation": "The Wolf-Hound chose to join the side of the … {side}!",
      "assistantChoseSideForWolfHoundMime": "The Assistant assigned the Wolf-Hound to a random side. The Game Master will mime the side of the Wolf-Hound. ({side})",
      "wolfHoundChoseSideQuietly": "The Wolf-Hound chose to join a side. The chosen side will remain a secret to the other players…"
    },
    "GameCupidHasCharmedEvent": {
      "cupidHasCharmedPlayers": "Cupid has charmed two players to be in love with each other.",
      "gameMasterWillTapInLovePlayers": "The Game Master will tap in the back the Lovers so they know they are in love."
    },
    "GameOverCreateNewGameButton": {
      "createNewGameWithSamePlayers": "Do you want to create a new game with the same players?"
    },
    "GameLobbyHeaderPositionCoordinatorButton": {
      "positionCoordinator": "Players positions"
    },
    "GameLobbyPositionCoordinator": {
      "positionCoordinator": "Players positions"
    },
    "GameLobbyPositionCoordinatorSorter": {
      "leftNeighbors": "Left neighbors",
      "rightNeighbors": "Right neighbors"
    },
    "GameLobbyPositionCoordinatorChart": {
      "checkPositionWithChartBelow": "Check the position of the players with the graph below.",
      "canHoverOnNodes": "You can hover on the nodes in case you can't clearly see a player's name."
    },
    "GameLobbyStartGameConfirmDialog": {
      "beforeStartingGame": "Before starting the game"
    },
    "GameLobbyStartGameConfirmDialogFooter": {
      "skipAndPlay": "Skip and play now",
      "letsGo": "Let's go!"
    },
    "GameLobbyStartGameConfirmDialogPlayersReady": {
      "doAllPlayersHaveRoleAndReady": "Do all the players have their role and are ready to play?"
    },
    "GameLobbyStartGameConfirmDialogPlayersPositioned": {
      "playersPosition": "Players position",
      "someRolesArePositionDependant": "Some roles rely on players position. Are players placed correctly in the game lobby?",
      "showMeHowToPositionPlayers": "Show me how to position players"
    },
    "GameIdiotIsSparedEvent": {
      "cantFindIdiot": "The Idiot can't be found… Please proceed.",
      "playerDies": "{playerName} is dead! What a tragedy… He/she can reveal his/her role to the others.",
      "playerIsActuallyIdiot": "{playerName} is actually the Idiot!",
      "idiotIsSpared": "The survivors have pity for the Idiot and spare him. He is not eliminated but can't vote for the rest of the game."
    },
    "GameLobbyOptionsHubRolesTabWerewolf": {
      "options": {
        "canEatEachOther": {
          "label": "Werewolves can eat each other",
          "descriptions": {
            "yes": "The Werewolves (or the Big Bad Wolf) can eat each other if they want to.",
            "no": "The Werewolves (nor the Big Bad Wolf) can eat each other."
          }
        }
      }
    },
    "GamePlaygroundFooterCountdown": {
      "remainingTimeToMeetEachOther": "Remaining time to meet each other",
      "remainingTimeToVote": "Remaining time to vote",
      "remainingTimeToElectSheriff": "Remaining time to elect the Sheriff",
      "meetEachOtherTimeIsOver": "Time to go back to sleep!",
      "voteTimeIsOver": "Time to vote!",
      "electSheriffTimeIsOver": "Sheriff election time!"
    },
    "GameElderHasTakenRevengeEvent": {
      "cantFindElder": "The Elder can't be found… Please proceed.",
      "elderHasBeenMurderedByVillager": "The Elder has been murdered by his own kind!",
      "elderHasTakenRevenge": "He has taken his revenge! All the players from the Villagers side lose their power for the rest of the game."
    }
  }
}