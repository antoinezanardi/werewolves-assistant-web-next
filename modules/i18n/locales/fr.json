{
  "shared": {
    "werewolvesAssistant": "Assistant Loups-Garous",
    "yes": "Oui",
    "no": "Non",
    "and": "et",
    "actions": {
      "add": "Ajouter",
      "close": "Fermer",
      "next": "Suivant",
      "back": "Retour",
      "cancel": "Annuler"
    },
    "time": {
      "second": "1 seconde | {count} secondes",
      "minute": "1 minute | {count} minutes"
    },
    "role": {
      "name": {
        "werewolf": "Loup-Garou | Loups-Garous",
        "big-bad-wolf": "Grand Méchant Loup",
        "accursed-wolf-father": "Infect Père des Loups",
        "white-werewolf": "Loup-Garou Blanc",
        "villager": "Villageois",
        "villager-villager": "Villageois-Villageois",
        "seer": "Voyante",
        "cupid": "Cupidon",
        "witch": "Sorcière",
        "hunter": "Chasseur",
        "little-girl": "Petite Fille",
        "defender": "Salvateur",
        "elder": "Ancien",
        "scapegoat": "Bouc-Émissaire",
        "idiot": "Idiot du Village",
        "two-sisters": "Deux Sœurs | Sœurs",
        "three-brothers": "Trois Frères | Frères",
        "fox": "Renard",
        "bear-tamer": "Montreur d'Ours",
        "stuttering-judge": "Juge Bègue",
        "rusty-sword-knight": "Chevalier à l'Épée Rouillée",
        "thief": "Voleur",
        "wild-child": "Enfant Sauvage",
        "wolf-hound": "Chien-Loup",
        "angel": "Ange",
        "pied-piper": "Joueur de Flûte",
        "scandalmonger": "Corbeau",
        "prejudiced-manipulator": "Abominable Sectaire",
        "actor": "Comédien",
        "devoted-servant": "Servante Dévouée"
      },
      "definiteName": {
        "werewolf": "Le Loup-Garou | Les Loups-Garous",
        "big-bad-wolf": "Le Grand Méchant Loup",
        "accursed-wolf-father": "L'Infect Père des Loups",
        "white-werewolf": "Le Loup-Garou Blanc",
        "villager": "Le Villageois | Les Villageois",
        "villager-villager": "Le Villageois-Villageois",
        "seer": "La Voyante",
        "cupid": "Cupidon",
        "witch": "La Sorcière",
        "hunter": "Le Chasseur",
        "little-girl": "La Petite Fille",
        "defender": "Le Salvateur",
        "elder": "L'Ancien",
        "scapegoat": "Le Bouc-Émissaire",
        "idiot": "L'Idiot du Village",
        "two-sisters": "Les Deux Sœurs",
        "three-brothers": "Les Trois Frères",
        "fox": "Le Renard",
        "bear-tamer": "Le Montreur d'Ours",
        "stuttering-judge": "Le Juge Bègue",
        "rusty-sword-knight": "Le Chevalier à l'Épée Rouillée",
        "thief": "Le Voleur",
        "wild-child": "L'Enfant Sauvage",
        "wolf-hound": "Le Chien-Loup",
        "angel": "L'Ange",
        "pied-piper": "Le Joueur de Flûte",
        "scandalmonger": "Le Corbeau",
        "prejudiced-manipulator": "L'Abominable Sectaire",
        "actor": "Le Comédien",
        "devoted-servant": "La Servante Dévouée"
      },
      "indefiniteName": {
        "werewolf": "un Loup-Garou",
        "big-bad-wolf": "un Grand Méchant Loup",
        "accursed-wolf-father": "un Infect Père des Loups",
        "white-werewolf": "un Loup-Garou Blanc",
        "villager": "un Villageois",
        "villager-villager": "un Villageois-Villageois",
        "seer": "une Voyante",
        "cupid": "Cupidon",
        "witch": "une Sorcière",
        "hunter": "un Chasseur",
        "little-girl": "une Petite Fille",
        "defender": "un Salvateur",
        "elder": "un Ancien",
        "scapegoat": "un Bouc-Émissaire",
        "idiot": "un Idiot du Village",
        "two-sisters": "Une des Deux Sœurs",
        "three-brothers": "Un des Trois Frères",
        "fox": "un Renard",
        "bear-tamer": "un Montreur d'Ours",
        "stuttering-judge": "un Juge Bègue",
        "rusty-sword-knight": "un Chevalier à l'Épée Rouillée",
        "thief": "un Voleur",
        "wild-child": "un Enfant Sauvage",
        "wolf-hound": "un Chien-Loup",
        "angel": "un Ange",
        "pied-piper": "un Joueur de Flûte",
        "scandalmonger": "un Corbeau",
        "prejudiced-manipulator": "un Abominable Sectaire",
        "actor": "un Comédien",
        "devoted-servant": "une Servante Dévouée"
      },
      "descriptions": {
        "werewolf": {
          "hisGoalIsToKillVillagers": "Son but est d'éliminer les Villageois.",
          "eachNightEatsVillager": "Chaque nuit, ils dévorent un Villageois. Le jour, ils essaient de masquer leur identité nocturne pour échapper à la vindicte populaire.",
          "numberOfWolvesVaries": "Leur nombre peut varier suivant le nombre de joueurs et les variantes appliquées.",
          "werewolvesCantEatEachOther": "En aucun cas un simple Loup-Garou ne peut dévorer un autre Loup-Garou."
        },
        "big-bad-wolf": {
          "hisGoalIsToKillVillagers": "Son but est d'éliminer les Villageois.",
          "eatsALot": "À Thiercelieux, les petits cochons ne sont pas les seuls à redouter le Grand Méchant Loup. Il est énorme et son appétit est gigantesque. À cause de lui, des villages entiers furent rayés de la carte !",
          "eachNightEatsAnotherVictimTwice": "Chaque nuit, il se réveille et dévore avec les autres Loups-Garous. Mais tant qu'aucun Loup-Garou, Chien-Loup devenu loup ou Enfant Sauvage ayant perdu son modèle n'est éliminé, il se réveille seul une deuxième fois et dévore une autre victime.",
          "cannotEatAnotherWolf": "Il ne peut pas dévorer de Loup-Garou."
        },
        "accursed-wolf-father": {
          "hisGoalIsToKillVillagers": "Son but est d'éliminer les Villageois.",
          "spreadEngeanceAndSleep": "Le tout premier Loup-Garou de nos contrées, le père de tous leurs pères, avait deux pouvoirs : le premier était de propager son engeance par une morsure spéciale et le second de fuir ce monde en s'endormant pour quelques siècles.",
          "awokenWithHunger": "Heureusement pour nos ancêtres récents, il s'était depuis longtemps assoupi. Les auteurs de cet ouvrage souhaitent bon courage aux Villageois d'aujourd'hui et signalent que l'Infect Père des Loups vient juste de se réveiller d'un long sommeil, et qu'il a très faim !",
          "eachNightCanInfect": "Chaque nuit, il se réveille et dévore avec les autres Loups-Garous. Mais une fois dans la partie, s'il le désire, après que les Loups-Garous se sont endormis, il lève la main. Cela signifie que la victime n'est pas dévorée mais infectée.",
          "infectOncePerGame": "L'Infect Père des Loups ne peut utiliser son pouvoir qu'une seule fois dans la partie. Le meneur touche alors cet habitant infecté qui devient immédiatement (et secrètement) Loup-Garou, il participera désormais au festin des Loups-Garous.",
          "usePowerAndAwokenWithWolves": "S'il possédait un pouvoir nocturne, il sera réveillé par le meneur les tours suivants pour utiliser ce pouvoir, en plus d'être appelé avec les Loups-Garous."
        },
        "white-werewolf": {
          "heMustRemainAlone": "Son but est d'être le seul survivant du village. Dans ce cas-là seulement il gagne la partie.",
          "hatesBothWerewolvesAndVillagers": "Ce très malfaisant personnage déteste autant les Loups-Garous que les Villageois !",
          "strangeMutationInPopulation": "Dans un ouvrage récent, intitulé \"Le Village\", on raconte qu'une étrange mutation serait survenue au sein même de la population lycanthropique.",
          "eachNightCanEatAnotherWolf": "Chaque nuit, il se réveille et dévore avec les autres Loups-Garous. Mais une nuit sur deux, à l'appel du meneur, il se réveille seul et peut éliminer un Loup-Garou."
        },
        "villager": {
          "hisGoalIsToKillWerewolves": "Son but est d'éliminer les Loups-Garous.",
          "noSpecialSkills": "Il n'a aucune compétence particulière.",
          "analyticalMind": "Ses seules armes sont la capacité d'analyse des comportements pour identifier les Loups-Garous."
        },
        "villager-villager": {
          "hisGoalIsToKillWerewolves": "Son but est d'éliminer les Loups-Garous.",
          "pureSoul": "Ce personnage possède une âme claire et transparente comme l'eau d'un ruisseau montagnard. Il méritera l'écoute attentive de ses pairs et rendra sa parole décisive dans les moments cruciaux.",
          "inspiringTrust": "Quel pouvoir peut être aussi grand que d'inspirer aux honnêtes gens une confiance absolue ?",
          "wolfHuntStrategy": "Les Loups-Garous se rueront-ils pour éliminer cet être sans pouvoir secret ? Préféreront-ils débusquer des Villageois aux pouvoirs plus menaçants ?",
          "certaintyAsInnocent": "Sur ses 2 faces, cette carte possède l'illustration de Simple Villageois. À la distribution, le village aura donc la certitude absolue que son propriétaire est bel et bien un innocent Simple Villageois.",
          "trustedAdvisor": "Conseil au meneur : ce personnage peut devenir un Capitaine ou un Garde Champêtre de confiance."
        },
        "seer": {
          "herGoalIsToKillWerewolves": "Son but est d'éliminer les Loups-Garous.",
          "nightlyVision": "Chaque nuit, elle voit la carte d'un joueur de son choix.",
          "helpfulButDiscreet": "Elle doit aider les autres Villageois mais rester discrète pour ne pas être démasquée par les Loups-Garous."
        },
        "cupid": {
          "hisGoalIsToKillWerewolves": "Son but est d'éliminer les Loups-Garous.",
          "magicArrows": "En décochant ses célèbres flèches magiques, Cupidon a le pouvoir de rendre 2 personnes amoureuses à jamais.",
          "firstNightPairing": "La première nuit, il désigne les 2 joueurs (ou joueuses) amoureux. Cupidon peut, s'il le veut, se désigner comme l'un des deux Amoureux.",
          "tragicEnd": "Si l'un des Amoureux est éliminé, l'autre meurt de chagrin immédiatement. Un Amoureux ne doit jamais éliminer son aimé, ni lui porter aucun préjudice (même pour faire semblant !).",
          "warningForMixedPairs": "Attention : si l'un des Amoureux est un Villageois et l'autre un Loup-Garou ou le Joueur de Flûte, le but de la partie change pour les Amoureux : En effet, afin de pouvoir vivre en paix leur amour et gagner la partie, ils doivent éliminer tous les autres joueurs, Loups-Garous et Villageois, en respectant les règles du jeu."
        },
        "witch": {
          "herGoalIsToKillWerewolves": "Son but est d'éliminer les Loups-Garous.",
          "potentPotions": "Elle sait concocter 2 potions extrêmement puissantes : une potion de guérison pour ressusciter le joueur dévoré par les Loups-Garous et une potion d'empoisonnement utilisée la nuit pour éliminer un joueur.",
          "oneUsePerGame": "La Sorcière peut utiliser chaque potion une seule fois dans la partie.",
          "doublePotionUse": "Elle peut se servir de ses deux potions la même nuit.",
          "morningAfterEffect": "Le matin, suivant la ou les potions utilisées, il pourra y avoir 2 joueurs éliminés ou aucun !",
          "selfHealingOption": "La Sorcière peut également utiliser la potion de guérison à son profit, et donc se guérir elle-même si elle vient d'être dévorée par les Loups-Garous."
        },
        "hunter": {
          "hisGoalIsToKillWerewolves": "Son but est d'éliminer les Loups-Garous.",
          "revengeUponDeath": "S'il se fait dévorer par les Loups-Garous ou éliminer malencontreusement par les Villageois, le Chasseur doit répliquer avant de rendre l'âme en éliminant immédiatement n'importe quel autre joueur de son choix.",
          "loversFarewell": "Si le Chasseur est l'amoureux d'un joueur éliminé, avant de quitter la partie le Chasseur doit immédiatement éliminer un autre joueur de son choix.",
          "potentialNoSurvivors": "Cela peut entraîner une partie où il ne reste aucun joueur survivant. Dans ce cas, la victoire n'appartient à aucun des deux camps."
        },
        "little-girl": {
          "herGoalIsToKillWerewolves": "Son but est d'éliminer les Loups-Garous.",
          "nightlyEspionage": "La Petite Fille peut, en entrouvrant les yeux, espionner les Loups-Garous pendant leur réveil.",
          "riskOfDiscovery": "Si elle se fait surprendre par un des Loups-Garous, elle pourra être dévorée immédiatement (en silence), à la place de la victime désignée.",
          "nightTimeObservation": "La Petite Fille ne peut espionner que la nuit, durant le tour d'éveil des Loups-Garous. Elle n'a pas le droit de se faire passer pour un Loup-Garou et d'ouvrir grand les yeux."
        },
        "defender": {
          "hisGoalIsToKillWerewolves": "Son but est d'éliminer les Loups-Garous.",
          "protectiveRole": "Ce personnage peut préserver les Villageois de la morsure des Loups-Garous… Chaque nuit, le Salvateur est appelé avant les Loups-Garous.",
          "playerDesignation": "Le Salvateur désigne alors un joueur au meneur de jeu. (Il est de tradition que le Salvateur reproduise d'abord avec ses mains la figure dessinée sur la carte).",
          "nightlyProtection": "Le joueur ainsi désigné sera protégé la nuit durant (et celle-ci seulement) contre les Loups-Garous. Même désigné par eux, il ne sera pas éliminé du jeu.",
          "selfProtection": "Le Salvateur a le droit de s'auto-protéger. Il n'a pas le droit de protéger 2 nuits de suite le même joueur.",
          "limitations": "La protection du Salvateur ne donne aucun résultat sur la Petite Fille. (Elle est en pleine crise de préadolescence et rien ne saurait lui éviter d'avoir des ennuis).",
          "exclusions": "Le Salvateur ne protège ni du Joueur de Flûte ni de l'infection par l'Infect Père des Loups."
        },
        "elder": {
          "hisGoalIsToKillWerewolves": "Son but est d'éliminer les Loups-Garous.",
          "remarkableResilience": "Il a victorieusement traversé toutes les terribles épreuves de la vie, et a acquis une résistance hors du commun ! Les Loups-Garous devront s'y prendre à deux fois pour le dévorer.",
          "survivalTrait": "La première fois que l'Ancien du village est dévoré par les Loups-Garous, il survit. Le meneur de jeu ne retourne pas sa carte. L'Ancien est éliminé seulement la deuxième fois qu'il est dévoré.",
          "quickElimination": "Le vote du village, la potion d'empoisonnement de la Sorcière, le tir du Chasseur et le rasoir du Barbier éliminent l'Ancien du premier coup.",
          "specialConsequence": "Mais désespérés d'avoir éliminé un tel puit de sciences, les Villageois perdent leurs pouvoirs spéciaux jusqu'à la fin de la partie. Il n'est pas affecté par l'Infect Père des Loups si c'est la première fois qu'il est mordu.",
          "healingOption": "Attention : Si l'Ancien du village se fait soigner par la Sorcière, il récupère une seule vie."
        },
        "scapegoat": {
          "hisGoalIsToKillWerewolves": "Son but est d'éliminer les Loups-Garous.",
          "unfortunateRole": "C'est bien triste, mais à Thiercelieux, quand quelque chose ne va pas c'est toujours lui qui en subit injustement les conséquences…",
          "tiebreakerElimination": "Si le vote du village amène une égalité, c'est le Bouc émissaire qui est éliminé à la place des ex æquo.",
          "additionalRoleAfterElimination": "À lui de bien manœuvrer pour éviter cette triste conclusion. Si le Bouc émissaire est éliminé, il lui reste une prérogative à exercer. Il désigne qui votera ou ne votera pas durant la prochaine journée.",
          "cautionaryNote": "Attention : désigner un seul joueur pour voter, c'est risquer de le faire dévorer par les Loups-Garous la nuit suivante. Il n'y aura alors pas de vote du village. (Sauf bien entendu si le joueur désigné est un Loup-Garou, ou que les Loups-Garous fassent exprès de ne pas l'éliminer…)"
        },
        "idiot": {
          "hisGoalIsToKillWerewolves": "Son but est d'éliminer les Loups-Garous.",
          "quirkyVillager": "Quel village n'a pas son Idiot ? Il fait un peu n'importe quoi, mais il est tellement attachant que personne ne lui voudrait du mal…",
          "mistakenVote": "Si le village vote contre lui, l'Idiot du village retourne sa carte. À cet instant, les Villageois comprennent leur erreur et ils le gracient immédiatement. Dorénavant, il continue à jouer, mais il a perdu son droit de vote. Que vaudrait le vote d'un Idiot… Il n'y aura pas de pendaison à ce tour.",
          "wolfElimination": "Attention : si les Loups-Garous le dévorent, l'Idiot du village est éliminé. Si l'Idiot est éliminé alors qu'il était le Capitaine du village, il ne transmet pas sa fonction. Si le Chasseur tire sur l'Idiot, ce dernier est éliminé."
        },
        "two-sisters": {
          "theirGoalIsToKillWerewolves": "Son but est d'éliminer les Loups-Garous.",
          "confusingTwins": "Certains locaterciens les confondent quand ils croisent l'une des Deux Sœurs au détour d'un chemin creux.",
          "siblingBond": "En tout cas, les Deux Sœurs s'entendent comme les doigts de la main ou les cheveux d'une même mèche. C'est certes encourageant d'avoir un proche sur qui compter dans ces moments incertains !",
          "nightlyConsultation": "La première nuit, à l'appel du meneur, elles se réveillent ensemble et se reconnaissent. Ensuite, au cours de la partie, une nuit sur deux, elles se réveillent à nouveau et se concertent rapidement et en silence sur les décisions à prendre pour sauver le village.",
          "signLanguageTip": "Conseil au meneur : particulièrement puissant avec des pratiquants de la langue des signes."
        },
        "three-brothers": {
          "theirGoalIsToKillWerewolves": "Son but est d'éliminer les Loups-Garous.",
          "joyfulSiblings": "Tout le village résonne de leurs joyeux éclats verbaux quand ils regagnent la maison après le travail des champs.",
          "nonverbalAgreement": "Pendant les débats, un simple coup d'œil entre eux leur permet de prendre une bonne décision quant à l'avenir du village.",
          "nightlyRecognition": "La première nuit, à l'appel du meneur, ils se réveillent ensemble et se reconnaissent. Ensuite, au cours de la partie, une nuit sur deux, ils se réveillent à nouveau et se concertent rapidement et en silence sur les décisions à prendre pour sauver le village.",
          "signLanguageTip": "Conseil au meneur : particulièrement puissant avec des pratiquants de la langue des signes. À n'utiliser que dans les grands villages. Si le village est très grand, vous pouvez même y associer les Deux Sœurs !"
        },
        "fox": {
          "hisGoalIsToKillWerewolves": "Son but est d'éliminer les Loups-Garous.",
          "appreciatedCharacter": "À Thiercelieux, tout le monde apprécie le flair de ce personnage vif et discret, sauf peut-être les poules et surtout les Loups-Garous.",
          "nightlyDesignation": "La nuit, à l'appel du meneur, le Renard peut désigner un groupe de trois joueurs voisins, dont il montre du doigt le joueur central.",
          "powerOutcome": "Si dans ce groupe se trouve au moins un Loup-Garou, alors le meneur fait un signe affirmatif au Renard. Dans ce cas, le Renard pourra utiliser à nouveau son pouvoir une nuit suivante.",
          "powerLoss": "Si aucun Loup-Garou ne fait partie du groupe désigné, le Renard perd définitivement son pouvoir ; par contre, il bénéficie d'une information de taille innocentant trois joueurs d'un coup.",
          "reminder": "Remarque : le meneur appelle le Renard toutes les nuits, mais celui-ci n'est en aucune mesure tenu d'utiliser son pouvoir chaque nuit.",
          "meneurNote": "Conseil au meneur : le Renard ne voit pas les cartes ; le meneur lui indique simplement s'il y a ou s'il n'y a pas de Loups-Garous parmi ces trois joueurs."
        },
        "bear-tamer": {
          "hisGoalIsToKillWerewolves": "Son but est d'éliminer les Loups-Garous.",
          "nostalgicTale": "Ah ! Qu'il est doux à ma mémoire, ce bruit de chaîne qui ruisselle en glissant sur les pavés de \"la place des Trois Routes\", accompagné par le grognement d'Ursus.",
          "goldenEra": "Ah ! Qu'il est loin ce temps où Titan, le Montreur d'Ours, dirigeait avec maestria son compagnon dans un ballet si gracieux qu'on en pleurait chaque été à Thiercelieux. Ursus avait en outre ce pouvoir si précieux de détecter les lycanthropes cachés près de lui.",
          "powerActivation": "Chaque matin, juste après la révélation des éventuelles victimes nocturnes, si au moins un Loup-Garou est ou devient directement voisin du Montreur d'Ours, alors le meneur grogne pour signifier aux joueurs que l'ours du Montreur a senti le danger.",
          "neighborCriteria": "Seuls les voisins toujours en jeu sont pris en compte.",
          "meneurNote": "Conseil au meneur : pour faciliter les choses, les joueurs éliminés sortent de la partie, ou s'écartent de la table. Si le Montreur d'Ours est infecté, alors le meneur grognera tous les tours, tant que le Montreur d'Ours n'est pas éliminé."
        },
        "stuttering-judge": {
          "hisGoalIsToKillWerewolves": "Son but est d'éliminer les Loups-Garous.",
          "backgroundStory": "Le plus jeune fils du meunier était doué pour les études et rêvait d'être avocat. Comme son père avait bien réussi à rouler ses clients dans la farine, il l'envoya faire son droit dans la grande cité voisine.",
          "speechImpediment": "Un léger défaut de prononciation interdit au jeune homme le prestige tant convoité d'être défendeur de la veuve et de l'orphelin. Toutefois, il regagna le village de Thiercelieux auréolé du titre guère moins prestigieux de juge itinérant.",
          "doubleVoteDecision": "Une fois dans la partie, le Juge Bègue peut décider qu'il y aura deux votes consécutifs et deux éliminations de suspect.",
          "uniqueSign": "Le Juge Bègue signifie au meneur sa décision par un signe particulier qu'il utilise pour désigner un habitant durant le vote du village. Le deuxième vote est aussitôt déclenché sans débat par le meneur, juste après l'élimination due au premier vote. Le \"Ju-juge-Bè-bègue\" aura montré ce signe particulier durant la première nuit, à l'appel du meneur.",
          "meneurTip": "Conseil au meneur : soyez toujours attentif au comportement du Juge Bègue durant les votes, afin de ne pas manquer son signe particulier."
        },
        "rusty-sword-knight": {
          "hisGoalIsToKillWerewolves": "Son but est d'éliminer les Loups-Garous.",
          "veteranKnight": "\"Don Quitousse\" est un très vieux chevalier à la retraite. Il est assez épuisé par une vie de quêtes à travers le monde et n'entretient plus très bien son noble outil.",
          "rustyBlade": "La rouille s'est peu à peu déposée sur le tranchant émoussé de sa fidèle lame protectrice mais jamais il ne la quittera pour une autre. Il dort encore tous les soirs avec elle ces temps-ci : gare aux importuns !",
          "wolfContamination": "Si le Chevalier est dévoré, il est éliminé, mais un des Loups-Garous est contaminé par l'épée rouillée. Parmi les Loups-Garous coupables de cette élimination, le premier Loup-Garou situé à gauche du Chevalier sera éliminé la nuit suivante.",
          "contaminationRevelation": "Cette élimination due à la maladie sera révélée par le meneur le matin après la disparition du Loup-Garou. Celui-ci aura donc survécu à sa blessure durant une journée.",
          "caution": "Attention : les joueurs pourront en déduire que tous les habitants situés entre le défunt Chevalier à l'Épée Rouillée et le Loup-Garou malade sont d'innocents villageois."
        },
        "thief": {
          "hisGoalIsToKillWerewolvesButCanSwitchSide": "Son but est d'éliminer les Loups-Garous mais son but peut changer suivant la carte choisie.",
          "additionalCards": "Si on veut jouer le Voleur, deux cartes additionnelles doivent être ajoutées en plus de la composition de base. Les deux cartes sont disposées au centre de la table faces cachées.",
          "nightlyExchange": "La première nuit, le Voleur pourra prendre connaissance de ces deux cartes, et échanger sa carte contre une des deux cartes. Si ces cartes sont deux Loups-Garous, il est obligé d'échanger sa carte contre un des deux Loups-Garous. Il jouera désormais ce personnage jusqu'à la fin de la partie."
        },
        "wild-child": {
          "hisGoalIsToKillWerewolvesUntilModelDies": "Son but est d'éliminer les Loups-Garous tant que son modèle est vivant.",
          "abandonedChildhood": "Abandonné dans la forêt par ses parents dans sa plus tendre enfance, il y fut élevé par des loups. Dès qu'il sut marcher à quatre pattes, l'Enfant Sauvage se mit à errer aux abords de Thiercelieux.",
          "secretAdmiration": "Un beau jour, fasciné par un habitant du village qui marchait debout avec grâce et prestance, il en fit son modèle en secret.",
          "integration": "Il décida alors d'intégrer la communauté de Thiercelieux et pénétra, inquiet, dans le village. La communauté fut émue par sa fragilité, l'adopta et l'accueillit en son sein.",
          "innerStruggle": "Que deviendra-t-il : honnête Villageois ou terrible Loup-Garou ? Toute son existence, le cœur de l'Enfant Sauvage balancera entre ces deux alternatives. Puisse son modèle le confirmer dans son humanité nouvelle.",
          "nightlyAction": "L'Enfant Sauvage est un Villageois. La première nuit, à l'appel du meneur, il désigne un joueur modèle. Si durant la partie le joueur désigné est éliminé, l'Enfant Sauvage devient Loup-Garou et se réveillera la nuit suivante avec ses congénères, dévorera avec eux toutes les nuits jusqu'à la fin de la partie.",
          "villageInvolvement": "En revanche, tant que son modèle est vivant, l'Enfant Sauvage demeure un Villageois. Que son modèle s'avère être ou non un Loup-Garou ne change rien à l'affaire ! Rien n'empêche l'Enfant Sauvage de participer à l'élimination de son modèle s'il le désire.",
          "winningConditions": "Si son modèle est vivant lorsque tous les Loups-Garous sont éliminés, il a gagné avec les Villageois. Si son modèle est éliminé et que seuls des Loups-Garous survivent avec lui, c'est aussi une victoire pour notre Enfant Sauvage.",
          "meneurTip": "Conseil au meneur : ne pas révéler la véritable nature de l'Enfant Sauvage éliminé par le vote du village peut être amusant. Le doute à propos de sa véritable identité subsiste alors : était-il Villageois ou Loup-Garou avant d'être éliminé ?"
        },
        "wolf-hound": {
          "hisGoalDependsOnChosenSide": "Son but est d'éliminer les Loups-Garous s'il reste chien ou d'éliminer les Villageois s'il décide de devenir un loup.",
          "ancestralConnection": "Tous les chiens savent au tréfonds d'eux-mêmes que leurs ancêtres étaient loups et que c'est l'Homme qui les a maintenus dans cet état de compagnons enfantins et craintifs, mais fidèles et généreux.",
          "freeWill": "En tout cas, seul le Chien-Loup peut décider s'il obéira à son maître humain et civilisé ou s'il écoutera l'appel de la nature sauvage enfouie dans ses entrailles.",
          "initialChoice": "La première nuit, il choisit s'il désire être un Simple Villageois ou Loup-Garou.",
          "nightlyParticipation": "S'il désire être Loup-Garou, il se réveillera avec eux toutes les nuits et participera désormais à la désignation de la victime dévorée. Sinon, il garde les yeux clos et gagnera avec les Villageois.",
          "finalDecision": "Ce choix est définitif !",
          "meneurTip": "Conseil au meneur : ne pas révéler la véritable nature du Chien-Loup éliminé par le vote du village peut-être amusant. Le doute à propos de sa véritable identité subsiste alors : était-il Villageois ou Loup-Garou avant d'être éliminé ?"
        },
        "angel": {
          "hisGoalIsToDieFirst": "Son but est de mourir dès le premier tour, soit au premier vote, soit par les Loups-Garous durant la première nuit. Si une des conditions est remplie, il gagne seul la partie.",
          "disgustWithVillage": "La vie fangeuse d'un village infesté de créatures malfaisantes le dégoûte ; il souhaite être victime du pire cauchemar, pour se réveiller enfin paisible dans son lit douillet.",
          "gameStart": "Quand l'Ange est en jeu, la partie débute toujours par le débat du village suivi d'un vote éliminatoire, puis d'une première nuit.",
          "winningConditions": "Si l'Ange réussit à attirer le vote discriminatoire des Villageois ou la vindicte dévorante des lycanthropes pour être éliminé au premier tour, il pourra sortir vainqueur du cauchemar et gagner la partie.",
          "gameEnd": "Alors le jeu s'arrête : les joueurs peuvent commencer une nouvelle partie. S'il échoue, il deviendra Simple Villageois pour le reste de la partie.",
          "meneurTip": "Conseil au meneur : n'hésitez pas à rappeler l'éventuelle présence de l'Ange lors de la première journée ! Les débats seront plus animés, les beaux parleurs étant protégés par cette angélique menace !"
        },
        "pied-piper": {
          "hisGoalIsToCharm": "Son but est de charmer tous les joueurs vivants.",
          "revengePlot": "Ignominieusement chassé du village, il est revenu des années plus tard sous le couvert d'une fausse identité pour exercer sa terrible vengeance.",
          "nightlyAction": "Chaque nuit, à l'appel du meneur du jeu, le Joueur de Flûte charme deux nouveaux joueurs. Dès l'instant où il ne reste plus que des joueurs charmés, le Joueur de Flûte a gagné contre tous les autres. (Même si cela arrive suite à un vote du village ou grâce aux Loups-Garous).",
          "wolfTransformation": "S'il est infecté par l'Infect Père des Loups, il devient un simple Loup-Garou. Son objectif initial, qui était vouloir charmer tous les joueurs, est donc abandonné. Il va collaborer avec les Loups-Garous pour leur victoire commune.",
          "attentionNote": "Attention : le Joueur de Flûte ne peut s'auto-charmer. Le Salvateur ne protège pas du charme. La Sorcière ne guérit pas du charme. Les Loups-Garous ne sont pas immunisés contre le charme. Les joueurs charmés conservent tous leurs pouvoirs et caractéristiques. Le charme ne se transmet pas entre Amoureux."
        },
        "scandalmonger": {
          "hisGoalIsToKillWerewolves": "Son but est d'éliminer les Loups-Garous.",
          "uniqueCharacteristics": "Cet individu adore faire connaître ses suspicions de culpabilité en marquant, juste avant l'aube, le joueur de son choix. Son impact est certain malgré le manque de courage de notre oiseau !",
          "nightlyDecision": "Chaque fin de nuit, après que les Loups-Garous se sont rendormis, à l'appel de son rôle le Corbeau peut désigner un joueur qu'il suspecte ou passer son tour.",
          "voteInfluence": "Le meneur dépose alors le marqueur \"Malédiction du Corbeau\" devant le joueur désigné. Ce joueur aura automatiquement 2 voix de plus contre lui au prochain décompte des votes."
        },
        "prejudiced-manipulator": {
          "hisGoalIsToKillEveryStrangers": "Son but est d'éliminer tous les joueurs qui ne sont pas dans son groupe.",
          "troubledPast": "Depuis son enfance, et peut-être à cause d'un manque d'amour ou d'intérêt prodigué par ses proches, ce pauvre hère ne s'aimait pas du tout.",
          "transferredHatred": "En grandissant, il a transféré cette haine sur tous ceux qui lui sont étrangers. C'est pourquoi on le désigne aujourd'hui sous le nom d' \"Abominable Sectaire\".",
          "groupDivision": "Avant le début de la partie, le meneur divise le village en 2 groupes, selon un critère évident (sexe, lunettes, taille, âge, etc.) et l'annonce à voix haute au village. L'Abominable Sectaire fera fatalement partie de l'un ou l'autre des 2 groupes.",
          "eliminationObjective": "Le but de ce personnage est l'élimination de tous les joueurs du groupe qu'il déteste, c'est-à-dire celui auquel il n'appartient pas.",
          "victoryCondition": "Dans ce cas-là, et seulement dans ce cas, il gagne la partie. Il n'a pas de pouvoir particulier : son habileté à manipuler les habitants est sa seule arme. S'il est infecté par l'Infect Père des Loups, il devient Loup-Garou.",
          "meneurTip": "Conseil au meneur : il n'est pas obligatoire de constituer 2 groupes de tailles identiques. N'hésitez pas si nécessaire à préciser devant tout le monde à quel groupe appartient chaque habitant"
        },
        "actor": {
          "hisGoalIsToKillWerewolves": "Son but est d'éliminer les Loups-Garous.",
          "entertainerBackground": "Bateleur infatigable, il s'est arrêté au village pour y donner quelques représentations avant de descendre passer l'hiver dans des contrées plus hospitalières. Aussi doué pour faire apprécier les farces et les comédies que pour interpréter les grands textes tragiques, il possède tous les talents pour restituer le répertoire du théâtre national.",
          "cardSelection": "Avant la partie, le meneur choisit 3 cartes personnage ayant des capacités spéciales. Après la distribution des rôles, ces cartes sont placées faces visibles au centre de la table.",
          "nightlyAction": "Chaque nuit, à l'appel du meneur, le Comédien peut désigner une de ces cartes et utiliser le pouvoir correspondant jusqu'à la nuit suivante. Si le Comédien utilise une carte personnage, le meneur ôte cette carte de la table. Elle ne pourra plus être utilisée.",
          "restrictionNote": "Attention : les cartes proposées ne peuvent être des cartes de Loups-Garous.",
          "meneurTips": "Conseil au meneur : dans le choix des cartes proposées au Comédien, vous pouvez introduire un peu de chaos dans le village ou au contraire contrer un clan de loups très puissants.",
          "additionalNote": "Si le Voleur est également présent, vous devez tout d'abord disposer les 2 cartes du Voleur, puis ensuite seulement les 3 cartes du Comédien."
        },
        "devoted-servant": {
          "herGoalIsToKillWerewolves": "Son but initial est d'éliminer les Loups-Garous ou de remplir l'objectif du rôle qu'elle a volé.",
          "idealServant": "Qui pourrait rêver d'une meilleure servant que celle qui donne sa vie pour ses maîtres ? Ne vous réjouissez pas trop vite, car l'ambition dévorante qui la possède pourrait causer la fin du village !",
          "revealBeforeCouncil": "Avant révélation de la carte du joueur éliminé par le conseil du village, elle peut se révéler en montrant sa carte. Dans ce cas, la Servante Dévouée perd sa carte, puis elle prend la carte du joueur éliminé sans la dévoiler aux autres et endosse le rôle de l'éliminé jusqu'à la fin de la partie.",
          "loveRestriction": "Attention : si elle est amoureuse, la Servante Dévouée ne peut pas utiliser son pouvoir. Son amour est plus fort que sa volonté de changer de personnage.",
          "servantTipTemporizeRevelation": "Conseil au meneur : temporisez la révélation de la carte du joueur éliminé par le village afin de laisser le temps à la Servante Dévouée de se révéler. Si elle endosse un rôle à pouvoir, le mener appellera l'ex-Servante Dévouée les nuits suivantes sous l'intitulé de ce nouveau rôle. Tout particulièrement la première nuit suivante, afin de \"réinitialiser\" ce nouveau rôle.",
          "servantTipNewRoleRenewal": "En règle générale, ce nouveau rôle endossé par la Servante Dévouée voit sa capacité totalement renouvelée et doit être joué comme s'il s'agissait de la première nuit. En revanche, les éventuels effets précédemment appliqués sur le joueur éliminé sont annulés.",
          "servantTipEliminatedPlayerConditions": "Précisions : si le joueur éliminé était infecté, amoureux, charmé, Capitaine, Garde Champêtre ou Cupidon, l'ex-Servante Dévouée ne l'est pas.",
          "servantTipNoLongerCharmCaptainGuard": "Si l'ex-Servante Dévouée était charmée, Capitaine ou Garde Champêtre, elle ne l'est plus.",
          "servantTipRemainsInfectedIfWas": "Si l'ex-Servante Dévouée était infectée, elle l'est toujours.",
          "servantTipAfterTransformation": "Si l'ex-Servante Dévouée devient : ",
          "servantTipFlutePlayerCharmIndication": "- Joueur de Flûte, le meneur indique à ce nouveau Joueur de Flûte quels sont les joueurs précédemment charmés.",
          "servantTipActorGuardGypsyNoNewCards": "- Comédien, Garde Champêtre, Gitane (sans Philtre) : de nouvelles cartes ne sont pas distribuées ; ne restent que celles non utilisées."
        }
      },
      "type": {
        "werewolf": "Loup-Garou",
        "villager": "Villageois",
        "lonely": "Solitaire",
        "ambiguous": "Ambigü"
      },
      "side": {
        "villagers": "Villageois",
        "werewolves": "Loups-Garous"
      },
      "definiteSide": {
        "villagers": "Le Villageois | Les Villageois",
        "werewolves": "Le Loup-Garou | Les Loups-Garous"
      }
    },
    "game": {
      "phase": {
        "night": "Nuit",
        "day": "Jour",
        "twilight": "Crépuscule"
      },
      "definitePhase": {
        "night": "La Nuit",
        "day": "Le Jour",
        "twilight": "Le Crépuscule"
      },
      "player": {
        "attribute": {
          "name": {
            "sheriff": "Maire"
          },
          "definiteName": {
            "sheriff": "Le Maire"
          }
        },
        "group": {
          "name": {
            "survivors": "Survivants",
            "villagers": "Villageois",
            "werewolves": "Loups-Garous",
            "lovers": "Amoureux",
            "charmed": "Charmés"
          },
          "definiteName": {
            "survivors": "Le Survivant | Les Survivants",
            "villagers": "Le Villageois | Les Villageois",
            "werewolves": "Le Loup-Garou | Les Loups-Garous",
            "lovers": "Les Amoureux",
            "charmed": "Les Charmés"
          }
        }
      }
    },
    "keyboard": {
      "shiftKey": "Shift",
      "leftArrowKey": "Flèche gauche",
      "rightArrowKey": "Flèche droite",
      "enterKey": "Entrée"
    }
  },
  "pages": {
    "index": {
      "play": "Jouer",
      "about": "À quoi ça sert ?",
      "werewolvesAssistantLogo": "Logo de l'Assistant Loups-Garous",
      "perfectToolForGameMasters": "L'outil parfait pour les Maîtres du jeu des Loups-Garous de Thiercelieux™"
    },
    "about": {
      "whyAnAssistant": "Un assistant ? Pour quoi faire ?",
      "backToHome": "Retour à l'accueil",
      "imageTitle": "Image du titre de la page À quoi ça sert",
      "seoDescription": "Qu'est-ce que l'Assistant Loups-Garous et pourquoi est-il utile aux Maîtres du jeu ?"
    },
    "gameLobby": {
      "startGame": "Lancer une partie",
      "seoDescription": "Créer une nouvelle partie avec l'Assistant Loups-Garous"
    },
    "game": {
      "loadingGame": "Chargement de la partie…",
      "playingGame": "Partie en cours"
    }
  },
  "composables": {
    "useWerewolvesAssistantApiError": {
      "statusCode": {
        "400": "Mauvaise requête serveur",
        "401": "Non autorisé",
        "403": "Interdit",
        "404": "Ressource non trouvée",
        "500": "Erreur interne du serveur"
      },
      "checkConsoleForMoreDetails": "Veuillez consulter la console pour plus de détails."
    },
    "useCreateGameDtoValidation": {
      "minimumOfPlayersNotReached": "Le nombre minimum de joueurs n'est pas atteint",
      "notAllRolesAreSet": "Tous les rôles ne sont pas définis",
      "noVillagerSidedRole": "Au moins un rôle du côté des Villageois doit être attribué",
      "noWerewolfSidedRole": "Au moins un rôle du côté des Loups-Garous doit être attribué",
      "twoSistersMinimumPlayersNotReached": "Le rôle des Deux Sœurs nécessite au moins 2 joueurs avec ce rôle",
      "threeBrothersMinimumPlayersNotReached": "Le rôle des Trois Frères nécessite au moins 3 joueurs avec ce rôle",
      "thiefAdditionalCardsNotSet": "Les cartes additionnelles du Voleur ne sont pas définies",
      "actorAdditionalCardsNotSet": "Les cartes additionnelles de Comédien ne sont pas définies",
      "prejudicedManipulatorGroupsNotSet": "Les groupes de joueurs nécessaires pour l'Abominable Sectaire ne sont pas définis (pas encore implémenté)"
    }
  },
  "components": {
    "App": {
      "seoDescription": "L'Assistant Loups-Garous, un outil gratuit pour les Maîtres du jeu des Loups-Garous de Thiercelieux™"
    },
    "Error": {
      "unexpectedError": "Une erreur inattendue est survenue",
      "notNormalTeamNotified": "Quelque chose cloche… L'équipe technique a été notifiée.",
      "pageNotFound": "Page non trouvée",
      "youAreLost": "On dirait que vous êtes perdu… Vous fuyez les Loups-Garous ?",
      "goBackToSafePlace": "Retourner dans un endroit sûr"
    },
    "IndexFooter": {
      "contact": "Contacter le créateur"
    },
    "NavBar": {
      "navBar": "Barre de navigation",
      "parameters": "Paramètres",
      "homePageLink": "Lien vers l'accueil",
      "homePage": "Accueil",
      "werewolvesAssistantLogo": "Logo de l'assistant Loups-Garous",
      "parametersMenu": "Menu des paramètres"
    },
    "ParametersMenu": {
      "backToHome": "Retour à l'accueil",
      "parameters": "Paramètres",
      "parametersMenu": "Menu des paramètres",
      "game": "Partie",
      "cancelGame": "Annuler la partie",
      "gameCanceled": "Partie annulée"
    },
    "AboutWerewolvesGame": {
      "werewolvesAssistantGame": "Le jeu Les Loups-Garous de Thiercelieux™",
      "iDontKnowWerewolvesGame": "Je ne connais pas ce jeu",
      "watchTutorialVideoOnYoutube": "Regarder une vidéo explicative sur Youtube",
      "whatIsWerewolvesGame": "Les Loups-Garous de Thiercelieux™ est un jeu de société d'ambiance captivant, où chaque participant se glisse dans la peau d'un Villageois ou d'un redoutable Loup-Garou. Sous la direction d'un Maître du Jeu, chaque session dévoile un éventail de surprises, de trahisons, de rebondissements, et même de moments empreints de rires et parfois de larmes.",
      "whyGameMasterIsImportant": "Le succès d'une partie repose sur les épaules du Maître du Jeu, chargé d'insuffler une atmosphère envoûtante, d'imposer un rythme dynamique et de maîtriser les subtilités des règles du jeu. Gérer un groupe conséquent de joueurs, manquer d'expérience, ou se trouver dans un état second font de cette tâche un défi de taille."
    },
    "AboutWerewolvesAssistant": {
      "werewolvesAssistantInThePlace": "L'assistant Loups-Garous entre en scène !",
      "toHelpGameMaster": "Pour faciliter la lourde tâche qui incombe au Maître du Jeu lors de l'animation d'une partie des Loups-Garous, l'Assistant Loups-Garous s'avère être l'outil idéal !",
      "assistantHasManyFeatures": "Cet Assistant propose une variété de fonctionnalités, dont :",
      "gameLayout": "Un écran de composition de partie permettant de créer des sessions de jeu pour 4 à 40 joueurs, avec la possibilité de répartir aléatoirement les rôles.",
      "intuitiveUserInterface": "Une interface ludique de suivi de partie, offrant une expérience visuelle agréable.",
      "inputForEachEvent": "Pour chaque événement clé, la possibilité de renseigner les choix des joueurs, tels la victime des Loups-Garous ou les votes pour élire le Maire du village.",
      "gamePlaysQueue": "L'Assistant prend en charge l'ordonnancement des tours de jeu, l'affichage des décès et autres événements, ainsi que la conservation de tous les choix effectués pendant la partie.",
      "gameHistory": "À la fin de la partie, un récapitulatif est généré, indiquant le camp victorieux et fournissant un historique complet des actions passées.",
      "assistantGoodForYouAndFreeToPlay": "En résumé, l'Assistant Loups-Garous vous invite à (re-)découvrir le plaisir d'assumer le rôle de Maître du Jeu lors d'une partie de Loups-Garous. Accessible depuis n'importe quel support équipé d'un navigateur Internet, cet outil est et restera entièrement GRATUIT.",
      "pleaseBeAware": "Attention cependant",
      "physicalGameIsNeeded": "L'Assistant Loups-Garous n'a nullement l'intention de se substituer au jeu original Les Loups-Garous de Thiercelieux™. Son utilisation nécessite la possession préalable d'un jeu avec ses cartes.",
      "assistantIsABonus": "Il est important de souligner que l'Assistant se positionne comme une aide exclusive au Maître du Jeu, facilitant la gestion de la partie sans altérer l'essence et l'expérience propre au jeu de société initial. Ainsi, il vient compléter et améliorer la dynamique du jeu tout en préservant son caractère authentique."
    },
    "AboutAvailableRoles": {
      "availableRoles": "Rôles disponibles",
      "availableRolesImage": "Image des rôles disponibles",
      "loadingRoles": "Chargement des rôles…",
      "assistantHasManyRoles": "Dans cette version de l'Assistant Loups-Garous, {n} rôles sont disponibles :",
      "clickToExpandRoleDescription": "Cliquez sur le rôle {role} pour afficher sa description.",
      "availableRoleImage": "Image du rôle {role}"
    },
    "AboutAvailableRoleDescription": {
      "roleDescriptionLeftImageAlt": "Image à gauche de la description du rôle {role}"
    },
    "RoleTypeBadge": {
      "roleType": "Type de rôle",
      "descriptions": {
        "werewolf": "Son but est d'éliminer tous les Villageois.",
        "villager": "Son but est d'éliminer tous les Loups-Garous.",
        "lonely": "Son but est de réaliser son objectif, indépendamment de son propre camp.",
        "ambiguous": "Son but est de faire gagner son camp qui peut changer au cours de la partie."
      }
    },
    "RoleOriginBadge": {
      "roleOrigin": "Origine du rôle",
      "classic": "Jeu de base",
      "new-moon": "Extension Nouvelle Lune",
      "the-village": "Extension Le Village",
      "characters": "Extension Personnages",
      "unconventional": "Rôle inventé par la communauté"
    },
    "AboutHowToContribute": {
      "howToContribute": "Comment contribuer à ce projet ?",
      "thereAreManyWaysToContribute": "Il existe plusieurs moyens de contribuer à ce projet :",
      "openSourceProject": "L'Assistant Loups-Garous est un projet open-source ! Disponible sur GitHub, que vous soyez développeur, graphiste ou même testeur, votre aide est la bienvenue. D'ailleurs, si le projet vous plaît, n'hésitez pas à ajouter une étoile ou à suivre le créateur !",
      "accessGitHubRepository": "Accéder au dépôt GitHub",
      "thisProjectIsFree": "Ce projet a pour vocation de rester un service gratuit. Néanmoins, l'hébergement et l'infrastructure de l'outil sont tous deux payants. Si vous souhaitez participer ou si vous aimez le travail du créateur de ce projet, vous pouvez faire un don sur sa page Buy Me A Coffee.",
      "talkAboutThisProject": "Parlez de ce projet autour de vous ! Le bouche à oreille permettra aux nombreux indécis du role-play de se lancer dans la grande aventure du maître du jeu grâce à l'Assistant Loups-Garous."
    },
    "GitHubRepositoryButton": {
      "thisProjectIsOpenSource": "Ce projet est open-source !"
    },
    "AboutCreator": {
      "wordFromCreator": "Un mot du créateur",
      "creatorBackground": "Je suis Antoine ZANARDI, développeur Full-Stack Web et adepte de l'open-source en général. Si vous souhaitez en savoir plus sur moi, je vous invite à découvrir mon portfolio.",
      "whyWerewolvesGameIsGreat": "Pour moi, le jeu Les Loups-Garous de Thiercelieux™ est un des meilleurs jeux entre amis ou en famille autour d'une table, où s'entremêlent alliances et trahisons, un peu comme un Mario Kart en fait… Au fur et à mesure d'une partie, la vraie nature de chaque joueur se révèle, les masques tombent, chacun se sent menacé… Chaque partie est une aventure unique, ponctuée de rebondissements inattendus.",
      "whyWerewolvesAssistant": "Étant un grand fan du rôle de maître du Jeu, j'ai toujours eu l'envie de partager ce doux sentiment de chef d'orchestre durant une partie. J'ai donc créé cet assistant pour que n'importe qui puisse endosser ce rôle si important, et ce, dans n'importe quelle configuration de jeu.",
      "pleaseShareFeedback": "Vos retours sur cet assistant sont les bienvenus. Il a été créé pour servir tous Maîtres du Jeu, novices ou experts, et rendre vos parties mémorables. Amusez-vous bien !",
      "myPortfolio": "Mon portfolio"
    },
    "RoleImage": {
      "back": "Dos de la carte"
    },
    "GameLobbyPlayerInput": {
      "playerName": "Nom du joueur",
      "maxPlayersReached": "Nombre maximum de joueurs atteint",
      "pleaseEnterPlayerName": "Veuillez entrer un nom de joueur",
      "playerNameIsAlreadyTaken": "Ce nom de joueur est déjà pris",
      "playerNameMaxLengthReached": "Le nom du joueur ne peut pas dépasser 30 caractères"
    },
    "GameLobbyHeader": {
      "gameLobby": "Création de la partie"
    },
    "PlayerCard": {
      "playerCardRoleImageAlt": "Image du rôle du joueur {playerName}"
    },
    "GameLobbyPlayerCard": {
      "removePlayer": "Supprimer le joueur {playerName}",
      "roleNotSelected": "Rôle non sélectionné"
    },
    "GameLobbyRandomCompositionButton": {
      "randomComposition": "Composition aléatoire",
      "minPlayersNotReached": "Le nombre minimum de joueurs n'est pas atteint"
    },
    "GameLobbyStartGameButton": {
      "startGame": "Commencer la partie",
      "gameCreated": "Partie créée"
    },
    "GameLobbyPlayersParty": {
      "addPlayersWithInputAbove": "Ajoutez le nom des joueurs ci-dessus"
    },
    "GameNotFound": {
      "gameNotFound": "Partie non trouvée… Vous vous êtes perdu ?"
    },
    "GameCanceled": {
      "gameCanceled": "Partie annulée…"
    },
    "BackToHomeButton": {
      "backToHome": "Retour à l'accueil"
    },
    "CreateAnotherGameButton": {
      "createAnotherGame": "Créer une autre partie"
    },
    "GameTeamSide": {
      "aliveTeamPlayers": "{alivePlayers} / {totalPlayers} en vie",
      "sideAltText": {
        "villagers": "Camp des Villageois",
        "werewolves": "Camp des Loups-Garous"
      }
    },
    "GameTeamSidePlayer": {
      "roleImageAlt": "Image du rôle du joueur {playerName}"
    },
    "GameTeamSidePlayerName": {
      "thisPlayerIsDead": "Ce joueur est mort"
    },
    "GameTeamSidePlayerRoleName": {
      "thisPlayerRoleIsRevealed": "Le rôle de ce joueur est révélé",
      "thisPlayerWasThief": "Ce joueur était à l'origine le Voleur",
      "thisPlayerWasActor": "Ce joueur était à l'origine le Comédien"
    },
    "GamePlaygroundHeaderCurrentPlay": {
      "currentPlayAltText": "Image du game play en cours",
      "unknownGamePlay": "Game play inconnu",
      "accursedWolfFatherInfects": "L'Infect Père des Loups infecte",
      "actorChoosesCard": "Le Comédien choisit une carte",
      "bearTamerGrowls": "L'ours grogne",
      "bigBadWolfEats": "Le Grand Méchant Loup dévore",
      "charmedPeopleMeetEachOther": "Les charmés se rencontrent",
      "cupidCharms": "Cupidon tire ses flèches",
      "defenderProtects": "Le Salvateur protège",
      "foxSniffs": "Le Renard renifle",
      "hunterShoots": "Le Chasseur tire",
      "loversMeetEachOther": "Les Amoureux se rencontrent",
      "piedPiperCharms": "Le Joueur de Flûte charme",
      "scandalmongerMarks": "Le Corbeau marque",
      "scapegoatBansVoting": "Le Bouc Émissaire bannit des votes",
      "seerLooks": "La Voyante regarde",
      "sheriffDelegates": "Le Maire délègue son rôle",
      "sheriffSettlesVotes": "Le Maire tranche les votes",
      "stutteringJudgeRequestsAnotherVote": "Le Juge Bègue demande un autre vote",
      "survivorsBuryDeadBodies": "Les Survivants enterrent les corps",
      "survivorsElectSheriff": "Les Survivants élisent le Maire",
      "survivorsVote": "Les Survivants votent",
      "thiefChoosesCard": "Le Voleur choisit une carte",
      "threeBrothersMeetEachOther": "Les Trois Frères se rencontrent",
      "twoSistersMeetEachOther": "Les Deux Sœurs se rencontrent",
      "werewolvesEat": "Les Loups-Garous dévorent",
      "whiteWerewolfEats": "Le Loup-Garou Blanc dévore",
      "wildChildChoosesModel": "L'Enfant Sauvage choisit un modèle",
      "witchUsesPotions": "La Sorcière utilise ses potions",
      "wolfHoundChoosesSide": "Le Chien-Loup choisit son camp"
    },
    "gamePlaygroundHeaderCard": {
      "roleImageAlt": "Image du rôle du game play en cours"
    },
    "GamePlaygroundFooterMakePlayButton": {
      "makePlay": "Valider",
      "makePlayAndProceedToNextOne": "Valider et passer au tour suivant"
    },
    "GameVotePlaygroundVoters": {
      "nobodyCanVote": "Personne ne peut voter…"
    },
    "GamePlaygroundPlayerCardVoteInput": {
      "voteFor": "Vote pour",
      "noAvailableOptions": "Aucune option disponible"
    },
    "GameTeamSidePlayerAttribute": {
      "unknownPlayerAttribute": "Attribut inconnu.",
      "actingByActor": "Le joueur joue un autre rôle pour le tour en cours.",
      "cantVoteBySurvivors": "Les survivants ont décidé que ce joueur ne peut pas voter.",
      "cantVoteByScapegoat": "Le Bouc Émissaire a décidé que ce joueur ne peut pas voter.",
      "charmedByPiedPiper": "Le joueur a été charmé par le Joueur de Flûte.",
      "contaminatedByRustySwordKnight": "Le Chevalier à l'Épée Rouillée a contaminé ce joueur, il sera éliminé au début de la nuit suivante.",
      "drankDeathPotionByWitch": "La Sorcière a donné sa potion de mort à ce joueur, il mourra au petit matin.",
      "drankLifePotionByWitch": "La Sorcière a donné sa potion de vie à ce joueur, il sera sauvé de la morsure de n'importe quel Loup-Garou.",
      "eatenByWerewolves": "Les Loups-Garous ont mangé ce joueur, il mourra au petit matin.",
      "eatenByWhiteWerewolf": "Le Loup-Garou Blanc a mangé ce joueur, il mourra au petit matin.",
      "eatenByBigBadWolf": "Le Grand Méchant Loup a mangé ce joueur, il mourra au petit matin.",
      "inLoveByCupid": "Cupidon a rendu amoureux ce joueur d'un autre.",
      "powerlessByActor": "Le joueur ne peut plus jouer un autre rôle en tant que Comédien, il n'a plus de pouvoirs.",
      "powerlessByWerewolves": "Le joueur n'a plus de pouvoir car un Loup-Garou a été tué.",
      "powerlessByAccursedWolfFather": "Le joueur n'a plus de pouvoir car il a été infecté par l'Infect Père des Loups.",
      "powerlessByFox": "Le joueur n'a plus de pouvoirs car il n'a pas reniflé de Loup-Garou lors de son dernier tour.",
      "powerlessByElder": "Le joueur n'a plus de pouvoirs car un ou plusieurs villageois ont éliminé l'Ancien.",
      "protectedByDefender": "Le Salvateur protège ce joueur des Loups-Garous pour la nuit en cours.",
      "scandalmongerMarkedByScandalmonger": "Le Corbeau a marqué ce joueur, il aura 2 votes de plus contre lui au petit matin.",
      "seenBySeer": "La Voyante a vu ce joueur et connaît donc son rôle.",
      "sheriffBySheriff": "Le joueur est devenu le Maire car le Maire précédent lui a délégué son rôle.",
      "sheriffBySurvivors": "Les survivants ont élu ce joueur comme Maire.",
      "stolenRoleByDevotedServant": "La Servante Dévouée a volé le rôle de ce joueur.",
      "worshipedByWildChild": "L'Enfant Sauvage a choisi ce joueur comme modèle."
    },
    "NoActionNeeded": {
      "noActionNeeded": "Aucune action nécessaire, la partie peut continuer"
    },
    "GameDevotedServantStealsRolePlayground": {
      "doesDevotedServantStealRole": "Est-ce que la Servante Dévouée souhaite voler le rôle du joueur éliminé ? | Est-ce que la Servante Dévouée souhaite voler le rôle d'un des joueurs éliminés ?",
      "sheStealsRole": "Elle vole le rôle",
      "sheDoesntStealRole": "Elle ne vole pas le rôle"
    },
    "GameRequestAnotherVotePlayground": {
      "heRequestsAnotherVote": "Il demande un autre vote",
      "heDoesntRequestAnotherVote": "Il ne demande pas un autre vote"
    },
    "GameChooseSidePlayground": {
      "villagersSide": "Camp des Villageois",
      "werewolvesSide": "Camp des Loups-Garous"
    },
    "CurrentPlayQuestion": {
      "unknownQuestionForCurrentPlay": "??",
      "doesAccursedWolfFatherWantToInfect": "L'Infect Père des Loups veut-il infecter le joueur dévoré par les Loups-Garous ?",
      "doesActorWantToChooseCard": "Le Comédien veut-il choisir une carte et prendre ce rôle ?",
      "whichPlayerDoesBigBadWolfEat": "Quel joueur le Grand Méchant Loup veut-il manger ?",
      "whichPlayersDoesCupidCharm": "Quels joueurs Cupidon veut-il rendre inséparables ?",
      "whichPlayerDoesDefenderProtect": "Quel joueur le Salvateur veut-il protéger ?",
      "doesFoxWantToSniff": "Le Renard veut-il renifler un groupe de joueurs ?",
      "whichPlayerDoesHunterShoot": "Quel joueur le Chasseur veut-il tirer ?",
      "whichPlayersDoesPiedPiperCharm": "Quels joueurs le Joueur de Flûte veut-il charmer ?",
      "doesScandalmongerWantToMark": "Le Corbeau veut-il marquer un joueur de sa plume ?",
      "doesScapegoatWantToBanVoting": "Le Bouc Émissaire veut-il interdire à un ou plusieurs joueurs de voter ?",
      "whichPlayerDoesSeerLook": "Quel joueur la Voyante veut-elle regarder ?",
      "whichPlayerDoesSheriffDelegate": "À quel joueur le Maire veut-il déléguer son rôle ?",
      "whichPlayerDoesSheriffSettleVotes": "Avec quel joueur le Maire veut-il trancher les votes ?",
      "whichPlayerDoesSurvivorsElectSheriffOnTie": "Quel joueur les survivants veulent-ils élire comme Maire parmi les ex-æquo ?",
      "doesJudgeRequestAnotherVote": "Le Juge Bègue veut-il demander un autre vote ?",
      "whichPlayerDoesSurvivorsElectAsSheriff": "Quel joueur les survivants veulent-ils élire comme Maire ?",
      "whichPlayerDoesSurvivorsVoteFor": "Quel joueur va être pendu par les survivants ? Aux votes !",
      "whichPlayerDoesSurvivorsVoteForOnJudgeRequest": "Quel joueur va être pendu par les survivants à la demande du Juge Bègue? Aux votes !",
      "whichPlayerDoesSurvivorsVoteForOnTie": "Quel joueur parmi les ex-æquo va être pendu par les survivants ? Aux votes !",
      "doesThiefWantToChooseCard": "Le Voleur veut-il choisir une carte et prendre ce role ?",
      "whichPlayerDoesWerewolvesEat": "Quel joueur les Loups-Garous veulent-ils manger ?",
      "doesWhiteWerewolfWantToEat": "Le Loup-Garou Blanc veut-il manger un autre Loup-Garou ?",
      "whichPlayerDoesWildChildChoose": "Quel joueur l'Enfant Sauvage veut-il choisir comme modèle ?",
      "doesWitchWantToUsePotions": "La Sorcière veut-elle utiliser ses potions ?",
      "whichSideDoesWolfHoundChoose": "Quel camp le Chien-Loup veut-il choisir ?",
      "bearGrowled": "L'Ours grogne, un ou des Loups-Garous sont à côté de lui…",
      "charmedPeopleMeetEachOther": "Les personnes charmées se rencontrent, attention aux dernières victimes du Joueur de Flûte !",
      "loversMeetEachOther": "Les amoureux se rencontrent, c'est un coup de foudre !",
      "threeBrothersMeetEachOther": "Les Trois Frères se rencontrent, ils se consultent.",
      "twoSistersMeetEachOther": "Les Deux Sœurs se rencontrent, elles se consultent."
    },
    "GameTargetPlaygroundTargets": {
      "nobodyCanBeTargeted": "Personne ne peut être ciblé…"
    },
    "GameUsePotionsPlayground": {
      "witchHasUsedBothPotions": "La Sorcière a utilisé ses deux potions, la partie peut continuer."
    },
    "WitchUsePotionsTabView": {
      "giveLifePotion": "Donner la potion de vie pour sauver le joueur…",
      "giveDeathPotion": "Donner la potion de mort pour éliminer le joueur…",
      "lifePotionImageAlt": "Image de la potion de vie",
      "deathPotionImageAlt": "Image de la potion de mort"
    },
    "GameOverVictoryText": {
      "trophyImageAlt": "Icône de trophée",
      "victoryTypeImageAlt": "Icône de type de victoire",
      "angelWins": "L'Ange gagne seul !",
      "angelComesBackToParadise": "L'Ange a été éliminé lors du premier vote ou de la première nuit par les Loups-Garous. Il gagne seul et retourne au Paradis.",
      "loversWin": "Les Amoureux gagnent ensemble !",
      "loversAreTogetherForever": "Les deux personnes amoureuses de la flèche de Cupidon sont les seuls survivants. Ils gagnent ensemble et vivent heureux pour toujours.",
      "loversAndCupidWin": "Les Amoureux et Cupidon gagnent ensemble !",
      "loversAndCupidAreTogetherForever": "Les deux personnes amoureuses et Cupidon lui-même sont les seuls survivants. L'Amour avec un grand A a gagné.",
      "nobodyWins": "Match nul ! Tout le monde est mort…",
      "everybodyMurderedEachOther": "Tout le monde s'est entretué. Un silence mortel règne dans le village…",
      "piedPiperWins": "Le Joueur de Flûte gagne seul !",
      "piedPiperHasControl": "Le Joueur de Flûte a réussi à charmer tous les joueurs vivants. Il gagne seul et a le contrôle sur tout le village.",
      "prejudicedManipulatorWins": "L'Abominable Sectaire gagne avec son groupe !",
      "prejudicedManipulatorGroupRemainsAlive": "Tous les joueurs du groupe que l'Abominable Sectaire déteste sont morts. Il gagne avec son propre groupe dans un rire diabolique.",
      "villagersWin": "Les Villageois gagnent !",
      "villagersHaveSurvivedWerewolves": "Tous les Loups-Garous sont morts. Le village est enfin en sécurité.",
      "werewolvesWin": "Les Loups-Garous gagnent !",
      "werewolvesHaveEatenALot": "Tous les Villageois sont morts. Les Loups-Garous ont bien mangé et sont maintenant repus, pour de bon.",
      "whiteWerewolfWins": "Le Loup-Garou Blanc gagne seul !",
      "whiteWerewolfWinsAlone": "Le Loup-Garou Blanc est le seul survivant. Il gagne seul et peut être fier de sa victoire écrasante."
    },
    "BuyMeACoffeeButton": {
      "alt": "Offrez-moi un café"
    },
    "GameOverActions": {
      "createAnotherGame": "Lancer une nouvelle partie",
      "showGameHistory": "Voir l'historique de la partie",
      "loadingGameHistory": "Chargement de l'historique de la partie…"
    },
    "GameOver": {
      "gameOver": "Partie terminée"
    },
    "GameLobbyRolePickerHeader": {
      "pickRoleForPlayer": "Choisissez un rôle pour le joueur {playerName}",
      "currentRole": "Rôle actuel",
      "noRole": "Aucun"
    },
    "GameLobbyRolePickerFooter": {
      "pickRole": "Assigner ce rôle pour le joueur",
      "additionalCardRemoved": "Carte additionnelle retirée",
      "roleAdditionalCardRemovedForRecipient": "La carte additionnelle avec le rôle de {roleName} a été retirée pour {recipient}"
    },
    "GameLobbyRolePickerGridElement": {
      "random": "Aléatoire"
    },
    "GameLobbyRolePickerGridElementBadges": {
      "totalInParty": "Total dans la partie",
      "minInGameNotReached": "Minimum dans la partie non atteint ({count} restant)",
      "totalInAdditionalCards": "Total dans les cartes additionnelles"
    },
    "GameLobbyRolePickerDescription": {
      "pickARole": "Choisissez un rôle"
    },
    "RoleSideBadge": {
      "werewolvesSide": "Camp des Loups-Garous",
      "villagersSide": "Camp des Villageois"
    },
    "GameLobbyRolePickerDescriptionBoundaries": {
      "roleCountInParty": "Aucun dans la partie | 1 dans la partie | {count} dans la partie",
      "roleCountMaxReached": "Nombre maximum atteint",
      "recommendedMinPlayers": "Recommandé pour {count} joueurs minimum",
      "minInGameNotReached": "Minimum dans la partie non atteint ({count} restant)",
      "roleCountInGameAdditionalCards": "Aucun dans les cartes additionnelles | 1 dans les cartes additionnelles | {count} dans les cartes additionnelles"
    },
    "GameOverHistoryRecordIcon": {
      "gameHistoryRecordIconAltText": "Icône de ligne de l'historique de la partie"
    },
    "GameOverHistoryRecordAction": {
      "actionIconAltText": "Icône de l'action de l'historique de la partie",
      "infected": "a infecté",
      "growled": "a grogné",
      "madeFallInLove": "a fait tomber amoureux",
      "protected": "a protégé",
      "sniffed": "a reniflé",
      "shot": "a tiré sur",
      "metEachOther": "se sont rencontrés",
      "charmed": "a charmé",
      "markedWithFeather": "a marqué avec sa plume",
      "bannedFromVotes": "a banni des votes",
      "seen": "a vu le rôle de",
      "delegated": "a délégué son rôle de Maire à",
      "settledVotes": "a tranché les votes en choisissant",
      "requestedAnotherVote": "a demandé un autre vote",
      "buriedDeadBodies": "ont enterré les corps de",
      "electedAsSheriff": "ont élu comme Maire",
      "voted": "ont voté pour",
      "choseCard": "a choisi la carte",
      "ate": "a dévoré",
      "choseAsModel": "a choisi comme modèle",
      "usedPotions": "a utilisé ses potions",
      "choseSide": "a choisi le camp des",
      "skippedTurn": "a passé son tour"
    },
    "GameOverHistoryRecordDecisionTarget": {
      "lifePotion": "Potion de vie",
      "deathPotion": "Potion de mort"
    },
    "GameOverHistoryRecordDecisionBuriedPlayer": {
      "stolenRoleByDevotedServant": "Rôle volé par la Servante Dévouée",
      "stolenRoleByDevotedServantIcon": "Icône de rôle volé par la Servante Dévouée"
    },
    "GameOverHistory": {
      "endOfGame": "Fin de la partie",
      "gameHistory": "Historique de la partie"
    },
    "GameLobbyHeaderOptionButton": {
      "gameOptions": "Options de la partie"
    },
    "GameLobbyOptionsHub": {
      "gameOptions": "Options de la partie"
    },
    "GameLobbyOptionsHubTabView": {
      "roles": "Rôles",
      "composition": "Composition",
      "votes": "Votes",
      "compositionTabImageAlt": "Icône de l'onglet Composition",
      "votesTabImageAlt": "Icône de l'onglet Votes"
    },
    "GameLobbyOptionsHubRolesTabGeneral": {
      "general": "Général",
      "options": {
        "doSkipCallIfNoTarget": {
          "label": "Appel de rôle sans cible possible",
          "descriptions": {
            "yes": "L'Assistant appellera le rôle même s'il n'y a pas de cible parmi les joueurs.",
            "no": "L'Assistant n'appellera pas le rôle s'il n'y a pas de cible parmi les joueurs."
          }
        },
        "areRevealedOnDeath": {
          "label": "Révélation du rôle à la mort",
          "descriptions": {
            "yes": "Le rôle du joueur est révélé aux autres lorsqu'il meurt.",
            "no": "Le rôle du joueur n'est pas révélé aux autres lorsqu'il meurt."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabSheriff": {
      "sheriff": "Maire",
      "sheriffAlt": "Icône du Maire",
      "options": {
        "isEnabled": {
          "label": "Jouer avec le Maire",
          "descriptions": {
            "yes": "Le jeu aura un Maire.",
            "no": "Le jeu n'aura pas de Maire."
          }
        },
        "mustSettleTieInVotes": {
          "label": "Le Maire doit départager les votes",
          "descriptions": {
            "yes": "Le Maire doit départager les votes en cas d'égalité.",
            "no": "Le Maire n'a pas à départager les votes en cas d'égalité. Un second vote sera organisé juste ensuite entre les ex-æquo."
          }
        },
        "hasDoubledVote": {
          "label": "Le Maire a un vote doublé",
          "descriptions": {
            "yes": "Quand les survivants votent pour éliminer un joueur, le Maire a un vote doublé lors des votes.",
            "no": "Le Maire n'a pas un vote doublé lors des votes, mais un vote simple comme tout autre joueur."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabSheriffElection": {
      "options": {
        "electedAt": {
          "turn": {
            "label": "Tour d'élection du Maire"
          },
          "label": "Élection du Maire",
          "description": "Le Maire sera élu pendant {phase} du tour {turn}."
        }
      }
    },
    "GameLobbyOptionsHubRolesTabBigBadWolf": {
      "options": {
        "isPowerlessIfWerewolfDies": {
          "label": "Le Grand Méchant Loup perd ses pouvoirs si un Loup-Garou meurt",
          "descriptions": {
            "yes": "Si un joueur du côté des Loups-Garous meurt, le Grand Méchant Loup perd ses pouvoirs pour le reste de la partie.",
            "no": "Si un Loup-Garou meurt, le Grand Méchant Loup garde ses pouvoirs."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabWhiteWerewolf": {
      "options": {
        "wakingUpInterval": {
          "label": "Nombre de nuits entre deux réveils du Loup-Garou Blanc",
          "description": "Le Loup-Garou Blanc se réveillera chaque nuit pour manger un autre Loup-Garou. | Le Loup-Garou Blanc se réveillera toutes les {interval} nuits pour manger un autre Loup-Garou."
        }
      }
    },
    "GameLobbyOptionsHubRolesTabSeer": {
      "options": {
        "isTalkative": {
          "label": "La Voyante est bavarde",
          "descriptions": {
            "yes": "Lorsque la Voyante choisit un joueur, le Maître du Jeu révèle le rôle du joueur à voix haute.",
            "no": "Lorsque la Voyante choisit un joueur, le Maître du Jeu révèle le rôle du joueur uniquement à elle (en le mimant par exemple)."
          }
        },
        "canSeeRoles": {
          "label": "La Voyante peut voir les rôles",
          "descriptions": {
            "yes": "Lorsque la Voyante choisit un joueur, le Maître du Jeu lui révèle le rôle du joueur.",
            "no": "Lorsque la Voyante choisit un joueur, le Maître du Jeu ne lui révèle pas le rôle du joueur, mais son camp (Villageois ou Loup-Garou)."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabCupid": {
      "options": {
        "mustWinWithLovers": {
          "label": "Cupidon doit gagner avec les Amoureux",
          "descriptions": {
            "yes": "Cupidon fait équipe avec les Amoureux : si les Amoureux et Cupidon sont les seuls survivants, ils gagnent ensemble. Les Amoureux peuvent gagner seuls sans que Cupidon gagne. Attention : Cupidon ne peut pas se charmer lui-même avec cette variante activée !",
            "no": "Cupidon ne fait pas équipe avec les Amoureux."
          }
        },
        "lovers": {
          "doRevealRoleToEachOther": {
            "label": "Les Amoureux se révèlent leur rôle",
            "descriptions": {
              "yes": "Les Amoureux se révèlent leur rôle lorsqu'ils se rencontrent juste après avoir été charmés par Cupidon.",
              "no": "Les Amoureux ne se révèlent pas leur rôle lorsqu'ils se rencontrent juste après avoir été charmés par Cupidon."
            }
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabLittleGirl": {
      "options": {
        "isProtectedByDefender": {
          "label": "La Petite Fille est protégée par le Salvateur",
          "descriptions": {
            "yes": "Si la Petite Fille est la cible des Loups-Garous, le Salvateur peut la sauver avec sa protection.",
            "no": "Si la Petite Fille est la cible des Loups-Garous, le Salvateur ne peut pas la sauver avec sa protection."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabDefender": {
      "options": {
        "canProtectTwice": {
          "label": "Le Salvateur peut protéger deux fois de suite",
          "descriptions": {
            "yes": "Le Salvateur peut protéger le même joueur deux fois de suite ou plus pendant la partie.",
            "no": "Le Salvateur ne peut pas protéger le même joueur deux fois de suite pendant la partie."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabElder": {
      "options": {
        "livesCountAgainstWerewolves": {
          "label": "Nombre de vies de l'Ancien contre les Loups-Garous",
          "description": "L'Ancien n'a qu'une seule vie contre les Loups-Garous. | L'Ancien a {livesCount} vies contre les Loups-Garous."
        },
        "doesTakeHisRevenge": {
          "label": "L'Ancien prend sa revanche",
          "descriptions": {
            "yes": "Si l'Ancien est éliminé par un joueur du côté des Villageois (votes des survivants, potion de la Sorcière, tir du Chasseur, etc.), tous les joueurs du côté des Villageois perdent leurs pouvoirs pour le reste de la partie.",
            "no": "Si l'Ancien est éliminé par un joueur du côté des Villageois, rien ne se passe."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabIdiot": {
      "options": {
        "doesDieOnElderDeath": {
          "label": "L'Idiot révélé meurt à la mort de l'Ancien",
          "descriptions": {
            "yes": "Si l'Ancien est éliminé et que l'Idiot a son rôle révélé, l'Idiot meurt en conséquence.",
            "no": "Si l'Ancien est éliminé et que l'Idiot a son rôle révélé, l'Idiot ne meurt pas."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabTwoSisters": {
      "options": {
        "wakingUpInterval": {
          "label": "Nombre de nuits entre deux réveils des Deux Sœurs",
          "description": "Les Deux Sœurs se réveilleront seulement la première nuit pour se rencontrer. | Les Deux Sœurs se réveilleront chaque nuit pour se rencontrer. | Les Deux Sœurs se réveilleront toutes les {interval} nuits pour se rencontrer."
        }
      }
    },
    "GameLobbyOptionsHubRolesTabThreeBrothers": {
      "options": {
        "wakingUpInterval": {
          "label": "Nombre de nuits entre deux réveils des Trois Frères",
          "description": "Les Trois Frères se réveilleront seulement la première nuit pour se rencontrer. | Les Trois Frères se réveilleront chaque nuit pour se rencontrer. | Les Trois Frères se réveilleront toutes les {interval} nuits pour se rencontrer."
        }
      }
    },
    "GameLobbyOptionsHubRolesTabFox": {
      "options": {
        "isPowerlessIfMissesWerewolf": {
          "label": "Le Renard perd ses pouvoirs s'il ne renifle pas un Loup-Garou",
          "descriptions": {
            "yes": "Si le Renard ne renifle pas un Loup-Garou parmi le groupe de 3 joueurs, il perd ses pouvoirs pour le reste de la partie.",
            "no": "Si le Renard ne renifle pas un Loup-Garou parmi le groupe de 3 joueurs, il garde ses pouvoirs."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabBearTamer": {
      "options": {
        "doesGrowlOnWerewolvesSide": {
          "label": "L'Ours du Montreur grogne s'il est du côté des Loups-Garous",
          "descriptions": {
            "yes": "Si le Montreur d'Ours est infecté par l'Infect Père des Loups, son ours grognera chaque matin.",
            "no": "L'ours grognera seulement s'il a un voisin du côté des Loups-Garous, que le Montreur d'Ours soit infecté ou non."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabStutteringJudge": {
      "options": {
        "voteRequestsCount": {
          "label": "Nombre de requêtes de votes du Juge Bègue",
          "description": "Le Juge Bègue ne peut demander qu'un seul vote supplémentaire pendant la partie. | Le Juge Bègue peut demander un autre vote {count} fois pendant la partie."
        }
      }
    },
    "GameLobbyOptionsHubRolesTabWildChild": {
      "options": {
        "isTransformationRevealed": {
          "label": "La transformation de l'Enfant Sauvage est révélée aux joueurs",
          "descriptions": {
            "yes": "Lorsque l'Enfant Sauvage devient un Loup-Garou à la mort de son modèle, le Maître du Jeu révèle sa transformation aux autres joueurs.",
            "no": "Lorsque l'Enfant Sauvage devient un Loup-Garou à la mort de son modèle, la transformation reste secrète pour les autres joueurs."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabWolfHound": {
      "options": {
        "isChosenSideRevealed": {
          "label": "Le camp choisi par le Chien-Loup est révélé",
          "descriptions": {
            "yes": "Lorsque le Chien-Loup choisit un camp, le Maître du Jeu révèle son choix aux autres joueurs.",
            "no": "Lorsque le Chien-Loup choisit un camp, son choix reste secret pour les autres joueurs."
          }
        },
        "isSideRandomlyChosen": {
          "label": "Le camp du Chien-Loup est choisi aléatoirement",
          "descriptions": {
            "yes": "Le Chien-Loup n'aura pas le choix de choisir un camp au début de la partie. Son camp sera choisi aléatoirement par l'Assistant.",
            "no": "Le Chien-Loup choisit son camp au début de la partie."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabThief": {
      "options": {
        "mustChooseBetweenWerewolves": {
          "label": "Le Voleur doit obligatoirement choisir une carte si elles sont toutes du camp des Loups-Garous",
          "descriptions": {
            "yes": "Si toutes les cartes désignées au Voleur sont du côté des Loups-Garous, il doit en choisir une et ne peut pas passer son tour.",
            "no": "Le Voleur peut passer son tour, même si toutes les cartes désignées sont du côté des Loups-Garous."
          }
        },
        "isChosenCardRevealed": {
          "label": "La carte choisie est révélée",
          "descriptions": {
            "yes": "La carte choisie par le Voleur est révélée aux autres joueurs.",
            "no": "La carte choisie par le Voleur reste secrète pour les autres joueurs."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabPiedPiper": {
      "options": {
        "charmedPeopleCountPerNight": {
          "label": "Nombre de personnes charmées par nuit",
          "description": "Le Joueur de Flûte peut charmer seulement un joueur par nuit. | Le Joueur de Flûte peut charmer {count} joueurs par nuit."
        },
        "isPowerlessOnWerewolvesSide": {
          "label": "Le Joueur de Flûte perd ses pouvoirs s'il est infecté",
          "descriptions": {
            "yes": "Si le Joueur de Flûte est infecté par l'Infect Père des Loups, il perd ses pouvoirs pour le reste de la partie.",
            "no": "Le Joueur de Flûte garde ses pouvoirs même s'il est infecté par l'Infect Père des Loups."
          }
        },
        "areCharmedPeopleRevealed": {
          "label": "Les personnes charmées sont révélées",
          "descriptions": {
            "yes": "Les personnes charmées sont révélées aux autres joueurs.",
            "no": "Les personnes charmées restent secrètes pour celles qui n'ont pas encore été charmées."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabScandalmonger": {
      "options": {
        "markPenalty": {
          "label": "Valeur de la plume du Corbeau",
          "description": "Le Corbeau marque un joueur avec une plume. Le joueur aura un vote de plus contre lui lors du prochain vote. | Le Corbeau marque un joueur avec une plume. Le joueur aura {markPenalty} votes de plus contre lui lors du prochain vote."
        }
      }
    },
    "GameLobbyOptionsHubRolesTabWitch": {
      "options": {
        "doesKnowWerewolvesTargets": {
          "label": "La Sorcière connaît les cibles des Loups-Garous",
          "descriptions": {
            "yes": "La Sorcière connaît la ou les cibles des Loups-Garous lorsqu'elle peut encore utiliser sa potion de vie.",
            "no": "La Sorcière ne connaît pas du tout les cibles des Loups-Garous."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabPrejudicedManipulator": {
      "options": {
        "isPowerlessOnWerewolvesSide": {
          "label": "L'Abominable Sectaire perd ses pouvoirs s'il est infecté",
          "descriptions": {
            "yes": "Si le Abominable Sectaire est infecté par l'Infect Père des Loups, il perd ses pouvoirs pour le reste de la partie.",
            "no": "L'Abominable Sectaire garde ses pouvoirs même s'il est infecté par l'Infect Père des Loups."
          }
        }
      }
    },
    "GameLobbyOptionsHubRolesTabActor": {
      "options": {
        "isPowerlessOnWerewolvesSide": {
          "label": "Le Comédien perd ses pouvoirs s'il est infecté",
          "descriptions": {
            "yes": "Si le Comédien est infecté par l'Infect Père des Loups, il perd ses pouvoirs pour le reste de la partie.",
            "no": "Le Comédien garde ses pouvoirs même s'il est infecté par l'Infect Père des Loups."
          }
        }
      }
    },
    "GameLobbyOptionsHubCompositionTab": {
      "options": {
        "isHidden": {
          "label": "Composition cachée de la partie",
          "descriptions": {
            "yes": "La composition de la partie est cachée aux joueurs durant toute la partie.",
            "no": "La composition de la partie est révélée aux joueurs au début de la partie."
          }
        }
      }
    },
    "GameLobbyOptionsHubVotesTab": {
      "options": {
        "canBeSkipped": {
          "label": "Les votes peuvent être passés",
          "descriptions": {
            "yes": "Les joueurs peuvent éviter une pendaison en passant leurs votes.",
            "no": "Les joueurs ne peuvent pas éviter la phase de votes, au moins un joueur devra voter."
          }
        },
        "duration": {
          "label": "Durée des votes en secondes",
          "description": "Les joueurs ont {time} pour voter. Seulement à titre indicatif, le Maître du Jeu peut décider de prolonger ou de raccourcir ce temps."
        }
      }
    },
    "GameEventsMonitorFooter": {
      "previous": "Précédent",
      "skip": "Passer",
      "goBackToPreviousGameEvent": "Revenir à l'événement précédent",
      "skipCurrentGameEvent": "Passer l'événement en cours"
    },
    "GameEventPreviousTextButton": {
      "previousEventText": "Revenir au texte de l'événement précédent"
    },
    "GameEventNextTextButton": {
      "nextEventText": "Prochain texte de l'événement"
    },
    "GameStartsEvent": {
      "welcomeToTheVillage": "Bienvenue à tous dans le village de Thiercelieux !",
      "gameCompositionEvent": "La composition de cette partie est : {composition}",
      "looksLifeSomeWerewolvesSneakedIntoTheVillage": "On dirait que des Loups-Garous se sont infiltrés dans le village…",
      "villagersMurderWerewolves": "Villageois, prenez vos torches et vos fourches, il est temps de traquer les Loups-Garous !",
      "letsElectSheriffBefore": "Mais avant cela, élisons le Maire du village.",
      "compositionIsHidden": "La composition de cette partie est cachée ! Vous devrez découvrir qui est qui par vous-même au fur et à mesure de la partie…"
    },
    "GameTurnStartsEvent": {
      "unknownGameTurnStartsEvent": "Événement de début de tour inconnu"
    },
    "GameSurvivorsTurnStartsEvent": {
      "gameStartsWithVoteBecauseOfAngelPresence": "La partie commence par un vote en raison d'une présence angélique dans le village.",
      "watchOutForAngelOrHeWins": "Attention à l'Ange, s'il est éliminé lors de ce vote, il gagne la partie immédiatement et seul !",
      "voteBecauseOfStutteringJudge": "Les survivants vont voter à nouveau car le Juge Bègue a demandé un autre vote.",
      "voteBecauseOfPreviousTies": "Les survivants vont voter à nouveau car le précédent vote s'est terminé par une égalité.",
      "survivorsMustVoteBetween": "Le village doit voter entre {players}. Qui sera éliminé ? En cas d'égalité, il n'y aura pas de pendaison.",
      "survivorsVote": "Survivants, il est temps de voter et d'éliminer un joueur du village.",
      "survivorsBuryDeadBodies": "Survivants, il est temps d'enterrer les corps des morts du village.",
      "survivorsElectSheriff": "Survivants, il est temps d'élire le Maire du village.",
      "sheriffElectionBecauseOfPreviousTies": "Les survivants vont élire à nouveau le Maire du village car le précédent vote s'est terminé par une égalité.",
      "survivorsMustElectBetween": "Le village doit élire entre {players}. En cas d'égalité, le Maire sera choisi aléatoirement."
    },
    "GameAccursedWolfFatherTurnStartsEvent": {
      "accursedWolfFatherCanInfect": "L'Infect Père des Loups se réveille et peut infecter un joueur dévoré par les Loups-Garous s'il le souhaite."
    },
    "GameActorTurnStartsEvent": {
      "actorCanChooseCardToPlay": "Le Comédien se réveille avec ses multiples personnalités et peut choisir une carte à jouer pour ce tour s'il le souhaite."
    },
    "GameBearTamerTurnStartsEvent": {
      "bearGrowls": "Le Montreur d'Ours se réveille et son ours grogne. Un ou des Loups-Garous sont à côté de lui…"
    },
    "GameBigBadWolfTurnStartsEvent": {
      "bigBadWolfEatsVillager": "Le Grand Méchant Loup se réveille et va dévorer un Villageois.",
      "bigBadWolfCanEatWerewolves": "Dans cette partie spéciale, le Grand Méchant Loup peut dévorer un autre Loup-Garou s'il le souhaite."
    },
    "GameCharmedTurnStartsEvent": {
      "charmedPeopleMeetEachOther": "Le premier charmé par le Joueur de Flûte se réveille. | Les premiers charmés par le Joueur de Flûte se réveillent et se rencontrent.",
      "charmedPeopleMeetEachOtherWithOldOnes": "Le nouveau charmé par le Joueur de Flûte se réveille et rencontre les anciens. Attention aux dernières victimes du Joueur de Flûte ! | Les nouveaux charmés par le Joueur de Flûte se réveillent et rencontrent les anciens. Attention aux dernières victimes du Joueur de Flûte !"
    },
    "GameCupidTurnStartsEvent": {
      "cupidChoosesTwoPlayersToBeLovers": "Cupidon se réveille et choisit deux joueurs pour être Amoureux.",
      "cupidCanChooseHimself": "Cupidon peut se choisir lui-même comme Amoureux si le cœur lui en dit.",
      "cupidMustWinWithLovers": "Dans cette partie spéciale, Cupidon doit gagner avec les Amoureux qu'il va choisir. Dans ce cas, il ne pourra pas se charmer lui-même."
    },
    "GameDefenderTurnStartsEvent": {
      "defenderProtectsAnyone": "Le Salvateur se réveille et va protéger quelqu'un des Loups-Garous.",
      "defenderProtectsAnyoneExceptLastProtectedPlayer": "Le Salvateur se réveille et va protéger quelqu'un des Loups-Garous sauf le joueur qu'il a choisi la nuit dernière."
    },
    "GameFoxTurnStartsEvent": {
      "foxSniffesGroupOfPlayers": "Le Renard se réveille et va renifler un groupe de 3 joueurs pour savoir s'il y a un Loup-Garou parmi eux."
    },
    "GameHunterTurnStartsEvent": {
      "hunterShootsAtPlayer": "Dans son dernier souffle, le Chasseur va tirer sur un joueur et le tuera immédiatement."
    },
    "GameLoversTurnStartsEvent": {
      "loversMeetEachOther": "Les Amoureux se réveillent et se rencontrent, c'est le coup de foudre. Ils sont amoureux et gagneront ensemble s'ils sont les seuls survivants.",
      "loversAndCupidMeetEachOther": "Les Amoureux se réveillent et se rencontrent, c'est le coup de foudre. Ils sont amoureux et gagneront ensemble s'ils sont les seuls survivants. Cupidon gagnera aussi s'il survit avec eux.",
      "ifOneLoveDiesOtherDiesToo": "Si un des Amoureux meurt, l'autre mourra aussi.",
      "ifOneLoveDiesOtherDiesTooButNotCupid": "Si un des Amoureux meurt, l'autre mourra aussi. Cupidon ne mourra pas si un des Amoureux meurt et inversement.",
      "loversRevealEachOtherRoles": "Dans cette partie spéciale, les Amoureux se révèlent leurs rôles entre eux."
    },
    "GamePiedPiperTurnStartsEvent": {
      "piedPiperCharmsPeople": "Le Joueur de Flûte se réveille et va charmer un seul joueur | Le Joueur de Flûte se réveille et va charmer {count} joueurs."
    },
    "GameScandalmongerTurnStartsEvent": {
      "scandalmongerCanMarkPlayer": "Le Corbeau se réveille et peut marquer un joueur avec sa plume.",
      "playerWillHavePenaltyForNextVotes": "Le joueur marqué d'une plume aura un vote supplémentaire contre lui lors du prochain vote. | Le joueur marqué d'une plume aura {penalty} votes supplémentaires contre lui lors du prochain vote."
    },
    "GameScapegoatTurnStartsEvent": {
      "scapegoatCanBanPlayerFromVoting": "Le Bouc Émissaire se réveille et peut interdire à un ou plusieurs joueurs de voter lors des votes du jour suivant."
    },
    "GameSeerTurnStartsEvent": {
      "seerSeesRoles": "La Voyante se réveille et va regarder le rôle d'un joueur.",
      "seerSeesSides": "La Voyante se réveille et va regarder le camp d'un joueur."
    },
    "GameSheriffTurnStartsEvent": {
      "sheriffDelegates": "Dans son dernier souffle, le Maire va déléguer son rôle à un autre joueur.",
      "sheriffSettlesVotes": "Le Maire va régler l'égalité des votes entre {players}. Le joueur choisi sera pendu."
    },
    "GameStutteringJudgeTurnStartsEvent": {
      "stutteringJudgeCanRequestAnotherVote": "Après ce vote, le Juge Bègue peut demander un autre vote immédiatement.",
      "everyonePutHandsInBackAndGameMasterWillRecognizeSign": "Chaque joueur va mettre ses mains dans son dos. Le Maître du Jeu va faire le tour des joueurs et reconnaître le signe du Juge Bègue (les pouces en l'air par exemple) s'il souhaite demander un autre vote."
    },
    "GameThiefTurnStartsEvent": {
      "thiefCanStealCard": "Le Voleur se réveille et peut choisir la carte supplémentaire lui étant destinée. S'il la choisit, il prendra ce rôle pour le reste de la partie. | Le Voleur se réveille et peut choisir une carte supplémentaire parmi les {count} lui étant destinées. S'il en choisit une, il prendra ce rôle pour le reste de la partie.",
      "gameMasterWillFlipThiefCards": "Le Maître du Jeu va retourner la carte pour que le Voleur puisse la voir. | Le Maître du Jeu va retourner les {count} cartes pour que le Voleur puisse les voir.",
      "mustChooseBetweenWerewolves": "Si la carte destinée au Voleur est du côté des Loups-Garous, il doit obligatoirement la prendre et ne peut pas passer son tour. | Si toutes les cartes destinées au Voleur sont du côté des Loups-Garous, il doit obligatoirement en choisir une et ne peut pas passer son tour.",
      "doesNotHaveToChooseBetweenWerewolves": "Dans cette partie spéciale, le Voleur n'est pas obligé de prendre la carte si elle est côté des Loups-Garous. | Dans cette partie spéciale, le Voleur n'est pas obligé de choisir une carte si toutes les cartes qui lui sont destinées sont du côté des Loups-Garous."
    },
    "GameThreeBrothersTurnStartsEvent": {
      "threeBrothersMeetEachOtherForFirstTime": "Les Trois Frères se réveillent et se rencontrent pour la première fois. Ils peuvent se faire confiance désormais.",
      "threeBrothersMeetEachOther": "Les Trois Frères se réveillent et vont se consulter sans un bruit."
    },
    "GameTwoSistersTurnStartsEvent": {
      "twoSistersMeetEachOtherForFirstTime": "Les Deux Sœurs se réveillent et se rencontrent pour la première fois. Elles peuvent se faire confiance désormais.",
      "twoSistersMeetEachOther": "Les Deux Sœurs se réveillent et vont se consulter sans un bruit."
    },
    "GameWerewolvesTurnStartsEvent": {
      "werewolvesMeetEachOtherForFirstTime": "Les Loups-Garous se réveillent et se rencontrent pour la première fois.",
      "whenMeetOverWerewolvesEat": "Une fois les présentation faites, les Loups-Garous vont choisir leur repas de ce soir.",
      "werewolvesEat": "Les Loups-Garous se réveillent et vont choisir leur repas de ce soir.",
      "werewolvesCanEatEachOther": "Dans cette partie spéciale, les Loups-Garous peuvent se dévorer entre eux. Une bonne façon d'enlever tout soupçon…"
    },
    "GameWhiteWerewolfTurnStartsEvent": {
      "whiteWerewolfCanEatAnotherWolf": "Le Loup-Garou Blanc se réveille et peut dévorer un autre Loup-Garou s'il le souhaite."
    },
    "GameWildChildTurnStartsEvent": {
      "wildChildChoosesModel": "L'Enfant Sauvage se réveille et va choisir un modèle parmi les joueurs.",
      "ifModelDiesWildChildBecomesWolf": "Si le modèle meurt, l'Enfant Sauvage rejoindra le camp des Loups-Garous."
    },
    "GameWitchTurnStartsEvent": {
      "witchCanUsePotions": "La Sorcière se réveille et peut utiliser sa potion de vie et/ou sa potion de mort.",
      "gameMasterWillAskHerEventIfUsed": "Le Maître du Jeu va demander à la Sorcière son intention pour chaque potion, même si elle les a déjà utilisées."
    },
    "GameWolfHoundTurnStartsEvent": {
      "wolfHoundSideRandomlyChosen": "Dans cette partie spéciale, le camp du Chien-Loup est choisi aléatoirement par l'Assistant.",
      "wolfHoundChoosesSide": "Le Chien-Loup se réveille et va choisir quel camp il veut rejoindre entre les Villageois et les Loups-Garous."
    },
    "GamePhaseStartsEvent": {
      "dayRises": "Le jour se lève sur le village de Thiercelieux !",
      "nightFalls": "La nuit tombe sur le village de Thiercelieux…"
    },
    "GameDeathEvent": {
      "cantFindDeadPlayer": "L'Assistant ne trouve pas le joueur mort… Veuillez continuer.",
      "playerDies": "{playerName} est mort ! Quelle tragédie…",
      "playerCanRevealRole": "Il ou elle peut révéler son rôle aux autres joueurs.",
      "playerDoesntRevealRole": "Dans cette spéciale, le rôle du joueur mort n'est pas révélé aux autres. Le mystère demeure…"
    },
    "RoleFlippingImageSvgIcon": {
      "iconAlt": "Icône associé au rôle"
    },
    "GameSeerHasSeenEvent": {
      "cantFindTargetedPlayer": "Le joueur vu ne peut être trouvé… Veuillez continuer.",
      "gameMasterWillMimeSide": "Comme la Voyante est silencieuse, le Maître de jeu mimera le camp du joueur vu.",
      "gameMasterWillMimeRole": "Comme la Voyante est silencieuse, le Maître de jeu mimera le rôle du joueur vu.",
      "seerHasSeenSide": "La Voyante a vu un joueur du camp des {side} !",
      "seerHasSeenRole": "La Voyante a vu {role} !"
    },
    "GameSheriffHasBeenElectedEvent": {
      "cantFindElectedSheriff": "Le Maire élu ne peut être trouvé… Veuillez continuer.",
      "sheriffHasBeenElectedBySurvivors": "Les survivants ont élu {playerName} comme Maire du village !",
      "sheriffCanMakeSpeech": "Le Maire peut faire un discours poignant sur son élection.",
      "sheriffHasBeenElectedByDelegation": "{playerName} est le nouveau Maire du village !"
    },
    "MuteButton": {
      "mute": "Couper le son",
      "unmute": "Activer le son"
    },
    "GameScandalmongerMayHaveMarkedEvent": {
      "scandalMongerDidntMarkAnyone": "Le Corbeau n'a marqué personne pour cette nuit. Il s'est envolé…",
      "scandalmongerHasMarkedAPlayer": "Le Corbeau a marqué un joueur avec sa plume.",
      "gameMasterWillPutScandalmongerMark": "Le Maître du Jeu va déposer la plume en face du joueur marqué."
    },
    "GameAccursedWolfFatherMayHaveInfectedEvent": {
      "accursedWolfFatherMayHaveInfectedAPlayer": "L'Infect Père des Loups a peut-être infecté un joueur dévoré par les Loups-Garous.",
      "gameMasterWillTapAccursedWolfFatherMarkVictim": "Si c'est le cas, le Maître du Jeu va faire le tour des joueurs et tapoter le dos du joueur infecté par l'Infect Père des Loups. Ce joueur est désormais un Loup-Garou mais garde ses anciens pouvoirs de Villageois."
    },
    "GameVillagerVillagerIntroductionEvent": {
      "cantFindVillagerVillager": "Le Villageois-Villageois ne peut être trouvé… Veuillez continuer.",
      "villagerVillagerIntroduction": "{playerName} est le Villageois-Villageois du village ! Son rôle est connu de tous.",
      "idealPlayerForSheriff": "Sans pouvoir particulier, les autres joueurs peuvent lui donner une confiance aveugle. Pourquoi pas ne pas l'élire comme Maire ?"
    },
    "GamePiedPiperHasCharmedEvent": {
      "piedPiperHasCharmed": "Le Joueur de Flûte a charmé un joueur | Le Joueur de Flûte a charmé {charmedCount} joueurs.",
      "gameMasterWillTapCharmedPlayers": "Le Maître du Jeu va tapoter le dos du joueur charmé pour qu'il sache qu'il est charmé. | Le Maître du Jeu va tapoter le dos des {charmedCount} joueurs charmés pour qu'ils sachent qu'ils sont charmés.",
      "charmedPeopleAreRevealed": "Dans cette partie spéciale, les personnes charmées sont révélées aux autres joueurs.",
      "peopleAreCharmed": "{charmedPeople} a été charmé ! | {charmedPeople} ont été charmés !"
    },
    "GameWolfHoundHasChosenSideEvent": {
      "cantFindWolfHoundOrChosenSide": "Le Chien-Loup ou son camp choisi ne peut être trouvé… Veuillez continuer.",
      "assistantChoseSideForWolfHoundRevelation": "L'Assistant a assigné le Chien-Loup dans le camp des … {side} !",
      "wolfHoundChoseSideRevelation": "Le Chien-Loup a décidé de rejoindre le camp des … {side} !",
      "assistantChoseSideForWolfHoundMime": "L'Assistant a assigné le Chien-Loup à un camp aléatoire. Le Maître du Jeu va mimer le camp du Chien-Loup. ({side})",
      "wolfHoundChoseSideQuietly": "Le Chien-Loup a choisi son camp. Le camp choisi restera secret pour les autres joueurs…"
    },
    "GameCupidHasCharmedEvent": {
      "cupidHasCharmedPlayers": "Cupidon a charmé deux joueurs qui sont devenus Amoureux, et donc inséparables !",
      "gameMasterWillTapInLovePlayers": "Le Maître du Jeu va tapoter le dos des joueurs devenus Amoureux"
    },
    "GameOverCreateNewGameButton": {
      "createNewGameWithSamePlayers": "Voulez-vous créer une nouvelle partie avec les mêmes joueurs ?"
    },
    "GameLobbyHeaderPositionCoordinatorButton": {
      "positionCoordinator": "Position des joueurs"
    },
    "GameLobbyPositionCoordinator": {
      "positionCoordinator": "Position des joueurs"
    },
    "GameLobbyPositionCoordinatorSorter": {
      "leftNeighbors": "Voisins de gauche",
      "rightNeighbors": "Voisins de droite"
    },
    "GameLobbyPositionCoordinatorChart": {
      "checkPositionWithChartBelow": "Vérifiez la position des joueurs avec le graphique ci-dessous.",
      "canHoverOnNodes": "Vous pouvez survoler les parts pour voir les noms des joueurs qui peuvent être cachés."
    },
    "GameLobbyStartGameConfirmDialog": {
      "beforeStartingGame": "Avant de commencer la partie"
    },
    "GameLobbyStartGameConfirmDialogFooter": {
      "skipAndPlay": "Passer et jouer maintenant",
      "letsGo": "C'est parti !"
    },
    "GameLobbyStartGameConfirmDialogPlayersReady": {
      "doAllPlayersHaveRoleAndReady": "Tous les joueurs ont un rôle et sont prêts à jouer ?"
    },
    "GameLobbyStartGameConfirmDialogPlayersPositioned": {
      "playersPosition": "Position des joueurs",
      "someRolesArePositionDependant": "Certains rôles dépendent de la position des joueurs. Est-ce que tous les joueurs sont bien positionnés dans l'Assistant ?",
      "showMeHowToPositionPlayers": "Me montrer comment positionner les joueurs"
    },
    "GameIdiotIsSparedEvent": {
      "cantFindIdiot": "L'Idiot ne peut être trouvé… Veuillez continuer.",
      "playerDies": "{playerName} est mort ! Quelle tragédie… Il ou elle peut révéler son rôle aux autres joueurs.",
      "playerIsActuallyIdiot": "{playerName} est en fait l'Idiot du village !",
      "idiotIsSpared": "Les survivants ont pitié de lui, c'est un simplet après tout… Le village le laisse en vie mais il ne pourra plus voter pour le reste de la partie."
    },
    "GameLobbyOptionsHubRolesTabWerewolf": {
      "options": {
        "canEatEachOther": {
          "label": "Les Loups-Garous sont cannibales",
          "descriptions": {
            "yes": "Les Loups-Garous (mais aussi le Grand Méchant Loup) peuvent se dévorer entre eux.",
            "no": "Les Loups-Garous ne peuvent pas se dévorer entre eux."
          }
        }
      }
    },
     "GamePlaygroundFooterCountdown": {
      "remainingTimeToMeetEachOther": "Temps restant pour la rencontre",
      "remainingTimeToVote": "Temps restant pour voter",
      "remainingTimeToElectSheriff": "Temps restant pour l'élection du Maire",
      "meetEachOtherTimeIsOver": "Il est l'heure de se rendormir !",
      "voteTimeIsOver": "Il est l'heure de voter !",
      "electSheriffTimeIsOver": "Il est l'heure d'élire le Maire !"
    },
    "GameElderHasTakenRevengeEvent": {
      "cantFindElder": "L'Ancien ne peut être trouvé… Veuillez continuer.",
      "elderHasBeenMurderedByVillager": "L'Ancien a été éliminé par son propre camp !",
      "elderHasTakenRevenge": "Sa vengeance s'abat sur le Village ! Tous les joueurs du camp des Villageois perdent leur pouvoirs pour le reste de la partie."
    },
    "GameBearGrowlsOrSleepsEvent": {
      "bearGrowls": "L'ours grogne ! Un ou plusieurs Loups-Garous se trouvent à juste à côté du Montreur d'Ours…",
      "bearSleeps": "L'ours mange paisiblement son miel. Aucun Loup-Garou n'est juste à côté du Montreur d'Ours…"
    },
    "GameScandalmongerMarkIsActiveEvent": {
      "cantFindScandalmongerMarkedPlayer": "Le joueur marqué par le Corbeau ne peut être trouvé… Veuillez continuer.",
      "scandalmongerHasMarkedAPlayer": "La plume du Corbeau a été placée sur {playerName} !",
      "playerHasPenaltyForVotes": "Cette personne aura un vote supplémentaire contre elle lors du prochain vote. | Cette personne aura {penalty} votes supplémentaires contre elle lors du prochain vote."
    },
    "GameFoxMayHaveSniffedEvent": {
      "foxMayHaveSniffed": "Le Renard a peut-être reniflé un groupe de 3 joueurs.",
      "gameMasterWillTellIfPresentWerewolfInGroup": "Si c'est le cas, le Maître du Jeu va révéler au Renard s'il y a un Loup-Garou parmi le groupe de joueurs avec un pouce en l'air. Sinon, il donnera un pouce vers le bas.",
      "foxHaveSniffedWerewolf": "La phrase suivante ne peut pas être dite à voix haute : Le Renard a reniflé un Loup-Garou parmi le groupe de joueurs, le Maître du Jeu donne un pouce en l'air.",
      "foxDidNotSniffWerewolf": "La phrase suivante ne peut pas être dite à voix haute : Le Renard n'a pas reniflé de Loup-Garou parmi le groupe de joueurs, le Maître du Jeu donne un pouce vers le bas.",
      "foxIsPowerlessIfMissesWerewolf": "Si le Renard a choisi un groupe et n'a pas reniflé de Loup-Garou parmi le groupe de 3 joueurs, il perd ses pouvoirs pour le reste de la partie."
    },
    "GameLobbyHeaderAdditionalCardsManagerButton": {
      "additionalCards": "Cartes additionnelles"
    },
    "GameLobbyAdditionalCardsManager": {
      "additionalCards": "Cartes additionnelles"
    },
    "RecipientRoleAdditionalCardsDisclaimer": {
      "additionalCardsNotSetDisclaimer": "Veuillez choisir les cartes supplémentaires pour {definiteRecipientRoleName} ci-dessous",
      "additionalCardsSetDisclaimer": "{definiteRecipientRoleName} jouera avec une seule carte dans cette partie | {definiteRecipientRoleName} jouera avec {count} cartes dans cette partie"
    },
    "RecipientRoleAdditionalCardsMultiSelect": {
      "searchRole": "Rechercher un rôle",
      "noRoleFound": "Aucun rôle trouvé",
      "pickOneToFiveCards": "Choisissez une à cinq cartes"
    },
    "GameChooseCardPlaygroundAdditionalCard": {
      "chooseCardForRecipient": "Choisir la carte avec le rôle de {roleName} pour {recipientDefiniteName}"
    },
    "GameThiefMayHaveChosenCardEvent": {
      "cantFindThief": "Le Voleur ne peut être trouvé… Veuillez continuer.",
      "thiefMayHaveChosenCard": "Le Voleur a peut-être choisi une carte pour incarner un rôle pour le reste de la partie.",
      "gameMasterWillSwitchCardsIfThiefChoseCard": "Si c'est le cas, le Maître du Jeu va échanger la carte choisie avec la carte du Voleur et retirer les cartes restantes.",
      "thiefHasNotChosenCard": "Le Voleur n'a pas choisi de carte avec un rôle à incarner. Il restera le Voleur pour le reste de la partie.",
      "thiefHasChosenCard": "Le Voleur a choisi d'incarner {roleName} pour le reste de la partie !",
      "gameMasterCanTakeAwayRemainingCards": "Le Maître du Jeu peut retirer les cartes restantes.",
      "thiefChosenCardIsRevealed": "Dans cette partie spéciale, la carte choisie par le Voleur est révélée aux autres joueurs."
    },
    "RecipientRoleAdditionalCardsManager": {
      "cardsPlacedFaceDown": "La carte sera placée au centre de la table face cachée avant le début de la partie | Les cartes seront placées au centre de la table face cachée avant le début de la partie",
      "cardsPlacedFaceUp": "La carte sera placée au centre de la table face visible avant le début de la partie | Les cartes seront placées au centre de la table face visible avant le début de la partie"
    },
    "GameLobbyBeforeLeaveConfirmDialog": {
      "youStartedComposition": "Vous avez commencé la composition de la partie",
      "doYouWantToLeaveLobby": "Êtes-vous sûr de vouloir quitter la page ?",
      "iWantToLeave": "Oui, je veux partir",
      "stayInLobby": "Rester sur la page"
    },
    "GamePlayingBeforeLeaveConfirmDialog": {
      "gameIsStillPlaying": "La partie est toujours en cours",
      "doYouWantToLeaveGame": "Êtes-vous sûr de vouloir quitter le jeu ?",
      "iWantToLeave": "Oui, je veux partir",
      "stayInGame": "Rester dans le jeu"
    },
    "GameWildChildHasTransformedEvent": {
      "wildChildHasTransformed": "L'Enfant Sauvage s'est transformé en Loup-Garou car son modèle est mort !",
      "wildChildHasTransformedQuietly": "La phrase suivante ne peut pas être dite à voix haute et est seulement destinée au Maître du Jeu : L'Enfant Sauvage s'est transformé en Loup-Garou car son modèle est mort !"
    },
    "GameActorMayHaveChosenCardEvent": {
      "actorMayHaveChosenCard": "Le Comédien a peut-être choisi une carte à jouer pour ce tour.",
      "gameMasterTakeOutChosenCard": "Dans ce cas, le Maître du Jeu va retirer de la table la carte choisie par le Comédien "
    }
  }
}