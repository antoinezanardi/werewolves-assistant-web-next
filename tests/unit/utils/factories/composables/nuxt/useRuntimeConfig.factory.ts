import type { RuntimeConfig } from "nuxt/schema";

import { I18N_TEST_LOCALE } from "@modules/i18n/i18n.constants";

function createFakeRuntimeConfig(runtimeConfig: Partial<RuntimeConfig> = {}): RuntimeConfig {
  return {
    ...runtimeConfig,
    "app": {
      buildId: "test",
      baseURL: "",
      buildAssetsDir: "",
      cdnURL: "",
    },
    "public": {
      "defaultLocale": I18N_TEST_LOCALE,
      "werewolvesAssistantApi": { baseUrl: "http://127.0.0.1" },
      "i18n": {
        defaultLocale: I18N_TEST_LOCALE,
        baseUrl: "http://127.0.0.1",
        defaultDirection: "ltr",
        strategy: "prefix_except_default",
        lazy: false,
        routesNameSeparator: "",
        defaultLocaleRouteNameSuffix: "",
        skipSettingLocaleOnNavigate: false,
        differentDomains: false,
        rootRedirect: "root",
        trailingSlash: false,
        configLocales: [],
        detectBrowserLanguage: {
          useCookie: true,
          cookieKey: "i18n_redirected",
          alwaysRedirect: true,
          cookieCrossOrigin: true,
          cookieDomain: "",
          cookieSecure: true,
          fallbackLocale: "",
          redirectOn: "",
        },
        experimental: {
          localeDetector: "path",
          switchLocalePathLinkSSR: true,
          autoImportTranslationFunctions: false,
        },
        locales: {
          fr: {
            domain: "fr",
          },
          en: {
            domain: "en",
          },
        },
        multiDomainLocales: false,
      },
      "primevue": {
        components: [],
        directives: [],
        config: [],
        options: { ripple: true },
        composables: [],
        usePrimeVue: true,
        styles: [],
        injectStylesAsStringToTop: [],
        resolvePath: "",
        services: [],
        importPT: "",
        autoImport: false,
        importTheme: {
          from: "",
        },
        injectStylesAsString: [],
        loadStyles: true,
      },
      "nuxt-seo": {
        canonicalQueryWhitelist: [],
      },
      "nuxt-robots": {
        allow: [],
        blockNonSeoBots: false,
        credits: false,
        debug: false,
        enabled: false,
        groups: [],
        header: false,
        disallowNonIndexableRoutes: false,
        mergeWithRobotsTxtPath: false,
        metaTag: false,
        robotsDisabledValue: "",
        robotsEnabledValue: "",
        disallow: [],
        sitemap: ["localhost"],
      },
    },
    "nuxt-robots": {
      version: "",
      cacheControl: "max-age=14400, must-revalidate",
      usingNuxtContent: false,
      credits: false,
      debug: false,
      groups: [],
      header: false,
      robotsDisabledValue: "",
      robotsEnabledValue: "",
      sitemap: ["localhost"],
    },
    "nitro": {},
    "nuxt-site-config": {
      debug: false,
      stack: [{}],
      version: "",
    },
    "nuxt-simple-robots": {
      cacheControl: "",
      credits: false,
      debug: false,
      groups: [{}],
      header: false,
      robotsDisabledValue: "",
      robotsEnabledValue: "",
      sitemap: ["localhost"],
      usingNuxtContent: false,
      version: "",
    },
    "nuxt-og-image": {
      baseCacheKey: "",
      colorPreference: "",
      debug: false,
      defaults: {
        cacheMaxAgeSeconds: 0,
        component: "",
        emojis: "",
        extension: "",
        height: 0,
        renderer: "",
        width: 0,
      },
      fonts: [],
      hasNuxtIcon: false,
      isNuxtContentDocumentDriven: false,
      publicStoragePath: "",
      resvgOptions: undefined,
      satoriOptions: undefined,
      sharpOptions: undefined,
      version: "",
    },
    "sitemap": {
      autoLastmod: false,
      cacheMaxAgeSeconds: 0,
      credits: false,
      debug: false,
      defaultSitemapsChunkSize: 0,
      discoverImages: false,
      discoverVideos: false,
      excludeAppSources: [],
      isI18nMapped: false,
      isMultiSitemap: false,
      isNuxtContentDocumentDriven: false,
      minify: false,
      sitemapName: "",
      sitemapsPathPrefix: "",
      sortEntries: false,
      version: "",
      xsl: "",
      xslColumns: [{}],
      xslTips: false,
      sitemaps: {
        "sitemap.xml": {
          exclude: [],
          include: [],
          includeAppSources: false,
          route: "",
          sitemapName: "",
          defaults: false,
        },
      },
    },
  };
}

export { createFakeRuntimeConfig };