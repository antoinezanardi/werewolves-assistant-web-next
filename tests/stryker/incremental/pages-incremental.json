{
  "files": {
    "app/pages/index.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "139",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "The macro definePageMeta from Nuxt is breaking Stryker, so we ignore it.",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 33,
              "line": 99
            },
            "start": {
              "column": 16,
              "line": 99
            }
          }
        },
        {
          "id": "140",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "The macro definePageMeta from Nuxt is breaking Stryker, so we ignore it.",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 31,
              "line": 99
            },
            "start": {
              "column": 26,
              "line": 99
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"index-page\"\n    class=\"flex flex-col\"\n  >\n    <div class=\"flex flex-col grow items-center justify-center\">\n      <div class=\"flex justify-center w-full\">\n        <NuxtImg\n          v-tilt=\"{\n            'full-page-listening': true,\n            'scale': 1\n          }\"\n          :alt=\"$t('pages.index.werewolvesAssistantLogo')\"\n          class=\"!drop-shadow-2xl\"\n          placeholder=\"/svg/misc/ripples.svg\"\n          placeholder-class=\"md:w-[200px] md:h-[200px] w-[125px] h-[125px]\"\n          preload\n          sizes=\"sm:125 md:200 lg:200\"\n          src=\"/img/logo/square/werewolves-logo.webp\"\n        />\n      </div>\n\n      <div class=\"mb-16 mt-6 text-center w-full\">\n        <h1\n          id=\"title\"\n          class=\"!text-5xl !tracking-wider drop-shadow-2xl mt-0\"\n        >\n          {{ $t('shared.werewolvesAssistant') }}\n        </h1>\n\n        <h2\n          id=\"subtitle\"\n          class=\"!drop-shadow-2xl !font-medium !text-xl !w-full flex items-center justify-center md:gap-3 mt-6\"\n        >\n          <FontAwesomeIcon\n            class=\"md:w-auto text-2xl text-day w-2/12\"\n            icon=\"sun\"\n          />\n\n          <span>\n            {{ $t('pages.index.perfectToolForGameMasters') }}\n          </span>\n\n          <FontAwesomeIcon\n            class=\"md:w-auto text-2xl text-night w-2/12\"\n            icon=\"moon\"\n          />\n        </h2>\n      </div>\n\n      <NuxtLink\n        id=\"play-button\"\n        ref=\"playButton\"\n        class=\"flex justify-center lg:w-3/12 md:w-6/12 p-button p-button-raised w-full\"\n        to=\"/game-lobby\"\n      >\n        <FontAwesomeIcon\n          id=\"play-button-icon\"\n          class=\"absolute animate__animated fa-2x left-5 me-2\"\n          :class=\"{ 'animate__heartBeat': isPlayButtonHovered }\"\n          icon=\"circle-play\"\n        />\n\n        <span class=\"bold font-black fs-3 text-4xl tracking-widest uppercase\">\n          {{ $t('pages.index.play') }}\n        </span>\n      </NuxtLink>\n\n      <NuxtLink\n        id=\"about-button\"\n        ref=\"aboutButton\"\n        class=\"flex justify-center lg:w-3/12 md:w-6/12 mt-4 p-button p-button-secondary w-full\"\n        to=\"/about\"\n      >\n        <FontAwesomeIcon\n          id=\"about-button-icon\"\n          class=\"absolute animate__animated fa-2x left-5 me-2\"\n          :class=\"{ 'animate__rubberBand': isAboutButtonHovered }\"\n          icon=\"fa-regular fa-circle-question\"\n        />\n\n        <span class=\"text-xl\">\n          {{ $t('pages.index.about') }}\n        </span>\n      </NuxtLink>\n    </div>\n\n    <PrimeVueDivider/>\n\n    <IndexFooter class=\"mt-1\"/>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\n\nimport IndexFooter from \"~/components/pages/index/IndexFooter.vue\";\n\ndefinePageMeta({ layout: false });\n\nconst playButton = ref<HTMLAnchorElement | null>(null);\nconst aboutButton = ref<HTMLAnchorElement | null>(null);\n\nconst isPlayButtonHovered = useElementHover(playButton);\nconst isAboutButtonHovered = useElementHover(aboutButton);\n</script>\n\n<style lang=\"scss\" scoped>\n#index-page {\nbackground: radial-gradient(at 50% 40%, rgba(9, 21, 47, 0.8), transparent 60%),\n    radial-gradient(at 70% 20%, rgba(9, 21, 47, 0.6), transparent 70%),\n    radial-gradient(at 30% 80%, rgba(1, 10, 20, 0.8), transparent 80%),\n    #010a14;\n}\n</style>"
    },
    "app/app.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "2",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 40
            },
            "start": {
              "column": 12,
              "line": 40
            }
          }
        },
        {
          "id": "3",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 49
            },
            "start": {
              "column": 9,
              "line": 41
            }
          }
        },
        {
          "id": "4",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {},\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67"
          ],
          "location": {
            "end": {
              "column": 75,
              "line": 42
            },
            "start": {
              "column": 5,
              "line": 42
            }
          }
        },
        {
          "id": "5",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 42
            },
            "start": {
              "column": 13,
              "line": 42
            }
          }
        },
        {
          "id": "0",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"DefaultOgImage\",\n], but it was called with \"\"",
          "status": "Killed",
          "static": false,
          "testsCompleted": 3,
          "killedBy": [
            "64"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 37
            },
            "start": {
              "column": 24,
              "line": 37
            }
          }
        },
        {
          "id": "1",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 50
            },
            "start": {
              "column": 9,
              "line": 39
            }
          }
        },
        {
          "id": "8",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 43
            },
            "start": {
              "column": 13,
              "line": 43
            }
          }
        },
        {
          "id": "9",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 43
            },
            "start": {
              "column": 33,
              "line": 43
            }
          }
        },
        {
          "id": "10",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {},\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67"
          ],
          "location": {
            "end": {
              "column": 73,
              "line": 44
            },
            "start": {
              "column": 5,
              "line": 44
            }
          }
        },
        {
          "id": "11",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 44
            },
            "start": {
              "column": 13,
              "line": 44
            }
          }
        },
        {
          "id": "12",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67"
          ],
          "location": {
            "end": {
              "column": 70,
              "line": 44
            },
            "start": {
              "column": 39,
              "line": 44
            }
          }
        },
        {
          "id": "13",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {},\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67"
          ],
          "location": {
            "end": {
              "column": 73,
              "line": 45
            },
            "start": {
              "column": 5,
              "line": 45
            }
          }
        },
        {
          "id": "7",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {},\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 43
            },
            "start": {
              "column": 5,
              "line": 43
            }
          }
        },
        {
          "id": "6",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67"
          ],
          "location": {
            "end": {
              "column": 72,
              "line": 42
            },
            "start": {
              "column": 44,
              "line": 42
            }
          }
        },
        {
          "id": "16",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {},\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 46
            },
            "start": {
              "column": 5,
              "line": 46
            }
          }
        },
        {
          "id": "17",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 46
            },
            "start": {
              "column": 13,
              "line": 46
            }
          }
        },
        {
          "id": "18",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 46
            },
            "start": {
              "column": 33,
              "line": 46
            }
          }
        },
        {
          "id": "19",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {},\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 47
            },
            "start": {
              "column": 5,
              "line": 47
            }
          }
        },
        {
          "id": "20",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67"
          ],
          "location": {
            "end": {
              "column": 24,
              "line": 47
            },
            "start": {
              "column": 13,
              "line": 47
            }
          }
        },
        {
          "id": "21",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67"
          ],
          "location": {
            "end": {
              "column": 41,
              "line": 47
            },
            "start": {
              "column": 35,
              "line": 47
            }
          }
        },
        {
          "id": "22",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {},\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67"
          ],
          "location": {
            "end": {
              "column": 46,
              "line": 48
            },
            "start": {
              "column": 5,
              "line": 48
            }
          }
        },
        {
          "id": "23",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 48
            },
            "start": {
              "column": 13,
              "line": 48
            }
          }
        },
        {
          "id": "24",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 48
            },
            "start": {
              "column": 38,
              "line": 48
            }
          }
        },
        {
          "id": "14",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 45
            },
            "start": {
              "column": 13,
              "line": 45
            }
          }
        },
        {
          "id": "15",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67"
          ],
          "location": {
            "end": {
              "column": 71,
              "line": 45
            },
            "start": {
              "column": 34,
              "line": 45
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    class=\"h-full\"\n    :class=\"SCROLLBAR_STYLING_CLASSES\"\n  >\n    <NuxtRouteAnnouncer/>\n\n    <NuxtLayout>\n      <NuxtPage\n        class=\"h-full md:p-2 p-3\"\n      />\n    </NuxtLayout>\n\n    <PrimeVueToast\n      class=\"!max-w-x-screen-9/10\"\n      position=\"bottom-right\"\n    />\n\n    <NuxtPwaManifest/>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport \"reflect-metadata\";\n\nimport { useAudioStore } from \"~/stores/audio/useAudioStore\";\nimport { useRolesStore } from \"~/stores/role/useRolesStore\";\nimport { SCROLLBAR_STYLING_CLASSES } from \"~/utils/constants/html-classes.constants\";\n\nconst rolesStore = useRolesStore();\n\nconst audioStore = useAudioStore();\nconst { setHowlerAudioSettingsFromAudioStoreState } = audioStore;\n\nconst { t } = useI18n();\n\ndefineOgImageComponent(\"DefaultOgImage\");\n\nuseHead({\n  title: t(\"shared.werewolvesAssistant\"),\n  meta: [\n    { name: \"application-name\", content: t(\"shared.werewolvesAssistant\") },\n    { name: \"creator\", content: \"Antoine ZANARDI\" },\n    { name: \"description\", content: t(\"components.App.seoDescription\") },\n    { name: \"viewport\", content: \"width=device-width, initial-scale=1\" },\n    { name: \"charset\", content: \"utf-8\" },\n    { name: \"generator\", content: \"nuxt\" },\n    { name: \"color-scheme\", content: \"dark\" },\n  ],\n});\n\nvoid rolesStore.fetchAndSetRoles();\nsetHowlerAudioSettingsFromAudioStoreState();\n</script>"
    },
    "app/error.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "25",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Error Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "55"
          ],
          "coveredBy": [
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 46
            },
            "start": {
              "column": 20,
              "line": 46
            }
          }
        },
        {
          "id": "26",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Error Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "55"
          ],
          "coveredBy": [
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 55
            },
            "start": {
              "column": 43,
              "line": 50
            }
          }
        },
        {
          "id": "27",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'components.Error.pageNotFound' to be 'components.Error.unexpectedError' // Object.is equality",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "58"
          ],
          "coveredBy": [
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 51
            },
            "start": {
              "column": 7,
              "line": 51
            }
          }
        },
        {
          "id": "28",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Snapshot `Error Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "55"
          ],
          "coveredBy": [
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 51
            },
            "start": {
              "column": 7,
              "line": 51
            }
          }
        },
        {
          "id": "29",
          "mutatorName": "EqualityOperator",
          "replacement": "props.error.statusCode !== notFoundStatusCode",
          "statusReason": "Snapshot `Error Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "55"
          ],
          "coveredBy": [
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 51
            },
            "start": {
              "column": 7,
              "line": 51
            }
          }
        },
        {
          "id": "30",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Error Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "55"
          ],
          "coveredBy": [
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 53
            },
            "start": {
              "column": 54,
              "line": 51
            }
          }
        },
        {
          "id": "31",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Error Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "55"
          ],
          "coveredBy": [
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 45,
              "line": 52
            },
            "start": {
              "column": 14,
              "line": 52
            }
          }
        },
        {
          "id": "32",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be 'components.Error.unexpectedError' // Object.is equality",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "58"
          ],
          "coveredBy": [
            "58",
            "61"
          ],
          "location": {
            "end": {
              "column": 46,
              "line": 54
            },
            "start": {
              "column": 12,
              "line": 54
            }
          }
        },
        {
          "id": "33",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected \"spy\" to be called with arguments: [ ObjectContaining{…} ]\n\nReceived: \n\n  1st spy call:\n\n  Array [\n-   ObjectContaining {\n-     \"title\": ObjectContaining {\n-       \"value\": \"components.Error.pageNotFound\",\n-     },\n-   },\n+   Object {},\n  ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "56"
          ],
          "coveredBy": [
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 30,
              "line": 57
            },
            "start": {
              "column": 9,
              "line": 57
            }
          }
        },
        {
          "id": "34",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Error Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "55"
          ],
          "coveredBy": [
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 64
            },
            "start": {
              "column": 49,
              "line": 59
            }
          }
        },
        {
          "id": "35",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'components.Error.youAreLost' to be 'components.Error.notNormalTeamNotified' // Object.is equality",
          "status": "Killed",
          "static": false,
          "testsCompleted": 7,
          "killedBy": [
            "61"
          ],
          "coveredBy": [
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 60
            },
            "start": {
              "column": 7,
              "line": 60
            }
          }
        },
        {
          "id": "36",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Snapshot `Error Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "55"
          ],
          "coveredBy": [
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 60
            },
            "start": {
              "column": 7,
              "line": 60
            }
          }
        },
        {
          "id": "37",
          "mutatorName": "EqualityOperator",
          "replacement": "props.error.statusCode !== notFoundStatusCode",
          "statusReason": "Snapshot `Error Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "55"
          ],
          "coveredBy": [
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 60
            },
            "start": {
              "column": 7,
              "line": 60
            }
          }
        },
        {
          "id": "38",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Error Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "55"
          ],
          "coveredBy": [
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 62
            },
            "start": {
              "column": 54,
              "line": 60
            }
          }
        },
        {
          "id": "39",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Error Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "55"
          ],
          "coveredBy": [
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 61
            },
            "start": {
              "column": 14,
              "line": 61
            }
          }
        },
        {
          "id": "40",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be 'components.Error.notNormalTeamNotified' // Object.is equality",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "61"
          ],
          "coveredBy": [
            "58",
            "61"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 63
            },
            "start": {
              "column": 12,
              "line": 63
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"error-page\"\n    class=\"flex flex-col gap-2 h-full items-center justify-center p-4 w-full\"\n  >\n    <h1\n      id=\"error-title\"\n      class=\"!text-5xl text-center\"\n    >\n      {{ errorTitle }}\n    </h1>\n\n    <VueLottie\n      id=\"lottie-error\"\n      :animation-data=\"LottieError\"\n      :height=\"lottieSize\"\n      loop\n      :width=\"lottieSize\"\n    />\n\n    <h3\n      id=\"error-description\"\n      class=\"md:!text-2xl text-center text-xl\"\n    >\n      {{ errorDescription }}\n    </h3>\n\n    <BackToHomeButton\n      class=\"mt-4\"\n      icon=\"person-running\"\n      p-button-class=\"p-button-primary\"\n      text-key=\"components.Error.goBackToSafePlace\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport LottieError from \"~/assets/lottie/error.json\";\nimport BackToHomeButton from \"~/components/shared/buttons/BackToHomeButton/BackToHomeButton.vue\";\nimport type { ErrorProps } from \"~/types/error.types\";\n\nconst props = defineProps<ErrorProps>();\n\nconst notFoundStatusCode = 404;\n\nconst lottieSize = \"250px\";\n\nconst { t } = useI18n();\n\nconst errorTitle = computed<string>(() => {\n  if (props.error.statusCode === notFoundStatusCode) {\n    return t(\"components.Error.pageNotFound\");\n  }\n  return t(\"components.Error.unexpectedError\");\n});\n\nuseHead({ title: errorTitle });\n\nconst errorDescription = computed<string>(() => {\n  if (props.error.statusCode === notFoundStatusCode) {\n    return t(\"components.Error.youAreLost\");\n  }\n  return t(\"components.Error.notNormalTeamNotified\");\n});\n</script>"
    },
    "app/pages/about.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "41",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"pages.about.seoDescription\",\n        \"name\": \"description\",\n      },\n    ],\n    \"title\": \"pages.about.whyAnAssistant\",\n  },\n], but it was called with Object {}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "69"
          ],
          "coveredBy": [
            "68",
            "69",
            "70",
            "71"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 56
            },
            "start": {
              "column": 9,
              "line": 53
            }
          }
        },
        {
          "id": "42",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"pages.about.seoDescription\",\n        \"name\": \"description\",\n      },\n    ],\n    \"title\": \"pages.about.whyAnAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"pages.about.seoDescription\",\n      \"name\": \"description\",\n    },\n  ],\n  \"title\": \"\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "69"
          ],
          "coveredBy": [
            "68",
            "69",
            "70",
            "71"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 54
            },
            "start": {
              "column": 12,
              "line": 54
            }
          }
        },
        {
          "id": "43",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"pages.about.seoDescription\",\n        \"name\": \"description\",\n      },\n    ],\n    \"title\": \"pages.about.whyAnAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [],\n  \"title\": \"pages.about.whyAnAssistant\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "69"
          ],
          "coveredBy": [
            "68",
            "69",
            "70",
            "71"
          ],
          "location": {
            "end": {
              "column": 76,
              "line": 55
            },
            "start": {
              "column": 9,
              "line": 55
            }
          }
        },
        {
          "id": "44",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"pages.about.seoDescription\",\n        \"name\": \"description\",\n      },\n    ],\n    \"title\": \"pages.about.whyAnAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {},\n  ],\n  \"title\": \"pages.about.whyAnAssistant\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "69"
          ],
          "coveredBy": [
            "68",
            "69",
            "70",
            "71"
          ],
          "location": {
            "end": {
              "column": 75,
              "line": 55
            },
            "start": {
              "column": 10,
              "line": 55
            }
          }
        },
        {
          "id": "45",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"pages.about.seoDescription\",\n        \"name\": \"description\",\n      },\n    ],\n    \"title\": \"pages.about.whyAnAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"pages.about.seoDescription\",\n      \"name\": \"\",\n    },\n  ],\n  \"title\": \"pages.about.whyAnAssistant\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "69"
          ],
          "coveredBy": [
            "68",
            "69",
            "70",
            "71"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 55
            },
            "start": {
              "column": 18,
              "line": 55
            }
          }
        },
        {
          "id": "46",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"pages.about.seoDescription\",\n        \"name\": \"description\",\n      },\n    ],\n    \"title\": \"pages.about.whyAnAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"\",\n      \"name\": \"description\",\n    },\n  ],\n  \"title\": \"pages.about.whyAnAssistant\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "69"
          ],
          "coveredBy": [
            "68",
            "69",
            "70",
            "71"
          ],
          "location": {
            "end": {
              "column": 72,
              "line": 55
            },
            "start": {
              "column": 44,
              "line": 55
            }
          }
        }
      ],
      "source": "<template>\n  <div class=\"container h-full\">\n    <div class=\"flex items-center justify-center\">\n      <RoleImage\n        id=\"about-role-image-title\"\n        :alt=\"$t('pages.about.imageTitle')\"\n        definition=\"small\"\n        role-name=\"werewolf\"\n        sizes=\"75\"\n      />\n\n      <h1\n        id=\"about-title\"\n        class=\"ms-4\"\n      >\n        {{ $t(\"pages.about.whyAnAssistant\") }}\n      </h1>\n    </div>\n\n    <PrimeVueDivider/>\n\n    <AboutWerewolvesGame/>\n\n    <AboutWerewolvesAssistant class=\"mt-5\"/>\n\n    <AboutAvailableRoles class=\"mt-5\"/>\n\n    <AboutHowToContribute class=\"mt-5\"/>\n\n    <AboutCreator class=\"mt-5\"/>\n\n    <PrimeVueDivider/>\n\n    <div class=\"flex justify-center pb-3\">\n      <BackToHomeButton/>\n    </div>\n\n    <PrimeVueScrollTop/>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport AboutAvailableRoles from \"~/components/pages/about/AboutAvailableRoles/AboutAvailableRoles.vue\";\nimport AboutCreator from \"~/components/pages/about/AboutCreator.vue\";\nimport AboutHowToContribute from \"~/components/pages/about/AboutHowToContribute.vue\";\nimport AboutWerewolvesAssistant from \"~/components/pages/about/AboutWerewolvesAssistant.vue\";\nimport AboutWerewolvesGame from \"~/components/pages/about/AboutWerewolvesGame.vue\";\nimport BackToHomeButton from \"~/components/shared/buttons/BackToHomeButton/BackToHomeButton.vue\";\nimport RoleImage from \"~/components/shared/role/RoleImage/RoleImage.vue\";\n\nconst { t } = useI18n();\n\nuseHead({\n  title: t(\"pages.about.whyAnAssistant\"),\n  meta: [{ name: \"description\", content: t(\"pages.about.seoDescription\") }],\n});\n</script>"
    },
    "app/pages/game/[id].vue": {
      "language": "html",
      "mutants": [
        {
          "id": "52",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"noindex, nofollow\",\n        \"name\": \"robots\",\n      },\n    ],\n    \"title\": \"pages.game.playingGame\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"\",\n      \"name\": \"robots\",\n    },\n  ],\n  \"title\": \"pages.game.playingGame\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "33"
          ],
          "coveredBy": [
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45"
          ],
          "location": {
            "end": {
              "column": 56,
              "line": 73
            },
            "start": {
              "column": 37,
              "line": 73
            }
          }
        },
        {
          "id": "47",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"noindex, nofollow\",\n        \"name\": \"robots\",\n      },\n    ],\n    \"title\": \"pages.game.playingGame\",\n  },\n], but it was called with Object {}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "33"
          ],
          "coveredBy": [
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 74
            },
            "start": {
              "column": 9,
              "line": 71
            }
          }
        },
        {
          "id": "48",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"noindex, nofollow\",\n        \"name\": \"robots\",\n      },\n    ],\n    \"title\": \"pages.game.playingGame\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"noindex, nofollow\",\n      \"name\": \"robots\",\n    },\n  ],\n  \"title\": \"\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "33"
          ],
          "coveredBy": [
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 72
            },
            "start": {
              "column": 12,
              "line": 72
            }
          }
        },
        {
          "id": "50",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"noindex, nofollow\",\n        \"name\": \"robots\",\n      },\n    ],\n    \"title\": \"pages.game.playingGame\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {},\n  ],\n  \"title\": \"pages.game.playingGame\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "33"
          ],
          "coveredBy": [
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 73
            },
            "start": {
              "column": 10,
              "line": 73
            }
          }
        },
        {
          "id": "49",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"noindex, nofollow\",\n        \"name\": \"robots\",\n      },\n    ],\n    \"title\": \"pages.game.playingGame\",\n  },\n], but it was called with Object {\n  \"meta\": Array [],\n  \"title\": \"pages.game.playingGame\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "33"
          ],
          "coveredBy": [
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45"
          ],
          "location": {
            "end": {
              "column": 59,
              "line": 73
            },
            "start": {
              "column": 9,
              "line": 73
            }
          }
        },
        {
          "id": "51",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"noindex, nofollow\",\n        \"name\": \"robots\",\n      },\n    ],\n    \"title\": \"pages.game.playingGame\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"noindex, nofollow\",\n      \"name\": \"\",\n    },\n  ],\n  \"title\": \"pages.game.playingGame\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "33"
          ],
          "coveredBy": [
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 73
            },
            "start": {
              "column": 18,
              "line": 73
            }
          }
        },
        {
          "id": "54",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "static": false,
          "testsCompleted": 9,
          "killedBy": [
            "40"
          ],
          "coveredBy": [
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 83
            },
            "start": {
              "column": 63,
              "line": 79
            }
          }
        },
        {
          "id": "53",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "static": false,
          "testsCompleted": 9,
          "killedBy": [
            "40"
          ],
          "coveredBy": [
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 86
            },
            "start": {
              "column": 63,
              "line": 78
            }
          }
        },
        {
          "id": "55",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "43"
          ],
          "coveredBy": [
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 93
            },
            "start": {
              "column": 57,
              "line": 88
            }
          }
        },
        {
          "id": "56",
          "mutatorName": "BooleanLiteral",
          "replacement": "gameFeedbackSubmitter.value",
          "statusReason": "Mocked error",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "43"
          ],
          "coveredBy": [
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 89
            },
            "start": {
              "column": 7,
              "line": 89
            }
          }
        },
        {
          "id": "57",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Mocked error",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "43"
          ],
          "coveredBy": [
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 89
            },
            "start": {
              "column": 7,
              "line": 89
            }
          }
        },
        {
          "id": "58",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "44"
          ],
          "coveredBy": [
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 89
            },
            "start": {
              "column": 7,
              "line": 89
            }
          }
        },
        {
          "id": "59",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "44"
          ],
          "coveredBy": [
            "44"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 91
            },
            "start": {
              "column": 37,
              "line": 89
            }
          }
        },
        {
          "id": "60",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"Game Feedback Submitter is not defined\",\n], but it was called with \"\"",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "44"
          ],
          "coveredBy": [
            "44"
          ],
          "location": {
            "end": {
              "column": 63,
              "line": 90
            },
            "start": {
              "column": 23,
              "line": 90
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-page\"\n    class=\"container-fluid\"\n  >\n    <div\n      v-if=\"fetchingGameStatus === 'pending'\"\n      id=\"loading-game-container\"\n      class=\"flex flex-col h-full items-center justify-center\"\n    >\n      <TextProgressSpinner\n        id=\"loading-game-spinner\"\n        :text=\"$t('pages.game.loadingGame')\"\n      />\n    </div>\n\n    <GameNotFound\n      v-else-if=\"fetchingGameStatus === 'error'\"\n      id=\"game-not-found\"\n      class=\"h-full\"\n    />\n\n    <div\n      v-else\n      class=\"h-full\"\n    >\n      <Transition\n        mode=\"out-in\"\n        name=\"fade\"\n      >\n        <Component\n          :is=\"gameStatusComponentToRender\"\n          :key=\"game.status\"\n          class=\"h-full\"\n          @game-feedback-submitter-button-click=\"onClickFromGameFeedbackSubmitterButton\"\n        />\n      </Transition>\n\n      <GameFeedbackSubmitter ref=\"gameFeedbackSubmitter\"/>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { Component } from \"vue\";\nimport { storeToRefs } from \"pinia\";\n\nimport GameCanceled from \"~/components/pages/game/GameCanceled/GameCanceled.vue\";\nimport type { GameFeedbackSubmitterExposed } from \"~/components/pages/game/GameFeedbackSubmitter/game-feedback-submitter.types\";\nimport GameFeedbackSubmitter from \"~/components/pages/game/GameFeedbackSubmitter/GameFeedbackSubmitter.vue\";\nimport GameNotFound from \"~/components/pages/game/GameNotFound/GameNotFound.vue\";\nimport GameOver from \"~/components/pages/game/GameOver/GameOver.vue\";\nimport GamePlaying from \"~/components/pages/game/GamePlaying/GamePlaying.vue\";\nimport TextProgressSpinner from \"~/components/shared/misc/TextProgressSpinner/TextProgressSpinner.vue\";\nimport type { GameStatus } from \"~/composables/api/game/types/game.types\";\nimport { useAudioStore } from \"~/stores/audio/useAudioStore\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\n\nconst route = useRoute();\nconst gameStore = useGameStore();\nconst { fetchAndSetGame } = gameStore;\nconst { game, fetchingGameStatus } = storeToRefs(gameStore);\n\nconst gameFeedbackSubmitter = ref<GameFeedbackSubmitterExposed | null>(null);\n\nconst audioStore = useAudioStore();\nconst { loadAllAudios, fadeOutPlayingBackgroundAudio } = audioStore;\n\nconst { t } = useI18n();\n\nuseHead({\n  title: t(\"pages.game.playingGame\"),\n  meta: [{ name: \"robots\", content: \"noindex, nofollow\" }],\n});\n\nconst { id } = route.params;\n\nconst gameStatusComponentToRender = computed<Component>(() => {\n  const gameStatusComponents: Record<GameStatus, Component> = {\n    playing: GamePlaying,\n    over: GameOver,\n    canceled: GameCanceled,\n  };\n\n  return gameStatusComponents[game.value.status];\n});\n\nfunction onClickFromGameFeedbackSubmitterButton(): void {\n  if (!gameFeedbackSubmitter.value) {\n    throw createError(\"Game Feedback Submitter is not defined\");\n  }\n  gameFeedbackSubmitter.value.showGameFeedbackSubmitter();\n}\n\nconst gameId = Array.isArray(id) ? id[0] : id;\nvoid fetchAndSetGame(gameId);\nloadAllAudios();\n\nonUnmounted(fadeOutPlayingBackgroundAudio);\n</script>"
    },
    "app/pages/game-lobby.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "61",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"pages.gameLobby.seoDescription\",\n        \"name\": \"description\",\n      },\n    ],\n    \"title\": \"pages.gameLobby.startGame\",\n  },\n], but it was called with Object {}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "1"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 93
            },
            "start": {
              "column": 9,
              "line": 90
            }
          }
        },
        {
          "id": "67",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "8"
          ],
          "coveredBy": [
            "8",
            "9",
            "10"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 103
            },
            "start": {
              "column": 91,
              "line": 95
            }
          }
        },
        {
          "id": "62",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"pages.gameLobby.seoDescription\",\n        \"name\": \"description\",\n      },\n    ],\n    \"title\": \"pages.gameLobby.startGame\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"pages.gameLobby.seoDescription\",\n      \"name\": \"description\",\n    },\n  ],\n  \"title\": \"\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "1"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 91
            },
            "start": {
              "column": 12,
              "line": 91
            }
          }
        },
        {
          "id": "63",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"pages.gameLobby.seoDescription\",\n        \"name\": \"description\",\n      },\n    ],\n    \"title\": \"pages.gameLobby.startGame\",\n  },\n], but it was called with Object {\n  \"meta\": Array [],\n  \"title\": \"pages.gameLobby.startGame\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "1"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31"
          ],
          "location": {
            "end": {
              "column": 80,
              "line": 92
            },
            "start": {
              "column": 9,
              "line": 92
            }
          }
        },
        {
          "id": "64",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"pages.gameLobby.seoDescription\",\n        \"name\": \"description\",\n      },\n    ],\n    \"title\": \"pages.gameLobby.startGame\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {},\n  ],\n  \"title\": \"pages.gameLobby.startGame\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "1"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31"
          ],
          "location": {
            "end": {
              "column": 79,
              "line": 92
            },
            "start": {
              "column": 10,
              "line": 92
            }
          }
        },
        {
          "id": "65",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"pages.gameLobby.seoDescription\",\n        \"name\": \"description\",\n      },\n    ],\n    \"title\": \"pages.gameLobby.startGame\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"pages.gameLobby.seoDescription\",\n      \"name\": \"\",\n    },\n  ],\n  \"title\": \"pages.gameLobby.startGame\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "1"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 92
            },
            "start": {
              "column": 18,
              "line": 92
            }
          }
        },
        {
          "id": "66",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"pages.gameLobby.seoDescription\",\n        \"name\": \"description\",\n      },\n    ],\n    \"title\": \"pages.gameLobby.startGame\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"\",\n      \"name\": \"description\",\n    },\n  ],\n  \"title\": \"pages.gameLobby.startGame\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "1"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31"
          ],
          "location": {
            "end": {
              "column": 76,
              "line": 92
            },
            "start": {
              "column": 44,
              "line": 92
            }
          }
        },
        {
          "id": "68",
          "mutatorName": "BooleanLiteral",
          "replacement": "gameLobbyRolePicker.value",
          "statusReason": "Mocked error",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "8"
          ],
          "coveredBy": [
            "8",
            "9",
            "10"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 96
            },
            "start": {
              "column": 7,
              "line": 96
            }
          }
        },
        {
          "id": "69",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Mocked error",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "8"
          ],
          "coveredBy": [
            "8",
            "9",
            "10"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 96
            },
            "start": {
              "column": 7,
              "line": 96
            }
          }
        },
        {
          "id": "70",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 3,
          "killedBy": [
            "10"
          ],
          "coveredBy": [
            "8",
            "9",
            "10"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 96
            },
            "start": {
              "column": 7,
              "line": 96
            }
          }
        },
        {
          "id": "71",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "10"
          ],
          "coveredBy": [
            "10"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 98
            },
            "start": {
              "column": 35,
              "line": 96
            }
          }
        },
        {
          "id": "72",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"Game Lobby Role Picker is not defined\",\n], but it was called with \"\"",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "10"
          ],
          "coveredBy": [
            "10"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 97
            },
            "start": {
              "column": 23,
              "line": 97
            }
          }
        },
        {
          "id": "73",
          "mutatorName": "BooleanLiteral",
          "replacement": "player",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "8"
          ],
          "coveredBy": [
            "8",
            "9"
          ],
          "location": {
            "end": {
              "column": 14,
              "line": 99
            },
            "start": {
              "column": 7,
              "line": 99
            }
          }
        },
        {
          "id": "74",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "8"
          ],
          "coveredBy": [
            "8",
            "9"
          ],
          "location": {
            "end": {
              "column": 14,
              "line": 99
            },
            "start": {
              "column": 7,
              "line": 99
            }
          }
        },
        {
          "id": "75",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      undefined,\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "9"
          ],
          "coveredBy": [
            "8",
            "9"
          ],
          "location": {
            "end": {
              "column": 14,
              "line": 99
            },
            "start": {
              "column": 7,
              "line": 99
            }
          }
        },
        {
          "id": "76",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      undefined,\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "9"
          ],
          "coveredBy": [
            "9"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 101
            },
            "start": {
              "column": 16,
              "line": 99
            }
          }
        },
        {
          "id": "77",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "11"
          ],
          "coveredBy": [
            "11",
            "12",
            "29"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 110
            },
            "start": {
              "column": 62,
              "line": 105
            }
          }
        },
        {
          "id": "78",
          "mutatorName": "BooleanLiteral",
          "replacement": "gameLobbyOptionsHub.value",
          "statusReason": "Mocked error",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "11"
          ],
          "coveredBy": [
            "11",
            "12",
            "29"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 106
            },
            "start": {
              "column": 7,
              "line": 106
            }
          }
        },
        {
          "id": "79",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Mocked error",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "11"
          ],
          "coveredBy": [
            "11",
            "12",
            "29"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 106
            },
            "start": {
              "column": 7,
              "line": 106
            }
          }
        },
        {
          "id": "80",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "12"
          ],
          "coveredBy": [
            "11",
            "12",
            "29"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 106
            },
            "start": {
              "column": 7,
              "line": 106
            }
          }
        },
        {
          "id": "81",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "12"
          ],
          "coveredBy": [
            "12"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 108
            },
            "start": {
              "column": 35,
              "line": 106
            }
          }
        },
        {
          "id": "82",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"Game Lobby Options Hub is not defined\",\n], but it was called with \"\"",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "12"
          ],
          "coveredBy": [
            "12"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 107
            },
            "start": {
              "column": 23,
              "line": 107
            }
          }
        },
        {
          "id": "83",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "13"
          ],
          "coveredBy": [
            "13",
            "14",
            "21"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 117
            },
            "start": {
              "column": 70,
              "line": 112
            }
          }
        },
        {
          "id": "84",
          "mutatorName": "BooleanLiteral",
          "replacement": "gameLobbyPositionCoordinator.value",
          "statusReason": "Mocked error",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "13"
          ],
          "coveredBy": [
            "13",
            "14",
            "21"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 113
            },
            "start": {
              "column": 7,
              "line": 113
            }
          }
        },
        {
          "id": "85",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Mocked error",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "13"
          ],
          "coveredBy": [
            "13",
            "14",
            "21"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 113
            },
            "start": {
              "column": 7,
              "line": 113
            }
          }
        },
        {
          "id": "86",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "14"
          ],
          "coveredBy": [
            "13",
            "14",
            "21"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 113
            },
            "start": {
              "column": 7,
              "line": 113
            }
          }
        },
        {
          "id": "87",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "14"
          ],
          "coveredBy": [
            "14"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 115
            },
            "start": {
              "column": 44,
              "line": 113
            }
          }
        },
        {
          "id": "88",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"Game Lobby Position Coordinator is not defined\",\n], but it was called with \"\"",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "14"
          ],
          "coveredBy": [
            "14"
          ],
          "location": {
            "end": {
              "column": 71,
              "line": 114
            },
            "start": {
              "column": 23,
              "line": 114
            }
          }
        },
        {
          "id": "89",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "15"
          ],
          "coveredBy": [
            "15",
            "16",
            "24",
            "29"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 124
            },
            "start": {
              "column": 73,
              "line": 119
            }
          }
        },
        {
          "id": "90",
          "mutatorName": "BooleanLiteral",
          "replacement": "gameLobbyAdditionalCardsManager.value",
          "statusReason": "Mocked error",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "15"
          ],
          "coveredBy": [
            "15",
            "16",
            "24",
            "29"
          ],
          "location": {
            "end": {
              "column": 45,
              "line": 120
            },
            "start": {
              "column": 7,
              "line": 120
            }
          }
        },
        {
          "id": "91",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Mocked error",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "15"
          ],
          "coveredBy": [
            "15",
            "16",
            "24",
            "29"
          ],
          "location": {
            "end": {
              "column": 45,
              "line": 120
            },
            "start": {
              "column": 7,
              "line": 120
            }
          }
        },
        {
          "id": "92",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "16"
          ],
          "coveredBy": [
            "15",
            "16",
            "24",
            "29"
          ],
          "location": {
            "end": {
              "column": 45,
              "line": 120
            },
            "start": {
              "column": 7,
              "line": 120
            }
          }
        },
        {
          "id": "93",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "16"
          ],
          "coveredBy": [
            "16"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 122
            },
            "start": {
              "column": 47,
              "line": 120
            }
          }
        },
        {
          "id": "95",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "17"
          ],
          "coveredBy": [
            "17",
            "18"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 131
            },
            "start": {
              "column": 65,
              "line": 126
            }
          }
        },
        {
          "id": "94",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"Game Lobby Additional Cards Manager is not defined\",\n], but it was called with \"\"",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "16"
          ],
          "coveredBy": [
            "16"
          ],
          "location": {
            "end": {
              "column": 75,
              "line": 121
            },
            "start": {
              "column": 23,
              "line": 121
            }
          }
        },
        {
          "id": "96",
          "mutatorName": "BooleanLiteral",
          "replacement": "gameLobbyGroupOrganizer.value",
          "statusReason": "Mocked error",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "17"
          ],
          "coveredBy": [
            "17",
            "18"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 127
            },
            "start": {
              "column": 7,
              "line": 127
            }
          }
        },
        {
          "id": "97",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Mocked error",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "17"
          ],
          "coveredBy": [
            "17",
            "18"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 127
            },
            "start": {
              "column": 7,
              "line": 127
            }
          }
        },
        {
          "id": "98",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "17",
            "18"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 127
            },
            "start": {
              "column": 7,
              "line": 127
            }
          }
        },
        {
          "id": "100",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"Game Lobby Group Organizer is not defined\",\n], but it was called with \"\"",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "18"
          ],
          "location": {
            "end": {
              "column": 66,
              "line": 128
            },
            "start": {
              "column": 23,
              "line": 128
            }
          }
        },
        {
          "id": "99",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "18"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 129
            },
            "start": {
              "column": 39,
              "line": 127
            }
          }
        },
        {
          "id": "101",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "19",
            "20",
            "21"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 142
            },
            "start": {
              "column": 65,
              "line": 133
            }
          }
        },
        {
          "id": "102",
          "mutatorName": "BooleanLiteral",
          "replacement": "gameLobbyHeader.value",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "19",
            "20",
            "21"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 134
            },
            "start": {
              "column": 7,
              "line": 134
            }
          }
        },
        {
          "id": "103",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Mocked error",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "20"
          ],
          "coveredBy": [
            "19",
            "20",
            "21"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 134
            },
            "start": {
              "column": 7,
              "line": 134
            }
          }
        },
        {
          "id": "104",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "19",
            "20",
            "21"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 134
            },
            "start": {
              "column": 7,
              "line": 134
            }
          }
        },
        {
          "id": "105",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "19"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 136
            },
            "start": {
              "column": 31,
              "line": 134
            }
          }
        },
        {
          "id": "106",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"Game Lobby Header is not defined\",\n], but it was called with \"\"",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "19"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 135
            },
            "start": {
              "column": 23,
              "line": 135
            }
          }
        },
        {
          "id": "107",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "21"
          ],
          "coveredBy": [
            "21"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 141
            },
            "start": {
              "column": 20,
              "line": 139
            }
          }
        },
        {
          "id": "108",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "22"
          ],
          "coveredBy": [
            "22",
            "23",
            "24",
            "25",
            "26"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 153
            },
            "start": {
              "column": 64,
              "line": 144
            }
          }
        },
        {
          "id": "109",
          "mutatorName": "BooleanLiteral",
          "replacement": "gameLobbyHeader.value",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "22"
          ],
          "coveredBy": [
            "22",
            "23",
            "24",
            "25",
            "26"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 145
            },
            "start": {
              "column": 7,
              "line": 145
            }
          }
        },
        {
          "id": "110",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Mocked error",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "23"
          ],
          "coveredBy": [
            "22",
            "23",
            "24",
            "25",
            "26"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 145
            },
            "start": {
              "column": 7,
              "line": 145
            }
          }
        },
        {
          "id": "111",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "22"
          ],
          "coveredBy": [
            "22",
            "23",
            "24",
            "25",
            "26"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 145
            },
            "start": {
              "column": 7,
              "line": 145
            }
          }
        },
        {
          "id": "112",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "22"
          ],
          "coveredBy": [
            "22",
            "25"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 147
            },
            "start": {
              "column": 31,
              "line": 145
            }
          }
        },
        {
          "id": "114",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "24"
          ],
          "coveredBy": [
            "24",
            "29"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 152
            },
            "start": {
              "column": 20,
              "line": 150
            }
          }
        },
        {
          "id": "113",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"Game Lobby Header is not defined\",\n], but it was called with \"\"",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "22"
          ],
          "coveredBy": [
            "22",
            "25"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 146
            },
            "start": {
              "column": 23,
              "line": 146
            }
          }
        },
        {
          "id": "115",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "27"
          ],
          "coveredBy": [
            "27",
            "28",
            "29"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 164
            },
            "start": {
              "column": 49,
              "line": 155
            }
          }
        },
        {
          "id": "116",
          "mutatorName": "BooleanLiteral",
          "replacement": "gameLobbyHeader.value",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "27"
          ],
          "coveredBy": [
            "27",
            "28",
            "29"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 156
            },
            "start": {
              "column": 7,
              "line": 156
            }
          }
        },
        {
          "id": "117",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Mocked error",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "28"
          ],
          "coveredBy": [
            "27",
            "28",
            "29"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 156
            },
            "start": {
              "column": 7,
              "line": 156
            }
          }
        },
        {
          "id": "118",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "27"
          ],
          "coveredBy": [
            "27",
            "28",
            "29"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 156
            },
            "start": {
              "column": 7,
              "line": 156
            }
          }
        },
        {
          "id": "119",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "27"
          ],
          "coveredBy": [
            "27"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 158
            },
            "start": {
              "column": 31,
              "line": 156
            }
          }
        },
        {
          "id": "120",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"Game Lobby Header is not defined\",\n], but it was called with \"\"",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "27"
          ],
          "coveredBy": [
            "27"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 157
            },
            "start": {
              "column": 23,
              "line": 157
            }
          }
        },
        {
          "id": "121",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "29"
          ],
          "coveredBy": [
            "29"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 163
            },
            "start": {
              "column": 20,
              "line": 161
            }
          }
        },
        {
          "id": "122",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 31,
          "killedBy": [
            "30"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 177
            },
            "start": {
              "column": 45,
              "line": 166
            }
          }
        },
        {
          "id": "124",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 31,
          "killedBy": [
            "30"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 168
            },
            "start": {
              "column": 7,
              "line": 168
            }
          }
        },
        {
          "id": "128",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Array [\n    _CreateGamePlayerDto {\n      \"group\": undefined,\n      \"name\": \"Antoine\",\n      \"role\": _CreateGamePlayerRoleDto {\n        \"name\": undefined,\n      },\n      \"side\": _CreateGamePlayerSideDto {\n        \"current\": undefined,\n        \"original\": undefined,\n      },\n    },\n    _CreateGamePlayerDto {\n      \"group\": undefined,\n      \"name\": \"Benoit\",\n      \"role\": _CreateGamePlayerRoleDto {\n        \"name\": undefined,\n      },\n      \"side\": _CreateGamePlayerSideDto {\n        \"current\": undefined,\n        \"original\": undefined,\n      },\n    },\n    _CreateGamePlayerDto {\n      \"group\": undefined,\n      \"name\": \"Corentin\",\n      \"role\": _CreateGamePlayerRoleDto {\n        \"name\": undefined,\n      },\n      \"side\": _CreateGamePlayerSideDto {\n        \"current\": undefined,\n        \"original\": undefined,\n      },\n    },\n  ],\n], but it was called with Array [\n  undefined,\n  undefined,\n  undefined,\n]",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "30"
          ],
          "coveredBy": [
            "30"
          ],
          "location": {
            "end": {
              "column": 5,
              "line": 176
            },
            "start": {
              "column": 73,
              "line": 172
            }
          }
        },
        {
          "id": "126",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 31,
          "killedBy": [
            "30"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 168
            },
            "start": {
              "column": 29,
              "line": 168
            }
          }
        },
        {
          "id": "129",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Array [\n    _CreateGamePlayerDto {\n      \"group\": undefined,\n      \"name\": \"Antoine\",\n      \"role\": _CreateGamePlayerRoleDto {\n        \"name\": undefined,\n      },\n      \"side\": _CreateGamePlayerSideDto {\n        \"current\": undefined,\n        \"original\": undefined,\n      },\n    },\n    _CreateGamePlayerDto {\n      \"group\": undefined,\n      \"name\": \"Benoit\",\n      \"role\": _CreateGamePlayerRoleDto {\n        \"name\": undefined,\n      },\n      \"side\": _CreateGamePlayerSideDto {\n        \"current\": undefined,\n        \"original\": undefined,\n      },\n    },\n    _CreateGamePlayerDto {\n      \"group\": undefined,\n      \"name\": \"Corentin\",\n      \"role\": _CreateGamePlayerRoleDto {\n        \"name\": undefined,\n      },\n      \"side\": _CreateGamePlayerSideDto {\n        \"current\": undefined,\n        \"original\": undefined,\n      },\n    },\n  ],\n], but it was called with Array [\n  Object {},\n  Object {},\n  Object {},\n]",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "30"
          ],
          "coveredBy": [
            "30"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 176
            },
            "start": {
              "column": 92,
              "line": 172
            }
          }
        },
        {
          "id": "130",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "2"
          ],
          "coveredBy": [
            "2",
            "21"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 185
            },
            "start": {
              "column": 43,
              "line": 179
            }
          }
        },
        {
          "id": "131",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"detail\": \"pages.gameLobby.smallScreenWarning\",\n    \"life\": 7500,\n    \"summary\": \"pages.gameLobby.smallScreenDetected\",\n  },\n], but it was called with Object {}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "2"
          ],
          "coveredBy": [
            "2",
            "21"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 184
            },
            "start": {
              "column": 16,
              "line": 180
            }
          }
        },
        {
          "id": "132",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"detail\": \"pages.gameLobby.smallScreenWarning\",\n    \"life\": 7500,\n    \"summary\": \"pages.gameLobby.smallScreenDetected\",\n  },\n], but it was called with Object {\n  \"detail\": \"pages.gameLobby.smallScreenWarning\",\n  \"life\": 7500,\n  \"summary\": \"\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "2"
          ],
          "coveredBy": [
            "2",
            "21"
          ],
          "location": {
            "end": {
              "column": 53,
              "line": 181
            },
            "start": {
              "column": 16,
              "line": 181
            }
          }
        },
        {
          "id": "133",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"detail\": \"pages.gameLobby.smallScreenWarning\",\n    \"life\": 7500,\n    \"summary\": \"pages.gameLobby.smallScreenDetected\",\n  },\n], but it was called with Object {\n  \"detail\": \"\",\n  \"life\": 7500,\n  \"summary\": \"pages.gameLobby.smallScreenDetected\",\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "2"
          ],
          "coveredBy": [
            "2",
            "21"
          ],
          "location": {
            "end": {
              "column": 51,
              "line": 182
            },
            "start": {
              "column": 15,
              "line": 182
            }
          }
        },
        {
          "id": "134",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 3,
          "killedBy": [
            "2"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 199
            },
            "start": {
              "column": 17,
              "line": 192
            }
          }
        },
        {
          "id": "135",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 4 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 3,
          "killedBy": [
            "2"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 193
            },
            "start": {
              "column": 7,
              "line": 193
            }
          }
        },
        {
          "id": "136",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 3,
          "killedBy": [
            "2"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 193
            },
            "start": {
              "column": 7,
              "line": 193
            }
          }
        },
        {
          "id": "137",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "2"
          ],
          "coveredBy": [
            "2",
            "4"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 198
            },
            "start": {
              "column": 40,
              "line": 193
            }
          }
        },
        {
          "id": "138",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "2"
          ],
          "coveredBy": [
            "2",
            "21"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 197
            },
            "start": {
              "column": 22,
              "line": 195
            }
          }
        },
        {
          "id": "123",
          "mutatorName": "BooleanLiteral",
          "replacement": "Object.hasOwn(query, \"playerNames\")",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "0"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 168
            },
            "start": {
              "column": 7,
              "line": 168
            }
          }
        },
        {
          "id": "125",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "0"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 168
            },
            "start": {
              "column": 7,
              "line": 168
            }
          }
        },
        {
          "id": "127",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "0"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 170
            },
            "start": {
              "column": 45,
              "line": 168
            }
          }
        }
      ],
      "source": "<template>\n  <div class=\"flex flex-col\">\n    <GameLobbyHeader\n      id=\"game-lobby-header\"\n      ref=\"gameLobbyHeader\"\n      @additional-cards-manager-button-click=\"onAdditionalCardsButtonManagerClickFromGameLobbyHeader\"\n      @game-options-button-click=\"onGameOptionsButtonClickFromGameLobbyHeader\"\n      @group-organizer-button-click=\"onGroupOrganizerButtonClickFromGameLobbyHeader\"\n      @position-coordinator-button-click=\"onPositionCoordinatorButtonClickFromGameLobbyHeader\"\n    />\n\n    <PrimeVueDivider/>\n\n    <GameLobbyPlayersParty\n      id=\"game-lobby-players-party\"\n      class=\"!overflow-x-hidden flex-auto overflow-y-auto scrollbar-thin\"\n      @pick-role-for-player=\"onPickRoleForPlayerFromGameLobbyPlayersParty\"\n    />\n\n    <PrimeVueDivider/>\n\n    <GameLobbyFooter\n      id=\"game-lobby-footer\"\n      @reject-actor-additional-cards-placed-step=\"onRejectThiefOrActorAdditionalCardsPlacedStep\"\n      @reject-game-options-changed-step=\"onRejectGameOptionsChangedStep\"\n      @reject-players-position-step=\"onRejectPlayersPositionStepFromGameLobbyFooter\"\n      @reject-thief-additional-cards-placed-step=\"onRejectThiefOrActorAdditionalCardsPlacedStep\"\n    />\n\n    <ClientOnly>\n      <GameLobbyRolePicker ref=\"gameLobbyRolePicker\"/>\n\n      <GameLobbyOptionsHub ref=\"gameLobbyOptionsHub\"/>\n\n      <GameLobbyPositionCoordinator ref=\"gameLobbyPositionCoordinator\"/>\n\n      <GameLobbyAdditionalCardsManager ref=\"gameLobbyAdditionalCardsManager\"/>\n\n      <GameLobbyGroupOrganizer ref=\"gameLobbyGroupOrganizer\"/>\n\n      <GameLobbyBeforeLeaveConfirmDialog/>\n    </ClientOnly>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { GameLobbyAdditionalCardsManagerExposed } from \"~/components/pages/game-lobby/GameLobbyAdditionalCardsManager/game-lobby-additional-cards-manager.types\";\nimport GameLobbyAdditionalCardsManager from \"~/components/pages/game-lobby/GameLobbyAdditionalCardsManager/GameLobbyAdditionalCardsManager.vue\";\nimport GameLobbyBeforeLeaveConfirmDialog from \"~/components/pages/game-lobby/GameLobbyBeforeLeaveConfirmDialog/GameLobbyBeforeLeaveConfirmDialog.vue\";\nimport GameLobbyFooter from \"~/components/pages/game-lobby/GameLobbyFooter/GameLobbyFooter.vue\";\nimport type { GameLobbyGroupOrganizerExposed } from \"~/components/pages/game-lobby/GameLobbyGroupOrganizer/game-lobby-group-organizer.types\";\nimport GameLobbyGroupOrganizer from \"~/components/pages/game-lobby/GameLobbyGroupOrganizer/GameLobbyGroupOrganizer.vue\";\nimport type { GameLobbyHeaderExposed } from \"~/components/pages/game-lobby/GameLobbyHeader/game-lobby-header.types\";\nimport GameLobbyHeader from \"~/components/pages/game-lobby/GameLobbyHeader/GameLobbyHeader.vue\";\nimport type { GameLobbyOptionsHubExposed } from \"~/components/pages/game-lobby/GameLobbyOptionsHub/game-lobby-options-hub.types\";\nimport GameLobbyOptionsHub from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHub.vue\";\nimport GameLobbyPlayersParty from \"~/components/pages/game-lobby/GameLobbyPlayersParty/GameLobbyPlayersParty.vue\";\nimport type { GameLobbyPositionCoordinatorExposed } from \"~/components/pages/game-lobby/GameLobbyPositionCoordinator/game-lobby-position-coordinator.types\";\nimport GameLobbyPositionCoordinator from \"~/components/pages/game-lobby/GameLobbyPositionCoordinator/GameLobbyPositionCoordinator.vue\";\nimport type { GameLobbyRolePickerExposed } from \"~/components/pages/game-lobby/GameLobbyRolePicker/game-lobby-role-picker.types\";\nimport GameLobbyRolePicker from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePicker.vue\";\nimport type { CreateGamePlayerDto } from \"~/composables/api/game/dto/create-game/create-game-player/create-game-player.dto\";\nimport { usePrimeVueToasts } from \"~/composables/prime-vue/usePrimeVueToasts\";\nimport { useAppBreakpoints } from \"~/composables/style/useAppBreakpoints\";\nimport { useAudioStore } from \"~/stores/audio/useAudioStore\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst { resetCreateGameDto } = createGameDtoStore;\nconst gameStore = useGameStore();\nconst { resetGame } = gameStore;\n\nconst audioStore = useAudioStore();\nconst { loadAllAudios } = audioStore;\n\nconst { t } = useI18n();\n\nconst { addInfoToast } = usePrimeVueToasts();\n\nconst gameLobbyHeader = ref<GameLobbyHeaderExposed | null>(null);\nconst gameLobbyRolePicker = ref<GameLobbyRolePickerExposed | null>(null);\nconst gameLobbyOptionsHub = ref<GameLobbyOptionsHubExposed | null>(null);\nconst gameLobbyPositionCoordinator = ref<GameLobbyPositionCoordinatorExposed | null>(null);\nconst gameLobbyAdditionalCardsManager = ref<GameLobbyAdditionalCardsManagerExposed | null>(null);\nconst gameLobbyGroupOrganizer = ref<GameLobbyGroupOrganizerExposed | null>(null);\n\nconst { isSmallerThanMdBreakpoint } = useAppBreakpoints();\n\nuseHead({\n  title: t(\"pages.gameLobby.startGame\"),\n  meta: [{ name: \"description\", content: t(\"pages.gameLobby.seoDescription\") }],\n});\n\nfunction onPickRoleForPlayerFromGameLobbyPlayersParty(player?: CreateGamePlayerDto): void {\n  if (!gameLobbyRolePicker.value) {\n    throw createError(\"Game Lobby Role Picker is not defined\");\n  }\n  if (!player) {\n    return;\n  }\n  gameLobbyRolePicker.value.openToPickRoleForPlayer(player);\n}\n\nfunction onGameOptionsButtonClickFromGameLobbyHeader(): void {\n  if (!gameLobbyOptionsHub.value) {\n    throw createError(\"Game Lobby Options Hub is not defined\");\n  }\n  gameLobbyOptionsHub.value.open();\n}\n\nfunction onPositionCoordinatorButtonClickFromGameLobbyHeader(): void {\n  if (!gameLobbyPositionCoordinator.value) {\n    throw createError(\"Game Lobby Position Coordinator is not defined\");\n  }\n  gameLobbyPositionCoordinator.value.open();\n}\n\nfunction onAdditionalCardsButtonManagerClickFromGameLobbyHeader(): void {\n  if (!gameLobbyAdditionalCardsManager.value) {\n    throw createError(\"Game Lobby Additional Cards Manager is not defined\");\n  }\n  gameLobbyAdditionalCardsManager.value.open();\n}\n\nfunction onGroupOrganizerButtonClickFromGameLobbyHeader(): void {\n  if (!gameLobbyGroupOrganizer.value) {\n    throw createError(\"Game Lobby Group Organizer is not defined\");\n  }\n  gameLobbyGroupOrganizer.value.open();\n}\n\nfunction onRejectPlayersPositionStepFromGameLobbyFooter(): void {\n  if (!gameLobbyHeader.value) {\n    throw createError(\"Game Lobby Header is not defined\");\n  }\n  gameLobbyHeader.value.highlightPositionCoordinatorButton();\n  const intervalMs = 1000;\n  setTimeout(() => {\n    onPositionCoordinatorButtonClickFromGameLobbyHeader();\n  }, intervalMs);\n}\n\nfunction onRejectThiefOrActorAdditionalCardsPlacedStep(): void {\n  if (!gameLobbyHeader.value) {\n    throw createError(\"Game Lobby Header is not defined\");\n  }\n  gameLobbyHeader.value.highlightAdditionalCardsManagerButton();\n  const intervalMs = 1000;\n  setTimeout(() => {\n    onAdditionalCardsButtonManagerClickFromGameLobbyHeader();\n  }, intervalMs);\n}\n\nfunction onRejectGameOptionsChangedStep(): void {\n  if (!gameLobbyHeader.value) {\n    throw createError(\"Game Lobby Header is not defined\");\n  }\n  gameLobbyHeader.value.highlightGameOptionsButton();\n  const intervalMs = 1000;\n  setTimeout(() => {\n    onGameOptionsButtonClickFromGameLobbyHeader();\n  }, intervalMs);\n}\n\nfunction injectPlayerNamesFromQuery(): void {\n  const { query } = useRoute();\n  if (!Object.hasOwn(query, \"playerNames\")) {\n    return;\n  }\n  const playerNamesFromQuery = query.playerNames as string[];\n  createGameDtoStore.setPlayersToCreateGameDto(playerNamesFromQuery.map((name: string) => ({\n    name,\n    role: {},\n    side: {},\n  })));\n}\n\nfunction launchSmallScreenWarning(): void {\n  addInfoToast({\n    summary: t(\"pages.gameLobby.smallScreenDetected\"),\n    detail: t(\"pages.gameLobby.smallScreenWarning\"),\n    life: 7500,\n  });\n}\n\nresetCreateGameDto();\nresetGame();\ninjectPlayerNamesFromQuery();\nloadAllAudios();\n\nonMounted(() => {\n  if (isSmallerThanMdBreakpoint.value) {\n    const delayInMs = 200;\n    setTimeout(() => {\n      launchSmallScreenWarning();\n    }, delayInMs);\n  }\n});\n</script>"
    }
  },
  "schemaVersion": "1.0",
  "thresholds": {
    "high": 100,
    "low": 100,
    "break": 100
  },
  "testFiles": {
    "tests/unit/specs/pages/game-lobby/game-lobby.nuxt.spec.ts": {
      "tests": [
        {
          "id": "0",
          "name": "Game Lobby Page should match snapshot when rendered."
        },
        {
          "id": "1",
          "name": "Game Lobby Page should set head title and meta tags when rendered."
        },
        {
          "id": "2",
          "name": "Game Lobby Page Small Screen Toast should add info toast for small screen after 200ms when screen is smaller than md."
        },
        {
          "id": "3",
          "name": "Game Lobby Page Small Screen Toast should not add info toast for small screen after 200ms when screen is not smaller than md."
        },
        {
          "id": "4",
          "name": "Game Lobby Page Small Screen Toast should not add info toast for small screen when screen is smaller than md but 200ms have not passed."
        },
        {
          "id": "5",
          "name": "Game Lobby Page Game Lobby Players Party should reset create game dto when rendered."
        },
        {
          "id": "6",
          "name": "Game Lobby Page Game Lobby Players Party should reset game when rendered."
        },
        {
          "id": "7",
          "name": "Game Lobby Page Game Lobby Players Party should load all audios when rendered."
        },
        {
          "id": "8",
          "name": "Game Lobby Page Game Lobby Role Picker should open role picker modal when game lobby players party emits pick role for player event."
        },
        {
          "id": "9",
          "name": "Game Lobby Page Game Lobby Role Picker should not open role picker modal when game lobby players party emits pick role for player event with no player."
        },
        {
          "id": "10",
          "name": "Game Lobby Page Game Lobby Role Picker should throw error when game lobby players party emits pick role for player event but the role picker is not found in refs."
        },
        {
          "id": "11",
          "name": "Game Lobby Page Game Lobby Options Hub should open game lobby options hub when game lobby players party emits open options hub event."
        },
        {
          "id": "12",
          "name": "Game Lobby Page Game Lobby Options Hub should throw error when game lobby header emits game options button click event but the options hub is not found in refs."
        },
        {
          "id": "13",
          "name": "Game Lobby Page Game Lobby Position Coordinator should open game lobby position coordinator when game lobby players party emits position coordinator button click event."
        },
        {
          "id": "14",
          "name": "Game Lobby Page Game Lobby Position Coordinator should throw error when game lobby header emits position coordinator button click event but the position coordinator is not found in refs."
        },
        {
          "id": "15",
          "name": "Game Lobby Page Game Lobby Additional Cards Manager should open game lobby additional cards manager when game lobby players party emits additional cards button click event."
        },
        {
          "id": "16",
          "name": "Game Lobby Page Game Lobby Additional Cards Manager should throw error when game lobby header emits additional cards button click event but the additional cards manager is not found in refs."
        },
        {
          "id": "17",
          "name": "Game Lobby Page Game Lobby Group Organizer should open game lobby group organizer when game lobby players party emits group organizer button click event."
        },
        {
          "id": "18",
          "name": "Game Lobby Page Game Lobby Group Organizer should throw error when game lobby header emits group organizer button click event but the group organizer is not found in refs."
        },
        {
          "id": "19",
          "name": "Game Lobby Page Reject Players Position Step should throw error when reject players position step event is emitted by footer but header is not defined in refs."
        },
        {
          "id": "20",
          "name": "Game Lobby Page Reject Players Position Step should highlight position coordinator button when reject players position step event is emitted by footer."
        },
        {
          "id": "21",
          "name": "Game Lobby Page Reject Players Position Step should open position coordinator after timeout when reject players position step event is emitted by footer."
        },
        {
          "id": "22",
          "name": "Game Lobby Page Reject Thief or Actor Additional Cards Placed Step should throw error when reject thief additional cards placed step event is emitted by footer but header is not defined in refs."
        },
        {
          "id": "23",
          "name": "Game Lobby Page Reject Thief or Actor Additional Cards Placed Step should highlight additional cards manager button when reject thief additional cards placed step event is emitted by footer."
        },
        {
          "id": "24",
          "name": "Game Lobby Page Reject Thief or Actor Additional Cards Placed Step should open additional cards manager after timeout when reject thief additional cards placed step event is emitted by footer."
        },
        {
          "id": "25",
          "name": "Game Lobby Page Reject Thief or Actor Additional Cards Placed Step should throw error when reject actor additional cards placed step event is emitted by footer but header is not defined in refs."
        },
        {
          "id": "26",
          "name": "Game Lobby Page Reject Thief or Actor Additional Cards Placed Step should highlight additional cards manager button when reject actor additional cards placed step event is emitted by footer."
        },
        {
          "id": "27",
          "name": "Game Lobby Page Reject Game Options Changed Step should throw error when reject game options changed step event is emitted by footer but header is not defined in refs."
        },
        {
          "id": "28",
          "name": "Game Lobby Page Reject Game Options Changed Step should highlight game options button when reject game options changed step event is emitted by footer."
        },
        {
          "id": "29",
          "name": "Game Lobby Page Reject Game Options Changed Step should open game options hub after timeout when reject game options changed step event is emitted by footer."
        },
        {
          "id": "30",
          "name": "Game Lobby Page Inject player from query should set players to create game dto when query is fulfilled with player names."
        },
        {
          "id": "31",
          "name": "Game Lobby Page Inject player from query should not set players to create game dto when query is not fulfilled with player names."
        }
      ],
      "source": "import { mockNuxtImport } from \"@nuxt/test-utils/runtime\";\nimport type { mount } from \"@vue/test-utils\";\nimport type { UseHeadInput } from \"unhead\";\nimport type { Mock } from \"vitest\";\nimport { expect } from \"vitest\";\nimport type { Ref } from \"vue\";\n\nimport { createFakeCreateGamePlayerDto } from \"@tests/unit/utils/factories/composables/api/game/dto/create-game/create-game-player/create-game-player.dto.factory\";\nimport { createFakeUseRoute } from \"@tests/unit/utils/factories/composables/nuxt/useRoute.factory\";\nimport { getError } from \"@tests/unit/utils/helpers/exception.helpers\";\nimport { mountSuspendedComponent } from \"@tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"@tests/unit/utils/types/vue-test-utils.types\";\nimport type GameLobbyFooter from \"~/components/pages/game-lobby/GameLobbyFooter/GameLobbyFooter.vue\";\nimport type GameLobbyHeader from \"~/components/pages/game-lobby/GameLobbyHeader/GameLobbyHeader.vue\";\nimport type GameLobbyPlayersParty from \"~/components/pages/game-lobby/GameLobbyPlayersParty/GameLobbyPlayersParty.vue\";\nimport GameLobby from \"~/pages/game-lobby.vue\";\nimport { useAudioStore } from \"~/stores/audio/useAudioStore\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\n\nconst hoistedMocks = vi.hoisted(() => ({\n  useAppBreakpoints: {\n    isSmallerThanMdBreakpoint: { value: false },\n  },\n  useRoute: {} as unknown as ReturnType<typeof useRoute>,\n  usePrimeVueToasts: {\n    addInfoToast: vi.fn(),\n  },\n}));\n\nmockNuxtImport(\"useRoute\", () => vi.fn(() => hoistedMocks.useRoute));\n\nvi.mock(\"~/composables/style/useAppBreakpoints\", () => ({\n  useAppBreakpoints: (): typeof hoistedMocks.useAppBreakpoints => hoistedMocks.useAppBreakpoints,\n}));\n\nvi.mock(\"~/composables/prime-vue/usePrimeVueToasts\", () => ({\n  usePrimeVueToasts: (): typeof hoistedMocks.usePrimeVueToasts => hoistedMocks.usePrimeVueToasts,\n}));\n\ndescribe(\"Game Lobby Page\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobby>>;\n  let mocks: {\n    components: {\n      gameLobbyHeader: {\n        highlightGameOptionsButton: Mock;\n        highlightPositionCoordinatorButton: Mock;\n        highlightAdditionalCardsManagerButton: Mock;\n      };\n      gameLobbyRolePicker: {\n        openToPickRoleForPlayer: Mock;\n      };\n      gameLobbyOptionsHub: {\n        open: Mock;\n      };\n      gameLobbyPositionCoordinator: {\n        open: Mock;\n      };\n      gameLobbyAdditionalCardsManager: {\n        open: Mock;\n      };\n      gameLobbyGroupOrganizer: {\n        open: Mock;\n      };\n    };\n  };\n\n  async function mountGameLobbyPageComponent(): Promise<ReturnType<typeof mount<typeof GameLobby>>> {\n    mocks = {\n      components: {\n        gameLobbyHeader: {\n          highlightGameOptionsButton: vi.fn(),\n          highlightPositionCoordinatorButton: vi.fn(),\n          highlightAdditionalCardsManagerButton: vi.fn(),\n        },\n        gameLobbyRolePicker: { openToPickRoleForPlayer: vi.fn() },\n        gameLobbyOptionsHub: { open: vi.fn() },\n        gameLobbyPositionCoordinator: { open: vi.fn() },\n        gameLobbyAdditionalCardsManager: { open: vi.fn() },\n        gameLobbyGroupOrganizer: { open: vi.fn() },\n      },\n    };\n\n    return mountSuspendedComponent(GameLobby, {\n      global: {\n        stubs: {\n          ClientOnly: false,\n          GameLobbyHeader: {\n            template: \"<div id='game-lobby-header-stub'></div>\",\n            methods: mocks.components.gameLobbyHeader,\n          },\n          GameLobbyRolePicker: {\n            template: \"<div id='game-lobby-role-picker-stub'></div>\",\n            methods: mocks.components.gameLobbyRolePicker,\n          },\n          GameLobbyOptionsHub: {\n            template: \"<div id='game-lobby-options-hub-stub'></div>\",\n            methods: mocks.components.gameLobbyOptionsHub,\n          },\n          GameLobbyPositionCoordinator: {\n            template: \"<div id='game-lobby-position-coordinator-stub'></div>\",\n            methods: mocks.components.gameLobbyPositionCoordinator,\n          },\n          GameLobbyAdditionalCardsManager: {\n            template: \"<div id='game-lobby-additional-cards-manager-stub'></div>\",\n            methods: mocks.components.gameLobbyAdditionalCardsManager,\n          },\n          GameLobbyGroupOrganizer: {\n            template: \"<div id='game-lobby-group-organizer-stub'></div>\",\n            methods: mocks.components.gameLobbyGroupOrganizer,\n          },\n        },\n      },\n    });\n  }\n\n  beforeEach(async() => {\n    hoistedMocks.useRoute = createFakeUseRoute();\n    hoistedMocks.useAppBreakpoints.isSmallerThanMdBreakpoint.value = false;\n    wrapper = await mountGameLobbyPageComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  it(\"should set head title and meta tags when rendered.\", () => {\n    const expectedUseHeadInput: UseHeadInput<object> = {\n      title: \"pages.gameLobby.startGame\",\n      meta: [{ name: \"description\", content: \"pages.gameLobby.seoDescription\" }],\n    };\n\n    expect(useHead).toHaveBeenCalledExactlyOnceWith(expectedUseHeadInput);\n  });\n\n  describe(\"Small Screen Toast\", () => {\n    it(\"should add info toast for small screen after 200ms when screen is smaller than md.\", async() => {\n      hoistedMocks.useAppBreakpoints.isSmallerThanMdBreakpoint.value = true;\n      wrapper = await mountGameLobbyPageComponent();\n      vi.advanceTimersByTime(200);\n\n      expect(hoistedMocks.usePrimeVueToasts.addInfoToast).toHaveBeenCalledExactlyOnceWith({\n        detail: \"pages.gameLobby.smallScreenWarning\",\n        life: 7500,\n        summary: \"pages.gameLobby.smallScreenDetected\",\n      });\n    });\n\n    it(\"should not add info toast for small screen after 200ms when screen is not smaller than md.\", () => {\n      vi.advanceTimersByTime(200);\n\n      expect(hoistedMocks.usePrimeVueToasts.addInfoToast).not.toHaveBeenCalled();\n    });\n\n    it(\"should not add info toast for small screen when screen is smaller than md but 200ms have not passed.\", async() => {\n      hoistedMocks.useAppBreakpoints.isSmallerThanMdBreakpoint.value = true;\n      wrapper = await mountGameLobbyPageComponent();\n\n      expect(hoistedMocks.usePrimeVueToasts.addInfoToast).not.toHaveBeenCalled();\n    });\n  });\n\n  describe(\"Game Lobby Players Party\", () => {\n    it(\"should reset create game dto when rendered.\", () => {\n      const createGameDtoStore = useCreateGameDtoStore();\n\n      expect(createGameDtoStore.resetCreateGameDto).toHaveBeenCalledExactlyOnceWith();\n    });\n\n    it(\"should reset game when rendered.\", () => {\n      const gameStore = useGameStore();\n\n      expect(gameStore.resetGame).toHaveBeenCalledExactlyOnceWith();\n    });\n\n    it(\"should load all audios when rendered.\", () => {\n      const audioStore = useAudioStore();\n\n      expect(audioStore.loadAllAudios).toHaveBeenCalledExactlyOnceWith();\n    });\n  });\n\n  describe(\"Game Lobby Role Picker\", () => {\n    it(\"should open role picker modal when game lobby players party emits pick role for player event.\", async() => {\n      const emittedPlayer = createFakeCreateGamePlayerDto();\n      const gameLobbyPlayersParty = wrapper.findComponent<typeof GameLobbyPlayersParty>(\"#game-lobby-players-party\");\n      (gameLobbyPlayersParty.vm as VueVm).$emit(\"pick-role-for-player\", emittedPlayer);\n      await nextTick();\n\n      expect(mocks.components.gameLobbyRolePicker.openToPickRoleForPlayer).toHaveBeenCalledExactlyOnceWith(emittedPlayer);\n    });\n\n    it(\"should not open role picker modal when game lobby players party emits pick role for player event with no player.\", async() => {\n      const gameLobbyPlayersParty = wrapper.findComponent<typeof GameLobbyPlayersParty>(\"#game-lobby-players-party\");\n      (gameLobbyPlayersParty.vm as VueVm).$emit(\"pick-role-for-player\", undefined);\n      await nextTick();\n\n      expect(mocks.components.gameLobbyRolePicker.openToPickRoleForPlayer).not.toHaveBeenCalled();\n    });\n\n    it(\"should throw error when game lobby players party emits pick role for player event but the role picker is not found in refs.\", async() => {\n      wrapper = await mountGameLobbyPageComponent();\n      (wrapper.vm.$root?.$refs.VTU_COMPONENT as { gameLobbyRolePicker: Ref }).gameLobbyRolePicker.value = null;\n      const gameLobbyPlayersParty = wrapper.findComponent<typeof GameLobbyPlayersParty>(\"#game-lobby-players-party\");\n      await getError(() => (gameLobbyPlayersParty.vm as VueVm).$emit(\"pick-role-for-player\", createFakeCreateGamePlayerDto()));\n\n      expect(createError).toHaveBeenCalledExactlyOnceWith(\"Game Lobby Role Picker is not defined\");\n    });\n  });\n\n  describe(\"Game Lobby Options Hub\", () => {\n    it(\"should open game lobby options hub when game lobby players party emits open options hub event.\", async() => {\n      const gameLobbyHeader = wrapper.findComponent<typeof GameLobbyHeader>(\"#game-lobby-header\");\n      (gameLobbyHeader.vm as VueVm).$emit(\"game-options-button-click\");\n      await nextTick();\n\n      expect(mocks.components.gameLobbyOptionsHub.open).toHaveBeenCalledExactlyOnceWith();\n    });\n\n    it(\"should throw error when game lobby header emits game options button click event but the options hub is not found in refs.\", async() => {\n      wrapper = await mountGameLobbyPageComponent();\n      (wrapper.vm.$root?.$refs.VTU_COMPONENT as { gameLobbyOptionsHub: Ref }).gameLobbyOptionsHub.value = null;\n      const gameLobbyHeader = wrapper.findComponent<typeof GameLobbyHeader>(\"#game-lobby-header\");\n      await getError(() => (gameLobbyHeader.vm as VueVm).$emit(\"game-options-button-click\"));\n\n      expect(createError).toHaveBeenCalledExactlyOnceWith(\"Game Lobby Options Hub is not defined\");\n    });\n  });\n\n  describe(\"Game Lobby Position Coordinator\", () => {\n    it(\"should open game lobby position coordinator when game lobby players party emits position coordinator button click event.\", async() => {\n      const gameLobbyHeader = wrapper.findComponent<typeof GameLobbyHeader>(\"#game-lobby-header\");\n      (gameLobbyHeader.vm as VueVm).$emit(\"position-coordinator-button-click\");\n      await nextTick();\n\n      expect(mocks.components.gameLobbyPositionCoordinator.open).toHaveBeenCalledExactlyOnceWith();\n    });\n\n    it(\"should throw error when game lobby header emits position coordinator button click event but the position coordinator is not found in refs.\", async() => {\n      wrapper = await mountGameLobbyPageComponent();\n      (wrapper.vm.$root?.$refs.VTU_COMPONENT as { gameLobbyPositionCoordinator: Ref }).gameLobbyPositionCoordinator.value = null;\n      const gameLobbyHeader = wrapper.findComponent<typeof GameLobbyHeader>(\"#game-lobby-header\");\n      await getError(() => (gameLobbyHeader.vm as VueVm).$emit(\"position-coordinator-button-click\"));\n\n      expect(createError).toHaveBeenCalledExactlyOnceWith(\"Game Lobby Position Coordinator is not defined\");\n    });\n  });\n\n  describe(\"Game Lobby Additional Cards Manager\", () => {\n    it(\"should open game lobby additional cards manager when game lobby players party emits additional cards button click event.\", async() => {\n      const gameLobbyHeader = wrapper.findComponent<typeof GameLobbyHeader>(\"#game-lobby-header\");\n      (gameLobbyHeader.vm as VueVm).$emit(\"additional-cards-manager-button-click\");\n      await nextTick();\n\n      expect(mocks.components.gameLobbyAdditionalCardsManager.open).toHaveBeenCalledExactlyOnceWith();\n    });\n\n    it(\"should throw error when game lobby header emits additional cards button click event but the additional cards manager is not found in refs.\", async() => {\n      wrapper = await mountGameLobbyPageComponent();\n      (wrapper.vm.$root?.$refs.VTU_COMPONENT as { gameLobbyAdditionalCardsManager: Ref }).gameLobbyAdditionalCardsManager.value = null;\n      const gameLobbyHeader = wrapper.findComponent<typeof GameLobbyHeader>(\"#game-lobby-header\");\n      await getError(() => (gameLobbyHeader.vm as VueVm).$emit(\"additional-cards-manager-button-click\"));\n\n      expect(createError).toHaveBeenCalledExactlyOnceWith(\"Game Lobby Additional Cards Manager is not defined\");\n    });\n  });\n\n  describe(\"Game Lobby Group Organizer\", () => {\n    it(\"should open game lobby group organizer when game lobby players party emits group organizer button click event.\", async() => {\n      const gameLobbyHeader = wrapper.findComponent<typeof GameLobbyHeader>(\"#game-lobby-header\");\n      (gameLobbyHeader.vm as VueVm).$emit(\"group-organizer-button-click\");\n      await nextTick();\n\n      expect(mocks.components.gameLobbyGroupOrganizer.open).toHaveBeenCalledExactlyOnceWith();\n    });\n\n    it(\"should throw error when game lobby header emits group organizer button click event but the group organizer is not found in refs.\", async() => {\n      wrapper = await mountGameLobbyPageComponent();\n      (wrapper.vm.$root?.$refs.VTU_COMPONENT as { gameLobbyGroupOrganizer: Ref }).gameLobbyGroupOrganizer.value = null;\n      const gameLobbyHeader = wrapper.findComponent<typeof GameLobbyHeader>(\"#game-lobby-header\");\n      await getError(() => (gameLobbyHeader.vm as VueVm).$emit(\"group-organizer-button-click\"));\n\n      expect(createError).toHaveBeenCalledExactlyOnceWith(\"Game Lobby Group Organizer is not defined\");\n    });\n  });\n\n  describe(\"Reject Players Position Step\", () => {\n    it(\"should throw error when reject players position step event is emitted by footer but header is not defined in refs.\", async() => {\n      wrapper = await mountGameLobbyPageComponent();\n      (wrapper.vm.$root?.$refs.VTU_COMPONENT as { gameLobbyHeader: Ref }).gameLobbyHeader.value = null;\n      const gameLobbyFooter = wrapper.findComponent<typeof GameLobbyFooter>(\"#game-lobby-footer\");\n      await getError(() => (gameLobbyFooter.vm as VueVm).$emit(\"reject-players-position-step\"));\n\n      expect(createError).toHaveBeenCalledExactlyOnceWith(\"Game Lobby Header is not defined\");\n    });\n\n    it(\"should highlight position coordinator button when reject players position step event is emitted by footer.\", async() => {\n      const gameLobbyFooter = wrapper.findComponent<typeof GameLobbyFooter>(\"#game-lobby-footer\");\n      (gameLobbyFooter.vm as VueVm).$emit(\"reject-players-position-step\");\n      await nextTick();\n\n      expect(mocks.components.gameLobbyHeader.highlightPositionCoordinatorButton).toHaveBeenCalledExactlyOnceWith();\n    });\n\n    it(\"should open position coordinator after timeout when reject players position step event is emitted by footer.\", async() => {\n      const gameLobbyFooter = wrapper.findComponent<typeof GameLobbyFooter>(\"#game-lobby-footer\");\n      (gameLobbyFooter.vm as VueVm).$emit(\"reject-players-position-step\");\n      vi.advanceTimersByTime(1000);\n      await nextTick();\n\n      expect(mocks.components.gameLobbyPositionCoordinator.open).toHaveBeenCalledExactlyOnceWith();\n    });\n  });\n\n  describe(\"Reject Thief or Actor Additional Cards Placed Step\", () => {\n    it(\"should throw error when reject thief additional cards placed step event is emitted by footer but header is not defined in refs.\", async() => {\n      wrapper = await mountGameLobbyPageComponent();\n      (wrapper.vm.$root?.$refs.VTU_COMPONENT as { gameLobbyHeader: Ref }).gameLobbyHeader.value = null;\n      const gameLobbyFooter = wrapper.findComponent<typeof GameLobbyFooter>(\"#game-lobby-footer\");\n      await getError(() => (gameLobbyFooter.vm as VueVm).$emit(\"reject-thief-additional-cards-placed-step\"));\n\n      expect(createError).toHaveBeenCalledExactlyOnceWith(\"Game Lobby Header is not defined\");\n    });\n\n    it(\"should highlight additional cards manager button when reject thief additional cards placed step event is emitted by footer.\", async() => {\n      const gameLobbyFooter = wrapper.findComponent<typeof GameLobbyFooter>(\"#game-lobby-footer\");\n      (gameLobbyFooter.vm as VueVm).$emit(\"reject-thief-additional-cards-placed-step\");\n      await nextTick();\n\n      expect(mocks.components.gameLobbyHeader.highlightAdditionalCardsManagerButton).toHaveBeenCalledExactlyOnceWith();\n    });\n\n    it(\"should open additional cards manager after timeout when reject thief additional cards placed step event is emitted by footer.\", async() => {\n      const gameLobbyFooter = wrapper.findComponent<typeof GameLobbyFooter>(\"#game-lobby-footer\");\n      (gameLobbyFooter.vm as VueVm).$emit(\"reject-thief-additional-cards-placed-step\");\n      vi.advanceTimersByTime(1000);\n      await nextTick();\n\n      expect(mocks.components.gameLobbyAdditionalCardsManager.open).toHaveBeenCalledExactlyOnceWith();\n    });\n\n    it(\"should throw error when reject actor additional cards placed step event is emitted by footer but header is not defined in refs.\", async() => {\n      wrapper = await mountGameLobbyPageComponent();\n      (wrapper.vm.$root?.$refs.VTU_COMPONENT as { gameLobbyHeader: Ref }).gameLobbyHeader.value = null;\n      const gameLobbyFooter = wrapper.findComponent<typeof GameLobbyFooter>(\"#game-lobby-footer\");\n      await getError(() => (gameLobbyFooter.vm as VueVm).$emit(\"reject-actor-additional-cards-placed-step\"));\n\n      expect(createError).toHaveBeenCalledExactlyOnceWith(\"Game Lobby Header is not defined\");\n    });\n\n    it(\"should highlight additional cards manager button when reject actor additional cards placed step event is emitted by footer.\", async() => {\n      const gameLobbyFooter = wrapper.findComponent<typeof GameLobbyFooter>(\"#game-lobby-footer\");\n      (gameLobbyFooter.vm as VueVm).$emit(\"reject-actor-additional-cards-placed-step\");\n      await nextTick();\n\n      expect(mocks.components.gameLobbyHeader.highlightAdditionalCardsManagerButton).toHaveBeenCalledExactlyOnceWith();\n    });\n  });\n\n  describe(\"Reject Game Options Changed Step\", () => {\n    it(\"should throw error when reject game options changed step event is emitted by footer but header is not defined in refs.\", async() => {\n      wrapper = await mountGameLobbyPageComponent();\n      (wrapper.vm.$root?.$refs.VTU_COMPONENT as { gameLobbyHeader: Ref }).gameLobbyHeader.value = null;\n      const gameLobbyFooter = wrapper.findComponent<typeof GameLobbyFooter>(\"#game-lobby-footer\");\n      await getError(() => (gameLobbyFooter.vm as VueVm).$emit(\"reject-game-options-changed-step\"));\n\n      expect(createError).toHaveBeenCalledExactlyOnceWith(\"Game Lobby Header is not defined\");\n    });\n\n    it(\"should highlight game options button when reject game options changed step event is emitted by footer.\", async() => {\n      const gameLobbyFooter = wrapper.findComponent<typeof GameLobbyFooter>(\"#game-lobby-footer\");\n      (gameLobbyFooter.vm as VueVm).$emit(\"reject-game-options-changed-step\");\n      await nextTick();\n\n      expect(mocks.components.gameLobbyHeader.highlightGameOptionsButton).toHaveBeenCalledExactlyOnceWith();\n    });\n\n    it(\"should open game options hub after timeout when reject game options changed step event is emitted by footer.\", async() => {\n      const gameLobbyFooter = wrapper.findComponent<typeof GameLobbyFooter>(\"#game-lobby-footer\");\n      (gameLobbyFooter.vm as VueVm).$emit(\"reject-game-options-changed-step\");\n      vi.advanceTimersByTime(1000);\n      await nextTick();\n\n      expect(mocks.components.gameLobbyOptionsHub.open).toHaveBeenCalledExactlyOnceWith();\n    });\n  });\n\n  describe(\"Inject player from query\", () => {\n    it(\"should set players to create game dto when query is fulfilled with player names.\", async() => {\n      hoistedMocks.useRoute.query = { playerNames: [\"Antoine\", \"Benoit\", \"Corentin\"] };\n      wrapper = await mountGameLobbyPageComponent();\n      const createGameDtoStore = useCreateGameDtoStore();\n\n      expect(createGameDtoStore.setPlayersToCreateGameDto).toHaveBeenCalledExactlyOnceWith([\n        createFakeCreateGamePlayerDto({ name: \"Antoine\" }),\n        createFakeCreateGamePlayerDto({ name: \"Benoit\" }),\n        createFakeCreateGamePlayerDto({ name: \"Corentin\" }),\n      ]);\n    });\n\n    it(\"should not set players to create game dto when query is not fulfilled with player names.\", async() => {\n      hoistedMocks.useRoute.query = { toto: \"tata\" };\n      wrapper = await mountGameLobbyPageComponent();\n      const createGameDtoStore = useCreateGameDtoStore();\n\n      expect(createGameDtoStore.setPlayersToCreateGameDto).not.toHaveBeenCalled();\n    });\n  });\n});"
    },
    "tests/unit/specs/pages/game/game-page.nuxt.spec.ts": {
      "tests": [
        {
          "id": "32",
          "name": "Game Page should match snapshot when rendered."
        },
        {
          "id": "33",
          "name": "Game Page should set head title and meta tags when rendered."
        },
        {
          "id": "34",
          "name": "Game Page should fetch and set game in store when rendered with valid game id as string."
        },
        {
          "id": "35",
          "name": "Game Page should fetch and set game in store when rendered with valid game id as array of strings."
        },
        {
          "id": "36",
          "name": "Game Page should load all audios when rendered."
        },
        {
          "id": "37",
          "name": "Game Page Game Status Containers should render game is loading container when game fetching status is pending."
        },
        {
          "id": "38",
          "name": "Game Page Game Status Containers should render loading game spinner with text when game fetching status is pending."
        },
        {
          "id": "39",
          "name": "Game Page Game Status Containers should render game not found when game fetching status is error."
        },
        {
          "id": "40",
          "name": "Game Page Game Status Containers should render playing game when game fetching status is success and game status is playing."
        },
        {
          "id": "41",
          "name": "Game Page Game Status Containers should render game over when game fetching status is success and game status is over."
        },
        {
          "id": "42",
          "name": "Game Page Game Status Containers should render game canceled when game fetching status is success and game status is canceled."
        },
        {
          "id": "43",
          "name": "Game Page Game is found should show game feedback submitter when game component emits a game feedback submitter button click."
        },
        {
          "id": "44",
          "name": "Game Page Game is found should throw an error when game component emits a game feedback submitter button click and game feedback submitter is not defined."
        },
        {
          "id": "45",
          "name": "Game Page Unmount should fade out playing background audio when unmounted."
        }
      ],
      "source": "import { mockNuxtImport } from \"@nuxt/test-utils/runtime\";\nimport type { mount } from \"@vue/test-utils\";\nimport type { UseHeadInput } from \"unhead\";\nimport type { Mock } from \"vitest\";\nimport { beforeEach, expect } from \"vitest\";\nimport type { Ref } from \"vue\";\n\nimport type { VueVm } from \"@tests/unit/utils/types/vue-test-utils.types\";\nimport { mountSuspendedComponent } from \"@tests/unit/utils/helpers/mount.helpers\";\nimport { getError } from \"@tests/unit/utils/helpers/exception.helpers\";\nimport { createFakeUseRoute } from \"@tests/unit/utils/factories/composables/nuxt/useRoute.factory\";\nimport GameCanceled from \"~/components/pages/game/GameCanceled/GameCanceled.vue\";\nimport type GameNotFound from \"~/components/pages/game/GameNotFound/GameNotFound.vue\";\nimport GameOver from \"~/components/pages/game/GameOver/GameOver.vue\";\nimport GamePlaying from \"~/components/pages/game/GamePlaying/GamePlaying.vue\";\nimport type TextProgressSpinner from \"~/components/shared/misc/TextProgressSpinner/TextProgressSpinner.vue\";\nimport GamePage from \"~/pages/game/[id].vue\";\nimport { useAudioStore } from \"~/stores/audio/useAudioStore\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\n\nconst { useRoute: useRouteMock } = vi.hoisted(() => ({ useRoute: {} as ReturnType<typeof createFakeUseRoute> }));\n\ndescribe(\"Game Page\", () => {\n  let mocks: {\n    components: {\n      gameFeedbackSubmitter: {\n        showGameFeedbackSubmitter: Mock;\n      };\n    };\n  };\n  let wrapper: ReturnType<typeof mount<typeof GamePage>>;\n\n  beforeAll(() => {\n    mockNuxtImport<typeof useRoute>(\"useRoute\", () => vi.fn(() => createFakeUseRoute(useRouteMock)));\n  });\n\n  beforeEach(async() => {\n    mocks = {\n      components: {\n        gameFeedbackSubmitter: {\n          showGameFeedbackSubmitter: vi.fn(),\n        },\n      },\n    };\n    useRouteMock.params = { id: \"1\" };\n    wrapper = await mountSuspendedComponent(GamePage, {\n      global: {\n        stubs: {\n          GameFeedbackSubmitter: {\n            template: \"<div id='game-feedback-submitter-stub'></div>\",\n            methods: mocks.components.gameFeedbackSubmitter,\n          },\n        },\n      },\n    });\n    const gameStore = useGameStore();\n    gameStore.fetchingGameStatus = \"pending\";\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  it(\"should set head title and meta tags when rendered.\", () => {\n    const expectedUseHeadInput: UseHeadInput<object> = {\n      title: \"pages.game.playingGame\",\n      meta: [{ name: \"robots\", content: \"noindex, nofollow\" }],\n    };\n\n    expect(useHead).toHaveBeenCalledExactlyOnceWith(expectedUseHeadInput);\n  });\n\n  it(\"should fetch and set game in store when rendered with valid game id as string.\", () => {\n    const gameStore = useGameStore();\n\n    expect(gameStore.fetchAndSetGame).toHaveBeenCalledExactlyOnceWith(\"1\");\n  });\n\n  it(\"should fetch and set game in store when rendered with valid game id as array of strings.\", async() => {\n    useRouteMock.params.id = [\"4\", \"2\", \"3\"];\n    wrapper = await mountSuspendedComponent(GamePage);\n    const gameStore = useGameStore();\n\n    expect(gameStore.fetchAndSetGame).toHaveBeenCalledExactlyOnceWith(\"4\");\n  });\n\n  it(\"should load all audios when rendered.\", () => {\n    const audioStore = useAudioStore();\n\n    expect(audioStore.loadAllAudios).toHaveBeenCalledExactlyOnceWith();\n  });\n\n  describe(\"Game Status Containers\", () => {\n    it(\"should render game is loading container when game fetching status is pending.\", () => {\n      expect(wrapper.find<HTMLDivElement>(\"#loading-game-container\").exists()).toBeTruthy();\n    });\n\n    it(\"should render loading game spinner with text when game fetching status is pending.\", () => {\n      const loadingGameSpinner = wrapper.findComponent<typeof TextProgressSpinner>(\"#loading-game-spinner\");\n\n      expect(loadingGameSpinner.props(\"text\")).toBe(\"Loading game…\");\n    });\n\n    it(\"should render game not found when game fetching status is error.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.fetchingGameStatus = \"error\";\n      await nextTick();\n\n      expect(wrapper.findComponent<typeof GameNotFound>(\"#game-not-found\").exists()).toBeTruthy();\n    });\n\n    it(\"should render playing game when game fetching status is success and game status is playing.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.fetchingGameStatus = \"success\";\n      gameStore.game.status = \"playing\";\n      await nextTick();\n\n      expect(wrapper.findComponent<typeof GamePlaying>(GamePlaying).exists()).toBeTruthy();\n    });\n\n    it(\"should render game over when game fetching status is success and game status is over.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.fetchingGameStatus = \"success\";\n      gameStore.game.status = \"over\";\n      await nextTick();\n\n      expect(wrapper.findComponent<typeof GameOver>(GameOver).exists()).toBeTruthy();\n    });\n\n    it(\"should render game canceled when game fetching status is success and game status is canceled.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.fetchingGameStatus = \"success\";\n      gameStore.game.status = \"canceled\";\n      await nextTick();\n\n      expect(wrapper.findComponent<typeof GameCanceled>(GameCanceled).exists()).toBeTruthy();\n    });\n  });\n\n  describe(\"Game is found\", () => {\n    beforeEach(() => {\n      const gameStore = useGameStore();\n      gameStore.fetchingGameStatus = \"success\";\n      gameStore.game.status = \"playing\";\n    });\n\n    it(\"should show game feedback submitter when game component emits a game feedback submitter button click.\", async() => {\n      const gamePlaying = wrapper.findComponent<typeof GamePlaying>(GamePlaying);\n      (gamePlaying.vm as VueVm).$emit(\"gameFeedbackSubmitterButtonClick\");\n      await nextTick();\n\n      expect(mocks.components.gameFeedbackSubmitter.showGameFeedbackSubmitter).toHaveBeenCalledExactlyOnceWith();\n    });\n\n    it(\"should throw an error when game component emits a game feedback submitter button click and game feedback submitter is not defined.\", async() => {\n      (wrapper.vm.$root?.$refs.VTU_COMPONENT as { gameFeedbackSubmitter: Ref }).gameFeedbackSubmitter.value = null;\n      const gamePlaying = wrapper.findComponent<typeof GamePlaying>(GamePlaying);\n      await getError(() => (gamePlaying.vm as VueVm).$emit(\"gameFeedbackSubmitterButtonClick\"));\n\n      expect(createError).toHaveBeenCalledExactlyOnceWith(\"Game Feedback Submitter is not defined\");\n    });\n  });\n\n  describe(\"Unmount\", () => {\n    it(\"should fade out playing background audio when unmounted.\", () => {\n      const audioStore = useAudioStore();\n      wrapper.unmount();\n\n      expect(audioStore.fadeOutPlayingBackgroundAudio).toHaveBeenCalledExactlyOnceWith();\n    });\n  });\n});"
    },
    "tests/unit/specs/pages/index/index.nuxt.spec.ts": {
      "tests": [
        {
          "id": "46",
          "name": "Index Page Component should match snapshot when rendered."
        },
        {
          "id": "47",
          "name": "Index Page Component Title should display translated title when rendered."
        },
        {
          "id": "48",
          "name": "Index Page Component Subtitle should translate subtitle when rendered."
        },
        {
          "id": "49",
          "name": "Index Page Component Play button should display play button with translated label when rendered."
        },
        {
          "id": "50",
          "name": "Index Page Component Play button Play Button Icon should not have animation class when not hovered."
        },
        {
          "id": "51",
          "name": "Index Page Component Play button Play Button Icon should have animation class when hovered."
        },
        {
          "id": "52",
          "name": "Index Page Component About button should display about button with translated label when rendered."
        },
        {
          "id": "53",
          "name": "Index Page Component About button About Button Icon should not have animation class when not hovered."
        },
        {
          "id": "54",
          "name": "Index Page Component About button About Button Icon should have animation class when hovered."
        }
      ],
      "source": "import type { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\nimport type { mount } from \"@vue/test-utils\";\nimport type { Ref } from \"vue\";\n\nimport type { NuxtLink } from \"#components\";\nimport Index from \"@/pages/index.vue\";\nimport { mountSuspendedComponent } from \"@tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Index Page Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof Index>>;\n\n  beforeEach(async() => {\n    wrapper = await mountSuspendedComponent(Index);\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Title\", () => {\n    it(\"should display translated title when rendered.\", () => {\n      const title = wrapper.find(\"#title\");\n\n      expect(title.text()).toBe(\"Werewolves Assistant\");\n    });\n  });\n\n  describe(\"Subtitle\", () => {\n    it(\"should translate subtitle when rendered.\", () => {\n      const subtitle = wrapper.find(\"#subtitle\");\n\n      expect(subtitle.text()).toBe(\"The perfect tool for game masters of the Werewolves of Miller's Hollow™\");\n    });\n  });\n\n  describe(\"Play button\", () => {\n    beforeEach(async() => {\n      wrapper = await mountSuspendedComponent(Index, {\n        shallow: false,\n        stubs: { IndexFooter: true },\n      });\n    });\n\n    it(\"should display play button with translated label when rendered.\", () => {\n      const playButton = wrapper.findComponent<typeof NuxtLink>(\"#play-button\");\n\n      expect(playButton.text()).toBe(\"Play\");\n    });\n\n    describe(\"Play Button Icon\", () => {\n      it(\"should not have animation class when not hovered.\", () => {\n        const playButtonIcon = wrapper.find<HTMLSpanElement>(\"#play-button-icon\");\n\n        expect(playButtonIcon.attributes(\"class\")).not.toContain(\"animate__heartBeat\");\n      });\n\n      it(\"should have animation class when hovered.\", async() => {\n        const isHovered = (wrapper.vm as unknown as typeof Index).isPlayButtonHovered as Ref<boolean>;\n        isHovered.value = true;\n        await nextTick();\n        const playButtonIcon = wrapper.find<HTMLSpanElement>(\"#play-button-icon\");\n\n        expect(playButtonIcon.attributes(\"class\")).toContain(\"animate__heartBeat\");\n      });\n    });\n  });\n\n  describe(\"About button\", () => {\n    beforeEach(async() => {\n      wrapper = await mountSuspendedComponent(Index, {\n        shallow: false,\n        stubs: { IndexFooter: true },\n      });\n    });\n\n    it(\"should display about button with translated label when rendered.\", () => {\n      const aboutButton = wrapper.findComponent<typeof NuxtLink>(\"#about-button\");\n\n      expect(aboutButton.text()).toBe(\"What is it?\");\n    });\n\n    describe(\"About Button Icon\", () => {\n      it(\"should not have animation class when not hovered.\", () => {\n        const aboutButtonIcon = wrapper.findComponent<typeof FontAwesomeIcon>(\"#about-button-icon\");\n\n        expect(aboutButtonIcon.attributes(\"class\")).not.toContain(\"animate__heartBeat\");\n      });\n\n      it(\"should have animation class when hovered.\", async() => {\n        const isHovered = (wrapper.vm as unknown as typeof Index).isAboutButtonHovered as Ref<boolean>;\n        isHovered.value = true;\n        await nextTick();\n        const aboutButtonIcon = wrapper.findComponent<typeof FontAwesomeIcon>(\"#about-button-icon\");\n\n        expect(aboutButtonIcon.attributes(\"class\")).toContain(\"animate__rubberBand\");\n      });\n    });\n  });\n});"
    },
    "tests/unit/specs/error.nuxt.spec.ts": {
      "tests": [
        {
          "id": "55",
          "name": "Error Component should match snapshot when rendered."
        },
        {
          "id": "56",
          "name": "Error Component Error Title should set head title of error title when rendered."
        },
        {
          "id": "57",
          "name": "Error Component Error Title should render page not found title when error status code is 404."
        },
        {
          "id": "58",
          "name": "Error Component Error Title should render unexpected error title when error status code is not 404."
        },
        {
          "id": "59",
          "name": "Error Component Lottie Error should set size to lottie when rendered."
        },
        {
          "id": "60",
          "name": "Error Component Error description should render page not found description when error status code is 404."
        },
        {
          "id": "61",
          "name": "Error Component Error description should render unexpected error description when error status code is not 404."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport { expect } from \"vitest\";\nimport type { ComputedRef } from \"vue\";\nimport type { Vue3Lottie } from \"vue3-lottie\";\n\nimport { createFakeNuxtError } from \"@tests/unit/utils/factories/nuxt/nuxt-error.factory\";\nimport Error from \"~/error.vue\";\nimport { mountComponent } from \"@tests/unit/utils/helpers/mount.helpers\";\nimport type { ErrorProps } from \"~/types/error.types\";\n\ndescribe(\"Error Component\", () => {\n  const defaultProps: ErrorProps = { error: createFakeNuxtError({ statusCode: 404 }) };\n  let wrapper: ReturnType<typeof mount<typeof Error>>;\n\n  function mountErrorComponent(options: ComponentMountingOptions<typeof Error> = {}): ReturnType<typeof mount<typeof Error>> {\n    return mountComponent(Error, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(() => {\n    wrapper = mountErrorComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Error Title\", () => {\n    it(\"should set head title of error title when rendered.\", () => {\n      const expectedPartialUseHeadInput = { title: expect.objectContaining({ value: \"components.Error.pageNotFound\" }) as ComputedRef<string> };\n\n      expect(useHead).toHaveBeenCalledWith(expect.objectContaining(expectedPartialUseHeadInput));\n    });\n\n    it(\"should render page not found title when error status code is 404.\", async() => {\n      defaultProps.error.statusCode = 404;\n      await nextTick();\n      const title = wrapper.find<HTMLHeadingElement>(\"#error-title\");\n\n      expect(title.text()).toBe(\"components.Error.pageNotFound\");\n    });\n\n    it(\"should render unexpected error title when error status code is not 404.\", () => {\n      wrapper = mountErrorComponent({ props: { error: createFakeNuxtError({ statusCode: 500 }) } });\n      const title = wrapper.find<HTMLHeadingElement>(\"#error-title\");\n\n      expect(title.text()).toBe(\"components.Error.unexpectedError\");\n    });\n  });\n\n  describe(\"Lottie Error\", () => {\n    it(\"should set size to lottie when rendered.\", () => {\n      const lottie = wrapper.findComponent<typeof Vue3Lottie>(\"#lottie-error\");\n\n      expect(lottie.props(\"height\")).toBe(\"250px\");\n      expect(lottie.props(\"width\")).toBe(\"250px\");\n    });\n  });\n\n  describe(\"Error description\", () => {\n    it(\"should render page not found description when error status code is 404.\", () => {\n      const description = wrapper.find<HTMLParagraphElement>(\"#error-description\");\n\n      expect(description.text()).toBe(\"components.Error.youAreLost\");\n    });\n\n    it(\"should render unexpected error description when error status code is not 404.\", () => {\n      wrapper = mountErrorComponent({ props: { error: createFakeNuxtError({ statusCode: 500 }) } });\n      const description = wrapper.find<HTMLParagraphElement>(\"#error-description\");\n\n      expect(description.text()).toBe(\"components.Error.notNormalTeamNotified\");\n    });\n  });\n});"
    },
    "tests/unit/specs/app.nuxt.spec.ts": {
      "tests": [
        {
          "id": "62",
          "name": "App Component should match snapshot when rendered."
        },
        {
          "id": "63",
          "name": "App Component should render component without shallow and match snapshot when rendered."
        },
        {
          "id": "64",
          "name": "App Component should define OgImage when rendered."
        },
        {
          "id": "65",
          "name": "App Component should set head title and meta tags when rendered."
        },
        {
          "id": "66",
          "name": "App Component should fetch and set roles from store when rendered."
        },
        {
          "id": "67",
          "name": "App Component should set howler audio settings from audio store when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { UseHeadInput } from \"unhead\";\n\nimport App from \"@/app.vue\";\nimport { useAudioStore } from \"~/stores/audio/useAudioStore\";\nimport { useRolesStore } from \"~/stores/role/useRolesStore\";\nimport { mountSuspendedComponent } from \"@tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"App Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof App>>;\n\n  beforeEach(async() => {\n    wrapper = await mountSuspendedComponent(App);\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  it(\"should render component without shallow and match snapshot when rendered.\", async() => {\n    wrapper = await mountSuspendedComponent(App, { shallow: false });\n\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  it(\"should define OgImage when rendered.\", () => {\n    expect(defineOgImageComponent).toHaveBeenCalledExactlyOnceWith(\"DefaultOgImage\");\n  });\n\n  it(\"should set head title and meta tags when rendered.\", () => {\n    const expectedUseHeadInput: UseHeadInput<object> = {\n      title: \"shared.werewolvesAssistant\",\n      meta: [\n        { name: \"application-name\", content: \"shared.werewolvesAssistant\" },\n        { name: \"creator\", content: \"Antoine ZANARDI\" },\n        { name: \"description\", content: \"components.App.seoDescription\" },\n        { name: \"viewport\", content: \"width=device-width, initial-scale=1\" },\n        { name: \"charset\", content: \"utf-8\" },\n        { name: \"generator\", content: \"nuxt\" },\n        { name: \"color-scheme\", content: \"dark\" },\n      ],\n    };\n\n    expect(useHead).toHaveBeenCalledExactlyOnceWith(expectedUseHeadInput);\n  });\n\n  it(\"should fetch and set roles from store when rendered.\", () => {\n    const rolesStore = useRolesStore();\n\n    expect(rolesStore.fetchAndSetRoles).toHaveBeenCalledExactlyOnceWith();\n  });\n\n  it(\"should set howler audio settings from audio store when rendered.\", () => {\n    const audioStore = useAudioStore();\n\n    expect(audioStore.setHowlerAudioSettingsFromAudioStoreState).toHaveBeenCalledExactlyOnceWith();\n  });\n});"
    },
    "tests/unit/specs/pages/about/about.nuxt.spec.ts": {
      "tests": [
        {
          "id": "68",
          "name": "About Page Component should match snapshot when rendered."
        },
        {
          "id": "69",
          "name": "About Page Component should set head title and meta tags when rendered."
        },
        {
          "id": "70",
          "name": "About Page Component Title should display role image of werewolf when rendered."
        },
        {
          "id": "71",
          "name": "About Page Component Title should display translated title when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { UseHeadInput } from \"unhead\";\nimport { expect } from \"vitest\";\n\nimport type RoleImage from \"~/components/shared/role/RoleImage/RoleImage.vue\";\nimport About from \"~/pages/about.vue\";\nimport { mountSuspendedComponent } from \"@tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"About Page Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof About>>;\n\n  beforeEach(async() => {\n    wrapper = await mountSuspendedComponent(About);\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  it(\"should set head title and meta tags when rendered.\", () => {\n    const expectedUseHeadInput: UseHeadInput<object> = {\n      title: \"pages.about.whyAnAssistant\",\n      meta: [{ name: \"description\", content: \"pages.about.seoDescription\" }],\n    };\n\n    expect(useHead).toHaveBeenCalledExactlyOnceWith(expectedUseHeadInput);\n  });\n\n  describe(\"Title\", () => {\n    it(\"should display role image of werewolf when rendered.\", () => {\n      const roleImage = wrapper.findComponent<typeof RoleImage>(\"#about-role-image-title\");\n\n      expect(roleImage.props(\"roleName\")).toBe(\"werewolf\");\n    });\n\n    it(\"should display translated title when rendered.\", () => {\n      const title = wrapper.find<HTMLHeadElement>(\"#about-title\");\n\n      expect(title.text()).toBe(\"Why an assistant?\");\n    });\n  });\n});"
    }
  },
  "projectRoot": "/Users/antoinezanardi/WebstormProjects/werewolves-assistant-web-next",
  "config": {
    "cleanTempDir": "always",
    "incremental": true,
    "incrementalFile": "tests/stryker/incremental/pages-incremental.json",
    "checkers": [
      "typescript"
    ],
    "tsconfigFile": "tsconfig.json",
    "testRunner": "vitest",
    "ignoreStatic": true,
    "mutate": [
      "app/pages/**/*.vue",
      "app/app.vue",
      "app/error.vue",
      "!app/pages/**/*.constants.ts"
    ],
    "plugins": [
      "@stryker-mutator/vitest-runner",
      "@stryker-mutator/typescript-checker",
      "./config/stryker/plugins/stryker-define-props-ignorer-plugin.mjs",
      "./config/stryker/plugins/stryker-define-emits-ignorer-plugin.mjs",
      "./config/stryker/plugins/stryker-define-page-meta-ignorer-plugin.mjs",
      "./config/stryker/plugins/stryker-define-model-ignorer-plugin.mjs",
      "./config/stryker/plugins/stryker-define-expose-ignorer-plugin.mjs"
    ],
    "ignorers": [
      "defineProps",
      "defineEmits",
      "definePageMeta",
      "defineModel",
      "defineExpose"
    ],
    "ignorePatterns": [
      "!.nuxt/",
      ".github/",
      ".husky/",
      ".output/",
      ".run/",
      ".idea/",
      "config/commitlint",
      "config/cucumber",
      "config/eslint",
      "config/lint-staged",
      "config/stryker",
      "tests/acceptance",
      "tests/stryker",
      "tests/unit/coverage",
      "scripts/",
      "server/",
      ".editorconfig",
      ".npmrc",
      ".nvmrc",
      ".releaserc.js",
      ".DS_Store",
      ".validate-branch-namerc.json",
      "CHANGELOG.md",
      "LICENSE",
      "pnpm-lock.yaml",
      "sonar-project.properties",
      "README.md"
    ],
    "vitest": {
      "configFile": "config/vitest/vitest.pages-unit-tests-config.ts"
    },
    "reporters": [
      "clear-text",
      "progress",
      "html",
      "json"
    ],
    "htmlReporter": {
      "fileName": "tests/stryker/coverage/index.html"
    },
    "jsonReporter": {
      "fileName": "tests/stryker/coverage/mutation.json"
    },
    "thresholds": {
      "high": 100,
      "low": 100,
      "break": 100
    },
    "dryRunTimeoutMinutes": 10,
    "disableTypeChecks": true,
    "configFile": "config/stryker/stryker-pages.conf.mjs",
    "allowConsoleColors": true,
    "checkerNodeArgs": [],
    "commandRunner": {
      "command": "npm test"
    },
    "coverageAnalysis": "perTest",
    "clearTextReporter": {
      "allowColor": true,
      "allowEmojis": false,
      "logTests": true,
      "maxTestsToLog": 3,
      "reportTests": true,
      "reportMutants": true,
      "reportScoreTable": true,
      "skipFull": false
    },
    "dashboard": {
      "baseUrl": "https://dashboard.stryker-mutator.io/api/reports",
      "reportType": "full"
    },
    "dryRunOnly": false,
    "eventReporter": {
      "baseDir": "reports/mutation/events"
    },
    "force": false,
    "fileLogLevel": "off",
    "inPlace": false,
    "logLevel": "info",
    "maxConcurrentTestRunners": 9007199254740991,
    "maxTestRunnerReuse": 0,
    "mutator": {
      "plugins": null,
      "excludedMutations": []
    },
    "appendPlugins": [],
    "symlinkNodeModules": true,
    "tempDirName": ".stryker-tmp",
    "testRunnerNodeArgs": [],
    "timeoutFactor": 1.5,
    "timeoutMS": 5000,
    "warnings": true,
    "disableBail": false,
    "allowEmpty": false,
    "typescriptChecker": {
      "prioritizePerformanceOverAccuracy": true
    }
  },
  "framework": {
    "name": "StrykerJS",
    "version": "8.6.0",
    "branding": {
      "homepageUrl": "https://stryker-mutator.io",
      "imageUrl": "data:image/svg+xml;utf8,%3Csvg viewBox='0 0 1458 1458' xmlns='http://www.w3.org/2000/svg' fill-rule='evenodd' clip-rule='evenodd' stroke-linejoin='round' stroke-miterlimit='2'%3E%3Cpath fill='none' d='M0 0h1458v1458H0z'/%3E%3CclipPath id='a'%3E%3Cpath d='M0 0h1458v1458H0z'/%3E%3C/clipPath%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M1458 729c0 402.655-326.345 729-729 729S0 1131.655 0 729C0 326.445 326.345 0 729 0s729 326.345 729 729' fill='%23e74c3c' fill-rule='nonzero'/%3E%3Cpath d='M778.349 1456.15L576.6 1254.401l233-105 85-78.668v-64.332l-257-257-44-187-50-208 251.806-82.793L1076.6 389.401l380.14 379.15c-19.681 367.728-311.914 663.049-678.391 687.599z' fill-opacity='.3'/%3E%3Cpath d='M753.4 329.503c41.79 0 74.579 7.83 97.925 25.444 23.571 18.015 41.69 43.956 55.167 77.097l11.662 28.679 165.733-58.183-14.137-32.13c-26.688-60.655-64.896-108.61-114.191-144.011-49.329-35.423-117.458-54.302-204.859-54.302-50.78 0-95.646 7.376-134.767 21.542-40.093 14.671-74.09 34.79-102.239 60.259-28.84 26.207-50.646 57.06-65.496 92.701-14.718 35.052-22.101 72.538-22.101 112.401 0 72.536 20.667 133.294 61.165 182.704 38.624 47.255 98.346 88.037 179.861 121.291 42.257 17.475 78.715 33.125 109.227 46.994 27.193 12.361 49.294 26.124 66.157 41.751 15.309 14.186 26.497 30.584 33.63 49.258 7.721 20.214 11.16 45.69 11.16 76.402 0 28.021-4.251 51.787-13.591 71.219-8.832 18.374-20.171 33.178-34.523 44.219-14.787 11.374-31.193 19.591-49.393 24.466-19.68 5.359-39.14 7.993-58.69 7.993-29.359 0-54.387-3.407-75.182-10.747-20.112-7.013-37.144-16.144-51.259-27.486-13.618-11.009-24.971-23.766-33.744-38.279-9.64-15.8-17.272-31.924-23.032-48.408l-10.965-31.376-161.669 60.585 10.734 30.124c10.191 28.601 24.197 56.228 42.059 82.748 18.208 27.144 41.322 51.369 69.525 72.745 27.695 21.075 60.904 38.218 99.481 51.041 37.777 12.664 82.004 19.159 132.552 19.159 49.998 0 95.818-8.321 137.611-24.622 42.228-16.471 78.436-38.992 108.835-67.291 30.719-28.597 54.631-62.103 71.834-100.642 17.263-38.56 25.923-79.392 25.923-122.248 0-54.339-8.368-100.37-24.208-138.32-16.29-38.759-38.252-71.661-65.948-98.797-26.965-26.418-58.269-48.835-93.858-67.175-33.655-17.241-69.196-33.11-106.593-47.533-35.934-13.429-65.822-26.601-89.948-39.525-22.153-11.868-40.009-24.21-53.547-37.309-11.429-11.13-19.83-23.678-24.718-37.664-5.413-15.49-7.98-33.423-7.98-53.577 0-40.883 11.293-71.522 37.086-90.539 28.443-20.825 64.985-30.658 109.311-30.658z' fill='%23f1c40f' fill-rule='nonzero'/%3E%3Cpath d='M720 0h18v113h-18zM1458 738v-18h-113v18h113zM720 1345h18v113h-18zM113 738v-18H0v18h113z'/%3E%3C/g%3E%3C/svg%3E"
    },
    "dependencies": {
      "@stryker-mutator/typescript-checker": "8.6.0",
      "typescript": "5.6.3"
    }
  }
}