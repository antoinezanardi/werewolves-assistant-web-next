{
  "files": {
    "app/composables/api/error/useWerewolvesAssistantApiError.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "0",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/error/useWerewolvesAssistantApiError.ts(10,44): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "121",
            "122",
            "175"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 24
            },
            "start": {
              "column": 75,
              "line": 10
            }
          }
        },
        {
          "id": "1",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "121"
          ],
          "coveredBy": [
            "121",
            "122"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 22
            },
            "start": {
              "column": 124,
              "line": 14
            }
          }
        },
        {
          "id": "2",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"detail\": \"composables.useWerewolvesAssistantApiError.checkConsoleForMoreDetails\",\n    \"summary\": \"composables.useWerewolvesAssistantApiError.statusCode.404\",\n  },\n], but it was called with Object {}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "122"
          ],
          "coveredBy": [
            "121",
            "122"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 21
            },
            "start": {
              "column": 19,
              "line": 18
            }
          }
        },
        {
          "id": "3",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"detail\": \"composables.useWerewolvesAssistantApiError.checkConsoleForMoreDetails\",\n    \"summary\": \"composables.useWerewolvesAssistantApiError.statusCode.404\",\n  },\n], but it was called with Object {\n  \"detail\": \"composables.useWerewolvesAssistantApiError.checkConsoleForMoreDetails\",\n  \"summary\": \"\",\n}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "122"
          ],
          "coveredBy": [
            "121",
            "122"
          ],
          "location": {
            "end": {
              "column": 92,
              "line": 19
            },
            "start": {
              "column": 18,
              "line": 19
            }
          }
        },
        {
          "id": "4",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"detail\": \"composables.useWerewolvesAssistantApiError.checkConsoleForMoreDetails\",\n    \"summary\": \"composables.useWerewolvesAssistantApiError.statusCode.404\",\n  },\n], but it was called with Object {\n  \"detail\": \"\",\n  \"summary\": \"composables.useWerewolvesAssistantApiError.statusCode.404\",\n}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "122"
          ],
          "coveredBy": [
            "121",
            "122"
          ],
          "location": {
            "end": {
              "column": 88,
              "line": 20
            },
            "start": {
              "column": 17,
              "line": 20
            }
          }
        },
        {
          "id": "5",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/error/useWerewolvesAssistantApiError.ts(23,3): error TS2741: Property 'handleWerewolvesAssistantApiError' is missing in type '{}' but required in type 'UseWerewolvesAssistantApiError'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "121",
            "122",
            "175"
          ],
          "location": {
            "end": {
              "column": 47,
              "line": 23
            },
            "start": {
              "column": 10,
              "line": 23
            }
          }
        }
      ],
      "source": "import type { FetchResponse } from \"ofetch\";\n\nimport type { WerewolvesAssistantApiError } from \"~/composables/api/error/types/api-error.types\";\nimport { usePrimeVueToasts } from \"~/composables/prime-vue/usePrimeVueToasts\";\n\ntype UseWerewolvesAssistantApiError = {\n  handleWerewolvesAssistantApiError: (error: { response: FetchResponse<WerewolvesAssistantApiError> }) => void;\n};\n\nfunction useWerewolvesAssistantApiError(): UseWerewolvesAssistantApiError {\n  const { addErrorToast } = usePrimeVueToasts();\n  const { t } = useI18n();\n\n  function handleWerewolvesAssistantApiError({ response }: { response: FetchResponse<WerewolvesAssistantApiError> }): void {\n    const { _data: errorData } = response;\n    // eslint-disable-next-line no-console\n    console.error(errorData);\n    addErrorToast({\n      summary: t(`composables.useWerewolvesAssistantApiError.statusCode.${response.status}`),\n      detail: t(`composables.useWerewolvesAssistantApiError.checkConsoleForMoreDetails`),\n    });\n  }\n  return { handleWerewolvesAssistantApiError };\n}\n\nexport { useWerewolvesAssistantApiError };"
    },
    "app/composables/api/game/dto/create-game/create-game-additional-card/create-game-additional-card.dto.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "6",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/dto/create-game/create-game-additional-card/create-game-additional-card.dto.ts(14,83): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "162"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 16
            },
            "start": {
              "column": 111,
              "line": 14
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport type { GameAdditionalCardRecipientRoleName } from \"~/composables/api/game/types/game-additional-card/game-additional-card.types\";\nimport type { RoleName } from \"~/composables/api/role/types/role.types\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass CreateGameAdditionalCardDto {\n  @Expose()\n  public roleName: RoleName;\n\n  @Expose()\n  public recipient: GameAdditionalCardRecipientRoleName;\n\n  public static create(createGameAdditionalCardDto: CreateGameAdditionalCardDto): CreateGameAdditionalCardDto {\n    return plainToInstance(CreateGameAdditionalCardDto, createGameAdditionalCardDto, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { CreateGameAdditionalCardDto };"
    },
    "app/composables/api/game/dto/create-game/create-game-player/create-game-player-role.dto.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "7",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/dto/create-game/create-game-player/create-game-player-role.dto.ts(10,75): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "123",
            "124",
            "138"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 12
            },
            "start": {
              "column": 99,
              "line": 10
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport type { RoleName } from \"~/composables/api/role/types/role.types\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass CreateGamePlayerRoleDto {\n  @Expose()\n  public name?: RoleName;\n\n  public static create(createGamePlayerRoleDto: CreateGamePlayerRoleDto): CreateGamePlayerRoleDto {\n    return plainToInstance(CreateGamePlayerRoleDto, createGamePlayerRoleDto, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { CreateGamePlayerRoleDto };"
    },
    "app/composables/api/game/dto/create-game/create-game-player/create-game-player-side.dto.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "8",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/dto/create-game/create-game-player/create-game-player-side.dto.ts(13,75): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "123",
            "124",
            "138"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 15
            },
            "start": {
              "column": 99,
              "line": 13
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport type { RoleSide } from \"~/composables/api/role/types/role.types\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass CreateGamePlayerSideDto {\n  @Expose()\n  public original?: RoleSide;\n\n  @Expose()\n  public current?: RoleSide;\n\n  public static create(createGamePlayerSideDto: CreateGamePlayerSideDto): CreateGamePlayerSideDto {\n    return plainToInstance(CreateGamePlayerSideDto, createGamePlayerSideDto, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { CreateGamePlayerSideDto };"
    },
    "app/composables/api/game/dto/create-game/create-game-player/create-game-player.dto.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "9",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/dto/create-game/create-game-player/create-game-player.dto.ts(22,67): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "123",
            "124",
            "138"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 24
            },
            "start": {
              "column": 87,
              "line": 22
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\n\nimport { CreateGamePlayerRoleDto } from \"~/composables/api/game/dto/create-game/create-game-player/create-game-player-role.dto\";\nimport { CreateGamePlayerSideDto } from \"~/composables/api/game/dto/create-game/create-game-player/create-game-player-side.dto\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass CreateGamePlayerDto {\n  @Expose()\n  public name: string;\n\n  @Type(() => CreateGamePlayerRoleDto)\n  @Expose()\n  public role: CreateGamePlayerRoleDto;\n\n  @Type(() => CreateGamePlayerSideDto)\n  @Expose()\n  public side: CreateGamePlayerSideDto;\n\n  @Expose()\n  public group?: string;\n\n  public static create(createGamePlayerDto: CreateGamePlayerDto): CreateGamePlayerDto {\n    return plainToInstance(CreateGamePlayerDto, createGamePlayerDto, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\ntype CreateGamePlayerWithGroupDto = CreateGamePlayerDto & { group: string };\n\nexport { CreateGamePlayerDto };\n\nexport type { CreateGamePlayerWithGroupDto };"
    },
    "app/composables/api/game/dto/create-game/create-game.dto.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "10",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "app/composables/api/game/dto/create-game/create-game.dto.ts(12,44): error TS2322: Type 'string' is not assignable to type 'CreateGamePlayerDto'.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "35",
            "87",
            "88",
            "123",
            "124"
          ],
          "location": {
            "end": {
              "column": 45,
              "line": 12
            },
            "start": {
              "column": 43,
              "line": 12
            }
          }
        },
        {
          "id": "11",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/dto/create-game/create-game.dto.ts(22,67): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "35",
            "87",
            "88",
            "123"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 24
            },
            "start": {
              "column": 81,
              "line": 22
            }
          }
        },
        {
          "id": "12",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/dto/create-game/create-game.dto.ts(26,20): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "87",
            "88",
            "124"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 28
            },
            "start": {
              "column": 27,
              "line": 26
            }
          }
        }
      ],
      "source": "import { Expose, instanceToPlain, plainToInstance, Type } from \"class-transformer\";\n\nimport { CreateGameAdditionalCardDto } from \"~/composables/api/game/dto/create-game/create-game-additional-card/create-game-additional-card.dto\";\nimport { CreateGamePlayerDto } from \"~/composables/api/game/dto/create-game/create-game-player/create-game-player.dto\";\nimport { GameOptions } from \"~/composables/api/game/types/game-options/game-options.class\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\nimport type { OmitToJSON } from \"~/utils/types/class.types\";\n\nclass CreateGameDto {\n  @Type(() => CreateGamePlayerDto)\n  @Expose()\n  public players: CreateGamePlayerDto[] = [];\n\n  @Type(() => CreateGameAdditionalCardDto)\n  @Expose()\n  public additionalCards?: CreateGameAdditionalCardDto[];\n\n  @Type(() => GameOptions)\n  @Expose()\n  public options: GameOptions;\n\n  public static create(createGameDto: OmitToJSON<CreateGameDto>): CreateGameDto {\n    return plainToInstance(CreateGameDto, createGameDto, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n\n  public toJSON(): object {\n    return instanceToPlain(this);\n  }\n}\n\nexport { CreateGameDto };"
    },
    "app/composables/api/game/dto/create-game-feedback/create-game-feedback.dto.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "13",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/dto/create-game-feedback/create-game-feedback.dto.ts(15,71): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "95",
            "96",
            "154"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 17
            },
            "start": {
              "column": 93,
              "line": 15
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass CreateGameFeedbackDto {\n  @Expose()\n  public score: number;\n\n  @Expose()\n  public review?: string;\n\n  @Expose()\n  public hasEncounteredError: boolean;\n\n  public static create(createGameFeedbackDto: CreateGameFeedbackDto): CreateGameFeedbackDto {\n    return plainToInstance(CreateGameFeedbackDto, createGameFeedbackDto, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { CreateGameFeedbackDto };"
    },
    "app/composables/api/game/dto/make-game-play/make-game-play-target/make-game-play-target.dto.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "14",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 15
            },
            "start": {
              "column": 93,
              "line": 13
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport type { WitchPotion } from \"~/composables/api/game/types/game-play/game-play.types\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass MakeGamePlayTargetDto {\n  @Expose()\n  public playerId: string;\n\n  @Expose()\n  public drankPotion?: WitchPotion;\n\n  public static create(makeGamePlayTargetDto: MakeGamePlayTargetDto): MakeGamePlayTargetDto {\n    return plainToInstance(MakeGamePlayTargetDto, makeGamePlayTargetDto, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { MakeGamePlayTargetDto };"
    },
    "app/composables/api/game/dto/make-game-play/make-game-play-vote/make-game-play-vote.dto.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "15",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 14
            },
            "start": {
              "column": 87,
              "line": 12
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass MakeGamePlayVoteDto {\n  @Expose()\n  public sourceId: string;\n\n  @Expose()\n  public targetId: string;\n\n  public static create(makeGamePlayVoteDto: MakeGamePlayVoteDto): MakeGamePlayVoteDto {\n    return plainToInstance(MakeGamePlayVoteDto, makeGamePlayVoteDto, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { MakeGamePlayVoteDto };"
    },
    "app/composables/api/game/dto/make-game-play/make-game-play.dto.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "16",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/dto/make-game-play/make-game-play.dto.ts(26,59): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "57",
            "58",
            "93",
            "94"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 28
            },
            "start": {
              "column": 75,
              "line": 26
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\n\nimport { MakeGamePlayTargetDto } from \"~/composables/api/game/dto/make-game-play/make-game-play-target/make-game-play-target.dto\";\nimport { MakeGamePlayVoteDto } from \"~/composables/api/game/dto/make-game-play/make-game-play-vote/make-game-play-vote.dto\";\nimport type { RoleSide } from \"~/composables/api/role/types/role.types\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass MakeGamePlayDto {\n  @Type(() => MakeGamePlayTargetDto)\n  @Expose()\n  public targets?: MakeGamePlayTargetDto[];\n\n  @Type(() => MakeGamePlayVoteDto)\n  @Expose()\n  public votes?: MakeGamePlayVoteDto[];\n\n  @Expose()\n  public doesJudgeRequestAnotherVote?: boolean;\n\n  @Expose()\n  public chosenCardId?: string;\n\n  @Expose()\n  public chosenSide?: RoleSide;\n\n  public static create(makeGamePlayDto: MakeGamePlayDto): MakeGamePlayDto {\n    return plainToInstance(MakeGamePlayDto, makeGamePlayDto, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { MakeGamePlayDto };"
    },
    "app/composables/api/game/game-history-record/useFetchGameHistoryRecords.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "17",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-history-record/useFetchGameHistoryRecords.ts(8,40): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "126",
            "127"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 19
            },
            "start": {
              "column": 60,
              "line": 8
            }
          }
        },
        {
          "id": "18",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-history-record/useFetchGameHistoryRecords.ts(11,57): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "126",
            "127"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 17
            },
            "start": {
              "column": 120,
              "line": 11
            }
          }
        },
        {
          "id": "19",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-history-record/useFetchGameHistoryRecords.ts(11,57): error TS2366: Function lacks ending return statement and return type does not include 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "126",
            "127"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 14
            },
            "start": {
              "column": 9,
              "line": 12
            }
          }
        },
        {
          "id": "20",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games/gameId/history\",\n  Object {\n    \"method\": \"GET\",\n  },\n], but it was called with \"\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "126"
          ],
          "coveredBy": [
            "126",
            "127"
          ],
          "location": {
            "end": {
              "column": 95,
              "line": 13
            },
            "start": {
              "column": 69,
              "line": 13
            }
          }
        },
        {
          "id": "21",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games/gameId/history\",\n  Object {\n    \"method\": \"GET\",\n  },\n], but it was called with \"/games/gameId/history\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "126"
          ],
          "coveredBy": [
            "126",
            "127"
          ],
          "location": {
            "end": {
              "column": 114,
              "line": 13
            },
            "start": {
              "column": 97,
              "line": 13
            }
          }
        },
        {
          "id": "22",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games/gameId/history\",\n  Object {\n    \"method\": \"GET\",\n  },\n], but it was called with \"/games/gameId/history\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "126"
          ],
          "coveredBy": [
            "126",
            "127"
          ],
          "location": {
            "end": {
              "column": 112,
              "line": 13
            },
            "start": {
              "column": 107,
              "line": 13
            }
          }
        },
        {
          "id": "23",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-history-record/useFetchGameHistoryRecords.ts(11,57): error TS2366: Function lacks ending return statement and return type does not include 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "127"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 16
            },
            "start": {
              "column": 13,
              "line": 14
            }
          }
        },
        {
          "id": "24",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-history-record/useFetchGameHistoryRecords.ts(18,3): error TS2741: Property 'getGameHistoryRecords' is missing in type '{}' but required in type 'UseFetchGameHistory'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "126",
            "127"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 18
            },
            "start": {
              "column": 10,
              "line": 18
            }
          }
        }
      ],
      "source": "import type { GameHistoryRecord } from \"~/composables/api/game/types/game-history-record/game-history-record.class\";\nimport { useWerewolvesAssistantApi } from \"~/composables/api/useWerewolvesAssistantApi\";\n\ntype UseFetchGameHistory = {\n  getGameHistoryRecords: (gameId: string) => Promise<ReturnType<typeof $fetch<GameHistoryRecord[]>> | null>;\n};\n\nfunction useFetchGameHistoryRecords(): UseFetchGameHistory {\n  const { fetchWerewolvesAssistantApi } = useWerewolvesAssistantApi();\n\n  async function getGameHistoryRecords(gameId: string): Promise<ReturnType<typeof $fetch<GameHistoryRecord[]>> | null> {\n    try {\n      return await fetchWerewolvesAssistantApi<GameHistoryRecord[]>(`/games/${gameId}/history`, { method: \"GET\" });\n    } catch {\n      return null;\n    }\n  }\n  return { getGameHistoryRecords };\n}\n\nexport { useFetchGameHistoryRecords };"
    },
    "app/composables/api/game/game-history-record/useGameHistoryRecord.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "25",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-history-record/useGameHistoryRecord.ts(7,34): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "97",
            "98",
            "99",
            "100",
            "101"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 23
            },
            "start": {
              "column": 55,
              "line": 7
            }
          }
        },
        {
          "id": "26",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-history-record/useGameHistoryRecord.ts(8,68): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "97",
            "98",
            "99",
            "100",
            "101"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 21
            },
            "start": {
              "column": 76,
              "line": 8
            }
          }
        },
        {
          "id": "27",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "101"
          ],
          "coveredBy": [
            "97",
            "98",
            "99",
            "100",
            "101"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 20
            },
            "start": {
              "column": 12,
              "line": 17
            }
          }
        },
        {
          "id": "28",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "97"
          ],
          "coveredBy": [
            "97",
            "98",
            "99",
            "100",
            "101"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 20
            },
            "start": {
              "column": 12,
              "line": 17
            }
          }
        },
        {
          "id": "29",
          "mutatorName": "LogicalOperator",
          "replacement": "(type === \"vote\" && !votes || type === \"target\" && !targets || type === \"request-another-vote\" && didJudgeRequestAnotherVote === undefined) && type === \"choose-card\" && !chosenCard",
          "statusReason": "app/composables/api/game/game-history-record/useGameHistoryRecord.ts(17,155): error TS2367: This comparison appears to be unintentional because the types '\"vote\" | \"target\" | \"request-another-vote\"' and '\"choose-card\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "97",
            "98",
            "99",
            "100",
            "101"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 20
            },
            "start": {
              "column": 12,
              "line": 17
            }
          }
        },
        {
          "id": "30",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "97"
          ],
          "coveredBy": [
            "97",
            "98",
            "99",
            "100",
            "101"
          ],
          "location": {
            "end": {
              "column": 82,
              "line": 19
            },
            "start": {
              "column": 12,
              "line": 17
            }
          }
        },
        {
          "id": "31",
          "mutatorName": "LogicalOperator",
          "replacement": "(type === \"vote\" && !votes || type === \"target\" && !targets) && type === \"request-another-vote\" && didJudgeRequestAnotherVote === undefined",
          "statusReason": "app/composables/api/game/game-history-record/useGameHistoryRecord.ts(17,76): error TS2367: This comparison appears to be unintentional because the types '\"vote\" | \"target\"' and '\"request-another-vote\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "97",
            "98",
            "99",
            "100",
            "101"
          ],
          "location": {
            "end": {
              "column": 82,
              "line": 19
            },
            "start": {
              "column": 12,
              "line": 17
            }
          }
        },
        {
          "id": "32",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "97"
          ],
          "coveredBy": [
            "97",
            "98",
            "99",
            "100",
            "101"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 18
            },
            "start": {
              "column": 12,
              "line": 17
            }
          }
        },
        {
          "id": "33",
          "mutatorName": "LogicalOperator",
          "replacement": "type === \"vote\" && !votes && type === \"target\" && !targets",
          "statusReason": "app/composables/api/game/game-history-record/useGameHistoryRecord.ts(17,41): error TS2367: This comparison appears to be unintentional because the types '\"vote\"' and '\"target\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "97",
            "98",
            "99",
            "100",
            "101"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 18
            },
            "start": {
              "column": 12,
              "line": 17
            }
          }
        },
        {
          "id": "34",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "97"
          ],
          "coveredBy": [
            "97",
            "98",
            "99",
            "100",
            "101"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 17
            },
            "start": {
              "column": 12,
              "line": 17
            }
          }
        },
        {
          "id": "35",
          "mutatorName": "LogicalOperator",
          "replacement": "type === \"vote\" || !votes",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "101"
          ],
          "coveredBy": [
            "97",
            "98",
            "99",
            "100",
            "101"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 17
            },
            "start": {
              "column": 12,
              "line": 17
            }
          }
        },
        {
          "id": "36",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "101"
          ],
          "coveredBy": [
            "97",
            "98",
            "99",
            "100",
            "101"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 17
            },
            "start": {
              "column": 12,
              "line": 17
            }
          }
        },
        {
          "id": "37",
          "mutatorName": "EqualityOperator",
          "replacement": "type !== \"vote\"",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "97"
          ],
          "coveredBy": [
            "97",
            "98",
            "99",
            "100",
            "101"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 17
            },
            "start": {
              "column": 12,
              "line": 17
            }
          }
        },
        {
          "id": "38",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/api/game/game-history-record/useGameHistoryRecord.ts(17,12): error TS2367: This comparison appears to be unintentional because the types '\"vote\" | \"no-action\" | \"target\" | \"choose-card\" | \"choose-side\" | \"request-another-vote\" | \"bury-dead-bodies\"' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "97",
            "98",
            "99",
            "100",
            "101"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 17
            },
            "start": {
              "column": 21,
              "line": 17
            }
          }
        },
        {
          "id": "39",
          "mutatorName": "BooleanLiteral",
          "replacement": "votes",
          "statusReason": "app/composables/api/game/game-history-record/useGameHistoryRecord.ts(17,5): error TS2322: Type 'boolean | GameHistoryRecordPlayVote[]' is not assignable to type 'boolean'.\n  Type 'GameHistoryRecordPlayVote[]' is not assignable to type 'boolean'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "97",
            "101"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 17
            },
            "start": {
              "column": 31,
              "line": 17
            }
          }
        },
        {
          "id": "40",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "98"
          ],
          "coveredBy": [
            "98",
            "99",
            "100",
            "101"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 18
            },
            "start": {
              "column": 7,
              "line": 18
            }
          }
        },
        {
          "id": "41",
          "mutatorName": "LogicalOperator",
          "replacement": "type === \"target\" || !targets",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "101"
          ],
          "coveredBy": [
            "98",
            "99",
            "100",
            "101"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 18
            },
            "start": {
              "column": 7,
              "line": 18
            }
          }
        },
        {
          "id": "42",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "101"
          ],
          "coveredBy": [
            "98",
            "99",
            "100",
            "101"
          ],
          "location": {
            "end": {
              "column": 24,
              "line": 18
            },
            "start": {
              "column": 7,
              "line": 18
            }
          }
        },
        {
          "id": "43",
          "mutatorName": "EqualityOperator",
          "replacement": "type !== \"target\"",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "98"
          ],
          "coveredBy": [
            "98",
            "99",
            "100",
            "101"
          ],
          "location": {
            "end": {
              "column": 24,
              "line": 18
            },
            "start": {
              "column": 7,
              "line": 18
            }
          }
        },
        {
          "id": "44",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/api/game/game-history-record/useGameHistoryRecord.ts(18,7): error TS2367: This comparison appears to be unintentional because the types '\"vote\" | \"no-action\" | \"target\" | \"choose-card\" | \"choose-side\" | \"request-another-vote\" | \"bury-dead-bodies\"' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "98",
            "99",
            "100",
            "101"
          ],
          "location": {
            "end": {
              "column": 24,
              "line": 18
            },
            "start": {
              "column": 16,
              "line": 18
            }
          }
        },
        {
          "id": "45",
          "mutatorName": "BooleanLiteral",
          "replacement": "targets",
          "statusReason": "app/composables/api/game/game-history-record/useGameHistoryRecord.ts(17,5): error TS2322: Type 'boolean | GameHistoryRecordPlayTarget[]' is not assignable to type 'boolean'.\n  Type 'GameHistoryRecordPlayTarget[]' is not assignable to type 'boolean'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "98",
            "101"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 18
            },
            "start": {
              "column": 28,
              "line": 18
            }
          }
        },
        {
          "id": "46",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "99"
          ],
          "coveredBy": [
            "99",
            "100",
            "101"
          ],
          "location": {
            "end": {
              "column": 82,
              "line": 19
            },
            "start": {
              "column": 7,
              "line": 19
            }
          }
        },
        {
          "id": "47",
          "mutatorName": "LogicalOperator",
          "replacement": "type === \"request-another-vote\" || didJudgeRequestAnotherVote === undefined",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "101"
          ],
          "coveredBy": [
            "99",
            "100",
            "101"
          ],
          "location": {
            "end": {
              "column": 82,
              "line": 19
            },
            "start": {
              "column": 7,
              "line": 19
            }
          }
        },
        {
          "id": "48",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "101"
          ],
          "coveredBy": [
            "99",
            "100",
            "101"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 19
            },
            "start": {
              "column": 7,
              "line": 19
            }
          }
        },
        {
          "id": "49",
          "mutatorName": "EqualityOperator",
          "replacement": "type !== \"request-another-vote\"",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "99"
          ],
          "coveredBy": [
            "99",
            "100",
            "101"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 19
            },
            "start": {
              "column": 7,
              "line": 19
            }
          }
        },
        {
          "id": "50",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/api/game/game-history-record/useGameHistoryRecord.ts(19,7): error TS2367: This comparison appears to be unintentional because the types '\"vote\" | \"no-action\" | \"target\" | \"choose-card\" | \"choose-side\" | \"request-another-vote\" | \"bury-dead-bodies\"' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "99",
            "100",
            "101"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 19
            },
            "start": {
              "column": 16,
              "line": 19
            }
          }
        },
        {
          "id": "51",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "101"
          ],
          "coveredBy": [
            "99",
            "101"
          ],
          "location": {
            "end": {
              "column": 82,
              "line": 19
            },
            "start": {
              "column": 42,
              "line": 19
            }
          }
        },
        {
          "id": "52",
          "mutatorName": "EqualityOperator",
          "replacement": "didJudgeRequestAnotherVote !== undefined",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "99"
          ],
          "coveredBy": [
            "99",
            "101"
          ],
          "location": {
            "end": {
              "column": 82,
              "line": 19
            },
            "start": {
              "column": 42,
              "line": 19
            }
          }
        },
        {
          "id": "53",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "100"
          ],
          "coveredBy": [
            "100",
            "101"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 20
            },
            "start": {
              "column": 7,
              "line": 20
            }
          }
        },
        {
          "id": "54",
          "mutatorName": "LogicalOperator",
          "replacement": "type === \"choose-card\" || !chosenCard",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "101"
          ],
          "coveredBy": [
            "100",
            "101"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 20
            },
            "start": {
              "column": 7,
              "line": 20
            }
          }
        },
        {
          "id": "55",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "101"
          ],
          "coveredBy": [
            "100",
            "101"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 20
            },
            "start": {
              "column": 7,
              "line": 20
            }
          }
        },
        {
          "id": "56",
          "mutatorName": "EqualityOperator",
          "replacement": "type !== \"choose-card\"",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "100"
          ],
          "coveredBy": [
            "100",
            "101"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 20
            },
            "start": {
              "column": 7,
              "line": 20
            }
          }
        },
        {
          "id": "57",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/api/game/game-history-record/useGameHistoryRecord.ts(20,7): error TS2367: This comparison appears to be unintentional because the types '\"vote\" | \"no-action\" | \"target\" | \"choose-card\" | \"choose-side\" | \"request-another-vote\" | \"bury-dead-bodies\"' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "100",
            "101"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 20
            },
            "start": {
              "column": 16,
              "line": 20
            }
          }
        },
        {
          "id": "58",
          "mutatorName": "BooleanLiteral",
          "replacement": "chosenCard",
          "statusReason": "app/composables/api/game/game-history-record/useGameHistoryRecord.ts(17,5): error TS2322: Type 'boolean | GameAdditionalCard | undefined' is not assignable to type 'boolean'.\n  Type 'undefined' is not assignable to type 'boolean'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "100",
            "101"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 20
            },
            "start": {
              "column": 33,
              "line": 20
            }
          }
        },
        {
          "id": "59",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-history-record/useGameHistoryRecord.ts(22,3): error TS2741: Property 'didSourceSkipped' is missing in type '{}' but required in type 'UseGameHistoryRecord'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "97",
            "98",
            "99",
            "100",
            "101"
          ],
          "location": {
            "end": {
              "column": 30,
              "line": 22
            },
            "start": {
              "column": 10,
              "line": 22
            }
          }
        }
      ],
      "source": "import type { GameHistoryRecord } from \"~/composables/api/game/types/game-history-record/game-history-record.class\";\n\ntype UseGameHistoryRecord = {\n  didSourceSkipped: (gameHistoryRecord: GameHistoryRecord) => boolean;\n};\n\nfunction useGameHistoryRecord(): UseGameHistoryRecord {\n  function didSourceSkipped(gameHistoryRecord: GameHistoryRecord): boolean {\n    const {\n      type,\n      votes,\n      targets,\n      didJudgeRequestAnotherVote,\n      chosenCard,\n    } = gameHistoryRecord.play;\n\n    return type === \"vote\" && !votes ||\n      type === \"target\" && !targets ||\n      type === \"request-another-vote\" && didJudgeRequestAnotherVote === undefined ||\n      type === \"choose-card\" && !chosenCard;\n  }\n  return { didSourceSkipped };\n}\n\nexport { useGameHistoryRecord };"
    },
    "app/composables/api/game/game-history-record/useGameLastHistoryRecord.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "60",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-history-record/useGameLastHistoryRecord.ts(15,58): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "83",
            "84",
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 37
            },
            "start": {
              "column": 83,
              "line": 15
            }
          }
        },
        {
          "id": "61",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "app/composables/api/game/game-history-record/useGameLastHistoryRecord.ts(16,33): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<GameHistoryRecord | null>, debugOptions?: DebuggerOptions | undefined): ComputedRef<GameHistoryRecord | null>', gave the following error.\n    Type 'undefined' is not assignable to type 'GameHistoryRecord | null'.\n  Overload 2 of 2, '(options: WritableComputedOptions<GameHistoryRecord | null, GameHistoryRecord | null>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => undefined' is not assignable to parameter of type 'WritableComputedOptions<GameHistoryRecord | null, GameHistoryRecord | null>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "83",
            "84",
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 151,
              "line": 16
            },
            "start": {
              "column": 68,
              "line": 16
            }
          }
        },
        {
          "id": "62",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-history-record/useGameLastHistoryRecord.ts(18,50): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<Player[]>, debugOptions?: DebuggerOptions | undefined): ComputedRef<Player[]>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'ComputedGetter<Player[]>'.\n      Type 'void' is not assignable to type 'Player[]'.\n  Overload 2 of 2, '(options: WritableComputedOptions<Player[], Player[]>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<Player[], Player[]>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'WritableComputedOptions<Player[], Player[]>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "83",
            "84"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 23
            },
            "start": {
              "column": 56,
              "line": 18
            }
          }
        },
        {
          "id": "63",
          "mutatorName": "BooleanLiteral",
          "replacement": "lastGameHistoryRecord.value?.play.targets",
          "statusReason": "app/composables/api/game/game-history-record/useGameLastHistoryRecord.ts(22,12): error TS18047: 'lastGameHistoryRecord.value' is possibly 'null'.\napp/composables/api/game/game-history-record/useGameLastHistoryRecord.ts(22,12): error TS18048: 'lastGameHistoryRecord.value.play.targets' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "83",
            "84"
          ],
          "location": {
            "end": {
              "column": 51,
              "line": 19
            },
            "start": {
              "column": 9,
              "line": 19
            }
          }
        },
        {
          "id": "64",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "app/composables/api/game/game-history-record/useGameLastHistoryRecord.ts(22,12): error TS18047: 'lastGameHistoryRecord.value' is possibly 'null'.\napp/composables/api/game/game-history-record/useGameLastHistoryRecord.ts(22,12): error TS18048: 'lastGameHistoryRecord.value.play.targets' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "83",
            "84"
          ],
          "location": {
            "end": {
              "column": 51,
              "line": 19
            },
            "start": {
              "column": 9,
              "line": 19
            }
          }
        },
        {
          "id": "65",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "app/composables/api/game/game-history-record/useGameLastHistoryRecord.ts(22,12): error TS18047: 'lastGameHistoryRecord.value' is possibly 'null'.\napp/composables/api/game/game-history-record/useGameLastHistoryRecord.ts(22,12): error TS18048: 'lastGameHistoryRecord.value.play.targets' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "83",
            "84"
          ],
          "location": {
            "end": {
              "column": 51,
              "line": 19
            },
            "start": {
              "column": 9,
              "line": 19
            }
          }
        },
        {
          "id": "66",
          "mutatorName": "OptionalChaining",
          "replacement": "lastGameHistoryRecord.value.play",
          "statusReason": "app/composables/api/game/game-history-record/useGameLastHistoryRecord.ts(19,10): error TS18047: 'lastGameHistoryRecord.value' is possibly 'null'.\napp/composables/api/game/game-history-record/useGameLastHistoryRecord.ts(22,12): error TS18047: 'lastGameHistoryRecord.value' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "83",
            "84"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 19
            },
            "start": {
              "column": 10,
              "line": 19
            }
          }
        },
        {
          "id": "67",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-history-record/useGameLastHistoryRecord.ts(20,12): error TS18047: 'lastGameHistoryRecord.value' is possibly 'null'.\napp/composables/api/game/game-history-record/useGameLastHistoryRecord.ts(20,12): error TS18048: 'lastGameHistoryRecord.value.play.targets' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "83"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 21
            },
            "start": {
              "column": 53,
              "line": 19
            }
          }
        },
        {
          "id": "68",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "app/composables/api/game/game-history-record/useGameLastHistoryRecord.ts(18,50): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<Player[]>, debugOptions?: DebuggerOptions | undefined): ComputedRef<Player[]>', gave the following error.\n    Argument of type '() => string[] | Player[]' is not assignable to parameter of type 'ComputedGetter<Player[]>'.\n      Type 'string[] | Player[]' is not assignable to type 'Player[]'.\n        Type 'string[]' is not assignable to type 'Player[]'.\n          Type 'string' is not assignable to type 'Player'.\n  Overload 2 of 2, '(options: WritableComputedOptions<Player[], Player[]>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<Player[], Player[]>', gave the following error.\n    Argument of type '() => string[] | Player[]' is not assignable to parameter of type 'WritableComputedOptions<Player[], Player[]>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "83"
          ],
          "location": {
            "end": {
              "column": 16,
              "line": 20
            },
            "start": {
              "column": 14,
              "line": 20
            }
          }
        },
        {
          "id": "69",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "app/composables/api/game/game-history-record/useGameLastHistoryRecord.ts(18,50): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<Player[]>, debugOptions?: DebuggerOptions | undefined): ComputedRef<Player[]>', gave the following error.\n    Argument of type '() => undefined[]' is not assignable to parameter of type 'ComputedGetter<Player[]>'.\n      Type 'undefined[]' is not assignable to type 'Player[]'.\n        Type 'undefined' is not assignable to type 'Player'.\n  Overload 2 of 2, '(options: WritableComputedOptions<Player[], Player[]>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<Player[], Player[]>', gave the following error.\n    Argument of type '() => undefined[]' is not assignable to parameter of type 'WritableComputedOptions<Player[], Player[]>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "84"
          ],
          "location": {
            "end": {
              "column": 80,
              "line": 22
            },
            "start": {
              "column": 57,
              "line": 22
            }
          }
        },
        {
          "id": "70",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-history-record/useGameLastHistoryRecord.ts(25,161): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 32
            },
            "start": {
              "column": 169,
              "line": 25
            }
          }
        },
        {
          "id": "71",
          "mutatorName": "BooleanLiteral",
          "replacement": "lastGameHistoryRecord.value?.playerAttributeAlterations",
          "statusReason": "app/composables/api/game/game-history-record/useGameLastHistoryRecord.ts(29,12): error TS18047: 'lastGameHistoryRecord.value' is possibly 'null'.\napp/composables/api/game/game-history-record/useGameLastHistoryRecord.ts(29,12): error TS18048: 'lastGameHistoryRecord.value.playerAttributeAlterations' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 65,
              "line": 26
            },
            "start": {
              "column": 9,
              "line": 26
            }
          }
        },
        {
          "id": "72",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "app/composables/api/game/game-history-record/useGameLastHistoryRecord.ts(29,12): error TS18047: 'lastGameHistoryRecord.value' is possibly 'null'.\napp/composables/api/game/game-history-record/useGameLastHistoryRecord.ts(29,12): error TS18048: 'lastGameHistoryRecord.value.playerAttributeAlterations' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 65,
              "line": 26
            },
            "start": {
              "column": 9,
              "line": 26
            }
          }
        },
        {
          "id": "73",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "app/composables/api/game/game-history-record/useGameLastHistoryRecord.ts(29,12): error TS18047: 'lastGameHistoryRecord.value' is possibly 'null'.\napp/composables/api/game/game-history-record/useGameLastHistoryRecord.ts(29,12): error TS18048: 'lastGameHistoryRecord.value.playerAttributeAlterations' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 65,
              "line": 26
            },
            "start": {
              "column": 9,
              "line": 26
            }
          }
        },
        {
          "id": "74",
          "mutatorName": "OptionalChaining",
          "replacement": "lastGameHistoryRecord.value.playerAttributeAlterations",
          "statusReason": "app/composables/api/game/game-history-record/useGameLastHistoryRecord.ts(26,10): error TS18047: 'lastGameHistoryRecord.value' is possibly 'null'.\napp/composables/api/game/game-history-record/useGameLastHistoryRecord.ts(29,12): error TS18047: 'lastGameHistoryRecord.value' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 65,
              "line": 26
            },
            "start": {
              "column": 10,
              "line": 26
            }
          }
        },
        {
          "id": "75",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-history-record/useGameLastHistoryRecord.ts(27,12): error TS18047: 'lastGameHistoryRecord.value' is possibly 'null'.\napp/composables/api/game/game-history-record/useGameLastHistoryRecord.ts(27,12): error TS18048: 'lastGameHistoryRecord.value.playerAttributeAlterations' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "86"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 28
            },
            "start": {
              "column": 67,
              "line": 26
            }
          }
        },
        {
          "id": "76",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "86"
          ],
          "coveredBy": [
            "86"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 27
            },
            "start": {
              "column": 14,
              "line": 27
            }
          }
        },
        {
          "id": "77",
          "mutatorName": "MethodExpression",
          "replacement": "lastGameHistoryRecord.value.playerAttributeAlterations.every(playerAttributeAlteration => playerAttributeAlteration.name === attributeName && playerAttributeAlteration.source === source && playerAttributeAlteration.status === status)",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "85"
          ],
          "coveredBy": [
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 51,
              "line": 31
            },
            "start": {
              "column": 12,
              "line": 29
            }
          }
        },
        {
          "id": "78",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "85"
          ],
          "coveredBy": [
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 31
            },
            "start": {
              "column": 72,
              "line": 29
            }
          }
        },
        {
          "id": "79",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "86"
          ],
          "coveredBy": [
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 31
            },
            "start": {
              "column": 101,
              "line": 29
            }
          }
        },
        {
          "id": "80",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "85"
          ],
          "coveredBy": [
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 31
            },
            "start": {
              "column": 101,
              "line": 29
            }
          }
        },
        {
          "id": "81",
          "mutatorName": "LogicalOperator",
          "replacement": "playerAttributeAlteration.name === attributeName && playerAttributeAlteration.source === source || playerAttributeAlteration.status === status",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "86"
          ],
          "coveredBy": [
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 31
            },
            "start": {
              "column": 101,
              "line": 29
            }
          }
        },
        {
          "id": "82",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "86"
          ],
          "coveredBy": [
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 30
            },
            "start": {
              "column": 101,
              "line": 29
            }
          }
        },
        {
          "id": "83",
          "mutatorName": "LogicalOperator",
          "replacement": "playerAttributeAlteration.name === attributeName || playerAttributeAlteration.source === source",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "86"
          ],
          "coveredBy": [
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 30
            },
            "start": {
              "column": 101,
              "line": 29
            }
          }
        },
        {
          "id": "84",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "86"
          ],
          "coveredBy": [
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 149,
              "line": 29
            },
            "start": {
              "column": 101,
              "line": 29
            }
          }
        },
        {
          "id": "85",
          "mutatorName": "EqualityOperator",
          "replacement": "playerAttributeAlteration.name !== attributeName",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "85"
          ],
          "coveredBy": [
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 149,
              "line": 29
            },
            "start": {
              "column": 101,
              "line": 29
            }
          }
        },
        {
          "id": "86",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "86"
          ],
          "coveredBy": [
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 30
            },
            "start": {
              "column": 7,
              "line": 30
            }
          }
        },
        {
          "id": "87",
          "mutatorName": "EqualityOperator",
          "replacement": "playerAttributeAlteration.source !== source",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "85"
          ],
          "coveredBy": [
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 30
            },
            "start": {
              "column": 7,
              "line": 30
            }
          }
        },
        {
          "id": "88",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "86"
          ],
          "coveredBy": [
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 31
            },
            "start": {
              "column": 7,
              "line": 31
            }
          }
        },
        {
          "id": "89",
          "mutatorName": "EqualityOperator",
          "replacement": "playerAttributeAlteration.status !== status",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "85"
          ],
          "coveredBy": [
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 31
            },
            "start": {
              "column": 7,
              "line": 31
            }
          }
        },
        {
          "id": "90",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-history-record/useGameLastHistoryRecord.ts(33,3): error TS2739: Type '{}' is missing the following properties from type 'UseGameLastHistoryRecord': lastTargetedPlayers, doesHavePlayerAttributeAlteration\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "83",
            "84",
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 36
            },
            "start": {
              "column": 10,
              "line": 33
            }
          }
        }
      ],
      "source": "import type { MaybeRef, Ref } from \"vue\";\n\nimport type { GameHistoryRecordPlayerAttributeAlterationStatus } from \"~/composables/api/game/types/game-history-record/game-history-record-player-attribute-alteration/game-history-record-player-attribute-alteration.types\";\nimport type { GameHistoryRecord } from \"~/composables/api/game/types/game-history-record/game-history-record.class\";\nimport type { Game } from \"~/composables/api/game/types/game.class\";\nimport type { GameSource } from \"~/composables/api/game/types/game.types\";\nimport type { PlayerAttributeName } from \"~/composables/api/game/types/players/player-attribute/player-attribute.types\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\n\ntype UseGameLastHistoryRecord = {\n  lastTargetedPlayers: Ref<Player[]>;\n  doesHavePlayerAttributeAlteration: (attributeName: PlayerAttributeName, source: GameSource, status: GameHistoryRecordPlayerAttributeAlterationStatus) => boolean;\n};\n\nfunction useGameLastHistoryRecord(game: MaybeRef<Game>): UseGameLastHistoryRecord {\n  const lastGameHistoryRecord = computed<GameHistoryRecord | null>(() => (isRef(game) ? game.value.lastGameHistoryRecord : game.lastGameHistoryRecord));\n\n  const lastTargetedPlayers = computed<Player[]>(() => {\n    if (!lastGameHistoryRecord.value?.play.targets) {\n      return [];\n    }\n    return lastGameHistoryRecord.value.play.targets.map(target => target.player);\n  });\n\n  function doesHavePlayerAttributeAlteration(attributeName: PlayerAttributeName, source: GameSource, status: GameHistoryRecordPlayerAttributeAlterationStatus): boolean {\n    if (!lastGameHistoryRecord.value?.playerAttributeAlterations) {\n      return false;\n    }\n    return lastGameHistoryRecord.value.playerAttributeAlterations.some(playerAttributeAlteration => playerAttributeAlteration.name === attributeName &&\n      playerAttributeAlteration.source === source &&\n      playerAttributeAlteration.status === status);\n  }\n  return {\n    lastTargetedPlayers,\n    doesHavePlayerAttributeAlteration,\n  };\n}\n\nexport { useGameLastHistoryRecord };"
    },
    "app/composables/api/game/game-options/useGameOptionsTexts.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "91",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(19,62): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "78",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 131
            },
            "start": {
              "column": 82,
              "line": 19
            }
          }
        },
        {
          "id": "92",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(24,62): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<string>, debugOptions?: DebuggerOptions | undefined): ComputedRef<string>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'ComputedGetter<string>'.\n      Type 'void' is not assignable to type 'string'.\n  Overload 2 of 2, '(options: WritableComputedOptions<string, string>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<string, string>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'WritableComputedOptions<string, string>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 31
            },
            "start": {
              "column": 68,
              "line": 24
            }
          }
        },
        {
          "id": "93",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 108,
              "line": 25
            },
            "start": {
              "column": 26,
              "line": 25
            }
          }
        },
        {
          "id": "94",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 71,
              "line": 27
            },
            "start": {
              "column": 14,
              "line": 27
            }
          }
        },
        {
          "id": "95",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 30
            },
            "start": {
              "column": 73,
              "line": 27
            }
          }
        },
        {
          "id": "96",
          "mutatorName": "MethodExpression",
          "replacement": "phaseLabel.toUpperCase()",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 29
            },
            "start": {
              "column": 14,
              "line": 29
            }
          }
        },
        {
          "id": "97",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(33,56): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<string>, debugOptions?: DebuggerOptions | undefined): ComputedRef<string>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'ComputedGetter<string>'.\n      Type 'void' is not assignable to type 'string'.\n  Overload 2 of 2, '(options: WritableComputedOptions<string, string>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<string, string>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'WritableComputedOptions<string, string>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 37
            },
            "start": {
              "column": 62,
              "line": 33
            }
          }
        },
        {
          "id": "98",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 36
            },
            "start": {
              "column": 14,
              "line": 36
            }
          }
        },
        {
          "id": "99",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 83,
              "line": 36
            },
            "start": {
              "column": 64,
              "line": 36
            }
          }
        },
        {
          "id": "100",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(39,28): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): ComputedRef<...>', gave the following error.\n    Type 'undefined' is not assignable to type 'SchemaObject<GameOptions, string>'.\n  Overload 2 of 2, '(options: WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => undefined' is not assignable to parameter of type 'WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "78",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 5,
              "line": 101
            },
            "start": {
              "column": 65,
              "line": 39
            }
          }
        },
        {
          "id": "101",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(39,28): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): ComputedRef<...>', gave the following error.\n    Type '{}' is missing the following properties from type 'SchemaObject<GameOptions, string>': composition, votes, roles\n  Overload 2 of 2, '(options: WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => {}' is not assignable to parameter of type 'WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 101
            },
            "start": {
              "column": 72,
              "line": 39
            }
          }
        },
        {
          "id": "102",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(39,28): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): ComputedRef<...>', gave the following error.\n    Type '{}' is not assignable to type 'string | SchemaObject<CompositionGameOptions, string>'.\n  Overload 2 of 2, '(options: WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => { composition: {}; votes: { canBeSkipped: string; duration: string; }; roles: { areRevealedOnDeath: string; doSkipCallIfNoTarget: string; werewolf: { canEatEachOther: string; }; sheriff: { isEnabled: string; electedAt: { ...; }; hasDoubledVote: string; mustSettleTieInVotes: string; }; ... 20 more ...; actor: {...' is not assignable to parameter of type 'WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 166,
              "line": 40
            },
            "start": {
              "column": 18,
              "line": 40
            }
          }
        },
        {
          "id": "103",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { composition: { isHidden: '' }, …(2) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 163,
              "line": 40
            },
            "start": {
              "column": 32,
              "line": 40
            }
          }
        },
        {
          "id": "104",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(39,28): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): ComputedRef<...>', gave the following error.\n    Type '{}' is not assignable to type 'string | SchemaObject<VotesGameOptions, string>'.\n  Overload 2 of 2, '(options: WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => { composition: { isHidden: string; }; votes: {}; roles: { areRevealedOnDeath: string; doSkipCallIfNoTarget: string; werewolf: { canEatEachOther: string; }; sheriff: { isEnabled: string; electedAt: { ...; }; hasDoubledVote: string; mustSettleTieInVotes: string; }; ... 20 more ...; actor: { ...; }; }; }' is not assignable to parameter of type 'WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 44
            },
            "start": {
              "column": 12,
              "line": 41
            }
          }
        },
        {
          "id": "105",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 150,
              "line": 42
            },
            "start": {
              "column": 23,
              "line": 42
            }
          }
        },
        {
          "id": "106",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(39,28): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): ComputedRef<...>', gave the following error.\n    Type '{}' is not assignable to type 'string | SchemaObject<RolesGameOptions, string>'.\n  Overload 2 of 2, '(options: WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => { composition: { isHidden: string; }; votes: { canBeSkipped: string; duration: string; }; roles: {}; }' is not assignable to parameter of type 'WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 100
            },
            "start": {
              "column": 12,
              "line": 45
            }
          }
        },
        {
          "id": "107",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 168,
              "line": 46
            },
            "start": {
              "column": 29,
              "line": 46
            }
          }
        },
        {
          "id": "108",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 174,
              "line": 47
            },
            "start": {
              "column": 31,
              "line": 47
            }
          }
        },
        {
          "id": "109",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(39,28): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): ComputedRef<...>', gave the following error.\n    Type '{}' is not assignable to type 'string | SchemaObject<WerewolfGameOptions, string>'.\n  Overload 2 of 2, '(options: WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => { composition: { isHidden: string; }; votes: { canBeSkipped: string; duration: string; }; roles: { areRevealedOnDeath: string; doSkipCallIfNoTarget: string; werewolf: {}; sheriff: { isEnabled: string; electedAt: { ...; }; hasDoubledVote: string; mustSettleTieInVotes: string; }; ... 20 more ...; actor: { ...; }...' is not assignable to parameter of type 'WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 192,
              "line": 48
            },
            "start": {
              "column": 17,
              "line": 48
            }
          }
        },
        {
          "id": "110",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 189,
              "line": 48
            },
            "start": {
              "column": 38,
              "line": 48
            }
          }
        },
        {
          "id": "111",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(39,28): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): ComputedRef<...>', gave the following error.\n    Type '{}' is not assignable to type 'string | SchemaObject<SheriffGameOptions, string>'.\n  Overload 2 of 2, '(options: WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => { composition: { isHidden: string; }; votes: { canBeSkipped: string; duration: string; }; roles: { areRevealedOnDeath: string; doSkipCallIfNoTarget: string; werewolf: { canEatEachOther: string; }; ... 21 more ...; actor: { ...; }; }; }' is not assignable to parameter of type 'WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 57
            },
            "start": {
              "column": 16,
              "line": 49
            }
          }
        },
        {
          "id": "112",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 159,
              "line": 50
            },
            "start": {
              "column": 22,
              "line": 50
            }
          }
        },
        {
          "id": "113",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(39,28): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): ComputedRef<...>', gave the following error.\n    Type '{}' is not assignable to type 'string | SchemaObject<SheriffElectionGameOptions, string>'.\n  Overload 2 of 2, '(options: WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => { composition: { isHidden: string; }; votes: { canBeSkipped: string; duration: string; }; roles: { areRevealedOnDeath: string; doSkipCallIfNoTarget: string; werewolf: { canEatEachOther: string; }; ... 21 more ...; actor: { ...; }; }; }' is not assignable to parameter of type 'WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 10,
              "line": 54
            },
            "start": {
              "column": 20,
              "line": 51
            }
          }
        },
        {
          "id": "114",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 174,
              "line": 55
            },
            "start": {
              "column": 27,
              "line": 55
            }
          }
        },
        {
          "id": "115",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 192,
              "line": 56
            },
            "start": {
              "column": 33,
              "line": 56
            }
          }
        },
        {
          "id": "116",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(39,28): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): ComputedRef<...>', gave the following error.\n    Type '{}' is not assignable to type 'string | SchemaObject<BigBadWolfGameOptions, string>'.\n  Overload 2 of 2, '(options: WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => { composition: { isHidden: string; }; votes: { canBeSkipped: string; duration: string; }; roles: { areRevealedOnDeath: string; doSkipCallIfNoTarget: string; werewolf: { canEatEachOther: string; }; ... 21 more ...; actor: { ...; }; }; }' is not assignable to parameter of type 'WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 228,
              "line": 58
            },
            "start": {
              "column": 19,
              "line": 58
            }
          }
        },
        {
          "id": "117",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 225,
              "line": 58
            },
            "start": {
              "column": 50,
              "line": 58
            }
          }
        },
        {
          "id": "118",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(39,28): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): ComputedRef<...>', gave the following error.\n    Type '{}' is not assignable to type 'string | SchemaObject<WhiteWerewolfGameOptions, string>'.\n  Overload 2 of 2, '(options: WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => { composition: { isHidden: string; }; votes: { canBeSkipped: string; duration: string; }; roles: { areRevealedOnDeath: string; doSkipCallIfNoTarget: string; werewolf: { canEatEachOther: string; }; ... 21 more ...; actor: { ...; }; }; }' is not assignable to parameter of type 'WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 243,
              "line": 59
            },
            "start": {
              "column": 22,
              "line": 59
            }
          }
        },
        {
          "id": "119",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 114,
              "line": 59
            },
            "start": {
              "column": 44,
              "line": 59
            }
          }
        },
        {
          "id": "120",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 184,
              "line": 59
            },
            "start": {
              "column": 116,
              "line": 59
            }
          }
        },
        {
          "id": "121",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(39,28): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): ComputedRef<...>', gave the following error.\n    Type '{}' is not assignable to type 'string | SchemaObject<SeerGameOptions, string>'.\n  Overload 2 of 2, '(options: WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => { composition: { isHidden: string; }; votes: { canBeSkipped: string; duration: string; }; roles: { areRevealedOnDeath: string; doSkipCallIfNoTarget: string; werewolf: { canEatEachOther: string; }; ... 21 more ...; actor: { ...; }; }; }' is not assignable to parameter of type 'WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 63
            },
            "start": {
              "column": 13,
              "line": 60
            }
          }
        },
        {
          "id": "122",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 159,
              "line": 61
            },
            "start": {
              "column": 24,
              "line": 61
            }
          }
        },
        {
          "id": "123",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 159,
              "line": 62
            },
            "start": {
              "column": 24,
              "line": 62
            }
          }
        },
        {
          "id": "124",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(39,28): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): ComputedRef<...>', gave the following error.\n    Type '{}' is not assignable to type 'string | SchemaObject<CupidGameOptions, string>'.\n  Overload 2 of 2, '(options: WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => { composition: { isHidden: string; }; votes: { canBeSkipped: string; duration: string; }; roles: { areRevealedOnDeath: string; doSkipCallIfNoTarget: string; werewolf: { canEatEachOther: string; }; ... 21 more ...; actor: { ...; }; }; }' is not assignable to parameter of type 'WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 67
            },
            "start": {
              "column": 14,
              "line": 64
            }
          }
        },
        {
          "id": "125",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(39,28): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): ComputedRef<...>', gave the following error.\n    Type '{}' is not assignable to type 'string | SchemaObject<CupidLoversGameOptions, string>'.\n  Overload 2 of 2, '(options: WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => { composition: { isHidden: string; }; votes: { canBeSkipped: string; duration: string; }; roles: { areRevealedOnDeath: string; doSkipCallIfNoTarget: string; werewolf: { canEatEachOther: string; }; ... 21 more ...; actor: { ...; }; }; }' is not assignable to parameter of type 'WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 224,
              "line": 65
            },
            "start": {
              "column": 17,
              "line": 65
            }
          }
        },
        {
          "id": "126",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 221,
              "line": 65
            },
            "start": {
              "column": 46,
              "line": 65
            }
          }
        },
        {
          "id": "127",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 179,
              "line": 66
            },
            "start": {
              "column": 30,
              "line": 66
            }
          }
        },
        {
          "id": "128",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(39,28): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): ComputedRef<...>', gave the following error.\n    Type '{}' is not assignable to type 'string | SchemaObject<LittleGirlGameOptions, string>'.\n  Overload 2 of 2, '(options: WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => { composition: { isHidden: string; }; votes: { canBeSkipped: string; duration: string; }; roles: { areRevealedOnDeath: string; doSkipCallIfNoTarget: string; werewolf: { canEatEachOther: string; }; ... 21 more ...; actor: { ...; }; }; }' is not assignable to parameter of type 'WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 216,
              "line": 68
            },
            "start": {
              "column": 19,
              "line": 68
            }
          }
        },
        {
          "id": "129",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 213,
              "line": 68
            },
            "start": {
              "column": 46,
              "line": 68
            }
          }
        },
        {
          "id": "130",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(39,28): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): ComputedRef<...>', gave the following error.\n    Type '{}' is not assignable to type 'string | SchemaObject<DefenderGameOptions, string>'.\n  Overload 2 of 2, '(options: WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => { composition: { isHidden: string; }; votes: { canBeSkipped: string; duration: string; }; roles: { areRevealedOnDeath: string; doSkipCallIfNoTarget: string; werewolf: { canEatEachOther: string; }; ... 21 more ...; actor: { ...; }; }; }' is not assignable to parameter of type 'WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 192,
              "line": 69
            },
            "start": {
              "column": 17,
              "line": 69
            }
          }
        },
        {
          "id": "131",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 189,
              "line": 69
            },
            "start": {
              "column": 38,
              "line": 69
            }
          }
        },
        {
          "id": "132",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(39,28): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): ComputedRef<...>', gave the following error.\n    Type '{}' is not assignable to type 'string | SchemaObject<ElderGameOptions, string>'.\n  Overload 2 of 2, '(options: WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => { composition: { isHidden: string; }; votes: { canBeSkipped: string; duration: string; }; roles: { areRevealedOnDeath: string; doSkipCallIfNoTarget: string; werewolf: { canEatEachOther: string; }; ... 21 more ...; actor: { ...; }; }; }' is not assignable to parameter of type 'WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 73
            },
            "start": {
              "column": 14,
              "line": 70
            }
          }
        },
        {
          "id": "133",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 113,
              "line": 71
            },
            "start": {
              "column": 40,
              "line": 71
            }
          }
        },
        {
          "id": "134",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 188,
              "line": 71
            },
            "start": {
              "column": 115,
              "line": 71
            }
          }
        },
        {
          "id": "135",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 182,
              "line": 72
            },
            "start": {
              "column": 31,
              "line": 72
            }
          }
        },
        {
          "id": "136",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(39,28): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): ComputedRef<...>', gave the following error.\n    Type '{}' is not assignable to type 'string | SchemaObject<IdiotGameOptions, string>'.\n  Overload 2 of 2, '(options: WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => { composition: { isHidden: string; }; votes: { canBeSkipped: string; duration: string; }; roles: { areRevealedOnDeath: string; doSkipCallIfNoTarget: string; werewolf: { canEatEachOther: string; }; ... 21 more ...; actor: { ...; }; }; }' is not assignable to parameter of type 'WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 195,
              "line": 74
            },
            "start": {
              "column": 14,
              "line": 74
            }
          }
        },
        {
          "id": "137",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 192,
              "line": 74
            },
            "start": {
              "column": 39,
              "line": 74
            }
          }
        },
        {
          "id": "138",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(39,28): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): ComputedRef<...>', gave the following error.\n    Type '{}' is not assignable to type 'string | SchemaObject<TwoSistersGameOptions, string>'.\n  Overload 2 of 2, '(options: WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => { composition: { isHidden: string; }; votes: { canBeSkipped: string; duration: string; }; roles: { areRevealedOnDeath: string; doSkipCallIfNoTarget: string; werewolf: { canEatEachOther: string; }; ... 21 more ...; actor: { ...; }; }; }' is not assignable to parameter of type 'WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 231,
              "line": 75
            },
            "start": {
              "column": 19,
              "line": 75
            }
          }
        },
        {
          "id": "139",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 108,
              "line": 75
            },
            "start": {
              "column": 41,
              "line": 75
            }
          }
        },
        {
          "id": "140",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 175,
              "line": 75
            },
            "start": {
              "column": 110,
              "line": 75
            }
          }
        },
        {
          "id": "141",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(39,28): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): ComputedRef<...>', gave the following error.\n    Type '{}' is not assignable to type 'string | SchemaObject<ThreeBrothersGameOptions, string>'.\n  Overload 2 of 2, '(options: WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => { composition: { isHidden: string; }; votes: { canBeSkipped: string; duration: string; }; roles: { areRevealedOnDeath: string; doSkipCallIfNoTarget: string; werewolf: { canEatEachOther: string; }; ... 21 more ...; actor: { ...; }; }; }' is not assignable to parameter of type 'WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 243,
              "line": 76
            },
            "start": {
              "column": 22,
              "line": 76
            }
          }
        },
        {
          "id": "142",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 114,
              "line": 76
            },
            "start": {
              "column": 44,
              "line": 76
            }
          }
        },
        {
          "id": "143",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 184,
              "line": 76
            },
            "start": {
              "column": 116,
              "line": 76
            }
          }
        },
        {
          "id": "144",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(39,28): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): ComputedRef<...>', gave the following error.\n    Type '{}' is not assignable to type 'string | SchemaObject<FoxGameOptions, string>'.\n  Overload 2 of 2, '(options: WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => { composition: { isHidden: string; }; votes: { canBeSkipped: string; duration: string; }; roles: { areRevealedOnDeath: string; doSkipCallIfNoTarget: string; werewolf: { canEatEachOther: string; }; ... 21 more ...; actor: { ...; }; }; }' is not assignable to parameter of type 'WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 213,
              "line": 77
            },
            "start": {
              "column": 12,
              "line": 77
            }
          }
        },
        {
          "id": "145",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 210,
              "line": 77
            },
            "start": {
              "column": 45,
              "line": 77
            }
          }
        },
        {
          "id": "146",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(39,28): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): ComputedRef<...>', gave the following error.\n    Type '{}' is not assignable to type 'string | SchemaObject<BearTamerGameOptions, string>'.\n  Overload 2 of 2, '(options: WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => { composition: { isHidden: string; }; votes: { canBeSkipped: string; duration: string; }; roles: { areRevealedOnDeath: string; doSkipCallIfNoTarget: string; werewolf: { canEatEachOther: string; }; ... 21 more ...; actor: { ...; }; }; }' is not assignable to parameter of type 'WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 225,
              "line": 78
            },
            "start": {
              "column": 18,
              "line": 78
            }
          }
        },
        {
          "id": "147",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 222,
              "line": 78
            },
            "start": {
              "column": 49,
              "line": 78
            }
          }
        },
        {
          "id": "148",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(39,28): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): ComputedRef<...>', gave the following error.\n    Type '{}' is not assignable to type 'string | SchemaObject<StutteringJudgeGameOptions, string>'.\n  Overload 2 of 2, '(options: WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => { composition: { isHidden: string; }; votes: { canBeSkipped: string; duration: string; }; roles: { areRevealedOnDeath: string; doSkipCallIfNoTarget: string; werewolf: { canEatEachOther: string; }; ... 21 more ...; actor: { ...; }; }; }' is not assignable to parameter of type 'WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 264,
              "line": 79
            },
            "start": {
              "column": 24,
              "line": 79
            }
          }
        },
        {
          "id": "149",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 120,
              "line": 79
            },
            "start": {
              "column": 47,
              "line": 79
            }
          }
        },
        {
          "id": "150",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 202,
              "line": 79
            },
            "start": {
              "column": 122,
              "line": 79
            }
          }
        },
        {
          "id": "151",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(39,28): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): ComputedRef<...>', gave the following error.\n    Type '{}' is not assignable to type 'string | SchemaObject<WildChildGameOptions, string>'.\n  Overload 2 of 2, '(options: WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => { composition: { isHidden: string; }; votes: { canBeSkipped: string; duration: string; }; roles: { areRevealedOnDeath: string; doSkipCallIfNoTarget: string; werewolf: { canEatEachOther: string; }; ... 21 more ...; actor: { ...; }; }; }' is not assignable to parameter of type 'WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 222,
              "line": 80
            },
            "start": {
              "column": 18,
              "line": 80
            }
          }
        },
        {
          "id": "152",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 219,
              "line": 80
            },
            "start": {
              "column": 48,
              "line": 80
            }
          }
        },
        {
          "id": "153",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(39,28): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): ComputedRef<...>', gave the following error.\n    Type '{}' is not assignable to type 'string | SchemaObject<WolfHoundGameOptions, string>'.\n  Overload 2 of 2, '(options: WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => { composition: { isHidden: string; }; votes: { canBeSkipped: string; duration: string; }; roles: { areRevealedOnDeath: string; doSkipCallIfNoTarget: string; werewolf: { canEatEachOther: string; }; ... 21 more ...; actor: { ...; }; }; }' is not assignable to parameter of type 'WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 84
            },
            "start": {
              "column": 18,
              "line": 81
            }
          }
        },
        {
          "id": "154",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 196,
              "line": 82
            },
            "start": {
              "column": 33,
              "line": 82
            }
          }
        },
        {
          "id": "155",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 196,
              "line": 83
            },
            "start": {
              "column": 33,
              "line": 83
            }
          }
        },
        {
          "id": "156",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(39,28): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): ComputedRef<...>', gave the following error.\n    Type '{}' is not assignable to type 'string | SchemaObject<ThiefGameOptions, string>'.\n  Overload 2 of 2, '(options: WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => { composition: { isHidden: string; }; votes: { canBeSkipped: string; duration: string; }; roles: { areRevealedOnDeath: string; doSkipCallIfNoTarget: string; werewolf: { canEatEachOther: string; }; ... 21 more ...; actor: { ...; }; }; }' is not assignable to parameter of type 'WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 88
            },
            "start": {
              "column": 14,
              "line": 85
            }
          }
        },
        {
          "id": "157",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 209,
              "line": 86
            },
            "start": {
              "column": 40,
              "line": 86
            }
          }
        },
        {
          "id": "158",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 188,
              "line": 87
            },
            "start": {
              "column": 33,
              "line": 87
            }
          }
        },
        {
          "id": "159",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(39,28): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): ComputedRef<...>', gave the following error.\n    Type '{}' is not assignable to type 'string | SchemaObject<PiedPiperGameOptions, string>'.\n  Overload 2 of 2, '(options: WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => { composition: { isHidden: string; }; votes: { canBeSkipped: string; duration: string; }; roles: { areRevealedOnDeath: string; doSkipCallIfNoTarget: string; werewolf: { canEatEachOther: string; }; ... 21 more ...; actor: { ...; }; }; }' is not assignable to parameter of type 'WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 93
            },
            "start": {
              "column": 18,
              "line": 89
            }
          }
        },
        {
          "id": "160",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 115,
              "line": 90
            },
            "start": {
              "column": 39,
              "line": 90
            }
          }
        },
        {
          "id": "161",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 209,
              "line": 90
            },
            "start": {
              "column": 117,
              "line": 90
            }
          }
        },
        {
          "id": "162",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 217,
              "line": 91
            },
            "start": {
              "column": 40,
              "line": 91
            }
          }
        },
        {
          "id": "163",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 208,
              "line": 92
            },
            "start": {
              "column": 37,
              "line": 92
            }
          }
        },
        {
          "id": "164",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(39,28): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): ComputedRef<...>', gave the following error.\n    Type '{}' is not assignable to type 'string | SchemaObject<ScandalmongerGameOptions, string>'.\n  Overload 2 of 2, '(options: WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => { composition: { isHidden: string; }; votes: { canBeSkipped: string; duration: string; }; roles: { areRevealedOnDeath: string; doSkipCallIfNoTarget: string; werewolf: { canEatEachOther: string; }; ... 21 more ...; actor: { ...; }; }; }' is not assignable to parameter of type 'WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 226,
              "line": 94
            },
            "start": {
              "column": 22,
              "line": 94
            }
          }
        },
        {
          "id": "165",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 104,
              "line": 94
            },
            "start": {
              "column": 39,
              "line": 94
            }
          }
        },
        {
          "id": "166",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 172,
              "line": 94
            },
            "start": {
              "column": 106,
              "line": 94
            }
          }
        },
        {
          "id": "167",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(39,28): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): ComputedRef<...>', gave the following error.\n    Type '{}' is not assignable to type 'string | SchemaObject<WitchGameOptions, string>'.\n  Overload 2 of 2, '(options: WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => { composition: { isHidden: string; }; votes: { canBeSkipped: string; duration: string; }; roles: { areRevealedOnDeath: string; doSkipCallIfNoTarget: string; werewolf: { canEatEachOther: string; }; ... 21 more ...; actor: { ...; }; }; }' is not assignable to parameter of type 'WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 213,
              "line": 95
            },
            "start": {
              "column": 14,
              "line": 95
            }
          }
        },
        {
          "id": "168",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 210,
              "line": 95
            },
            "start": {
              "column": 45,
              "line": 95
            }
          }
        },
        {
          "id": "169",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(39,28): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): ComputedRef<...>', gave the following error.\n    Type '{}' is not assignable to type 'string | SchemaObject<PrejudicedManipulatorGameOptions, string>'.\n  Overload 2 of 2, '(options: WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => { composition: { isHidden: string; }; votes: { canBeSkipped: string; duration: string; }; roles: { areRevealedOnDeath: string; doSkipCallIfNoTarget: string; werewolf: { canEatEachOther: string; }; ... 21 more ...; actor: { ...; }; }; }' is not assignable to parameter of type 'WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 267,
              "line": 96
            },
            "start": {
              "column": 30,
              "line": 96
            }
          }
        },
        {
          "id": "170",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 264,
              "line": 96
            },
            "start": {
              "column": 63,
              "line": 96
            }
          }
        },
        {
          "id": "171",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(39,28): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): ComputedRef<...>', gave the following error.\n    Type '{}' is not assignable to type 'string | SchemaObject<ActorGameOptions, string>'.\n  Overload 2 of 2, '(options: WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => { composition: { isHidden: string; }; votes: { canBeSkipped: string; duration: string; }; roles: { areRevealedOnDeath: string; doSkipCallIfNoTarget: string; werewolf: { canEatEachOther: string; }; ... 21 more ...; actor: {}; }; }' is not assignable to parameter of type 'WritableComputedOptions<SchemaObject<GameOptions, string>, SchemaObject<GameOptions, string>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 99
            },
            "start": {
              "column": 14,
              "line": 97
            }
          }
        },
        {
          "id": "172",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 209,
              "line": 98
            },
            "start": {
              "column": 40,
              "line": 98
            }
          }
        },
        {
          "id": "173",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(103,54): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<string[]>, debugOptions?: DebuggerOptions | undefined): ComputedRef<string[]>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'ComputedGetter<string[]>'.\n      Type 'void' is not assignable to type 'string[]'.\n  Overload 2 of 2, '(options: WritableComputedOptions<string[], string[]>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<string[], string[]>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'WritableComputedOptions<string[], string[]>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 113
            },
            "start": {
              "column": 60,
              "line": 103
            }
          }
        },
        {
          "id": "174",
          "mutatorName": "MethodExpression",
          "replacement": "gameOptionsKeys",
          "statusReason": "expected [ …(38) ] to strictly equal []",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "78"
          ],
          "coveredBy": [
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 7,
              "line": 110
            },
            "start": {
              "column": 36,
              "line": 105
            }
          }
        },
        {
          "id": "175",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected [] to strictly equal [ …(2) ]",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "79"
          ],
          "coveredBy": [
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 110
            },
            "start": {
              "column": 66,
              "line": 105
            }
          }
        },
        {
          "id": "176",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected [ …(38) ] to strictly equal []",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "78"
          ],
          "coveredBy": [
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 109
            },
            "start": {
              "column": 14,
              "line": 109
            }
          }
        },
        {
          "id": "177",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected [] to strictly equal [ …(2) ]",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "79"
          ],
          "coveredBy": [
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 109
            },
            "start": {
              "column": 14,
              "line": 109
            }
          }
        },
        {
          "id": "178",
          "mutatorName": "EqualityOperator",
          "replacement": "value === defaultValue",
          "statusReason": "expected [ …(38) ] to strictly equal []",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "78"
          ],
          "coveredBy": [
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 109
            },
            "start": {
              "column": 14,
              "line": 109
            }
          }
        },
        {
          "id": "179",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "expected [] to strictly equal [ …(2) ]",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "79"
          ],
          "coveredBy": [
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 120,
              "line": 112
            },
            "start": {
              "column": 12,
              "line": 112
            }
          }
        },
        {
          "id": "180",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(103,54): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<string[]>, debugOptions?: DebuggerOptions | undefined): ComputedRef<string[]>', gave the following error.\n    Argument of type '() => undefined[]' is not assignable to parameter of type 'ComputedGetter<string[]>'.\n      Type 'undefined[]' is not assignable to type 'string[]'.\n        Type 'undefined' is not assignable to type 'string'.\n  Overload 2 of 2, '(options: WritableComputedOptions<string[], string[]>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<string[], string[]>', gave the following error.\n    Argument of type '() => undefined[]' is not assignable to parameter of type 'WritableComputedOptions<string[], string[]>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 117,
              "line": 112
            },
            "start": {
              "column": 51,
              "line": 112
            }
          }
        },
        {
          "id": "181",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(115,71): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "79",
            "80"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 117
            },
            "start": {
              "column": 78,
              "line": 115
            }
          }
        },
        {
          "id": "182",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(119,62): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 124
            },
            "start": {
              "column": 108,
              "line": 119
            }
          }
        },
        {
          "id": "183",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected undefined to be 'votes.canBeSkipped' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "81"
          ],
          "coveredBy": [
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 111,
              "line": 121
            },
            "start": {
              "column": 53,
              "line": 121
            }
          }
        },
        {
          "id": "184",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'composition.isHidden' to be 'votes.canBeSkipped' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "81"
          ],
          "coveredBy": [
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 111,
              "line": 121
            },
            "start": {
              "column": 60,
              "line": 121
            }
          }
        },
        {
          "id": "185",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected undefined to be 'votes.canBeSkipped' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "81"
          ],
          "coveredBy": [
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 111,
              "line": 121
            },
            "start": {
              "column": 60,
              "line": 121
            }
          }
        },
        {
          "id": "186",
          "mutatorName": "EqualityOperator",
          "replacement": "get(gameOptionsTexts.value, key) !== gameOptionText",
          "statusReason": "expected 'composition.isHidden' to be 'votes.canBeSkipped' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "81"
          ],
          "coveredBy": [
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 111,
              "line": 121
            },
            "start": {
              "column": 60,
              "line": 121
            }
          }
        },
        {
          "id": "187",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-options/useGameOptionsTexts.ts(125,3): error TS2739: Type '{}' is missing the following properties from type 'UseGameOptionsTexts': gameOptionsTexts, changedGameOptionsTexts, getGameOptionText, getGameOptionKeyFromText\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "78",
            "79",
            "80",
            "81",
            "82"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 130
            },
            "start": {
              "column": 10,
              "line": 125
            }
          }
        }
      ],
      "source": "import { instanceToPlain } from \"class-transformer\";\nimport type { Paths } from \"type-fest\";\nimport type { ComputedRef, Ref } from \"vue\";\nimport { keys, get } from \"radash\";\n\nimport { DEFAULT_GAME_OPTIONS } from \"~/composables/api/game/constants/game-options/game-options.constants\";\nimport type { GameOptions } from \"~/composables/api/game/types/game-options/game-options.class\";\nimport type { DeepStringifiedGameOptions } from \"~/composables/api/game/types/game-options/game-options.types\";\nimport { useStrings } from \"~/composables/misc/useStrings\";\nimport { useTimers } from \"~/composables/misc/useTimers\";\n\ntype UseGameOptionsTexts = {\n  gameOptionsTexts: ComputedRef<DeepStringifiedGameOptions>;\n  changedGameOptionsTexts: ComputedRef<string[]>;\n  getGameOptionText: (key: Paths<DeepStringifiedGameOptions>) => string;\n  getGameOptionKeyFromText: (gameOptionText: string) => Paths<DeepStringifiedGameOptions> | undefined;\n};\n\nfunction useGameOptionsTexts(gameOptions: Ref<GameOptions>): UseGameOptionsTexts {\n  const { convertBooleanAsAffirmativeString } = useStrings();\n  const { getSecondsInMinutesLabel } = useTimers();\n  const { t } = useI18n();\n\n  const sheriffElectionTimeGameOptionText = computed<string>(() => {\n    const phaseLabel = t(`shared.game.definitePhase.${gameOptions.value.roles.sheriff.electedAt.phaseName}`);\n\n    return t(\"composables.useGameOptionsTexts.roles.sheriff.electedAt\", {\n      turn: gameOptions.value.roles.sheriff.electedAt.turn,\n      phase: phaseLabel.toLowerCase(),\n    });\n  });\n\n  const votesDurationGameOptionText = computed<string>(() => {\n    const timeLabel = getSecondsInMinutesLabel(gameOptions.value.votes.duration);\n\n    return t(`composables.useGameOptionsTexts.votes.duration`, { time: timeLabel });\n  });\n\n  const gameOptionsTexts = computed<DeepStringifiedGameOptions>(() => ({\n    composition: { isHidden: t(`composables.useGameOptionsTexts.composition.isHidden.${convertBooleanAsAffirmativeString(gameOptions.value.composition.isHidden)}`) },\n    votes: {\n      canBeSkipped: t(`composables.useGameOptionsTexts.votes.canBeSkipped.${convertBooleanAsAffirmativeString(gameOptions.value.votes.canBeSkipped)}`),\n      duration: votesDurationGameOptionText.value,\n    },\n    roles: {\n      areRevealedOnDeath: t(`composables.useGameOptionsTexts.roles.areRevealedOnDeath.${convertBooleanAsAffirmativeString(gameOptions.value.roles.areRevealedOnDeath)}`),\n      doSkipCallIfNoTarget: t(`composables.useGameOptionsTexts.roles.doSkipCallIfNoTarget.${convertBooleanAsAffirmativeString(gameOptions.value.roles.doSkipCallIfNoTarget)}`),\n      werewolf: { canEatEachOther: t(`composables.useGameOptionsTexts.roles.werewolf.canEatEachOther.${convertBooleanAsAffirmativeString(gameOptions.value.roles.werewolf.canEatEachOther)}`) },\n      sheriff: {\n        isEnabled: t(`composables.useGameOptionsTexts.roles.sheriff.isEnabled.${convertBooleanAsAffirmativeString(gameOptions.value.roles.sheriff.isEnabled)}`),\n        electedAt: {\n          turn: sheriffElectionTimeGameOptionText.value,\n          phaseName: sheriffElectionTimeGameOptionText.value,\n        },\n        hasDoubledVote: t(`composables.useGameOptionsTexts.roles.sheriff.hasDoubledVote.${convertBooleanAsAffirmativeString(gameOptions.value.roles.sheriff.hasDoubledVote)}`),\n        mustSettleTieInVotes: t(`composables.useGameOptionsTexts.roles.sheriff.mustSettleTieInVotes.${convertBooleanAsAffirmativeString(gameOptions.value.roles.sheriff.mustSettleTieInVotes)}`),\n      },\n      bigBadWolf: { isPowerlessIfWerewolfDies: t(`composables.useGameOptionsTexts.roles.bigBadWolf.isPowerlessIfWerewolfDies.${convertBooleanAsAffirmativeString(gameOptions.value.roles.bigBadWolf.isPowerlessIfWerewolfDies)}`) },\n      whiteWerewolf: { wakingUpInterval: t(`composables.useGameOptionsTexts.roles.whiteWerewolf.wakingUpInterval`, { interval: gameOptions.value.roles.whiteWerewolf.wakingUpInterval }, gameOptions.value.roles.whiteWerewolf.wakingUpInterval) },\n      seer: {\n        isTalkative: t(`composables.useGameOptionsTexts.roles.seer.isTalkative.${convertBooleanAsAffirmativeString(gameOptions.value.roles.seer.isTalkative)}`),\n        canSeeRoles: t(`composables.useGameOptionsTexts.roles.seer.canSeeRoles.${convertBooleanAsAffirmativeString(gameOptions.value.roles.seer.canSeeRoles)}`),\n      },\n      cupid: {\n        lovers: { doRevealRoleToEachOther: t(`composables.useGameOptionsTexts.roles.cupid.lovers.doRevealRoleToEachOther.${convertBooleanAsAffirmativeString(gameOptions.value.roles.cupid.lovers.doRevealRoleToEachOther)}`) },\n        mustWinWithLovers: t(`composables.useGameOptionsTexts.roles.cupid.mustWinWithLovers.${convertBooleanAsAffirmativeString(gameOptions.value.roles.cupid.mustWinWithLovers)}`),\n      },\n      littleGirl: { isProtectedByDefender: t(`composables.useGameOptionsTexts.roles.littleGirl.isProtectedByDefender.${convertBooleanAsAffirmativeString(gameOptions.value.roles.littleGirl.isProtectedByDefender)}`) },\n      defender: { canProtectTwice: t(`composables.useGameOptionsTexts.roles.defender.canProtectTwice.${convertBooleanAsAffirmativeString(gameOptions.value.roles.defender.canProtectTwice)}`) },\n      elder: {\n        livesCountAgainstWerewolves: t(`composables.useGameOptionsTexts.roles.elder.livesCountAgainstWerewolves`, { livesCount: gameOptions.value.roles.elder.livesCountAgainstWerewolves }, gameOptions.value.roles.elder.livesCountAgainstWerewolves),\n        doesTakeHisRevenge: t(`composables.useGameOptionsTexts.roles.elder.doesTakeHisRevenge.${convertBooleanAsAffirmativeString(gameOptions.value.roles.elder.doesTakeHisRevenge)}`),\n      },\n      idiot: { doesDieOnElderDeath: t(`composables.useGameOptionsTexts.roles.idiot.doesDieOnElderDeath.${convertBooleanAsAffirmativeString(gameOptions.value.roles.idiot.doesDieOnElderDeath)}`) },\n      twoSisters: { wakingUpInterval: t(`composables.useGameOptionsTexts.roles.twoSisters.wakingUpInterval`, { interval: gameOptions.value.roles.twoSisters.wakingUpInterval }, gameOptions.value.roles.twoSisters.wakingUpInterval) },\n      threeBrothers: { wakingUpInterval: t(`composables.useGameOptionsTexts.roles.threeBrothers.wakingUpInterval`, { interval: gameOptions.value.roles.threeBrothers.wakingUpInterval }, gameOptions.value.roles.threeBrothers.wakingUpInterval) },\n      fox: { isPowerlessIfMissesWerewolf: t(`composables.useGameOptionsTexts.roles.fox.isPowerlessIfMissesWerewolf.${convertBooleanAsAffirmativeString(gameOptions.value.roles.fox.isPowerlessIfMissesWerewolf)}`) },\n      bearTamer: { doesGrowlOnWerewolvesSide: t(`composables.useGameOptionsTexts.roles.bearTamer.doesGrowlOnWerewolvesSide.${convertBooleanAsAffirmativeString(gameOptions.value.roles.bearTamer.doesGrowlOnWerewolvesSide)}`) },\n      stutteringJudge: { voteRequestsCount: t(`composables.useGameOptionsTexts.roles.stutteringJudge.voteRequestsCount`, { voteRequestsCount: gameOptions.value.roles.stutteringJudge.voteRequestsCount }, gameOptions.value.roles.stutteringJudge.voteRequestsCount) },\n      wildChild: { isTransformationRevealed: t(`composables.useGameOptionsTexts.roles.wildChild.isTransformationRevealed.${convertBooleanAsAffirmativeString(gameOptions.value.roles.wildChild.isTransformationRevealed)}`) },\n      wolfHound: {\n        isChosenSideRevealed: t(`composables.useGameOptionsTexts.roles.wolfHound.isChosenSideRevealed.${convertBooleanAsAffirmativeString(gameOptions.value.roles.wolfHound.isChosenSideRevealed)}`),\n        isSideRandomlyChosen: t(`composables.useGameOptionsTexts.roles.wolfHound.isSideRandomlyChosen.${convertBooleanAsAffirmativeString(gameOptions.value.roles.wolfHound.isSideRandomlyChosen)}`),\n      },\n      thief: {\n        mustChooseBetweenWerewolves: t(`composables.useGameOptionsTexts.roles.thief.mustChooseBetweenWerewolves.${convertBooleanAsAffirmativeString(gameOptions.value.roles.thief.mustChooseBetweenWerewolves)}`),\n        isChosenCardRevealed: t(`composables.useGameOptionsTexts.roles.thief.isChosenCardRevealed.${convertBooleanAsAffirmativeString(gameOptions.value.roles.thief.isChosenCardRevealed)}`),\n      },\n      piedPiper: {\n        charmedPeopleCountPerNight: t(`composables.useGameOptionsTexts.roles.piedPiper.charmedPeopleCountPerNight`, { charmedPeopleCountPerNight: gameOptions.value.roles.piedPiper.charmedPeopleCountPerNight }, gameOptions.value.roles.piedPiper.charmedPeopleCountPerNight),\n        isPowerlessOnWerewolvesSide: t(`composables.useGameOptionsTexts.roles.piedPiper.isPowerlessOnWerewolvesSide.${convertBooleanAsAffirmativeString(gameOptions.value.roles.piedPiper.isPowerlessOnWerewolvesSide)}`),\n        areCharmedPeopleRevealed: t(`composables.useGameOptionsTexts.roles.piedPiper.areCharmedPeopleRevealed.${convertBooleanAsAffirmativeString(gameOptions.value.roles.piedPiper.areCharmedPeopleRevealed)}`),\n      },\n      scandalmonger: { markPenalty: t(`composables.useGameOptionsTexts.roles.scandalmonger.markPenalty`, { markPenalty: gameOptions.value.roles.scandalmonger.markPenalty }, gameOptions.value.roles.scandalmonger.markPenalty) },\n      witch: { doesKnowWerewolvesTargets: t(`composables.useGameOptionsTexts.roles.witch.doesKnowWerewolvesTargets.${convertBooleanAsAffirmativeString(gameOptions.value.roles.witch.doesKnowWerewolvesTargets)}`) },\n      prejudicedManipulator: { isPowerlessOnWerewolvesSide: t(`composables.useGameOptionsTexts.roles.prejudicedManipulator.isPowerlessOnWerewolvesSide.${convertBooleanAsAffirmativeString(gameOptions.value.roles.prejudicedManipulator.isPowerlessOnWerewolvesSide)}`) },\n      actor: {\n        isPowerlessOnWerewolvesSide: t(`composables.useGameOptionsTexts.roles.actor.isPowerlessOnWerewolvesSide.${convertBooleanAsAffirmativeString(gameOptions.value.roles.actor.isPowerlessOnWerewolvesSide)}`),\n      },\n    },\n  }));\n\n  const changedGameOptionsTexts = computed<string[]>(() => {\n    const gameOptionsKeys = keys(instanceToPlain(gameOptions.value));\n    const changedGameOptionsKeys = gameOptionsKeys.filter(key => {\n      const value = get(gameOptions.value, key);\n      const defaultValue = get(DEFAULT_GAME_OPTIONS, key);\n\n      return value !== defaultValue;\n    });\n\n    return [...new Set(changedGameOptionsKeys.map(key => getGameOptionText(key as Paths<DeepStringifiedGameOptions>)))];\n  });\n\n  function getGameOptionText(key: Paths<DeepStringifiedGameOptions>): string {\n    return get(gameOptionsTexts.value, key as string);\n  }\n\n  function getGameOptionKeyFromText(gameOptionText: string): Paths<DeepStringifiedGameOptions> | undefined {\n    const gameOptionsTextsKeys = keys(gameOptionsTexts.value);\n    const gameOptionKey = gameOptionsTextsKeys.find(key => get(gameOptionsTexts.value, key) === gameOptionText);\n\n    return gameOptionKey as Paths<DeepStringifiedGameOptions>;\n  }\n  return {\n    gameOptionsTexts,\n    changedGameOptionsTexts,\n    getGameOptionText,\n    getGameOptionKeyFromText,\n  };\n}\n\nexport { useGameOptionsTexts };"
    },
    "app/composables/api/game/game-phase/useGamePhase.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "188",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-phase/useGamePhase.ts(7,26): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "183",
            "184"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 19
            },
            "start": {
              "column": 39,
              "line": 7
            }
          }
        },
        {
          "id": "189",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-phase/useGamePhase.ts(10,74): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "183",
            "184"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 17
            },
            "start": {
              "column": 81,
              "line": 10
            }
          }
        },
        {
          "id": "190",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected '' to be 'shared.game.phase.twilight' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "183"
          ],
          "coveredBy": [
            "183",
            "184"
          ],
          "location": {
            "end": {
              "column": 53,
              "line": 11
            },
            "start": {
              "column": 25,
              "line": 11
            }
          }
        },
        {
          "id": "191",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'shared.game.phase.day' to be 'shared.game.phase.day 3' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "184"
          ],
          "coveredBy": [
            "183",
            "184"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 13
            },
            "start": {
              "column": 9,
              "line": 13
            }
          }
        },
        {
          "id": "192",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected 'shared.game.phase.twilight 3' to be 'shared.game.phase.twilight' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "183"
          ],
          "coveredBy": [
            "183",
            "184"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 13
            },
            "start": {
              "column": 9,
              "line": 13
            }
          }
        },
        {
          "id": "193",
          "mutatorName": "EqualityOperator",
          "replacement": "phase !== \"twilight\"",
          "statusReason": "expected 'shared.game.phase.twilight 3' to be 'shared.game.phase.twilight' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "183"
          ],
          "coveredBy": [
            "183",
            "184"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 13
            },
            "start": {
              "column": 9,
              "line": 13
            }
          }
        },
        {
          "id": "194",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/api/game/game-phase/useGamePhase.ts(13,9): error TS2367: This comparison appears to be unintentional because the types '\"day\" | \"night\" | \"twilight\"' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "183",
            "184"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 13
            },
            "start": {
              "column": 19,
              "line": 13
            }
          }
        },
        {
          "id": "195",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected 'shared.game.phase.twilight 3' to be 'shared.game.phase.twilight' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "183"
          ],
          "coveredBy": [
            "183"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 15
            },
            "start": {
              "column": 31,
              "line": 13
            }
          }
        },
        {
          "id": "196",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected '' to be 'shared.game.phase.day 3' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "184"
          ],
          "coveredBy": [
            "184"
          ],
          "location": {
            "end": {
              "column": 34,
              "line": 16
            },
            "start": {
              "column": 12,
              "line": 16
            }
          }
        },
        {
          "id": "197",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-phase/useGamePhase.ts(18,3): error TS2741: Property 'getGamePhaseWithTurnText' is missing in type '{}' but required in type 'UseGamePhase'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "183",
            "184"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 18
            },
            "start": {
              "column": 10,
              "line": 18
            }
          }
        }
      ],
      "source": "import type { GamePhaseName } from \"~/composables/api/game/types/game-phase/game-phase.types\";\n\ntype UseGamePhase = {\n  getGamePhaseWithTurnText: (phase: GamePhaseName, turn: number) => string;\n};\n\nfunction useGamePhase(): UseGamePhase {\n  const { t } = useI18n();\n\n  function getGamePhaseWithTurnText(phase: GamePhaseName, turn: number): string {\n    const phaseText = t(`shared.game.phase.${phase}`);\n\n    if (phase === \"twilight\") {\n      return phaseText;\n    }\n    return `${phaseText} ${turn}`;\n  }\n  return { getGamePhaseWithTurnText };\n}\n\nexport { useGamePhase };"
    },
    "app/composables/api/game/game-play/useCurrentGamePlay.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "198",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(18,52): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 68
            },
            "start": {
              "column": 71,
              "line": 18
            }
          }
        },
        {
          "id": "199",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(19,23): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<GamePlay | null>, debugOptions?: DebuggerOptions | undefined): ComputedRef<GamePlay | null>', gave the following error.\n    Type 'undefined' is not assignable to type 'GamePlay | null'.\n  Overload 2 of 2, '(options: WritableComputedOptions<GamePlay | null, GamePlay | null>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => undefined' is not assignable to parameter of type 'WritableComputedOptions<GamePlay | null, GamePlay | null>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76"
          ],
          "location": {
            "end": {
              "column": 112,
              "line": 19
            },
            "start": {
              "column": 49,
              "line": 19
            }
          }
        },
        {
          "id": "200",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected [] to strictly equal [ _GameAdditionalCard{ …(4) } ]",
          "status": "Killed",
          "testsCompleted": 18,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76"
          ],
          "location": {
            "end": {
              "column": 141,
              "line": 20
            },
            "start": {
              "column": 70,
              "line": 20
            }
          }
        },
        {
          "id": "201",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(21,23): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<GameOptions>, debugOptions?: DebuggerOptions | undefined): ComputedRef<GameOptions>', gave the following error.\n    Type 'undefined' is not assignable to type 'GameOptions'.\n  Overload 2 of 2, '(options: WritableComputedOptions<GameOptions, GameOptions>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => undefined' is not assignable to parameter of type 'WritableComputedOptions<GameOptions, GameOptions>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76"
          ],
          "location": {
            "end": {
              "column": 100,
              "line": 21
            },
            "start": {
              "column": 45,
              "line": 21
            }
          }
        },
        {
          "id": "202",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(23,58): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'ComputedGetter<boolean>'.\n      Type 'void' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean, boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean, boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'WritableComputedOptions<boolean, boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 31
            },
            "start": {
              "column": 64,
              "line": 23
            }
          }
        },
        {
          "id": "203",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(25,89): error TS2345: Argument of type '\"\"' is not assignable to parameter of type '\"vote\" | \"eat\" | \"look\" | \"charm\" | \"give-life-potion\" | \"give-death-potion\" | \"shoot\" | \"protect\" | \"mark\" | \"choose-as-model\" | \"choose-as-sheriff\" | \"sniff\" | \"ban-voting\" | ... 4 more ... | \"bury\"'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65"
          ],
          "location": {
            "end": {
              "column": 101,
              "line": 25
            },
            "start": {
              "column": 89,
              "line": 25
            }
          }
        },
        {
          "id": "204",
          "mutatorName": "OptionalChaining",
          "replacement": "currentPlay.value.action",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(26,31): error TS18047: 'currentPlay.value' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65"
          ],
          "location": {
            "end": {
              "column": 56,
              "line": 26
            },
            "start": {
              "column": 31,
              "line": 26
            }
          }
        },
        {
          "id": "205",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "62"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65"
          ],
          "location": {
            "end": {
              "column": 148,
              "line": 27
            },
            "start": {
              "column": 72,
              "line": 27
            }
          }
        },
        {
          "id": "206",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65"
          ],
          "location": {
            "end": {
              "column": 148,
              "line": 27
            },
            "start": {
              "column": 72,
              "line": 27
            }
          }
        },
        {
          "id": "207",
          "mutatorName": "LogicalOperator",
          "replacement": "currentGameAction === \"bury-dead-bodies\" || !stealRoleEligibleTargets.length",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "62"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65"
          ],
          "location": {
            "end": {
              "column": 148,
              "line": 27
            },
            "start": {
              "column": 72,
              "line": 27
            }
          }
        },
        {
          "id": "208",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "62"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65"
          ],
          "location": {
            "end": {
              "column": 112,
              "line": 27
            },
            "start": {
              "column": 72,
              "line": 27
            }
          }
        },
        {
          "id": "209",
          "mutatorName": "EqualityOperator",
          "replacement": "currentGameAction !== \"bury-dead-bodies\"",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "62"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65"
          ],
          "location": {
            "end": {
              "column": 112,
              "line": 27
            },
            "start": {
              "column": 72,
              "line": 27
            }
          }
        },
        {
          "id": "210",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(27,72): error TS2367: This comparison appears to be unintentional because the types '\"vote\" | \"choose-card\" | \"choose-side\" | \"request-another-vote\" | \"bury-dead-bodies\" | \"eat\" | \"look\" | \"charm\" | \"shoot\" | \"protect\" | \"mark\" | \"sniff\" | \"ban-voting\" | \"infect\" | ... 6 more ... | undefined' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65"
          ],
          "location": {
            "end": {
              "column": 112,
              "line": 27
            },
            "start": {
              "column": 94,
              "line": 27
            }
          }
        },
        {
          "id": "211",
          "mutatorName": "BooleanLiteral",
          "replacement": "stealRoleEligibleTargets.length",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(23,58): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Argument of type '() => number | boolean' is not assignable to parameter of type 'ComputedGetter<boolean>'.\n      Type 'number | boolean' is not assignable to type 'boolean'.\n        Type 'number' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean, boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean, boolean>', gave the following error.\n    Argument of type '() => number | boolean' is not assignable to parameter of type 'WritableComputedOptions<boolean, boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "63",
            "65"
          ],
          "location": {
            "end": {
              "column": 148,
              "line": 27
            },
            "start": {
              "column": 116,
              "line": 27
            }
          }
        },
        {
          "id": "212",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "62"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65"
          ],
          "location": {
            "end": {
              "column": 128,
              "line": 28
            },
            "start": {
              "column": 60,
              "line": 28
            }
          }
        },
        {
          "id": "213",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65"
          ],
          "location": {
            "end": {
              "column": 128,
              "line": 28
            },
            "start": {
              "column": 60,
              "line": 28
            }
          }
        },
        {
          "id": "214",
          "mutatorName": "LogicalOperator",
          "replacement": "currentGameAction === \"choose-side\" || isWolfHoundSideRandomlyChosen",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "62"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65"
          ],
          "location": {
            "end": {
              "column": 128,
              "line": 28
            },
            "start": {
              "column": 60,
              "line": 28
            }
          }
        },
        {
          "id": "215",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "62"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65"
          ],
          "location": {
            "end": {
              "column": 95,
              "line": 28
            },
            "start": {
              "column": 60,
              "line": 28
            }
          }
        },
        {
          "id": "216",
          "mutatorName": "EqualityOperator",
          "replacement": "currentGameAction !== \"choose-side\"",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65"
          ],
          "location": {
            "end": {
              "column": 95,
              "line": 28
            },
            "start": {
              "column": 60,
              "line": 28
            }
          }
        },
        {
          "id": "217",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(28,60): error TS2367: This comparison appears to be unintentional because the types '\"vote\" | \"choose-card\" | \"choose-side\" | \"request-another-vote\" | \"bury-dead-bodies\" | \"eat\" | \"look\" | \"charm\" | \"shoot\" | \"protect\" | \"mark\" | \"sniff\" | \"ban-voting\" | \"infect\" | ... 6 more ... | undefined' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65"
          ],
          "location": {
            "end": {
              "column": 95,
              "line": 28
            },
            "start": {
              "column": 82,
              "line": 28
            }
          }
        },
        {
          "id": "218",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "62"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65"
          ],
          "location": {
            "end": {
              "column": 120,
              "line": 30
            },
            "start": {
              "column": 12,
              "line": 30
            }
          }
        },
        {
          "id": "219",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65"
          ],
          "location": {
            "end": {
              "column": 120,
              "line": 30
            },
            "start": {
              "column": 12,
              "line": 30
            }
          }
        },
        {
          "id": "220",
          "mutatorName": "LogicalOperator",
          "replacement": "isCurrentActionBuryDeadBodiesAndNoStealRoleEligibleTargets && isCurrentActionChooseSideAndSideRandomlyChosen",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65"
          ],
          "location": {
            "end": {
              "column": 120,
              "line": 30
            },
            "start": {
              "column": 12,
              "line": 30
            }
          }
        },
        {
          "id": "221",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(33,78): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<\"stuttering-judge-request\" | \"previous-votes-were-in-ties\" | \"angel-presence\" | undefined>, debugOptions?: DebuggerOptions | undefined): ComputedRef<...>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'ComputedGetter<\"stuttering-judge-request\" | \"previous-votes-were-in-ties\" | \"angel-presence\" | undefined>'.\n      Type 'void' is not assignable to type '\"stuttering-judge-request\" | \"previous-votes-were-in-ties\" | \"angel-presence\" | undefined'.\n  Overload 2 of 2, '(options: WritableComputedOptions<\"stuttering-judge-request\" | \"previous-votes-were-in-ties\" | \"angel-presence\" | undefined, \"stuttering-judge-request\" | \"previous-votes-were-in-ties\" | \"angel-presence\" | undefined>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<...>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'WritableComputedOptions<\"stuttering-judge-request\" | \"previous-votes-were-in-ties\" | \"angel-presence\" | undefined, \"stuttering-judge-request\" | \"previous-votes-were-in-ties\" | \"angel-presence\" | undefined>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "66",
            "67",
            "68",
            "69"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 41
            },
            "start": {
              "column": 84,
              "line": 33
            }
          }
        },
        {
          "id": "222",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "expected undefined to be 'angel-presence' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "67"
          ],
          "coveredBy": [
            "66",
            "67",
            "68",
            "69"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 38
            },
            "start": {
              "column": 61,
              "line": 34
            }
          }
        },
        {
          "id": "223",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(35,7): error TS2322: Type '\"\"' is not assignable to type '\"stuttering-judge-request\" | \"previous-votes-were-in-ties\" | \"angel-presence\"'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "66",
            "67",
            "68",
            "69"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 35
            },
            "start": {
              "column": 7,
              "line": 35
            }
          }
        },
        {
          "id": "224",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(36,7): error TS2322: Type '\"\"' is not assignable to type '\"stuttering-judge-request\" | \"previous-votes-were-in-ties\" | \"angel-presence\"'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "66",
            "67",
            "68",
            "69"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 36
            },
            "start": {
              "column": 7,
              "line": 36
            }
          }
        },
        {
          "id": "225",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(37,7): error TS2322: Type '\"\"' is not assignable to type '\"stuttering-judge-request\" | \"previous-votes-were-in-ties\" | \"angel-presence\"'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "66",
            "67",
            "68",
            "69"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 37
            },
            "start": {
              "column": 7,
              "line": 37
            }
          }
        },
        {
          "id": "226",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected undefined to be 'angel-presence' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "67"
          ],
          "coveredBy": [
            "66",
            "67",
            "68",
            "69"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 40
            },
            "start": {
              "column": 48,
              "line": 40
            }
          }
        },
        {
          "id": "227",
          "mutatorName": "OptionalChaining",
          "replacement": "currentPlay.value?.causes.includes",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(40,57): error TS18048: 'currentPlay.value.causes' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "66",
            "67",
            "68",
            "69"
          ],
          "location": {
            "end": {
              "column": 92,
              "line": 40
            },
            "start": {
              "column": 57,
              "line": 40
            }
          }
        },
        {
          "id": "228",
          "mutatorName": "OptionalChaining",
          "replacement": "currentPlay.value.causes",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(40,57): error TS18047: 'currentPlay.value' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "66",
            "67",
            "68",
            "69"
          ],
          "location": {
            "end": {
              "column": 82,
              "line": 40
            },
            "start": {
              "column": 57,
              "line": 40
            }
          }
        },
        {
          "id": "229",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(43,104): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "70",
            "71"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 52
            },
            "start": {
              "column": 113,
              "line": 43
            }
          }
        },
        {
          "id": "230",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(47,25): error TS18047: 'currentPlay.value' is possibly 'null'.\napp/composables/api/game/game-play/useCurrentGamePlay.ts(47,25): error TS18048: 'currentPlay.value.source.interactions' is possibly 'undefined'.\napp/composables/api/game/game-play/useCurrentGamePlay.ts(51,12): error TS18048: 'interaction' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "70",
            "71"
          ],
          "location": {
            "end": {
              "column": 61,
              "line": 44
            },
            "start": {
              "column": 9,
              "line": 44
            }
          }
        },
        {
          "id": "231",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(47,25): error TS18047: 'currentPlay.value' is possibly 'null'.\napp/composables/api/game/game-play/useCurrentGamePlay.ts(47,25): error TS18048: 'currentPlay.value.source.interactions' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "70",
            "71"
          ],
          "location": {
            "end": {
              "column": 61,
              "line": 44
            },
            "start": {
              "column": 9,
              "line": 44
            }
          }
        },
        {
          "id": "232",
          "mutatorName": "EqualityOperator",
          "replacement": "currentPlay.value?.source.interactions !== undefined",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(47,25): error TS18047: 'currentPlay.value' is possibly 'null'.\napp/composables/api/game/game-play/useCurrentGamePlay.ts(47,25): error TS18048: 'currentPlay.value.source.interactions' is possibly 'undefined'.\napp/composables/api/game/game-play/useCurrentGamePlay.ts(47,71): error TS7031: Binding element 'type' implicitly has an 'any' type.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "70",
            "71"
          ],
          "location": {
            "end": {
              "column": 61,
              "line": 44
            },
            "start": {
              "column": 9,
              "line": 44
            }
          }
        },
        {
          "id": "233",
          "mutatorName": "OptionalChaining",
          "replacement": "currentPlay.value.source",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(44,9): error TS18047: 'currentPlay.value' is possibly 'null'.\napp/composables/api/game/game-play/useCurrentGamePlay.ts(47,25): error TS18047: 'currentPlay.value' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "70",
            "71"
          ],
          "location": {
            "end": {
              "column": 34,
              "line": 44
            },
            "start": {
              "column": 9,
              "line": 44
            }
          }
        },
        {
          "id": "234",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(45,25): error TS18047: 'currentPlay.value' is possibly 'null'.\napp/composables/api/game/game-play/useCurrentGamePlay.ts(45,25): error TS18048: 'currentPlay.value.source.interactions' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "62",
            "70"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 46
            },
            "start": {
              "column": 63,
              "line": 44
            }
          }
        },
        {
          "id": "235",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(45,15): error TS2322: Type 'string' is not assignable to type 'Player'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "62",
            "70"
          ],
          "location": {
            "end": {
              "column": 16,
              "line": 45
            },
            "start": {
              "column": 14,
              "line": 45
            }
          }
        },
        {
          "id": "236",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "70",
            "71"
          ],
          "location": {
            "end": {
              "column": 106,
              "line": 47
            },
            "start": {
              "column": 68,
              "line": 47
            }
          }
        },
        {
          "id": "237",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected [ _Player{ …(7) } ] to strictly equal []",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "70"
          ],
          "coveredBy": [
            "63",
            "64",
            "70",
            "71"
          ],
          "location": {
            "end": {
              "column": 106,
              "line": 47
            },
            "start": {
              "column": 82,
              "line": 47
            }
          }
        },
        {
          "id": "238",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "63",
            "64",
            "70",
            "71"
          ],
          "location": {
            "end": {
              "column": 106,
              "line": 47
            },
            "start": {
              "column": 82,
              "line": 47
            }
          }
        },
        {
          "id": "239",
          "mutatorName": "EqualityOperator",
          "replacement": "type !== interactionType",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "63",
            "64",
            "70",
            "71"
          ],
          "location": {
            "end": {
              "column": 106,
              "line": 47
            },
            "start": {
              "column": 82,
              "line": 47
            }
          }
        },
        {
          "id": "240",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(51,12): error TS18048: 'interaction' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "70",
            "71"
          ],
          "location": {
            "end": {
              "column": 34,
              "line": 48
            },
            "start": {
              "column": 9,
              "line": 48
            }
          }
        },
        {
          "id": "241",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(51,12): error TS18048: 'interaction' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "70",
            "71"
          ],
          "location": {
            "end": {
              "column": 34,
              "line": 48
            },
            "start": {
              "column": 9,
              "line": 48
            }
          }
        },
        {
          "id": "242",
          "mutatorName": "EqualityOperator",
          "replacement": "interaction !== undefined",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(51,12): error TS18048: 'interaction' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "70",
            "71"
          ],
          "location": {
            "end": {
              "column": 34,
              "line": 48
            },
            "start": {
              "column": 9,
              "line": 48
            }
          }
        },
        {
          "id": "243",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(49,12): error TS18048: 'interaction' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "65",
            "70"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 50
            },
            "start": {
              "column": 36,
              "line": 48
            }
          }
        },
        {
          "id": "244",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(49,15): error TS2322: Type 'string' is not assignable to type 'Player'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "65",
            "70"
          ],
          "location": {
            "end": {
              "column": 16,
              "line": 49
            },
            "start": {
              "column": 14,
              "line": 49
            }
          }
        },
        {
          "id": "245",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(54,67): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "72",
            "73",
            "74",
            "75",
            "76"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 61
            },
            "start": {
              "column": 88,
              "line": 54
            }
          }
        },
        {
          "id": "246",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(58,13): error TS2339: Property 'source' does not exist on type 'GamePlay | null'.\napp/composables/api/game/game-play/useCurrentGamePlay.ts(60,12): error TS18048: 'additionalCards.value' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "72",
            "73",
            "74",
            "75",
            "76"
          ],
          "location": {
            "end": {
              "column": 91,
              "line": 55
            },
            "start": {
              "column": 9,
              "line": 55
            }
          }
        },
        {
          "id": "247",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(58,13): error TS2339: Property 'source' does not exist on type 'GamePlay | null'.\napp/composables/api/game/game-play/useCurrentGamePlay.ts(60,12): error TS18048: 'additionalCards.value' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "72",
            "73",
            "74",
            "75",
            "76"
          ],
          "location": {
            "end": {
              "column": 91,
              "line": 55
            },
            "start": {
              "column": 9,
              "line": 55
            }
          }
        },
        {
          "id": "248",
          "mutatorName": "LogicalOperator",
          "replacement": "currentPlay.value?.action !== \"choose-card\" && additionalCards.value === undefined",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(58,13): error TS2339: Property 'source' does not exist on type 'GamePlay | null'.\napp/composables/api/game/game-play/useCurrentGamePlay.ts(60,12): error TS18048: 'additionalCards.value' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "72",
            "73",
            "74",
            "75",
            "76"
          ],
          "location": {
            "end": {
              "column": 91,
              "line": 55
            },
            "start": {
              "column": 9,
              "line": 55
            }
          }
        },
        {
          "id": "249",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(58,13): error TS2339: Property 'source' does not exist on type 'GamePlay | null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "72",
            "73",
            "74",
            "75",
            "76"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 55
            },
            "start": {
              "column": 9,
              "line": 55
            }
          }
        },
        {
          "id": "250",
          "mutatorName": "EqualityOperator",
          "replacement": "currentPlay.value?.action === \"choose-card\"",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(58,13): error TS2339: Property 'source' does not exist on type 'GamePlay | null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "72",
            "73",
            "74",
            "75",
            "76"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 55
            },
            "start": {
              "column": 9,
              "line": 55
            }
          }
        },
        {
          "id": "251",
          "mutatorName": "OptionalChaining",
          "replacement": "currentPlay.value.action",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(55,9): error TS18047: 'currentPlay.value' is possibly 'null'.\napp/composables/api/game/game-play/useCurrentGamePlay.ts(58,13): error TS2339: Property 'source' does not exist on type 'GamePlay | null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "72",
            "73",
            "74",
            "75",
            "76"
          ],
          "location": {
            "end": {
              "column": 34,
              "line": 55
            },
            "start": {
              "column": 9,
              "line": 55
            }
          }
        },
        {
          "id": "252",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(55,9): error TS2367: This comparison appears to be unintentional because the types '\"vote\" | \"choose-card\" | \"choose-side\" | \"request-another-vote\" | \"bury-dead-bodies\" | \"eat\" | \"look\" | \"charm\" | \"shoot\" | \"protect\" | \"mark\" | \"sniff\" | \"ban-voting\" | \"infect\" | ... 6 more ... | undefined' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "72",
            "73",
            "74",
            "75",
            "76"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 55
            },
            "start": {
              "column": 39,
              "line": 55
            }
          }
        },
        {
          "id": "253",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(60,12): error TS18048: 'additionalCards.value' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "74",
            "76"
          ],
          "location": {
            "end": {
              "column": 91,
              "line": 55
            },
            "start": {
              "column": 56,
              "line": 55
            }
          }
        },
        {
          "id": "254",
          "mutatorName": "EqualityOperator",
          "replacement": "additionalCards.value !== undefined",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(60,12): error TS18048: 'additionalCards.value' is possibly 'undefined'.\napp/composables/api/game/game-play/useCurrentGamePlay.ts(60,44): error TS7031: Binding element 'recipient' implicitly has an 'any' type.\napp/composables/api/game/game-play/useCurrentGamePlay.ts(60,55): error TS7031: Binding element 'isUsed' implicitly has an 'any' type.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "74",
            "76"
          ],
          "location": {
            "end": {
              "column": 91,
              "line": 55
            },
            "start": {
              "column": 56,
              "line": 55
            }
          }
        },
        {
          "id": "255",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(56,13): error TS2339: Property 'source' does not exist on type 'GamePlay | null'.\napp/composables/api/game/game-play/useCurrentGamePlay.ts(58,12): error TS18048: 'additionalCards.value' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "72",
            "73",
            "75"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 57
            },
            "start": {
              "column": 93,
              "line": 55
            }
          }
        },
        {
          "id": "256",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(56,15): error TS2322: Type 'string' is not assignable to type 'GameAdditionalCard'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "72",
            "73",
            "75"
          ],
          "location": {
            "end": {
              "column": 16,
              "line": 56
            },
            "start": {
              "column": 14,
              "line": 56
            }
          }
        },
        {
          "id": "257",
          "mutatorName": "MethodExpression",
          "replacement": "additionalCards.value",
          "statusReason": "expected [ _GameAdditionalCard{ …(4) }, …(3) ] to strictly equal [ _GameAdditionalCard{ …(4) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "76"
          ],
          "location": {
            "end": {
              "column": 105,
              "line": 60
            },
            "start": {
              "column": 12,
              "line": 60
            }
          }
        },
        {
          "id": "258",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected [] to strictly equal [ _GameAdditionalCard{ …(4) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "76"
          ],
          "location": {
            "end": {
              "column": 104,
              "line": 60
            },
            "start": {
              "column": 41,
              "line": 60
            }
          }
        },
        {
          "id": "259",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected [ _GameAdditionalCard{ …(4) }, …(3) ] to strictly equal [ _GameAdditionalCard{ …(4) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "76"
          ],
          "location": {
            "end": {
              "column": 104,
              "line": 60
            },
            "start": {
              "column": 68,
              "line": 60
            }
          }
        },
        {
          "id": "260",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected [] to strictly equal [ _GameAdditionalCard{ …(4) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "76"
          ],
          "location": {
            "end": {
              "column": 104,
              "line": 60
            },
            "start": {
              "column": 68,
              "line": 60
            }
          }
        },
        {
          "id": "261",
          "mutatorName": "LogicalOperator",
          "replacement": "recipient === source.name || !isUsed",
          "statusReason": "expected [ _GameAdditionalCard{ …(4) }, …(2) ] to strictly equal [ _GameAdditionalCard{ …(4) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "76"
          ],
          "location": {
            "end": {
              "column": 104,
              "line": 60
            },
            "start": {
              "column": 68,
              "line": 60
            }
          }
        },
        {
          "id": "262",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected [ _GameAdditionalCard{ …(4) }, …(1) ] to strictly equal [ _GameAdditionalCard{ …(4) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "76"
          ],
          "location": {
            "end": {
              "column": 93,
              "line": 60
            },
            "start": {
              "column": 68,
              "line": 60
            }
          }
        },
        {
          "id": "263",
          "mutatorName": "EqualityOperator",
          "replacement": "recipient !== source.name",
          "statusReason": "expected [ _GameAdditionalCard{ …(4) } ] to strictly equal [ _GameAdditionalCard{ …(4) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "76"
          ],
          "location": {
            "end": {
              "column": 93,
              "line": 60
            },
            "start": {
              "column": 68,
              "line": 60
            }
          }
        },
        {
          "id": "264",
          "mutatorName": "BooleanLiteral",
          "replacement": "isUsed",
          "statusReason": "expected [ _GameAdditionalCard{ …(4) } ] to strictly equal [ _GameAdditionalCard{ …(4) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "76"
          ],
          "location": {
            "end": {
              "column": 104,
              "line": 60
            },
            "start": {
              "column": 97,
              "line": 60
            }
          }
        },
        {
          "id": "265",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/game-play/useCurrentGamePlay.ts(62,3): error TS2739: Type '{}' is missing the following properties from type 'UseCurrentGamePlay': mustCurrentGamePlayBeSkipped, priorityCauseInCurrentGamePlay, getEligibleTargetsWithInteractionInCurrentGamePlay, getEligibleAdditionalCardsToChooseInCurrentGamePlay\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 67
            },
            "start": {
              "column": 10,
              "line": 62
            }
          }
        }
      ],
      "source": "import type { ComputedRef, MaybeRef } from \"vue\";\n\nimport type { GameAdditionalCard } from \"~/composables/api/game/types/game-additional-card/game-additional-card.class\";\nimport type { GameOptions } from \"~/composables/api/game/types/game-options/game-options.class\";\nimport type { GamePlay } from \"~/composables/api/game/types/game-play/game-play.class\";\nimport type { GamePlayCause } from \"~/composables/api/game/types/game-play/game-play.types\";\nimport type { Game } from \"~/composables/api/game/types/game.class\";\nimport type { PlayerInteractionType } from \"~/composables/api/game/types/players/player-interaction/player-interaction.types\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\n\ntype UseCurrentGamePlay = {\n  mustCurrentGamePlayBeSkipped: ComputedRef<boolean>;\n  priorityCauseInCurrentGamePlay: ComputedRef<GamePlayCause | undefined>;\n  getEligibleTargetsWithInteractionInCurrentGamePlay: (interaction: PlayerInteractionType) => Player[];\n  getEligibleAdditionalCardsToChooseInCurrentGamePlay: () => GameAdditionalCard[];\n};\n\nfunction useCurrentGamePlay(game: MaybeRef<Game>): UseCurrentGamePlay {\n  const currentPlay = computed<GamePlay | null>(() => (isRef(game) ? game.value.currentPlay : game.currentPlay));\n  const additionalCards = computed<GameAdditionalCard[] | undefined>(() => (isRef(game) ? game.value.additionalCards : game.additionalCards));\n  const gameOptions = computed<GameOptions>(() => (isRef(game) ? game.value.options : game.options));\n\n  const mustCurrentGamePlayBeSkipped = computed<boolean>(() => {\n    const isWolfHoundSideRandomlyChosen = gameOptions.value.roles.wolfHound.isSideRandomlyChosen;\n    const stealRoleEligibleTargets = getEligibleTargetsWithInteractionInCurrentGamePlay(\"steal-role\");\n    const currentGameAction = currentPlay.value?.action;\n    const isCurrentActionBuryDeadBodiesAndNoStealRoleEligibleTargets = currentGameAction === \"bury-dead-bodies\" && !stealRoleEligibleTargets.length;\n    const isCurrentActionChooseSideAndSideRandomlyChosen = currentGameAction === \"choose-side\" && isWolfHoundSideRandomlyChosen;\n\n    return isCurrentActionBuryDeadBodiesAndNoStealRoleEligibleTargets || isCurrentActionChooseSideAndSideRandomlyChosen;\n  });\n\n  const priorityCauseInCurrentGamePlay = computed<GamePlayCause | undefined>(() => {\n    const gamePlayCausesSortedByPriority: GamePlayCause[] = [\n      \"previous-votes-were-in-ties\",\n      \"angel-presence\",\n      \"stuttering-judge-request\",\n    ];\n\n    return gamePlayCausesSortedByPriority.find(cause => currentPlay.value?.causes?.includes(cause));\n  });\n\n  function getEligibleTargetsWithInteractionInCurrentGamePlay(interactionType: PlayerInteractionType): Player[] {\n    if (currentPlay.value?.source.interactions === undefined) {\n      return [];\n    }\n    const interaction = currentPlay.value.source.interactions.find(({ type }) => type === interactionType);\n    if (interaction === undefined) {\n      return [];\n    }\n    return interaction.eligibleTargets;\n  }\n\n  function getEligibleAdditionalCardsToChooseInCurrentGamePlay(): GameAdditionalCard[] {\n    if (currentPlay.value?.action !== \"choose-card\" || additionalCards.value === undefined) {\n      return [];\n    }\n    const { source } = currentPlay.value;\n\n    return additionalCards.value.filter(({ recipient, isUsed }) => recipient === source.name && !isUsed);\n  }\n  return {\n    mustCurrentGamePlayBeSkipped,\n    priorityCauseInCurrentGamePlay,\n    getEligibleTargetsWithInteractionInCurrentGamePlay,\n    getEligibleAdditionalCardsToChooseInCurrentGamePlay,\n  };\n}\n\nexport { useCurrentGamePlay };"
    },
    "app/composables/api/game/player/usePlayers.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "266",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/player/usePlayers.ts(7,24): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "160",
            "161"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 22
            },
            "start": {
              "column": 35,
              "line": 7
            }
          }
        },
        {
          "id": "267",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/player/usePlayers.ts(10,52): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "160",
            "161"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 20
            },
            "start": {
              "column": 59,
              "line": 10
            }
          }
        },
        {
          "id": "268",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/player/usePlayers.ts(11,5): error TS2322: Type 'Player' is not assignable to type 'string'.\napp/composables/api/game/player/usePlayers.ts(11,35): error TS2345: Argument of type '(acc: string, player: Player, index: number) => void' is not assignable to parameter of type '(previousValue: string, currentValue: Player, currentIndex: number, array: Player[]) => string'.\n  Type 'void' is not assignable to type 'string'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "160"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 19
            },
            "start": {
              "column": 59,
              "line": 11
            }
          }
        },
        {
          "id": "269",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'player-3' to be 'player-1, player-2 shared.and player-3' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "160"
          ],
          "coveredBy": [
            "160"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 12
            },
            "start": {
              "column": 11,
              "line": 12
            }
          }
        },
        {
          "id": "270",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected ', player-1, player-2 shared.and playe…' to be 'player-1, player-2 shared.and player-3' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "160"
          ],
          "coveredBy": [
            "160"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 12
            },
            "start": {
              "column": 11,
              "line": 12
            }
          }
        },
        {
          "id": "271",
          "mutatorName": "EqualityOperator",
          "replacement": "index !== 0",
          "statusReason": "expected 'player-3' to be 'player-1, player-2 shared.and player-3' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "160"
          ],
          "coveredBy": [
            "160"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 12
            },
            "start": {
              "column": 11,
              "line": 12
            }
          }
        },
        {
          "id": "272",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected ', player-1, player-2 shared.and playe…' to be 'player-1, player-2 shared.and player-3' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "160"
          ],
          "coveredBy": [
            "160"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 14
            },
            "start": {
              "column": 24,
              "line": 12
            }
          }
        },
        {
          "id": "273",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'player-1 shared.and player-2 shared.a…' to be 'player-1, player-2 shared.and player-3' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "160"
          ],
          "coveredBy": [
            "160"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 15
            },
            "start": {
              "column": 11,
              "line": 15
            }
          }
        },
        {
          "id": "274",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected 'player-1, player-2, player-3' to be 'player-1, player-2 shared.and player-3' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "160"
          ],
          "coveredBy": [
            "160"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 15
            },
            "start": {
              "column": 11,
              "line": 15
            }
          }
        },
        {
          "id": "275",
          "mutatorName": "EqualityOperator",
          "replacement": "index !== players.length - 1",
          "statusReason": "expected 'player-1 shared.and player-2, player-3' to be 'player-1, player-2 shared.and player-3' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "160"
          ],
          "coveredBy": [
            "160"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 15
            },
            "start": {
              "column": 11,
              "line": 15
            }
          }
        },
        {
          "id": "276",
          "mutatorName": "ArithmeticOperator",
          "replacement": "players.length + 1",
          "statusReason": "expected 'player-1, player-2, player-3' to be 'player-1, player-2 shared.and player-3' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "160"
          ],
          "coveredBy": [
            "160"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 15
            },
            "start": {
              "column": 21,
              "line": 15
            }
          }
        },
        {
          "id": "277",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected 'player-1, player-2, player-3' to be 'player-1, player-2 shared.and player-3' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "160"
          ],
          "coveredBy": [
            "160"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 17
            },
            "start": {
              "column": 41,
              "line": 15
            }
          }
        },
        {
          "id": "278",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected '' to be 'player-1, player-2 shared.and player-3' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "160"
          ],
          "coveredBy": [
            "160"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 16
            },
            "start": {
              "column": 16,
              "line": 16
            }
          }
        },
        {
          "id": "279",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected 'player-1, player-2  player-3' to be 'player-1, player-2 shared.and player-3' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "160"
          ],
          "coveredBy": [
            "160"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 16
            },
            "start": {
              "column": 28,
              "line": 16
            }
          }
        },
        {
          "id": "280",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected ' shared.and player-3' to be 'player-1, player-2 shared.and player-3' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "160"
          ],
          "coveredBy": [
            "160"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 18
            },
            "start": {
              "column": 14,
              "line": 18
            }
          }
        },
        {
          "id": "281",
          "mutatorName": "StringLiteral",
          "replacement": "\"Stryker was here!\"",
          "statusReason": "expected 'Stryker was here!' to be '' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "161"
          ],
          "coveredBy": [
            "160",
            "161"
          ],
          "location": {
            "end": {
              "column": 10,
              "line": 19
            },
            "start": {
              "column": 8,
              "line": 19
            }
          }
        },
        {
          "id": "282",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/player/usePlayers.ts(21,3): error TS2741: Property 'getPlayersNamesText' is missing in type '{}' but required in type 'UsePlayers'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "160",
            "161"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 21
            },
            "start": {
              "column": 10,
              "line": 21
            }
          }
        }
      ],
      "source": "import type { Player } from \"~/composables/api/game/types/players/player.class\";\n\ntype UsePlayers = {\n  getPlayersNamesText: (players: Player[]) => string;\n};\n\nfunction usePlayers(): UsePlayers {\n  const { t } = useI18n();\n\n  function getPlayersNamesText(players: Player[]): string {\n    return players.reduce<string>((acc, player, index) => {\n      if (index === 0) {\n        return player.name;\n      }\n      if (index === players.length - 1) {\n        return `${acc} ${t(\"shared.and\")} ${player.name}`;\n      }\n      return `${acc}, ${player.name}`;\n    }, \"\");\n  }\n  return { getPlayersNamesText };\n}\n\nexport { usePlayers };"
    },
    "app/composables/api/game/types/game-additional-card/game-additional-card.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "283",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-additional-card/game-additional-card.class.ts(20,65): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "75",
            "76",
            "119",
            "166"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 22
            },
            "start": {
              "column": 84,
              "line": 20
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport type { GameAdditionalCardRecipientRoleName } from \"~/composables/api/game/types/game-additional-card/game-additional-card.types\";\nimport type { RoleName } from \"~/composables/api/role/types/role.types\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass GameAdditionalCard {\n  @Expose()\n  public _id: string;\n\n  @Expose()\n  public roleName: RoleName;\n\n  @Expose()\n  public recipient: GameAdditionalCardRecipientRoleName;\n\n  @Expose()\n  public isUsed: boolean;\n\n  public static create(gameAdditionalCard: GameAdditionalCard): GameAdditionalCard {\n    return plainToInstance(GameAdditionalCard, gameAdditionalCard, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { GameAdditionalCard };"
    },
    "app/composables/api/game/types/game-event/game-event.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "284",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-event/game-event.class.ts(14,47): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "158"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 16
            },
            "start": {
              "column": 57,
              "line": 14
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport type { GameEventType } from \"~/composables/api/game/types/game-event/game-event.types\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass GameEvent {\n  @Expose()\n  public type: GameEventType;\n\n  @Expose()\n  public players?: Player[];\n\n  public static create(gameEvent: GameEvent): GameEvent {\n    return plainToInstance(GameEvent, gameEvent, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { GameEvent };"
    },
    "app/composables/api/game/types/game-feedback/game-feedback.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "285",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-feedback/game-feedback.class.ts(24,53): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "102",
            "103",
            "143"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 26
            },
            "start": {
              "column": 66,
              "line": 24
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass GameFeedback {\n  @Expose()\n  public _id: string;\n\n  @Expose()\n  public gameId: string;\n\n  @Expose()\n  public score: number;\n\n  @Expose()\n  public review?: string;\n\n  @Expose()\n  public hasEncounteredError: boolean;\n\n  @Expose()\n  public createdAt: Date;\n\n  public static create(gameFeedback: GameFeedback): GameFeedback {\n    return plainToInstance(GameFeedback, gameFeedback, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { GameFeedback };"
    },
    "app/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-source/game-history-record-play-source.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "286",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-source/game-history-record-play-source.class.ts(20,83): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "102",
            "103",
            "119",
            "120",
            "144"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 22
            },
            "start": {
              "column": 111,
              "line": 20
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\n\nimport { GamePlaySourceInteraction } from \"~/composables/api/game/types/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction.class\";\nimport type { GamePlaySourceName } from \"~/composables/api/game/types/game-play/game-play-source/game-play-source.types\";\nimport { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass GameHistoryRecordPlaySource {\n  @Expose()\n  public name: GamePlaySourceName;\n\n  @Expose()\n  @Type(() => Player)\n  public players: Player[];\n\n  @Expose()\n  @Type(() => GamePlaySourceInteraction)\n  public interactions?: GamePlaySourceInteraction[];\n\n  public static create(gameHistoryRecordPlaySource: GameHistoryRecordPlaySource): GameHistoryRecordPlaySource {\n    return plainToInstance(GameHistoryRecordPlaySource, gameHistoryRecordPlaySource, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { GameHistoryRecordPlaySource };"
    },
    "app/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-target/game-history-record-play-target.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "287",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-target/game-history-record-play-target.class.ts(15,83): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "119",
            "150"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 17
            },
            "start": {
              "column": 111,
              "line": 15
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\n\nimport type { WitchPotion } from \"~/composables/api/game/types/game-play/game-play.types\";\nimport { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass GameHistoryRecordPlayTarget {\n  @Expose()\n  @Type(() => Player)\n  public player: Player;\n\n  @Expose()\n  public drankPotion?: WitchPotion;\n\n  public static create(gameHistoryRecordPlayTarget: GameHistoryRecordPlayTarget): GameHistoryRecordPlayTarget {\n    return plainToInstance(GameHistoryRecordPlayTarget, gameHistoryRecordPlayTarget, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { GameHistoryRecordPlayTarget };"
    },
    "app/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-vote/game-history-record-play-vote.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "288",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-vote/game-history-record-play-vote.class.ts(15,79): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "119",
            "151"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 17
            },
            "start": {
              "column": 105,
              "line": 15
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\n\nimport { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass GameHistoryRecordPlayVote {\n  @Expose()\n  @Type(() => Player)\n  public source: Player;\n\n  @Expose()\n  @Type(() => Player)\n  public target: Player;\n\n  public static create(gameHistoryRecordPlayVote: GameHistoryRecordPlayVote): GameHistoryRecordPlayVote {\n    return plainToInstance(GameHistoryRecordPlayVote, gameHistoryRecordPlayVote, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { GameHistoryRecordPlayVote };"
    },
    "app/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-voting/game-history-record-play-voting.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "289",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-voting/game-history-record-play-voting.class.ts(15,83): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "119",
            "142"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 17
            },
            "start": {
              "column": 111,
              "line": 15
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\n\nimport type { GameHistoryRecordPlayVotingResult } from \"~/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-voting/game-history-record-play-voting.types\";\nimport { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass GameHistoryRecordPlayVoting {\n  @Expose()\n  public result: GameHistoryRecordPlayVotingResult;\n\n  @Expose()\n  @Type(() => Player)\n  public nominatedPlayers?: Player[];\n\n  public static create(gameHistoryRecordPlayVoting: GameHistoryRecordPlayVoting): GameHistoryRecordPlayVoting {\n    return plainToInstance(GameHistoryRecordPlayVoting, gameHistoryRecordPlayVoting, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { GameHistoryRecordPlayVoting };"
    },
    "app/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "290",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play.class.ts(48,71): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "102",
            "103",
            "119",
            "120"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 50
            },
            "start": {
              "column": 93,
              "line": 48
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\n\nimport { GameAdditionalCard } from \"~/composables/api/game/types/game-additional-card/game-additional-card.class\";\nimport { GameHistoryRecordPlaySource } from \"~/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-source/game-history-record-play-source.class\";\nimport { GameHistoryRecordPlayTarget } from \"~/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-target/game-history-record-play-target.class\";\nimport { GameHistoryRecordPlayVote } from \"~/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-vote/game-history-record-play-vote.class\";\nimport { GameHistoryRecordPlayVoting } from \"~/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-voting/game-history-record-play-voting.class\";\nimport type { GamePlayAction, GamePlayCause, GamePlayType } from \"~/composables/api/game/types/game-play/game-play.types\";\nimport type { RoleSide } from \"~/composables/api/role/types/role.types\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass GameHistoryRecordPlay {\n  @Expose()\n  public type: GamePlayType;\n\n  @Expose()\n  public action: GamePlayAction;\n\n  @Expose()\n  @Type(() => GameHistoryRecordPlaySource)\n  public source: GameHistoryRecordPlaySource;\n\n  @Expose()\n  public cause?: GamePlayCause;\n\n  @Expose()\n  @Type(() => GameHistoryRecordPlayTarget)\n  public targets?: GameHistoryRecordPlayTarget[];\n\n  @Expose()\n  @Type(() => GameHistoryRecordPlayVote)\n  public votes?: GameHistoryRecordPlayVote[];\n\n  @Expose()\n  @Type(() => GameHistoryRecordPlayVoting)\n  public voting?: GameHistoryRecordPlayVoting;\n\n  @Expose()\n  public didJudgeRequestAnotherVote?: boolean;\n\n  @Expose()\n  @Type(() => GameAdditionalCard)\n  public chosenCard?: GameAdditionalCard;\n\n  @Expose()\n  public chosenSide?: RoleSide;\n\n  public static create(gameHistoryRecordPlay: GameHistoryRecordPlay): GameHistoryRecordPlay {\n    return plainToInstance(GameHistoryRecordPlay, gameHistoryRecordPlay, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { GameHistoryRecordPlay };"
    },
    "app/composables/api/game/types/game-history-record/game-history-record-player-attribute-alteration/game-history-record-player-attribute-alteration.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "291",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-history-record/game-history-record-player-attribute-alteration/game-history-record-player-attribute-alteration.class.ts(21,113): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "120",
            "139"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 23
            },
            "start": {
              "column": 156,
              "line": 21
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport type { GameHistoryRecordPlayerAttributeAlterationStatus } from \"~/composables/api/game/types/game-history-record/game-history-record-player-attribute-alteration/game-history-record-player-attribute-alteration.types\";\nimport type { GameSource } from \"~/composables/api/game/types/game.types\";\nimport type { PlayerAttributeName } from \"~/composables/api/game/types/players/player-attribute/player-attribute.types\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass GameHistoryRecordPlayerAttributeAlteration {\n  @Expose()\n  public name: PlayerAttributeName;\n\n  @Expose()\n  public source: GameSource;\n\n  @Expose()\n  public playerName: string;\n\n  @Expose()\n  public status: GameHistoryRecordPlayerAttributeAlterationStatus;\n\n  public static create(gameHistoryRecordPlayerAttributeAlteration: GameHistoryRecordPlayerAttributeAlteration): GameHistoryRecordPlayerAttributeAlteration {\n    return plainToInstance(GameHistoryRecordPlayerAttributeAlteration, gameHistoryRecordPlayerAttributeAlteration, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { GameHistoryRecordPlayerAttributeAlteration };"
    },
    "app/composables/api/game/types/game-history-record/game-history-record.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "292",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-history-record/game-history-record.class.ts(49,63): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "102",
            "103",
            "120"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 51
            },
            "start": {
              "column": 81,
              "line": 49
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\n\nimport { GameHistoryRecordPlay } from \"~/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play.class\";\nimport { GameHistoryRecordPlayerAttributeAlteration } from \"~/composables/api/game/types/game-history-record/game-history-record-player-attribute-alteration/game-history-record-player-attribute-alteration.class\";\nimport { GamePhase } from \"~/composables/api/game/types/game-phase/game-phase.class\";\nimport { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass GameHistoryRecord {\n  @Expose()\n  public _id: string;\n\n  @Expose()\n  public gameId: string;\n\n  @Expose()\n  public turn: number;\n\n  @Type(() => GamePhase)\n  @Expose()\n  public phase: GamePhase;\n\n  @Expose()\n  public tick: number;\n\n  @Expose()\n  @Type(() => GameHistoryRecordPlay)\n  public play: GameHistoryRecordPlay;\n\n  @Expose()\n  @Type(() => Player)\n  public revealedPlayers?: Player[];\n\n  @Expose()\n  @Type(() => Player)\n  public switchedSidePlayers?: Player[];\n\n  @Expose()\n  @Type(() => Player)\n  public deadPlayers?: Player[];\n\n  @Expose()\n  @Type(() => GameHistoryRecordPlayerAttributeAlteration)\n  public playerAttributeAlterations?: GameHistoryRecordPlayerAttributeAlteration[];\n\n  @Expose()\n  public createdAt: Date;\n\n  public static create(gameHistoryRecord: GameHistoryRecord): GameHistoryRecord {\n    return plainToInstance(GameHistoryRecord, gameHistoryRecord, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { GameHistoryRecord };"
    },
    "app/composables/api/game/types/game-options/composition-game-options/composition-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "293",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-options/composition-game-options/composition-game-options.class.ts(9,73): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "35",
            "57",
            "58",
            "75",
            "76",
            "77",
            "78",
            "79",
            "87",
            "88",
            "102",
            "103",
            "109",
            "110",
            "111",
            "112",
            "123",
            "124",
            "140",
            "195"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 11
            },
            "start": {
              "column": 96,
              "line": 9
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass CompositionGameOptions {\n  @Expose()\n  public isHidden: boolean;\n\n  public static create(compositionGameOptions: CompositionGameOptions): CompositionGameOptions {\n    return plainToInstance(CompositionGameOptions, compositionGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { CompositionGameOptions };"
    },
    "app/composables/api/game/types/game-options/game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "294",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-options/game-options.class.ts(22,63): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "35",
            "57",
            "58",
            "75",
            "76",
            "77",
            "78",
            "79",
            "87",
            "88",
            "102",
            "103",
            "109",
            "110",
            "111",
            "112",
            "123",
            "124",
            "140"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 24
            },
            "start": {
              "column": 75,
              "line": 22
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\n\nimport { CompositionGameOptions } from \"~/composables/api/game/types/game-options/composition-game-options/composition-game-options.class\";\nimport { RolesGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/roles-game-options.class\";\nimport { VotesGameOptions } from \"~/composables/api/game/types/game-options/votes-game-options/votes-game-options.class\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\nimport type { OmitToJSON } from \"~/utils/types/class.types\";\n\nclass GameOptions {\n  @Type(() => CompositionGameOptions)\n  @Expose()\n  public composition: CompositionGameOptions;\n\n  @Type(() => VotesGameOptions)\n  @Expose()\n  public votes: VotesGameOptions;\n\n  @Type(() => RolesGameOptions)\n  @Expose()\n  public roles: RolesGameOptions;\n\n  public static create(gameOptions: OmitToJSON<GameOptions>): GameOptions {\n    return plainToInstance(GameOptions, gameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { GameOptions };"
    },
    "app/composables/api/game/types/game-options/roles-game-options/actor-game-options/actor-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "295",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-options/roles-game-options/actor-game-options/actor-game-options.class.ts(9,61): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "35",
            "57",
            "58",
            "75",
            "76",
            "77",
            "78",
            "79",
            "87",
            "88",
            "102",
            "103",
            "109",
            "110",
            "111",
            "112",
            "123",
            "124",
            "140",
            "196"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 11
            },
            "start": {
              "column": 78,
              "line": 9
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass ActorGameOptions {\n  @Expose()\n  public isPowerlessOnWerewolvesSide: boolean;\n\n  public static create(actorGameOptions: ActorGameOptions): ActorGameOptions {\n    return plainToInstance(ActorGameOptions, actorGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { ActorGameOptions };"
    },
    "app/composables/api/game/types/game-options/roles-game-options/bear-tamer-game-options/bear-tamer-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "296",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-options/roles-game-options/bear-tamer-game-options/bear-tamer-game-options.class.ts(9,69): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "35",
            "57",
            "58",
            "75",
            "76",
            "77",
            "78",
            "79",
            "87",
            "88",
            "102",
            "103",
            "109",
            "110",
            "111",
            "112",
            "123",
            "124",
            "140",
            "188"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 11
            },
            "start": {
              "column": 90,
              "line": 9
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass BearTamerGameOptions {\n  @Expose()\n  public doesGrowlOnWerewolvesSide: boolean;\n\n  public static create(bearTamerGameOptions: BearTamerGameOptions): BearTamerGameOptions {\n    return plainToInstance(BearTamerGameOptions, bearTamerGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { BearTamerGameOptions };"
    },
    "app/composables/api/game/types/game-options/roles-game-options/big-bad-wolf-options/big-bad-wolf-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "297",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-options/roles-game-options/big-bad-wolf-options/big-bad-wolf-options.class.ts(9,71): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "35",
            "57",
            "58",
            "75",
            "76",
            "77",
            "78",
            "79",
            "87",
            "88",
            "102",
            "103",
            "109",
            "110",
            "111",
            "112",
            "123",
            "124",
            "140",
            "193"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 11
            },
            "start": {
              "column": 93,
              "line": 9
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass BigBadWolfGameOptions {\n  @Expose()\n  public isPowerlessIfWerewolfDies: boolean;\n\n  public static create(bigBadWolfGameOptions: BigBadWolfGameOptions): BigBadWolfGameOptions {\n    return plainToInstance(BigBadWolfGameOptions, bigBadWolfGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { BigBadWolfGameOptions };"
    },
    "app/composables/api/game/types/game-options/roles-game-options/cupid-game-options/cupid-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "298",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-options/roles-game-options/cupid-game-options/cupid-game-options.class.ts(14,61): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "35",
            "57",
            "58",
            "75",
            "76",
            "77",
            "78",
            "79",
            "87",
            "88",
            "102",
            "103",
            "109",
            "110",
            "111",
            "112",
            "123",
            "124",
            "140",
            "155"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 16
            },
            "start": {
              "column": 78,
              "line": 14
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\n\nimport { CupidLoversGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/cupid-game-options/cupid-lovers-game-options/cupid-lovers-game-options.class\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass CupidGameOptions {\n  @Type(() => CupidLoversGameOptions)\n  @Expose()\n  public lovers: CupidLoversGameOptions;\n\n  @Expose()\n  public mustWinWithLovers: boolean;\n\n  public static create(cupidGameOptions: CupidGameOptions): CupidGameOptions {\n    return plainToInstance(CupidGameOptions, cupidGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { CupidGameOptions };"
    },
    "app/composables/api/game/types/game-options/roles-game-options/cupid-game-options/cupid-lovers-game-options/cupid-lovers-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "299",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-options/roles-game-options/cupid-game-options/cupid-lovers-game-options/cupid-lovers-game-options.class.ts(9,73): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "35",
            "57",
            "58",
            "75",
            "76",
            "77",
            "78",
            "79",
            "87",
            "88",
            "102",
            "103",
            "109",
            "110",
            "111",
            "112",
            "123",
            "124",
            "140",
            "155",
            "180"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 11
            },
            "start": {
              "column": 96,
              "line": 9
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass CupidLoversGameOptions {\n  @Expose()\n  public doRevealRoleToEachOther: boolean;\n\n  public static create(cupidLoversGameOptions: CupidLoversGameOptions): CupidLoversGameOptions {\n    return plainToInstance(CupidLoversGameOptions, cupidLoversGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { CupidLoversGameOptions };"
    },
    "app/composables/api/game/types/game-options/roles-game-options/defender-game-options/defender-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "300",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-options/roles-game-options/defender-game-options/defender-game-options.class.ts(9,67): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "35",
            "57",
            "58",
            "75",
            "76",
            "77",
            "78",
            "79",
            "87",
            "88",
            "102",
            "103",
            "109",
            "110",
            "111",
            "112",
            "123",
            "124",
            "140",
            "197"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 11
            },
            "start": {
              "column": 87,
              "line": 9
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass DefenderGameOptions {\n  @Expose()\n  public canProtectTwice: boolean;\n\n  public static create(defenderGameOptions: DefenderGameOptions): DefenderGameOptions {\n    return plainToInstance(DefenderGameOptions, defenderGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { DefenderGameOptions };"
    },
    "app/composables/api/game/types/game-options/roles-game-options/elder-game-options/elder-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "301",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-options/roles-game-options/elder-game-options/elder-game-options.class.ts(12,61): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "35",
            "57",
            "58",
            "75",
            "76",
            "77",
            "78",
            "79",
            "87",
            "88",
            "102",
            "103",
            "109",
            "110",
            "111",
            "112",
            "123",
            "124",
            "140",
            "179"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 14
            },
            "start": {
              "column": 78,
              "line": 12
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass ElderGameOptions {\n  @Expose()\n  public livesCountAgainstWerewolves: number;\n\n  @Expose()\n  public doesTakeHisRevenge: boolean;\n\n  public static create(elderGameOptions: ElderGameOptions): ElderGameOptions {\n    return plainToInstance(ElderGameOptions, elderGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { ElderGameOptions };"
    },
    "app/composables/api/game/types/game-options/roles-game-options/fox-game-options/fox-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "302",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-options/roles-game-options/fox-game-options/fox-game-options.class.ts(9,57): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "35",
            "57",
            "58",
            "75",
            "76",
            "77",
            "78",
            "79",
            "87",
            "88",
            "102",
            "103",
            "109",
            "110",
            "111",
            "112",
            "123",
            "124",
            "140",
            "202"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 11
            },
            "start": {
              "column": 72,
              "line": 9
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass FoxGameOptions {\n  @Expose()\n  public isPowerlessIfMissesWerewolf: boolean;\n\n  public static create(foxGameOptions: FoxGameOptions): FoxGameOptions {\n    return plainToInstance(FoxGameOptions, foxGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { FoxGameOptions };"
    },
    "app/composables/api/game/types/game-options/roles-game-options/idiot-game-options/idiot-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "303",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-options/roles-game-options/idiot-game-options/idiot-game-options.class.ts(9,61): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "35",
            "57",
            "58",
            "75",
            "76",
            "77",
            "78",
            "79",
            "87",
            "88",
            "102",
            "103",
            "109",
            "110",
            "111",
            "112",
            "123",
            "124",
            "140",
            "201"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 11
            },
            "start": {
              "column": 78,
              "line": 9
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass IdiotGameOptions {\n  @Expose()\n  public doesDieOnElderDeath: boolean;\n\n  public static create(idiotGameOptions: IdiotGameOptions): IdiotGameOptions {\n    return plainToInstance(IdiotGameOptions, idiotGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { IdiotGameOptions };"
    },
    "app/composables/api/game/types/game-options/roles-game-options/little-girl-game-options/little-girl-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "304",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-options/roles-game-options/little-girl-game-options/little-girl-game-options.class.ts(9,71): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "35",
            "57",
            "58",
            "75",
            "76",
            "77",
            "78",
            "79",
            "87",
            "88",
            "102",
            "103",
            "109",
            "110",
            "111",
            "112",
            "123",
            "124",
            "140",
            "186"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 11
            },
            "start": {
              "column": 93,
              "line": 9
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass LittleGirlGameOptions {\n  @Expose()\n  public isProtectedByDefender: boolean;\n\n  public static create(littleGirlGameOptions: LittleGirlGameOptions): LittleGirlGameOptions {\n    return plainToInstance(LittleGirlGameOptions, littleGirlGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { LittleGirlGameOptions };"
    },
    "app/composables/api/game/types/game-options/roles-game-options/pied-piper-game-options/pied-piper-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "305",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-options/roles-game-options/pied-piper-game-options/pied-piper-game-options.class.ts(15,69): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "35",
            "57",
            "58",
            "75",
            "76",
            "77",
            "78",
            "79",
            "87",
            "88",
            "102",
            "103",
            "109",
            "110",
            "111",
            "112",
            "123",
            "124",
            "140",
            "157"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 17
            },
            "start": {
              "column": 90,
              "line": 15
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass PiedPiperGameOptions {\n  @Expose()\n  public charmedPeopleCountPerNight: number;\n\n  @Expose()\n  public isPowerlessOnWerewolvesSide: boolean;\n\n  @Expose()\n  public areCharmedPeopleRevealed: boolean;\n\n  public static create(piedPiperGameOptions: PiedPiperGameOptions): PiedPiperGameOptions {\n    return plainToInstance(PiedPiperGameOptions, piedPiperGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { PiedPiperGameOptions };"
    },
    "app/composables/api/game/types/game-options/roles-game-options/prejudiced-manipulator-game-options/prejudiced-manipulator-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "306",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-options/roles-game-options/prejudiced-manipulator-game-options/prejudiced-manipulator-game-options.class.ts(9,93): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "35",
            "57",
            "58",
            "75",
            "76",
            "77",
            "78",
            "79",
            "87",
            "88",
            "102",
            "103",
            "109",
            "110",
            "111",
            "112",
            "123",
            "124",
            "140"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 11
            },
            "start": {
              "column": 126,
              "line": 9
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass PrejudicedManipulatorGameOptions {\n  @Expose()\n  public isPowerlessOnWerewolvesSide: boolean;\n\n  public static create(prejudicedManipulatorGameOptions: PrejudicedManipulatorGameOptions): PrejudicedManipulatorGameOptions {\n    return plainToInstance(PrejudicedManipulatorGameOptions, prejudicedManipulatorGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { PrejudicedManipulatorGameOptions };"
    },
    "app/composables/api/game/types/game-options/roles-game-options/roles-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "307",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-options/roles-game-options/roles-game-options.class.ts(127,61): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "35",
            "57",
            "58",
            "75",
            "76",
            "77",
            "78",
            "79",
            "87",
            "88",
            "102",
            "103",
            "109",
            "110",
            "111",
            "112",
            "123",
            "124",
            "140"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 129
            },
            "start": {
              "column": 78,
              "line": 127
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\n\nimport { ActorGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/actor-game-options/actor-game-options.class\";\nimport { BearTamerGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/bear-tamer-game-options/bear-tamer-game-options.class\";\nimport { BigBadWolfGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/big-bad-wolf-options/big-bad-wolf-options.class\";\nimport { CupidGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/cupid-game-options/cupid-game-options.class\";\nimport { DefenderGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/defender-game-options/defender-game-options.class\";\nimport { ElderGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/elder-game-options/elder-game-options.class\";\nimport { FoxGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/fox-game-options/fox-game-options.class\";\nimport { IdiotGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/idiot-game-options/idiot-game-options.class\";\nimport { LittleGirlGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/little-girl-game-options/little-girl-game-options.class\";\nimport { PiedPiperGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/pied-piper-game-options/pied-piper-game-options.class\";\nimport { PrejudicedManipulatorGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/prejudiced-manipulator-game-options/prejudiced-manipulator-game-options.class\";\nimport { ScandalmongerGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/scandalmonger-game-options/scandalmongonger-game-options.class\";\nimport { SeerGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/seer-game-options/seer-game-options.class\";\nimport { SheriffGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/sheriff-game-options/sheriff-game-options.class\";\nimport { StutteringJudgeGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/stuttering-judge-game-options/stuttering-judge-game-options.class\";\nimport { ThiefGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/thief-game-options/thief-game-options.class\";\nimport { ThreeBrothersGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/three-brothers-game-options/three-brothers-game-options.class\";\nimport { TwoSistersGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/two-sisters-game-options/two-sisters-game-options.class\";\nimport { WerewolfGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/werewolf-game-options/werewolf-game-options.class\";\nimport { WhiteWerewolfGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/white-werewolf-options/white-werewolf-game-options.class\";\nimport { WildChildGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/wild-child-game-options/wild-child-game-options.class\";\nimport { WitchGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/witch-game-options/witch-game-options.class\";\nimport { WolfHoundGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/wolf-hound-game-options/wolf-hound-game-options.class\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass RolesGameOptions {\n  @Expose()\n  public doSkipCallIfNoTarget: boolean;\n\n  @Expose()\n  public areRevealedOnDeath: boolean;\n\n  @Type(() => SheriffGameOptions)\n  @Expose()\n  public sheriff: SheriffGameOptions;\n\n  @Type(() => WerewolfGameOptions)\n  @Expose()\n  public werewolf: WerewolfGameOptions;\n\n  @Type(() => BigBadWolfGameOptions)\n  @Expose()\n  public bigBadWolf: BigBadWolfGameOptions;\n\n  @Type(() => WhiteWerewolfGameOptions)\n  @Expose()\n  public whiteWerewolf: WhiteWerewolfGameOptions;\n\n  @Type(() => SeerGameOptions)\n  @Expose()\n  public seer: SeerGameOptions;\n\n  @Type(() => CupidGameOptions)\n  @Expose()\n  public cupid: CupidGameOptions;\n\n  @Type(() => LittleGirlGameOptions)\n  @Expose()\n  public littleGirl: LittleGirlGameOptions;\n\n  @Type(() => DefenderGameOptions)\n  @Expose()\n  public defender: DefenderGameOptions;\n\n  @Type(() => ElderGameOptions)\n  @Expose()\n  public elder: ElderGameOptions;\n\n  @Type(() => IdiotGameOptions)\n  @Expose()\n  public idiot: IdiotGameOptions;\n\n  @Type(() => TwoSistersGameOptions)\n  @Expose()\n  public twoSisters: TwoSistersGameOptions;\n\n  @Type(() => ThreeBrothersGameOptions)\n  @Expose()\n  public threeBrothers: ThreeBrothersGameOptions;\n\n  @Type(() => FoxGameOptions)\n  @Expose()\n  public fox: FoxGameOptions;\n\n  @Type(() => BearTamerGameOptions)\n  @Expose()\n  public bearTamer: BearTamerGameOptions;\n\n  @Type(() => StutteringJudgeGameOptions)\n  @Expose()\n  public stutteringJudge: StutteringJudgeGameOptions;\n\n  @Type(() => WildChildGameOptions)\n  @Expose()\n  public wildChild: WildChildGameOptions;\n\n  @Type(() => WolfHoundGameOptions)\n  @Expose()\n  public wolfHound: WolfHoundGameOptions;\n\n  @Type(() => ThiefGameOptions)\n  @Expose()\n  public thief: ThiefGameOptions;\n\n  @Type(() => PiedPiperGameOptions)\n  @Expose()\n  public piedPiper: PiedPiperGameOptions;\n\n  @Type(() => ScandalmongerGameOptions)\n  @Expose()\n  public scandalmonger: ScandalmongerGameOptions;\n\n  @Type(() => WitchGameOptions)\n  @Expose()\n  public witch: WitchGameOptions;\n\n  @Type(() => PrejudicedManipulatorGameOptions)\n  @Expose()\n  public prejudicedManipulator: PrejudicedManipulatorGameOptions;\n\n  @Type(() => ActorGameOptions)\n  @Expose()\n  public actor: ActorGameOptions;\n\n  public static create(rolesGameOptions: RolesGameOptions): RolesGameOptions {\n    return plainToInstance(RolesGameOptions, rolesGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { RolesGameOptions };"
    },
    "app/composables/api/game/types/game-options/roles-game-options/scandalmonger-game-options/scandalmongonger-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "308",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-options/roles-game-options/scandalmonger-game-options/scandalmongonger-game-options.class.ts(9,77): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "35",
            "57",
            "58",
            "75",
            "76",
            "77",
            "78",
            "79",
            "87",
            "88",
            "102",
            "103",
            "109",
            "110",
            "111",
            "112",
            "123",
            "124",
            "140",
            "182"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 11
            },
            "start": {
              "column": 102,
              "line": 9
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass ScandalmongerGameOptions {\n  @Expose()\n  public markPenalty: number;\n\n  public static create(scandalmongerGameOptions: ScandalmongerGameOptions): ScandalmongerGameOptions {\n    return plainToInstance(ScandalmongerGameOptions, scandalmongerGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { ScandalmongerGameOptions };"
    },
    "app/composables/api/game/types/game-options/roles-game-options/seer-game-options/seer-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "309",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-options/roles-game-options/seer-game-options/seer-game-options.class.ts(12,59): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "35",
            "57",
            "58",
            "75",
            "76",
            "77",
            "78",
            "79",
            "87",
            "88",
            "102",
            "103",
            "109",
            "110",
            "111",
            "112",
            "123",
            "124",
            "140",
            "189"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 14
            },
            "start": {
              "column": 75,
              "line": 12
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass SeerGameOptions {\n  @Expose()\n  public isTalkative: boolean;\n\n  @Expose()\n  public canSeeRoles: boolean;\n\n  public static create(seerGameOptions: SeerGameOptions): SeerGameOptions {\n    return plainToInstance(SeerGameOptions, seerGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { SeerGameOptions };"
    },
    "app/composables/api/game/types/game-options/roles-game-options/sheriff-game-options/sheriff-election-game-options/sheriff-election-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "310",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-options/roles-game-options/sheriff-game-options/sheriff-election-game-options/sheriff-election-game-options.class.ts(13,81): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "35",
            "57",
            "58",
            "75",
            "76",
            "77",
            "78",
            "79",
            "87",
            "88",
            "102",
            "103",
            "109",
            "110",
            "111",
            "112",
            "123",
            "124",
            "140",
            "141",
            "168"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 15
            },
            "start": {
              "column": 108,
              "line": 13
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport type { GamePhaseName } from \"~/composables/api/game/types/game-phase/game-phase.types\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass SheriffElectionGameOptions {\n  @Expose()\n  public turn: number;\n\n  @Expose()\n  public phaseName: GamePhaseName;\n\n  public static create(sheriffElectionGameOptions: SheriffElectionGameOptions): SheriffElectionGameOptions {\n    return plainToInstance(SheriffElectionGameOptions, sheriffElectionGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { SheriffElectionGameOptions };"
    },
    "app/composables/api/game/types/game-options/roles-game-options/sheriff-game-options/sheriff-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "311",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-options/roles-game-options/sheriff-game-options/sheriff-game-options.class.ts(20,65): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "35",
            "57",
            "58",
            "75",
            "76",
            "77",
            "78",
            "79",
            "87",
            "88",
            "102",
            "103",
            "109",
            "110",
            "111",
            "112",
            "123",
            "124",
            "140",
            "141"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 22
            },
            "start": {
              "column": 84,
              "line": 20
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\n\nimport { SheriffElectionGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/sheriff-game-options/sheriff-election-game-options/sheriff-election-game-options.class\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass SheriffGameOptions {\n  @Expose()\n  public isEnabled: boolean;\n\n  @Type(() => SheriffElectionGameOptions)\n  @Expose()\n  public electedAt: SheriffElectionGameOptions;\n\n  @Expose()\n  public hasDoubledVote: boolean;\n\n  @Expose()\n  public mustSettleTieInVotes: boolean;\n\n  public static create(sheriffGameOptions: SheriffGameOptions): SheriffGameOptions {\n    return plainToInstance(SheriffGameOptions, sheriffGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { SheriffGameOptions };"
    },
    "app/composables/api/game/types/game-options/roles-game-options/stuttering-judge-game-options/stuttering-judge-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "312",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-options/roles-game-options/stuttering-judge-game-options/stuttering-judge-game-options.class.ts(9,81): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "35",
            "57",
            "58",
            "75",
            "76",
            "77",
            "78",
            "79",
            "87",
            "88",
            "102",
            "103",
            "109",
            "110",
            "111",
            "112",
            "123",
            "124",
            "140",
            "176"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 11
            },
            "start": {
              "column": 108,
              "line": 9
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass StutteringJudgeGameOptions {\n  @Expose()\n  public voteRequestsCount: number;\n\n  public static create(stutteringJudgeGameOptions: StutteringJudgeGameOptions): StutteringJudgeGameOptions {\n    return plainToInstance(StutteringJudgeGameOptions, stutteringJudgeGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { StutteringJudgeGameOptions };"
    },
    "app/composables/api/game/types/game-options/roles-game-options/thief-game-options/thief-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "313",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-options/roles-game-options/thief-game-options/thief-game-options.class.ts(12,61): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "35",
            "57",
            "58",
            "75",
            "76",
            "77",
            "78",
            "79",
            "87",
            "88",
            "102",
            "103",
            "109",
            "110",
            "111",
            "112",
            "123",
            "124",
            "140",
            "174"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 14
            },
            "start": {
              "column": 78,
              "line": 12
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass ThiefGameOptions {\n  @Expose()\n  public mustChooseBetweenWerewolves: boolean;\n\n  @Expose()\n  public isChosenCardRevealed: boolean;\n\n  public static create(thiefGameOptions: ThiefGameOptions): ThiefGameOptions {\n    return plainToInstance(ThiefGameOptions, thiefGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { ThiefGameOptions };"
    },
    "app/composables/api/game/types/game-options/roles-game-options/three-brothers-game-options/three-brothers-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "314",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-options/roles-game-options/three-brothers-game-options/three-brothers-game-options.class.ts(9,77): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "35",
            "57",
            "58",
            "75",
            "76",
            "77",
            "78",
            "79",
            "87",
            "88",
            "102",
            "103",
            "109",
            "110",
            "111",
            "112",
            "123",
            "124",
            "140",
            "181"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 11
            },
            "start": {
              "column": 102,
              "line": 9
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass ThreeBrothersGameOptions {\n  @Expose()\n  public wakingUpInterval: number;\n\n  public static create(threeBrothersGameOptions: ThreeBrothersGameOptions): ThreeBrothersGameOptions {\n    return plainToInstance(ThreeBrothersGameOptions, threeBrothersGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { ThreeBrothersGameOptions };"
    },
    "app/composables/api/game/types/game-options/roles-game-options/two-sisters-game-options/two-sisters-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "315",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-options/roles-game-options/two-sisters-game-options/two-sisters-game-options.class.ts(9,71): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "35",
            "57",
            "58",
            "75",
            "76",
            "77",
            "78",
            "79",
            "87",
            "88",
            "102",
            "103",
            "109",
            "110",
            "111",
            "112",
            "123",
            "124",
            "140",
            "192"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 11
            },
            "start": {
              "column": 93,
              "line": 9
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass TwoSistersGameOptions {\n  @Expose()\n  public wakingUpInterval: number;\n\n  public static create(twoSistersGameOptions: TwoSistersGameOptions): TwoSistersGameOptions {\n    return plainToInstance(TwoSistersGameOptions, twoSistersGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { TwoSistersGameOptions };"
    },
    "app/composables/api/game/types/game-options/roles-game-options/werewolf-game-options/werewolf-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "316",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-options/roles-game-options/werewolf-game-options/werewolf-game-options.class.ts(9,67): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "35",
            "57",
            "58",
            "75",
            "76",
            "77",
            "78",
            "79",
            "87",
            "88",
            "102",
            "103",
            "109",
            "110",
            "111",
            "112",
            "123",
            "124",
            "140",
            "198"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 11
            },
            "start": {
              "column": 87,
              "line": 9
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass WerewolfGameOptions {\n  @Expose()\n  public canEatEachOther: boolean;\n\n  public static create(werewolfGameOptions: WerewolfGameOptions): WerewolfGameOptions {\n    return plainToInstance(WerewolfGameOptions, werewolfGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { WerewolfGameOptions };"
    },
    "app/composables/api/game/types/game-options/roles-game-options/white-werewolf-options/white-werewolf-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "317",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-options/roles-game-options/white-werewolf-options/white-werewolf-game-options.class.ts(9,77): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "35",
            "57",
            "58",
            "75",
            "76",
            "77",
            "78",
            "79",
            "87",
            "88",
            "102",
            "103",
            "109",
            "110",
            "111",
            "112",
            "123",
            "124",
            "140",
            "187"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 11
            },
            "start": {
              "column": 102,
              "line": 9
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass WhiteWerewolfGameOptions {\n  @Expose()\n  public wakingUpInterval: number;\n\n  public static create(whiteWerewolfGameOptions: WhiteWerewolfGameOptions): WhiteWerewolfGameOptions {\n    return plainToInstance(WhiteWerewolfGameOptions, whiteWerewolfGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { WhiteWerewolfGameOptions };"
    },
    "app/composables/api/game/types/game-options/roles-game-options/wild-child-game-options/wild-child-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "318",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-options/roles-game-options/wild-child-game-options/wild-child-game-options.class.ts(9,69): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "35",
            "57",
            "58",
            "75",
            "76",
            "77",
            "78",
            "79",
            "87",
            "88",
            "102",
            "103",
            "109",
            "110",
            "111",
            "112",
            "123",
            "124",
            "140",
            "190"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 11
            },
            "start": {
              "column": 90,
              "line": 9
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass WildChildGameOptions {\n  @Expose()\n  public isTransformationRevealed: boolean;\n\n  public static create(wildChildGameOptions: WildChildGameOptions): WildChildGameOptions {\n    return plainToInstance(WildChildGameOptions, wildChildGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { WildChildGameOptions };"
    },
    "app/composables/api/game/types/game-options/roles-game-options/witch-game-options/witch-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "319",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-options/roles-game-options/witch-game-options/witch-game-options.class.ts(9,61): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "35",
            "57",
            "58",
            "75",
            "76",
            "77",
            "78",
            "79",
            "87",
            "88",
            "102",
            "103",
            "109",
            "110",
            "111",
            "112",
            "123",
            "124",
            "140",
            "200"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 11
            },
            "start": {
              "column": 78,
              "line": 9
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass WitchGameOptions {\n  @Expose()\n  public doesKnowWerewolvesTargets: boolean;\n\n  public static create(witchGameOptions: WitchGameOptions): WitchGameOptions {\n    return plainToInstance(WitchGameOptions, witchGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { WitchGameOptions };"
    },
    "app/composables/api/game/types/game-options/roles-game-options/wolf-hound-game-options/wolf-hound-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "320",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-options/roles-game-options/wolf-hound-game-options/wolf-hound-game-options.class.ts(12,69): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "35",
            "57",
            "58",
            "75",
            "76",
            "77",
            "78",
            "79",
            "87",
            "88",
            "102",
            "103",
            "109",
            "110",
            "111",
            "112",
            "123",
            "124",
            "140",
            "170"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 14
            },
            "start": {
              "column": 90,
              "line": 12
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass WolfHoundGameOptions {\n  @Expose()\n  public isChosenSideRevealed: boolean;\n\n  @Expose()\n  public isSideRandomlyChosen: boolean;\n\n  public static create(wolfHoundGameOptions: WolfHoundGameOptions): WolfHoundGameOptions {\n    return plainToInstance(WolfHoundGameOptions, wolfHoundGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { WolfHoundGameOptions };"
    },
    "app/composables/api/game/types/game-options/votes-game-options/votes-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "321",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-options/votes-game-options/votes-game-options.class.ts(12,61): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "35",
            "57",
            "58",
            "75",
            "76",
            "77",
            "78",
            "79",
            "87",
            "88",
            "102",
            "103",
            "109",
            "110",
            "111",
            "112",
            "123",
            "124",
            "140",
            "194"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 14
            },
            "start": {
              "column": 78,
              "line": 12
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass VotesGameOptions {\n  @Expose()\n  public canBeSkipped: boolean;\n\n  @Expose()\n  public duration: number;\n\n  public static create(votesGameOptions: VotesGameOptions): VotesGameOptions {\n    return plainToInstance(VotesGameOptions, votesGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { VotesGameOptions };"
    },
    "app/composables/api/game/types/game-phase/game-phase.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "322",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-phase/game-phase.class.ts(13,47): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "57",
            "58",
            "75",
            "76",
            "102",
            "103",
            "109",
            "110",
            "111",
            "112",
            "120",
            "203"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 15
            },
            "start": {
              "column": 57,
              "line": 13
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport type { GamePhaseName } from \"~/composables/api/game/types/game-phase/game-phase.types\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass GamePhase {\n  @Expose()\n  public name: GamePhaseName;\n\n  @Expose()\n  public tick: number;\n\n  public static create(gamePhase: GamePhase): GamePhase {\n    return plainToInstance(GamePhase, gamePhase, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { GamePhase };"
    },
    "app/composables/api/game/types/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction-boundaries/game-play-source-interaction-boundaries.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "323",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction-boundaries/game-play-source-interaction-boundaries.class.ts(12,99): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "152"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 14
            },
            "start": {
              "column": 135,
              "line": 12
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass GamePlaySourceInteractionBoundaries {\n  @Expose()\n  public min: number;\n\n  @Expose()\n  public max: number;\n\n  public static create(gamePlaySourceInteractionBoundaries: GamePlaySourceInteractionBoundaries): GamePlaySourceInteractionBoundaries {\n    return plainToInstance(GamePlaySourceInteractionBoundaries, gamePlaySourceInteractionBoundaries, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { GamePlaySourceInteractionBoundaries };"
    },
    "app/composables/api/game/types/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "324",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction.class.ts(25,79): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "136"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 27
            },
            "start": {
              "column": 105,
              "line": 25
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport type { PlayerInteractionType } from \"~/composables/api/game/types/players/player-interaction/player-interaction.types\";\nimport { GamePlaySourceInteractionBoundaries } from \"~/composables/api/game/types/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction-boundaries/game-play-source-interaction-boundaries.class\";\nimport type { GameSource } from \"~/composables/api/game/types/game.types\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass GamePlaySourceInteraction {\n  @Expose()\n  public source: GameSource;\n\n  @Expose()\n  public type: PlayerInteractionType;\n\n  @Expose()\n  public eligibleTargets: Player[];\n\n  @Expose()\n  public boundaries: GamePlaySourceInteractionBoundaries;\n\n  @Expose()\n  public isInconsequential?: boolean;\n\n  public static create(gamePlaySourceInteraction: GamePlaySourceInteraction): GamePlaySourceInteraction {\n    return plainToInstance(GamePlaySourceInteraction, gamePlaySourceInteraction, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { GamePlaySourceInteraction };"
    },
    "app/composables/api/game/types/game-play/game-play-source/game-play-source.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "325",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-play/game-play-source/game-play-source.class.ts(20,57): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "57",
            "58",
            "75",
            "76",
            "102",
            "103",
            "153",
            "156"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 22
            },
            "start": {
              "column": 72,
              "line": 20
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\n\nimport type { GamePlaySourceName } from \"~/composables/api/game/types/game-play/game-play-source/game-play-source.types\";\nimport { GamePlaySourceInteraction } from \"~/composables/api/game/types/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction.class\";\nimport { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass GamePlaySource {\n  @Expose()\n  public name: GamePlaySourceName;\n\n  @Type(() => Player)\n  @Expose()\n  public players?: Player[];\n\n  @Type(() => GamePlaySourceInteraction)\n  @Expose()\n  public interactions?: GamePlaySourceInteraction[];\n\n  public static create(gamePlaySource: GamePlaySource): GamePlaySource {\n    return plainToInstance(GamePlaySource, gamePlaySource, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { GamePlaySource };"
    },
    "app/composables/api/game/types/game-play/game-play.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "326",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-play/game-play.class.ts(27,45): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "57",
            "58",
            "75",
            "76",
            "102",
            "103",
            "153"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 29
            },
            "start": {
              "column": 54,
              "line": 27
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\n\nimport { GamePlaySource } from \"~/composables/api/game/types/game-play/game-play-source/game-play-source.class\";\nimport type { GamePlayAction, GamePlayCause, GamePlayOccurrence, GamePlayType } from \"~/composables/api/game/types/game-play/game-play.types\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass GamePlay {\n  @Expose()\n  public type: GamePlayType;\n\n  @Type(() => GamePlaySource)\n  @Expose()\n  public source: GamePlaySource;\n\n  @Expose()\n  public action: GamePlayAction;\n\n  @Expose()\n  public causes?: GamePlayCause[];\n\n  @Expose()\n  public canBeSkipped?: boolean;\n\n  @Expose()\n  public occurrence: GamePlayOccurrence;\n\n  public static create(gamePlay: GamePlay): GamePlay {\n    return plainToInstance(GamePlay, gamePlay, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { GamePlay };"
    },
    "app/composables/api/game/types/game-victory/game-victory.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "327",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game-victory/game-victory.class.ts(14,51): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "169"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 16
            },
            "start": {
              "column": 63,
              "line": 14
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport type { GameVictoryType } from \"~/composables/api/game/types/game-victory/game-victory.types\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass GameVictory {\n  @Expose()\n  public type: GameVictoryType;\n\n  @Expose()\n  public winners?: Player[];\n\n  public static create(gameVictory: GameVictory): GameVictory {\n    return plainToInstance(GameVictory, gameVictory, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { GameVictory };"
    },
    "app/composables/api/game/types/game.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "328",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game.class.ts(78,49): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "57",
            "58",
            "75",
            "76",
            "102",
            "109",
            "110",
            "111",
            "112"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 80
            },
            "start": {
              "column": 54,
              "line": 78
            }
          }
        },
        {
          "id": "329",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/game.class.ts(82,20): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "103"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 84
            },
            "start": {
              "column": 27,
              "line": 82
            }
          }
        }
      ],
      "source": "import { Expose, instanceToPlain, plainToInstance, Type } from \"class-transformer\";\n\nimport { GameEvent } from \"~/composables/api/game/types/game-event/game-event.class\";\nimport { GameAdditionalCard } from \"~/composables/api/game/types/game-additional-card/game-additional-card.class\";\nimport { GameFeedback } from \"~/composables/api/game/types/game-feedback/game-feedback.class\";\nimport { GameOptions } from \"~/composables/api/game/types/game-options/game-options.class\";\nimport { GamePhase } from \"~/composables/api/game/types/game-phase/game-phase.class\";\nimport { GameHistoryRecord } from \"~/composables/api/game/types/game-history-record/game-history-record.class\";\nimport { GamePlay } from \"~/composables/api/game/types/game-play/game-play.class\";\nimport { GameVictory } from \"~/composables/api/game/types/game-victory/game-victory.class\";\nimport type { GameStatus } from \"~/composables/api/game/types/game.types\";\nimport { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\nimport type { OmitToJSON } from \"~/utils/types/class.types\";\n\nclass Game {\n  @Expose()\n  public _id: string;\n\n  @Expose()\n  public turn: number;\n\n  @Type(() => GamePhase)\n  @Expose()\n  public phase: GamePhase;\n\n  @Expose()\n  public tick: number;\n\n  @Expose()\n  public status: GameStatus;\n\n  @Type(() => Player)\n  @Expose()\n  public players: Player[];\n\n  @Expose()\n  public playerGroups?: string[];\n\n  @Type(() => GamePlay)\n  @Expose()\n  public currentPlay: GamePlay | null;\n\n  @Type(() => GamePlay)\n  @Expose()\n  public upcomingPlays: GamePlay[];\n\n  @Type(() => GameAdditionalCard)\n  @Expose()\n  public additionalCards?: GameAdditionalCard[];\n\n  @Type(() => GameFeedback)\n  @Expose()\n  public feedback: GameFeedback | null;\n\n  @Type(() => GameHistoryRecord)\n  @Expose()\n  public lastGameHistoryRecord: GameHistoryRecord | null;\n\n  @Type(() => GameOptions)\n  @Expose()\n  public options: GameOptions;\n\n  @Type(() => GameVictory)\n  @Expose()\n  public victory?: GameVictory;\n\n  @Type(() => GameEvent)\n  @Expose()\n  public events?: GameEvent[];\n\n  @Expose()\n  public createdAt: Date;\n\n  @Expose()\n  public updatedAt: Date;\n\n  public static create(game: OmitToJSON<Game>): Game {\n    return plainToInstance(Game, game, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n\n  public toJSON(): object {\n    return instanceToPlain(this);\n  }\n}\n\nexport { Game };"
    },
    "app/composables/api/game/types/players/player-attribute/player-attribute-activation/player-attribute-activation.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "330",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/players/player-attribute/player-attribute-activation/player-attribute-activation.class.ts(13,79): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "145",
            "167"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 15
            },
            "start": {
              "column": 105,
              "line": 13
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport type { GamePhaseName } from \"~/composables/api/game/types/game-phase/game-phase.types\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass PlayerAttributeActivation {\n  @Expose()\n  public turn: number;\n\n  @Expose()\n  public phaseName: GamePhaseName;\n\n  public static create(playerAttributeActivation: PlayerAttributeActivation): PlayerAttributeActivation {\n    return plainToInstance(PlayerAttributeActivation, playerAttributeActivation, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { PlayerAttributeActivation };"
    },
    "app/composables/api/game/types/players/player-attribute/player-attribute.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "331",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/players/player-attribute/player-attribute.class.ts(25,59): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "109",
            "110",
            "137",
            "145"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 27
            },
            "start": {
              "column": 75,
              "line": 25
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\n\nimport type { GameSource } from \"~/composables/api/game/types/game.types\";\nimport { PlayerAttributeActivation } from \"~/composables/api/game/types/players/player-attribute/player-attribute-activation/player-attribute-activation.class\";\nimport type { PlayerAttributeName } from \"~/composables/api/game/types/players/player-attribute/player-attribute.types\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass PlayerAttribute {\n  @Expose()\n  public name: PlayerAttributeName;\n\n  @Expose()\n  public source: GameSource;\n\n  @Expose()\n  public remainingPhases?: number;\n\n  @Type(() => PlayerAttributeActivation)\n  @Expose()\n  public activeAt?: PlayerAttributeActivation;\n\n  @Expose()\n  public doesRemainAfterDeath?: boolean;\n\n  public static create(playerAttribute: PlayerAttribute): PlayerAttribute {\n    return plainToInstance(PlayerAttribute, playerAttribute, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { PlayerAttribute };"
    },
    "app/composables/api/game/types/players/player-role/player-role.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "332",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/players/player-role/player-role.class.ts(16,52): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "109",
            "110",
            "119",
            "120",
            "136",
            "137",
            "142",
            "144",
            "150",
            "151",
            "156",
            "158",
            "160",
            "169",
            "185"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 18
            },
            "start": {
              "column": 63,
              "line": 16
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport type { RoleName } from \"~/composables/api/role/types/role.types\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass PlayerRole {\n  @Expose()\n  public original: RoleName;\n\n  @Expose()\n  public current: RoleName;\n\n  @Expose()\n  public isRevealed: boolean;\n\n  public static create(role: Partial<PlayerRole>): PlayerRole {\n    return plainToInstance(PlayerRole, role, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { PlayerRole };"
    },
    "app/composables/api/game/types/players/player-side/player-side.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "333",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/players/player-side/player-side.class.ts(13,52): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "109",
            "110",
            "119",
            "120",
            "136",
            "137",
            "142",
            "144",
            "150",
            "151",
            "156",
            "158",
            "160",
            "169",
            "199"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 15
            },
            "start": {
              "column": 63,
              "line": 13
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport type { RoleSide } from \"~/composables/api/role/types/role.types\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass PlayerSide {\n  @Expose()\n  public original: RoleSide;\n\n  @Expose()\n  public current: RoleSide;\n\n  public static create(side: Partial<PlayerSide>): PlayerSide {\n    return plainToInstance(PlayerSide, side, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { PlayerSide };"
    },
    "app/composables/api/game/types/players/player.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "334",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/types/players/player.class.ts(33,41): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "109",
            "110",
            "111",
            "112",
            "119",
            "120",
            "136",
            "137",
            "142",
            "144",
            "150",
            "151",
            "156",
            "158",
            "160",
            "169"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 35
            },
            "start": {
              "column": 48,
              "line": 33
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\n\nimport { PlayerAttribute } from \"~/composables/api/game/types/players/player-attribute/player-attribute.class\";\nimport { PlayerRole } from \"~/composables/api/game/types/players/player-role/player-role.class\";\nimport { PlayerSide } from \"~/composables/api/game/types/players/player-side/player-side.class\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass Player {\n  @Expose()\n  public _id: string;\n\n  @Expose()\n  public name: string;\n\n  @Expose()\n  @Type(() => PlayerRole)\n  public role: PlayerRole;\n\n  @Expose()\n  @Type(() => PlayerSide)\n  public side: PlayerSide;\n\n  @Type(() => PlayerAttribute)\n  @Expose()\n  public attributes: PlayerAttribute[];\n\n  @Expose()\n  public isAlive: boolean;\n\n  @Expose()\n  public group?: string;\n\n  public static create(player: Player): Player {\n    return plainToInstance(Player, player, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\ntype PlayerWithGroup = Player & { group: string };\n\nexport { Player };\n\nexport type { PlayerWithGroup };"
    },
    "app/composables/api/game/useCreateGameDtoValidation.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "335",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(30,73): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 150
            },
            "start": {
              "column": 100,
              "line": 30
            }
          }
        },
        {
          "id": "336",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(36,35): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Type 'undefined' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean, boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean, boolean>', gave the following error.\n    Argument of type '() => undefined' is not assignable to parameter of type 'WritableComputedOptions<boolean, boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38"
          ],
          "location": {
            "end": {
              "column": 116,
              "line": 36
            },
            "start": {
              "column": 53,
              "line": 36
            }
          }
        },
        {
          "id": "337",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "0"
          ],
          "coveredBy": [
            "0",
            "1",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 116,
              "line": 36
            },
            "start": {
              "column": 59,
              "line": 36
            }
          }
        },
        {
          "id": "338",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "1"
          ],
          "coveredBy": [
            "0",
            "1",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 116,
              "line": 36
            },
            "start": {
              "column": 59,
              "line": 36
            }
          }
        },
        {
          "id": "339",
          "mutatorName": "EqualityOperator",
          "replacement": "createGameDto.value.players.length > MIN_PLAYERS_IN_GAME",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "1"
          ],
          "coveredBy": [
            "0",
            "1",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 116,
              "line": 36
            },
            "start": {
              "column": 59,
              "line": 36
            }
          }
        },
        {
          "id": "340",
          "mutatorName": "EqualityOperator",
          "replacement": "createGameDto.value.players.length < MIN_PLAYERS_IN_GAME",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "0"
          ],
          "coveredBy": [
            "0",
            "1",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 116,
              "line": 36
            },
            "start": {
              "column": 59,
              "line": 36
            }
          }
        },
        {
          "id": "341",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(38,26): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Type 'undefined' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean, boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean, boolean>', gave the following error.\n    Argument of type '() => undefined' is not assignable to parameter of type 'WritableComputedOptions<boolean, boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38"
          ],
          "location": {
            "end": {
              "column": 125,
              "line": 38
            },
            "start": {
              "column": 44,
              "line": 38
            }
          }
        },
        {
          "id": "342",
          "mutatorName": "MethodExpression",
          "replacement": "createGameDto.value.players.some(player => player.role.name !== undefined)",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "3"
          ],
          "coveredBy": [
            "2",
            "3",
            "27",
            "28",
            "29",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 125,
              "line": 38
            },
            "start": {
              "column": 50,
              "line": 38
            }
          }
        },
        {
          "id": "343",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "2"
          ],
          "coveredBy": [
            "2",
            "3",
            "27",
            "28",
            "29",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 124,
              "line": 38
            },
            "start": {
              "column": 84,
              "line": 38
            }
          }
        },
        {
          "id": "344",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "3"
          ],
          "coveredBy": [
            "2",
            "3",
            "27",
            "28",
            "29",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 124,
              "line": 38
            },
            "start": {
              "column": 94,
              "line": 38
            }
          }
        },
        {
          "id": "345",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "2"
          ],
          "coveredBy": [
            "2",
            "3",
            "27",
            "28",
            "29",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 124,
              "line": 38
            },
            "start": {
              "column": 94,
              "line": 38
            }
          }
        },
        {
          "id": "346",
          "mutatorName": "EqualityOperator",
          "replacement": "player.role.name === undefined",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "2"
          ],
          "coveredBy": [
            "2",
            "3",
            "27",
            "28",
            "29",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 124,
              "line": 38
            },
            "start": {
              "column": 94,
              "line": 38
            }
          }
        },
        {
          "id": "347",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(40,43): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Type 'undefined' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean, boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean, boolean>', gave the following error.\n    Argument of type '() => undefined' is not assignable to parameter of type 'WritableComputedOptions<boolean, boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38"
          ],
          "location": {
            "end": {
              "column": 146,
              "line": 40
            },
            "start": {
              "column": 61,
              "line": 40
            }
          }
        },
        {
          "id": "348",
          "mutatorName": "MethodExpression",
          "replacement": "createGameDto.value.players.every(player => player.side.current === \"villagers\")",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "4"
          ],
          "coveredBy": [
            "4",
            "5",
            "28",
            "29",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 146,
              "line": 40
            },
            "start": {
              "column": 67,
              "line": 40
            }
          }
        },
        {
          "id": "349",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "4"
          ],
          "coveredBy": [
            "4",
            "5",
            "28",
            "29",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 145,
              "line": 40
            },
            "start": {
              "column": 100,
              "line": 40
            }
          }
        },
        {
          "id": "350",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "5"
          ],
          "coveredBy": [
            "4",
            "5",
            "28",
            "29",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 145,
              "line": 40
            },
            "start": {
              "column": 110,
              "line": 40
            }
          }
        },
        {
          "id": "351",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "4"
          ],
          "coveredBy": [
            "4",
            "5",
            "28",
            "29",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 145,
              "line": 40
            },
            "start": {
              "column": 110,
              "line": 40
            }
          }
        },
        {
          "id": "352",
          "mutatorName": "EqualityOperator",
          "replacement": "player.side.current !== \"villagers\"",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "5"
          ],
          "coveredBy": [
            "4",
            "5",
            "28",
            "29",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 145,
              "line": 40
            },
            "start": {
              "column": 110,
              "line": 40
            }
          }
        },
        {
          "id": "353",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(40,110): error TS2367: This comparison appears to be unintentional because the types '\"villagers\" | \"werewolves\" | undefined' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "4",
            "5",
            "28",
            "29",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 145,
              "line": 40
            },
            "start": {
              "column": 134,
              "line": 40
            }
          }
        },
        {
          "id": "354",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(42,43): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Type 'undefined' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean, boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean, boolean>', gave the following error.\n    Argument of type '() => undefined' is not assignable to parameter of type 'WritableComputedOptions<boolean, boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38"
          ],
          "location": {
            "end": {
              "column": 147,
              "line": 42
            },
            "start": {
              "column": 61,
              "line": 42
            }
          }
        },
        {
          "id": "355",
          "mutatorName": "MethodExpression",
          "replacement": "createGameDto.value.players.every(player => player.side.current === \"werewolves\")",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "6"
          ],
          "coveredBy": [
            "6",
            "7",
            "28",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 147,
              "line": 42
            },
            "start": {
              "column": 67,
              "line": 42
            }
          }
        },
        {
          "id": "356",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "6"
          ],
          "coveredBy": [
            "6",
            "7",
            "28",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 146,
              "line": 42
            },
            "start": {
              "column": 100,
              "line": 42
            }
          }
        },
        {
          "id": "357",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "7"
          ],
          "coveredBy": [
            "6",
            "7",
            "28",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 146,
              "line": 42
            },
            "start": {
              "column": 110,
              "line": 42
            }
          }
        },
        {
          "id": "358",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "6"
          ],
          "coveredBy": [
            "6",
            "7",
            "28",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 146,
              "line": 42
            },
            "start": {
              "column": 110,
              "line": 42
            }
          }
        },
        {
          "id": "359",
          "mutatorName": "EqualityOperator",
          "replacement": "player.side.current !== \"werewolves\"",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "7"
          ],
          "coveredBy": [
            "6",
            "7",
            "28",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 146,
              "line": 42
            },
            "start": {
              "column": 110,
              "line": 42
            }
          }
        },
        {
          "id": "360",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(42,110): error TS2367: This comparison appears to be unintentional because the types '\"villagers\" | \"werewolves\" | undefined' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "6",
            "7",
            "28",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 146,
              "line": 42
            },
            "start": {
              "column": 134,
              "line": 42
            }
          }
        },
        {
          "id": "361",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(44,59): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'ComputedGetter<boolean>'.\n      Type 'void' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean, boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean, boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'WritableComputedOptions<boolean, boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "8",
            "9",
            "10",
            "33"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 51
            },
            "start": {
              "column": 65,
              "line": 44
            }
          }
        },
        {
          "id": "362",
          "mutatorName": "BooleanLiteral",
          "replacement": "roles.value",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(48,37): error TS18047: 'roles.value' is possibly 'null'.\napp/composables/api/game/useCreateGameDtoValidation.ts(48,57): error TS7006: Parameter 'role' implicitly has an 'any' type.\napp/composables/api/game/useCreateGameDtoValidation.ts(50,42): error TS7006: Parameter 'role' implicitly has an 'any' type.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "8",
            "9",
            "10",
            "33"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 45
            },
            "start": {
              "column": 9,
              "line": 45
            }
          }
        },
        {
          "id": "363",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(48,37): error TS18047: 'roles.value' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "8",
            "9",
            "10",
            "33"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 45
            },
            "start": {
              "column": 9,
              "line": 45
            }
          }
        },
        {
          "id": "364",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(48,37): error TS18047: 'roles.value' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "8",
            "9",
            "10",
            "33"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 45
            },
            "start": {
              "column": 9,
              "line": 45
            }
          }
        },
        {
          "id": "365",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(46,37): error TS18047: 'roles.value' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "8"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 47
            },
            "start": {
              "column": 23,
              "line": 45
            }
          }
        },
        {
          "id": "366",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "8"
          ],
          "coveredBy": [
            "8"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 46
            },
            "start": {
              "column": 14,
              "line": 46
            }
          }
        },
        {
          "id": "367",
          "mutatorName": "MethodExpression",
          "replacement": "roles.value",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(50,88): error TS2345: Argument of type '{ name: \"werewolf\" | \"big-bad-wolf\" | \"accursed-wolf-father\" | \"white-werewolf\" | \"villager\" | \"villager-villager\" | \"seer\" | \"cupid\" | \"witch\" | \"hunter\" | \"little-girl\" | \"defender\" | ... 17 more ... | \"devoted-servant\"; ... 6 more ...; recommendedMinPlayers?: number | undefined; }' is not assignable to parameter of type 'RoleWithMinInGame'.\n  Type '{ name: \"werewolf\" | \"big-bad-wolf\" | \"accursed-wolf-father\" | \"white-werewolf\" | \"villager\" | \"villager-villager\" | \"seer\" | \"cupid\" | \"witch\" | \"hunter\" | \"little-girl\" | \"defender\" | ... 17 more ... | \"devoted-servant\"; ... 6 more ...; recommendedMinPlayers?: number | undefined; }' is not assignable to type '{ minInGame: number; }'.\n    Types of property 'minInGame' are incompatible.\n      Type 'number | undefined' is not assignable to type 'number'.\n        Type 'undefined' is not assignable to type 'number'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "9",
            "10",
            "33"
          ],
          "location": {
            "end": {
              "column": 122,
              "line": 48
            },
            "start": {
              "column": 37,
              "line": 48
            }
          }
        },
        {
          "id": "368",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(50,88): error TS2345: Argument of type '{ name: \"werewolf\" | \"big-bad-wolf\" | \"accursed-wolf-father\" | \"white-werewolf\" | \"villager\" | \"villager-villager\" | \"seer\" | \"cupid\" | \"witch\" | \"hunter\" | \"little-girl\" | \"defender\" | ... 17 more ... | \"devoted-servant\"; ... 6 more ...; recommendedMinPlayers?: number | undefined; }' is not assignable to parameter of type 'RoleWithMinInGame'.\n  Type '{ name: \"werewolf\" | \"big-bad-wolf\" | \"accursed-wolf-father\" | \"white-werewolf\" | \"villager\" | \"villager-villager\" | \"seer\" | \"cupid\" | \"witch\" | \"hunter\" | \"little-girl\" | \"defender\" | ... 17 more ... | \"devoted-servant\"; ... 6 more ...; recommendedMinPlayers?: number | undefined; }' is not assignable to type '{ minInGame: number; }'.\n    Types of property 'minInGame' are incompatible.\n      Type 'number | undefined' is not assignable to type 'number'.\n        Type 'undefined' is not assignable to type 'number'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "9",
            "10",
            "33"
          ],
          "location": {
            "end": {
              "column": 121,
              "line": 48
            },
            "start": {
              "column": 56,
              "line": 48
            }
          }
        },
        {
          "id": "369",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "9"
          ],
          "coveredBy": [
            "9",
            "10",
            "33"
          ],
          "location": {
            "end": {
              "column": 121,
              "line": 48
            },
            "start": {
              "column": 93,
              "line": 48
            }
          }
        },
        {
          "id": "370",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "10"
          ],
          "coveredBy": [
            "9",
            "10",
            "33"
          ],
          "location": {
            "end": {
              "column": 121,
              "line": 48
            },
            "start": {
              "column": 93,
              "line": 48
            }
          }
        },
        {
          "id": "371",
          "mutatorName": "EqualityOperator",
          "replacement": "role.minInGame === undefined",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "9"
          ],
          "coveredBy": [
            "9",
            "10",
            "33"
          ],
          "location": {
            "end": {
              "column": 121,
              "line": 48
            },
            "start": {
              "column": 93,
              "line": 48
            }
          }
        },
        {
          "id": "372",
          "mutatorName": "MethodExpression",
          "replacement": "rolesWithMinimumPlayers.some(role => isRolePresentAndMinimumPlayersReached(role))",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "10"
          ],
          "coveredBy": [
            "9",
            "10",
            "33"
          ],
          "location": {
            "end": {
              "column": 94,
              "line": 50
            },
            "start": {
              "column": 12,
              "line": 50
            }
          }
        },
        {
          "id": "373",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "9"
          ],
          "coveredBy": [
            "9",
            "10",
            "33"
          ],
          "location": {
            "end": {
              "column": 93,
              "line": 50
            },
            "start": {
              "column": 42,
              "line": 50
            }
          }
        },
        {
          "id": "374",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(53,77): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'ComputedGetter<boolean>'.\n      Type 'void' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean, boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean, boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'WritableComputedOptions<boolean, boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "11",
            "12",
            "13",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 60
            },
            "start": {
              "column": 83,
              "line": 53
            }
          }
        },
        {
          "id": "375",
          "mutatorName": "BooleanLiteral",
          "replacement": "roles.value",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(57,18): error TS18047: 'roles.value' is possibly 'null'.\napp/composables/api/game/useCreateGameDtoValidation.ts(57,38): error TS7031: Binding element 'name' implicitly has an 'any' type.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "11",
            "12",
            "13",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 54
            },
            "start": {
              "column": 9,
              "line": 54
            }
          }
        },
        {
          "id": "376",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(57,18): error TS18047: 'roles.value' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "11",
            "12",
            "13",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 54
            },
            "start": {
              "column": 9,
              "line": 54
            }
          }
        },
        {
          "id": "377",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(57,18): error TS18047: 'roles.value' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "11",
            "12",
            "13",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 54
            },
            "start": {
              "column": 9,
              "line": 54
            }
          }
        },
        {
          "id": "378",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(55,18): error TS18047: 'roles.value' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "11"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 56
            },
            "start": {
              "column": 23,
              "line": 54
            }
          }
        },
        {
          "id": "379",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "11"
          ],
          "coveredBy": [
            "11"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 55
            },
            "start": {
              "column": 14,
              "line": 55
            }
          }
        },
        {
          "id": "380",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(62,80): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'ComputedGetter<boolean>'.\n      Type 'void' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean, boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean, boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'WritableComputedOptions<boolean, boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "14",
            "15",
            "16",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 69
            },
            "start": {
              "column": 86,
              "line": 62
            }
          }
        },
        {
          "id": "381",
          "mutatorName": "BooleanLiteral",
          "replacement": "roles.value",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(66,18): error TS18047: 'roles.value' is possibly 'null'.\napp/composables/api/game/useCreateGameDtoValidation.ts(66,38): error TS7031: Binding element 'name' implicitly has an 'any' type.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "14",
            "15",
            "16",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 63
            },
            "start": {
              "column": 9,
              "line": 63
            }
          }
        },
        {
          "id": "382",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(66,18): error TS18047: 'roles.value' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "14",
            "15",
            "16",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 63
            },
            "start": {
              "column": 9,
              "line": 63
            }
          }
        },
        {
          "id": "383",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(66,18): error TS18047: 'roles.value' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "14",
            "15",
            "16",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 63
            },
            "start": {
              "column": 9,
              "line": 63
            }
          }
        },
        {
          "id": "384",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(64,18): error TS18047: 'roles.value' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "14"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 65
            },
            "start": {
              "column": 23,
              "line": 63
            }
          }
        },
        {
          "id": "385",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "14"
          ],
          "coveredBy": [
            "14"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 64
            },
            "start": {
              "column": 14,
              "line": 64
            }
          }
        },
        {
          "id": "386",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(71,68): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'ComputedGetter<boolean>'.\n      Type 'void' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean, boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean, boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'WritableComputedOptions<boolean, boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "17",
            "18",
            "21",
            "23",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 77
            },
            "start": {
              "column": 74,
              "line": 71
            }
          }
        },
        {
          "id": "387",
          "mutatorName": "MethodExpression",
          "replacement": "createGameDto.value.players.every(player => player.role.name === \"thief\")",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "17",
            "18",
            "21",
            "23",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 100,
              "line": 72
            },
            "start": {
              "column": 28,
              "line": 72
            }
          }
        },
        {
          "id": "388",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "17",
            "18",
            "21",
            "23",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 72
            },
            "start": {
              "column": 61,
              "line": 72
            }
          }
        },
        {
          "id": "389",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "17"
          ],
          "coveredBy": [
            "17",
            "18",
            "21",
            "23",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 72
            },
            "start": {
              "column": 71,
              "line": 72
            }
          }
        },
        {
          "id": "390",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "17",
            "18",
            "21",
            "23",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 72
            },
            "start": {
              "column": 71,
              "line": 72
            }
          }
        },
        {
          "id": "391",
          "mutatorName": "EqualityOperator",
          "replacement": "player.role.name !== \"thief\"",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "17"
          ],
          "coveredBy": [
            "17",
            "18",
            "21",
            "23",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 72
            },
            "start": {
              "column": 71,
              "line": 72
            }
          }
        },
        {
          "id": "392",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(72,71): error TS2367: This comparison appears to be unintentional because the types '\"werewolf\" | \"big-bad-wolf\" | \"accursed-wolf-father\" | \"white-werewolf\" | \"villager\" | \"villager-villager\" | \"seer\" | \"cupid\" | \"witch\" | \"hunter\" | \"little-girl\" | \"defender\" | ... 18 more ... | undefined' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "17",
            "18",
            "21",
            "23",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 72
            },
            "start": {
              "column": 92,
              "line": 72
            }
          }
        },
        {
          "id": "393",
          "mutatorName": "BooleanLiteral",
          "replacement": "isThiefPresent",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "17"
          ],
          "coveredBy": [
            "17",
            "18",
            "21",
            "23",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 24,
              "line": 73
            },
            "start": {
              "column": 9,
              "line": 73
            }
          }
        },
        {
          "id": "394",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "17",
            "18",
            "21",
            "23",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 24,
              "line": 73
            },
            "start": {
              "column": 9,
              "line": 73
            }
          }
        },
        {
          "id": "395",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "17"
          ],
          "coveredBy": [
            "17",
            "18",
            "21",
            "23",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 24,
              "line": 73
            },
            "start": {
              "column": 9,
              "line": 73
            }
          }
        },
        {
          "id": "396",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "17"
          ],
          "coveredBy": [
            "17",
            "21",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 75
            },
            "start": {
              "column": 26,
              "line": 73
            }
          }
        },
        {
          "id": "397",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "17"
          ],
          "coveredBy": [
            "17",
            "21",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 74
            },
            "start": {
              "column": 14,
              "line": 74
            }
          }
        },
        {
          "id": "398",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "17",
            "18",
            "21",
            "23",
            "34"
          ],
          "location": {
            "end": {
              "column": 98,
              "line": 76
            },
            "start": {
              "column": 12,
              "line": 76
            }
          }
        },
        {
          "id": "399",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "17"
          ],
          "coveredBy": [
            "17",
            "18",
            "21",
            "23",
            "34"
          ],
          "location": {
            "end": {
              "column": 98,
              "line": 76
            },
            "start": {
              "column": 12,
              "line": 76
            }
          }
        },
        {
          "id": "400",
          "mutatorName": "EqualityOperator",
          "replacement": "createGameDto.value.additionalCards?.some(card => card.recipient === \"thief\") !== true",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "17"
          ],
          "coveredBy": [
            "17",
            "18",
            "21",
            "23",
            "34"
          ],
          "location": {
            "end": {
              "column": 98,
              "line": 76
            },
            "start": {
              "column": 12,
              "line": 76
            }
          }
        },
        {
          "id": "401",
          "mutatorName": "MethodExpression",
          "replacement": "createGameDto.value.additionalCards?.every(card => card.recipient === \"thief\")",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "17"
          ],
          "coveredBy": [
            "17",
            "18",
            "21",
            "23",
            "34"
          ],
          "location": {
            "end": {
              "column": 89,
              "line": 76
            },
            "start": {
              "column": 12,
              "line": 76
            }
          }
        },
        {
          "id": "402",
          "mutatorName": "OptionalChaining",
          "replacement": "createGameDto.value.additionalCards.some",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(76,12): error TS18048: 'createGameDto.value.additionalCards' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "17",
            "18",
            "21",
            "23",
            "34"
          ],
          "location": {
            "end": {
              "column": 53,
              "line": 76
            },
            "start": {
              "column": 12,
              "line": 76
            }
          }
        },
        {
          "id": "403",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "17"
          ],
          "coveredBy": [
            "17",
            "18",
            "21"
          ],
          "location": {
            "end": {
              "column": 88,
              "line": 76
            },
            "start": {
              "column": 54,
              "line": 76
            }
          }
        },
        {
          "id": "404",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "17",
            "18",
            "21"
          ],
          "location": {
            "end": {
              "column": 88,
              "line": 76
            },
            "start": {
              "column": 62,
              "line": 76
            }
          }
        },
        {
          "id": "405",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "17"
          ],
          "coveredBy": [
            "17",
            "18",
            "21"
          ],
          "location": {
            "end": {
              "column": 88,
              "line": 76
            },
            "start": {
              "column": 62,
              "line": 76
            }
          }
        },
        {
          "id": "406",
          "mutatorName": "EqualityOperator",
          "replacement": "card.recipient !== \"thief\"",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "17",
            "18",
            "21"
          ],
          "location": {
            "end": {
              "column": 88,
              "line": 76
            },
            "start": {
              "column": 62,
              "line": 76
            }
          }
        },
        {
          "id": "407",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(76,62): error TS2367: This comparison appears to be unintentional because the types '\"thief\" | \"actor\"' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "17",
            "18",
            "21"
          ],
          "location": {
            "end": {
              "column": 88,
              "line": 76
            },
            "start": {
              "column": 81,
              "line": 76
            }
          }
        },
        {
          "id": "408",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "17"
          ],
          "coveredBy": [
            "17",
            "18",
            "21",
            "23",
            "34"
          ],
          "location": {
            "end": {
              "column": 98,
              "line": 76
            },
            "start": {
              "column": 94,
              "line": 76
            }
          }
        },
        {
          "id": "409",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(79,68): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'ComputedGetter<boolean>'.\n      Type 'void' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean, boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean, boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'WritableComputedOptions<boolean, boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "19",
            "20",
            "21",
            "22",
            "23",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 85
            },
            "start": {
              "column": 74,
              "line": 79
            }
          }
        },
        {
          "id": "410",
          "mutatorName": "MethodExpression",
          "replacement": "createGameDto.value.players.every(player => player.role.name === \"actor\")",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "20"
          ],
          "coveredBy": [
            "19",
            "20",
            "21",
            "22",
            "23",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 100,
              "line": 80
            },
            "start": {
              "column": 28,
              "line": 80
            }
          }
        },
        {
          "id": "411",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "20"
          ],
          "coveredBy": [
            "19",
            "20",
            "21",
            "22",
            "23",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 80
            },
            "start": {
              "column": 61,
              "line": 80
            }
          }
        },
        {
          "id": "412",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "19",
            "20",
            "21",
            "22",
            "23",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 80
            },
            "start": {
              "column": 71,
              "line": 80
            }
          }
        },
        {
          "id": "413",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "20"
          ],
          "coveredBy": [
            "19",
            "20",
            "21",
            "22",
            "23",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 80
            },
            "start": {
              "column": 71,
              "line": 80
            }
          }
        },
        {
          "id": "414",
          "mutatorName": "EqualityOperator",
          "replacement": "player.role.name !== \"actor\"",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "19",
            "20",
            "21",
            "22",
            "23",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 80
            },
            "start": {
              "column": 71,
              "line": 80
            }
          }
        },
        {
          "id": "415",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(80,71): error TS2367: This comparison appears to be unintentional because the types '\"werewolf\" | \"big-bad-wolf\" | \"accursed-wolf-father\" | \"white-werewolf\" | \"villager\" | \"villager-villager\" | \"seer\" | \"cupid\" | \"witch\" | \"hunter\" | \"little-girl\" | \"defender\" | ... 18 more ... | undefined' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "19",
            "20",
            "21",
            "22",
            "23",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 80
            },
            "start": {
              "column": 92,
              "line": 80
            }
          }
        },
        {
          "id": "416",
          "mutatorName": "BooleanLiteral",
          "replacement": "isActorPresent",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "19",
            "20",
            "21",
            "22",
            "23",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 24,
              "line": 81
            },
            "start": {
              "column": 9,
              "line": 81
            }
          }
        },
        {
          "id": "417",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "20"
          ],
          "coveredBy": [
            "19",
            "20",
            "21",
            "22",
            "23",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 24,
              "line": 81
            },
            "start": {
              "column": 9,
              "line": 81
            }
          }
        },
        {
          "id": "418",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "19",
            "20",
            "21",
            "22",
            "23",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 24,
              "line": 81
            },
            "start": {
              "column": 9,
              "line": 81
            }
          }
        },
        {
          "id": "419",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "19",
            "21",
            "23",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 83
            },
            "start": {
              "column": 26,
              "line": 81
            }
          }
        },
        {
          "id": "420",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "19",
            "21",
            "23",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 82
            },
            "start": {
              "column": 14,
              "line": 82
            }
          }
        },
        {
          "id": "421",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "20"
          ],
          "coveredBy": [
            "19",
            "20",
            "21",
            "22",
            "34"
          ],
          "location": {
            "end": {
              "column": 98,
              "line": 84
            },
            "start": {
              "column": 12,
              "line": 84
            }
          }
        },
        {
          "id": "422",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "19",
            "20",
            "21",
            "22",
            "34"
          ],
          "location": {
            "end": {
              "column": 98,
              "line": 84
            },
            "start": {
              "column": 12,
              "line": 84
            }
          }
        },
        {
          "id": "423",
          "mutatorName": "EqualityOperator",
          "replacement": "createGameDto.value.additionalCards?.some(card => card.recipient === \"actor\") !== true",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "19",
            "20",
            "21",
            "22",
            "34"
          ],
          "location": {
            "end": {
              "column": 98,
              "line": 84
            },
            "start": {
              "column": 12,
              "line": 84
            }
          }
        },
        {
          "id": "424",
          "mutatorName": "MethodExpression",
          "replacement": "createGameDto.value.additionalCards?.every(card => card.recipient === \"actor\")",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "19",
            "20",
            "21",
            "22",
            "34"
          ],
          "location": {
            "end": {
              "column": 89,
              "line": 84
            },
            "start": {
              "column": 12,
              "line": 84
            }
          }
        },
        {
          "id": "425",
          "mutatorName": "OptionalChaining",
          "replacement": "createGameDto.value.additionalCards.some",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(84,12): error TS18048: 'createGameDto.value.additionalCards' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "19",
            "20",
            "21",
            "22",
            "34"
          ],
          "location": {
            "end": {
              "column": 53,
              "line": 84
            },
            "start": {
              "column": 12,
              "line": 84
            }
          }
        },
        {
          "id": "426",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "19",
            "20",
            "21",
            "22"
          ],
          "location": {
            "end": {
              "column": 88,
              "line": 84
            },
            "start": {
              "column": 54,
              "line": 84
            }
          }
        },
        {
          "id": "427",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "20"
          ],
          "coveredBy": [
            "19",
            "20",
            "21",
            "22"
          ],
          "location": {
            "end": {
              "column": 88,
              "line": 84
            },
            "start": {
              "column": 62,
              "line": 84
            }
          }
        },
        {
          "id": "428",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "19",
            "20",
            "21",
            "22"
          ],
          "location": {
            "end": {
              "column": 88,
              "line": 84
            },
            "start": {
              "column": 62,
              "line": 84
            }
          }
        },
        {
          "id": "429",
          "mutatorName": "EqualityOperator",
          "replacement": "card.recipient !== \"actor\"",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "20"
          ],
          "coveredBy": [
            "19",
            "20",
            "21",
            "22"
          ],
          "location": {
            "end": {
              "column": 88,
              "line": 84
            },
            "start": {
              "column": 62,
              "line": 84
            }
          }
        },
        {
          "id": "430",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(84,62): error TS2367: This comparison appears to be unintentional because the types '\"thief\" | \"actor\"' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "19",
            "20",
            "21",
            "22"
          ],
          "location": {
            "end": {
              "column": 88,
              "line": 84
            },
            "start": {
              "column": 81,
              "line": 84
            }
          }
        },
        {
          "id": "431",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "19",
            "20",
            "21",
            "22",
            "34"
          ],
          "location": {
            "end": {
              "column": 98,
              "line": 84
            },
            "start": {
              "column": 94,
              "line": 84
            }
          }
        },
        {
          "id": "432",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(87,65): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Type 'undefined' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean, boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean, boolean>', gave the following error.\n    Argument of type '() => undefined' is not assignable to parameter of type 'WritableComputedOptions<boolean, boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38"
          ],
          "location": {
            "end": {
              "column": 49,
              "line": 88
            },
            "start": {
              "column": 83,
              "line": 87
            }
          }
        },
        {
          "id": "433",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "22"
          ],
          "coveredBy": [
            "21",
            "22",
            "23"
          ],
          "location": {
            "end": {
              "column": 49,
              "line": 88
            },
            "start": {
              "column": 89,
              "line": 87
            }
          }
        },
        {
          "id": "434",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "21"
          ],
          "coveredBy": [
            "21",
            "22",
            "23"
          ],
          "location": {
            "end": {
              "column": 49,
              "line": 88
            },
            "start": {
              "column": 89,
              "line": 87
            }
          }
        },
        {
          "id": "435",
          "mutatorName": "LogicalOperator",
          "replacement": "areAdditionalCardsSetForActorIfPresent.value || areAdditionalCardsSetForThiefIfPresent.value",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "22"
          ],
          "coveredBy": [
            "21",
            "22",
            "23"
          ],
          "location": {
            "end": {
              "column": 49,
              "line": 88
            },
            "start": {
              "column": 89,
              "line": 87
            }
          }
        },
        {
          "id": "436",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(90,81): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'ComputedGetter<boolean>'.\n      Type 'void' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean, boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean, boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'WritableComputedOptions<boolean, boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "24",
            "25",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 101
            },
            "start": {
              "column": 87,
              "line": 90
            }
          }
        },
        {
          "id": "437",
          "mutatorName": "MethodExpression",
          "replacement": "createGameDto.value.players.every(player => player.role.name === \"prejudiced-manipulator\")",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "25"
          ],
          "coveredBy": [
            "24",
            "25",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 133,
              "line": 91
            },
            "start": {
              "column": 44,
              "line": 91
            }
          }
        },
        {
          "id": "438",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "25"
          ],
          "coveredBy": [
            "24",
            "25",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 132,
              "line": 91
            },
            "start": {
              "column": 77,
              "line": 91
            }
          }
        },
        {
          "id": "439",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "24"
          ],
          "coveredBy": [
            "24",
            "25",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 132,
              "line": 91
            },
            "start": {
              "column": 87,
              "line": 91
            }
          }
        },
        {
          "id": "440",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "25"
          ],
          "coveredBy": [
            "24",
            "25",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 132,
              "line": 91
            },
            "start": {
              "column": 87,
              "line": 91
            }
          }
        },
        {
          "id": "441",
          "mutatorName": "EqualityOperator",
          "replacement": "player.role.name !== \"prejudiced-manipulator\"",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "24"
          ],
          "coveredBy": [
            "24",
            "25",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 132,
              "line": 91
            },
            "start": {
              "column": 87,
              "line": 91
            }
          }
        },
        {
          "id": "442",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(91,87): error TS2367: This comparison appears to be unintentional because the types '\"werewolf\" | \"big-bad-wolf\" | \"accursed-wolf-father\" | \"white-werewolf\" | \"villager\" | \"villager-villager\" | \"seer\" | \"cupid\" | \"witch\" | \"hunter\" | \"little-girl\" | \"defender\" | ... 18 more ... | undefined' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "24",
            "25",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 132,
              "line": 91
            },
            "start": {
              "column": 108,
              "line": 91
            }
          }
        },
        {
          "id": "443",
          "mutatorName": "BooleanLiteral",
          "replacement": "isPrejudicedManipulatorPresent",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "24"
          ],
          "coveredBy": [
            "24",
            "25",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 92
            },
            "start": {
              "column": 9,
              "line": 92
            }
          }
        },
        {
          "id": "444",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "25"
          ],
          "coveredBy": [
            "24",
            "25",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 92
            },
            "start": {
              "column": 9,
              "line": 92
            }
          }
        },
        {
          "id": "445",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "24"
          ],
          "coveredBy": [
            "24",
            "25",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 92
            },
            "start": {
              "column": 9,
              "line": 92
            }
          }
        },
        {
          "id": "446",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "24"
          ],
          "coveredBy": [
            "24",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 94
            },
            "start": {
              "column": 42,
              "line": 92
            }
          }
        },
        {
          "id": "447",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "24"
          ],
          "coveredBy": [
            "24",
            "33",
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 93
            },
            "start": {
              "column": 14,
              "line": 93
            }
          }
        },
        {
          "id": "448",
          "mutatorName": "MethodExpression",
          "replacement": "Object.values(groups).some(group => group.length >= MIN_PLAYERS_IN_GROUP)",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "25"
          ],
          "coveredBy": [
            "24",
            "25",
            "34"
          ],
          "location": {
            "end": {
              "column": 121,
              "line": 98
            },
            "start": {
              "column": 47,
              "line": 98
            }
          }
        },
        {
          "id": "449",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "24"
          ],
          "coveredBy": [
            "24",
            "25",
            "34"
          ],
          "location": {
            "end": {
              "column": 120,
              "line": 98
            },
            "start": {
              "column": 75,
              "line": 98
            }
          }
        },
        {
          "id": "450",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "25"
          ],
          "coveredBy": [
            "24",
            "25"
          ],
          "location": {
            "end": {
              "column": 120,
              "line": 98
            },
            "start": {
              "column": 84,
              "line": 98
            }
          }
        },
        {
          "id": "451",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "24"
          ],
          "coveredBy": [
            "24",
            "25"
          ],
          "location": {
            "end": {
              "column": 120,
              "line": 98
            },
            "start": {
              "column": 84,
              "line": 98
            }
          }
        },
        {
          "id": "452",
          "mutatorName": "EqualityOperator",
          "replacement": "group.length > MIN_PLAYERS_IN_GROUP",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "24"
          ],
          "coveredBy": [
            "24",
            "25"
          ],
          "location": {
            "end": {
              "column": 120,
              "line": 98
            },
            "start": {
              "column": 84,
              "line": 98
            }
          }
        },
        {
          "id": "453",
          "mutatorName": "EqualityOperator",
          "replacement": "group.length < MIN_PLAYERS_IN_GROUP",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "24"
          ],
          "coveredBy": [
            "24",
            "25"
          ],
          "location": {
            "end": {
              "column": 120,
              "line": 98
            },
            "start": {
              "column": 84,
              "line": 98
            }
          }
        },
        {
          "id": "454",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "25"
          ],
          "coveredBy": [
            "24",
            "25",
            "34"
          ],
          "location": {
            "end": {
              "column": 92,
              "line": 100
            },
            "start": {
              "column": 12,
              "line": 100
            }
          }
        },
        {
          "id": "455",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "24"
          ],
          "coveredBy": [
            "24",
            "25",
            "34"
          ],
          "location": {
            "end": {
              "column": 92,
              "line": 100
            },
            "start": {
              "column": 12,
              "line": 100
            }
          }
        },
        {
          "id": "456",
          "mutatorName": "LogicalOperator",
          "replacement": "Object.keys(groups).length >= minimumGroups || areAllGroupsMinimumPlayersReached",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "25"
          ],
          "coveredBy": [
            "24",
            "25",
            "34"
          ],
          "location": {
            "end": {
              "column": 92,
              "line": 100
            },
            "start": {
              "column": 12,
              "line": 100
            }
          }
        },
        {
          "id": "457",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected [ …(2) ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 14,
          "static": false,
          "killedBy": [
            "34"
          ],
          "coveredBy": [
            "24",
            "25",
            "34"
          ],
          "location": {
            "end": {
              "column": 55,
              "line": 100
            },
            "start": {
              "column": 12,
              "line": 100
            }
          }
        },
        {
          "id": "458",
          "mutatorName": "EqualityOperator",
          "replacement": "Object.keys(groups).length > minimumGroups",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "24"
          ],
          "coveredBy": [
            "24",
            "25",
            "34"
          ],
          "location": {
            "end": {
              "column": 55,
              "line": 100
            },
            "start": {
              "column": 12,
              "line": 100
            }
          }
        },
        {
          "id": "459",
          "mutatorName": "EqualityOperator",
          "replacement": "Object.keys(groups).length < minimumGroups",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "24"
          ],
          "coveredBy": [
            "24",
            "25",
            "34"
          ],
          "location": {
            "end": {
              "column": 55,
              "line": 100
            },
            "start": {
              "column": 12,
              "line": 100
            }
          }
        },
        {
          "id": "460",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(103,25): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Type 'undefined' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean, boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean, boolean>', gave the following error.\n    Argument of type '() => undefined' is not assignable to parameter of type 'WritableComputedOptions<boolean, boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 110
            },
            "start": {
              "column": 43,
              "line": 103
            }
          }
        },
        {
          "id": "461",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "26"
          ],
          "coveredBy": [
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 110
            },
            "start": {
              "column": 49,
              "line": 103
            }
          }
        },
        {
          "id": "462",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 9,
          "static": false,
          "killedBy": [
            "33"
          ],
          "coveredBy": [
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 110
            },
            "start": {
              "column": 49,
              "line": 103
            }
          }
        },
        {
          "id": "463",
          "mutatorName": "LogicalOperator",
          "replacement": "isMinimumPlayersReached.value && areAllRolesSet.value && doesContainOneVillagerSidedRole.value && doesContainOneWerewolfSidedRole.value && areRolesMinimumPlayersReached.value && areAdditionalCardsSetForThiefIfPresent.value && areAdditionalCardsSetForActorIfPresent.value || arePlayerGroupsSetForPrejudicedManipulatorIfPresent.value",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "26"
          ],
          "coveredBy": [
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 110
            },
            "start": {
              "column": 49,
              "line": 103
            }
          }
        },
        {
          "id": "464",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "26"
          ],
          "coveredBy": [
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33"
          ],
          "location": {
            "end": {
              "column": 49,
              "line": 109
            },
            "start": {
              "column": 49,
              "line": 103
            }
          }
        },
        {
          "id": "465",
          "mutatorName": "LogicalOperator",
          "replacement": "isMinimumPlayersReached.value && areAllRolesSet.value && doesContainOneVillagerSidedRole.value && doesContainOneWerewolfSidedRole.value && areRolesMinimumPlayersReached.value && areAdditionalCardsSetForThiefIfPresent.value || areAdditionalCardsSetForActorIfPresent.value",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "26"
          ],
          "coveredBy": [
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33"
          ],
          "location": {
            "end": {
              "column": 49,
              "line": 109
            },
            "start": {
              "column": 49,
              "line": 103
            }
          }
        },
        {
          "id": "466",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "26"
          ],
          "coveredBy": [
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33"
          ],
          "location": {
            "end": {
              "column": 49,
              "line": 108
            },
            "start": {
              "column": 49,
              "line": 103
            }
          }
        },
        {
          "id": "467",
          "mutatorName": "LogicalOperator",
          "replacement": "isMinimumPlayersReached.value && areAllRolesSet.value && doesContainOneVillagerSidedRole.value && doesContainOneWerewolfSidedRole.value && areRolesMinimumPlayersReached.value || areAdditionalCardsSetForThiefIfPresent.value",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "26"
          ],
          "coveredBy": [
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33"
          ],
          "location": {
            "end": {
              "column": 49,
              "line": 108
            },
            "start": {
              "column": 49,
              "line": 103
            }
          }
        },
        {
          "id": "468",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "26"
          ],
          "coveredBy": [
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 107
            },
            "start": {
              "column": 49,
              "line": 103
            }
          }
        },
        {
          "id": "469",
          "mutatorName": "LogicalOperator",
          "replacement": "isMinimumPlayersReached.value && areAllRolesSet.value && doesContainOneVillagerSidedRole.value && doesContainOneWerewolfSidedRole.value || areRolesMinimumPlayersReached.value",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "26"
          ],
          "coveredBy": [
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 107
            },
            "start": {
              "column": 49,
              "line": 103
            }
          }
        },
        {
          "id": "470",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "26"
          ],
          "coveredBy": [
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 106
            },
            "start": {
              "column": 49,
              "line": 103
            }
          }
        },
        {
          "id": "471",
          "mutatorName": "LogicalOperator",
          "replacement": "isMinimumPlayersReached.value && areAllRolesSet.value && doesContainOneVillagerSidedRole.value || doesContainOneWerewolfSidedRole.value",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "26"
          ],
          "coveredBy": [
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 106
            },
            "start": {
              "column": 49,
              "line": 103
            }
          }
        },
        {
          "id": "472",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "26"
          ],
          "coveredBy": [
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 105
            },
            "start": {
              "column": 49,
              "line": 103
            }
          }
        },
        {
          "id": "473",
          "mutatorName": "LogicalOperator",
          "replacement": "isMinimumPlayersReached.value && areAllRolesSet.value || doesContainOneVillagerSidedRole.value",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "26"
          ],
          "coveredBy": [
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 105
            },
            "start": {
              "column": 49,
              "line": 103
            }
          }
        },
        {
          "id": "474",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "26"
          ],
          "coveredBy": [
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 104
            },
            "start": {
              "column": 49,
              "line": 103
            }
          }
        },
        {
          "id": "475",
          "mutatorName": "LogicalOperator",
          "replacement": "isMinimumPlayersReached.value || areAllRolesSet.value",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "26"
          ],
          "coveredBy": [
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 104
            },
            "start": {
              "column": 49,
              "line": 103
            }
          }
        },
        {
          "id": "476",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(112,59): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<string[]>, debugOptions?: DebuggerOptions | undefined): ComputedRef<string[]>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'ComputedGetter<string[]>'.\n      Type 'void' is not assignable to type 'string[]'.\n  Overload 2 of 2, '(options: WritableComputedOptions<string[], string[]>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<string[], string[]>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'WritableComputedOptions<string[], string[]>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 126
            },
            "start": {
              "column": 65,
              "line": 112
            }
          }
        },
        {
          "id": "477",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected [] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "34"
          ],
          "coveredBy": [
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 123
            },
            "start": {
              "column": 45,
              "line": 113
            }
          }
        },
        {
          "id": "478",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected [ '' ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "34"
          ],
          "coveredBy": [
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 77,
              "line": 114
            },
            "start": {
              "column": 10,
              "line": 114
            }
          }
        },
        {
          "id": "479",
          "mutatorName": "BooleanLiteral",
          "replacement": "isMinimumPlayersReached.value",
          "statusReason": "expected [] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "34"
          ],
          "coveredBy": [
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 111,
              "line": 114
            },
            "start": {
              "column": 81,
              "line": 114
            }
          }
        },
        {
          "id": "480",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected [ '', …(2) ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "34"
          ],
          "coveredBy": [
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 68,
              "line": 115
            },
            "start": {
              "column": 10,
              "line": 115
            }
          }
        },
        {
          "id": "481",
          "mutatorName": "BooleanLiteral",
          "replacement": "areAllRolesSet.value",
          "statusReason": "expected [ …(2) ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "34"
          ],
          "coveredBy": [
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 93,
              "line": 115
            },
            "start": {
              "column": 72,
              "line": 115
            }
          }
        },
        {
          "id": "482",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected [ '' ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "34"
          ],
          "coveredBy": [
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 70,
              "line": 116
            },
            "start": {
              "column": 10,
              "line": 116
            }
          }
        },
        {
          "id": "483",
          "mutatorName": "BooleanLiteral",
          "replacement": "doesContainOneVillagerSidedRole.value",
          "statusReason": "expected [] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "34"
          ],
          "coveredBy": [
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 112,
              "line": 116
            },
            "start": {
              "column": 74,
              "line": 116
            }
          }
        },
        {
          "id": "484",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected [ '' ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "34"
          ],
          "coveredBy": [
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 70,
              "line": 117
            },
            "start": {
              "column": 10,
              "line": 117
            }
          }
        },
        {
          "id": "485",
          "mutatorName": "BooleanLiteral",
          "replacement": "doesContainOneWerewolfSidedRole.value",
          "statusReason": "expected [] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "34"
          ],
          "coveredBy": [
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 112,
              "line": 117
            },
            "start": {
              "column": 74,
              "line": 117
            }
          }
        },
        {
          "id": "486",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected [ …(3) ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "34"
          ],
          "coveredBy": [
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 85,
              "line": 118
            },
            "start": {
              "column": 10,
              "line": 118
            }
          }
        },
        {
          "id": "487",
          "mutatorName": "BooleanLiteral",
          "replacement": "isTwoSistersRolePresentAndMinimumPlayersReached.value",
          "statusReason": "expected [ …(2) ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "34"
          ],
          "coveredBy": [
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 143,
              "line": 118
            },
            "start": {
              "column": 89,
              "line": 118
            }
          }
        },
        {
          "id": "488",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected [ …(3) ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "34"
          ],
          "coveredBy": [
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 88,
              "line": 119
            },
            "start": {
              "column": 10,
              "line": 119
            }
          }
        },
        {
          "id": "489",
          "mutatorName": "BooleanLiteral",
          "replacement": "isThreeBrothersRolePresentAndMinimumPlayersReached.value",
          "statusReason": "expected [ …(2) ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "34"
          ],
          "coveredBy": [
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 149,
              "line": 119
            },
            "start": {
              "column": 92,
              "line": 119
            }
          }
        },
        {
          "id": "490",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected [ …(3) ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "34"
          ],
          "coveredBy": [
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 77,
              "line": 120
            },
            "start": {
              "column": 10,
              "line": 120
            }
          }
        },
        {
          "id": "491",
          "mutatorName": "BooleanLiteral",
          "replacement": "areAdditionalCardsSetForThiefIfPresent.value",
          "statusReason": "expected [ …(2) ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "34"
          ],
          "coveredBy": [
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 126,
              "line": 120
            },
            "start": {
              "column": 81,
              "line": 120
            }
          }
        },
        {
          "id": "492",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected [ …(3) ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 8,
          "static": false,
          "killedBy": [
            "34"
          ],
          "coveredBy": [
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 77,
              "line": 121
            },
            "start": {
              "column": 10,
              "line": 121
            }
          }
        },
        {
          "id": "493",
          "mutatorName": "BooleanLiteral",
          "replacement": "areAdditionalCardsSetForActorIfPresent.value",
          "statusReason": "expected [ …(2) ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 8,
          "static": false,
          "killedBy": [
            "34"
          ],
          "coveredBy": [
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 126,
              "line": 121
            },
            "start": {
              "column": 81,
              "line": 121
            }
          }
        },
        {
          "id": "494",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected [ …(3) ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 9,
          "static": false,
          "killedBy": [
            "34"
          ],
          "coveredBy": [
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 84,
              "line": 122
            },
            "start": {
              "column": 10,
              "line": 122
            }
          }
        },
        {
          "id": "495",
          "mutatorName": "BooleanLiteral",
          "replacement": "arePlayerGroupsSetForPrejudicedManipulatorIfPresent.value",
          "statusReason": "expected [ …(2) ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 9,
          "static": false,
          "killedBy": [
            "34"
          ],
          "coveredBy": [
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 146,
              "line": 122
            },
            "start": {
              "column": 88,
              "line": 122
            }
          }
        },
        {
          "id": "496",
          "mutatorName": "MethodExpression",
          "replacement": "Object.keys(errors)",
          "statusReason": "expected [ …(9) ] to strictly equal []",
          "status": "Killed",
          "testsCompleted": 10,
          "static": false,
          "killedBy": [
            "35"
          ],
          "coveredBy": [
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 81,
              "line": 125
            },
            "start": {
              "column": 12,
              "line": 125
            }
          }
        },
        {
          "id": "497",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected [] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "34"
          ],
          "coveredBy": [
            "34",
            "35"
          ],
          "location": {
            "end": {
              "column": 80,
              "line": 125
            },
            "start": {
              "column": 39,
              "line": 125
            }
          }
        },
        {
          "id": "498",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(128,76): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "9",
            "10",
            "12",
            "13",
            "15",
            "16",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 133
            },
            "start": {
              "column": 84,
              "line": 128
            }
          }
        },
        {
          "id": "499",
          "mutatorName": "MethodExpression",
          "replacement": "createGameDto.value.players",
          "statusReason": "expected [ …(2) ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 12,
          "static": false,
          "killedBy": [
            "34"
          ],
          "coveredBy": [
            "9",
            "10",
            "12",
            "13",
            "15",
            "16",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38"
          ],
          "location": {
            "end": {
              "column": 105,
              "line": 129
            },
            "start": {
              "column": 29,
              "line": 129
            }
          }
        },
        {
          "id": "500",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "10"
          ],
          "coveredBy": [
            "9",
            "10",
            "12",
            "13",
            "15",
            "16",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38"
          ],
          "location": {
            "end": {
              "column": 104,
              "line": 129
            },
            "start": {
              "column": 64,
              "line": 129
            }
          }
        },
        {
          "id": "501",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected [ …(2) ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 12,
          "static": false,
          "killedBy": [
            "34"
          ],
          "coveredBy": [
            "9",
            "10",
            "12",
            "13",
            "15",
            "16",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38"
          ],
          "location": {
            "end": {
              "column": 104,
              "line": 129
            },
            "start": {
              "column": 74,
              "line": 129
            }
          }
        },
        {
          "id": "502",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "10"
          ],
          "coveredBy": [
            "9",
            "10",
            "12",
            "13",
            "15",
            "16",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38"
          ],
          "location": {
            "end": {
              "column": 104,
              "line": 129
            },
            "start": {
              "column": 74,
              "line": 129
            }
          }
        },
        {
          "id": "503",
          "mutatorName": "EqualityOperator",
          "replacement": "player.role.name !== role.name",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "13"
          ],
          "coveredBy": [
            "9",
            "10",
            "12",
            "13",
            "15",
            "16",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38"
          ],
          "location": {
            "end": {
              "column": 104,
              "line": 129
            },
            "start": {
              "column": 74,
              "line": 129
            }
          }
        },
        {
          "id": "504",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "10"
          ],
          "coveredBy": [
            "9",
            "10",
            "12",
            "13",
            "15",
            "16",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38"
          ],
          "location": {
            "end": {
              "column": 80,
              "line": 132
            },
            "start": {
              "column": 12,
              "line": 132
            }
          }
        },
        {
          "id": "505",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "9"
          ],
          "coveredBy": [
            "9",
            "10",
            "12",
            "13",
            "15",
            "16",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38"
          ],
          "location": {
            "end": {
              "column": 80,
              "line": 132
            },
            "start": {
              "column": 12,
              "line": 132
            }
          }
        },
        {
          "id": "506",
          "mutatorName": "LogicalOperator",
          "replacement": "playersWithRoleCount === 0 && playersWithRoleCount >= role.minInGame",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "9"
          ],
          "coveredBy": [
            "9",
            "10",
            "12",
            "13",
            "15",
            "16",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38"
          ],
          "location": {
            "end": {
              "column": 80,
              "line": 132
            },
            "start": {
              "column": 12,
              "line": 132
            }
          }
        },
        {
          "id": "507",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "9"
          ],
          "coveredBy": [
            "9",
            "10",
            "12",
            "13",
            "15",
            "16",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 132
            },
            "start": {
              "column": 12,
              "line": 132
            }
          }
        },
        {
          "id": "508",
          "mutatorName": "EqualityOperator",
          "replacement": "playersWithRoleCount !== 0",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "9"
          ],
          "coveredBy": [
            "9",
            "10",
            "12",
            "13",
            "15",
            "16",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 132
            },
            "start": {
              "column": 12,
              "line": 132
            }
          }
        },
        {
          "id": "509",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "9"
          ],
          "coveredBy": [
            "9",
            "10",
            "12",
            "13",
            "15",
            "16",
            "34",
            "36",
            "37"
          ],
          "location": {
            "end": {
              "column": 80,
              "line": 132
            },
            "start": {
              "column": 42,
              "line": 132
            }
          }
        },
        {
          "id": "510",
          "mutatorName": "EqualityOperator",
          "replacement": "playersWithRoleCount > role.minInGame",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "9"
          ],
          "coveredBy": [
            "9",
            "10",
            "12",
            "13",
            "15",
            "16",
            "34",
            "36",
            "37"
          ],
          "location": {
            "end": {
              "column": 80,
              "line": 132
            },
            "start": {
              "column": 42,
              "line": 132
            }
          }
        },
        {
          "id": "511",
          "mutatorName": "EqualityOperator",
          "replacement": "playersWithRoleCount < role.minInGame",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "9"
          ],
          "coveredBy": [
            "9",
            "10",
            "12",
            "13",
            "15",
            "16",
            "34",
            "36",
            "37"
          ],
          "location": {
            "end": {
              "column": 80,
              "line": 132
            },
            "start": {
              "column": 42,
              "line": 132
            }
          }
        },
        {
          "id": "512",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useCreateGameDtoValidation.ts(134,3): error TS2740: Type '{}' is missing the following properties from type 'UseCreateGameDtoValidation': isMinimumPlayersReached, areAllRolesSet, doesContainOneVillagerSidedRole, doesContainOneWerewolfSidedRole, and 10 more.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 149
            },
            "start": {
              "column": 10,
              "line": 134
            }
          }
        }
      ],
      "source": "import { storeToRefs } from \"pinia\";\nimport { group as groupByField } from \"radash\";\nimport type { ComputedRef, Ref } from \"vue\";\n\nimport { MIN_PLAYERS_IN_GAME, MIN_PLAYERS_IN_GROUP } from \"~/composables/api/game/constants/game.constants\";\nimport type { CreateGamePlayerWithGroupDto } from \"~/composables/api/game/dto/create-game/create-game-player/create-game-player.dto\";\nimport type { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport type { Role } from \"~/composables/api/role/types/role.class\";\nimport { useRolesStore } from \"~/stores/role/useRolesStore\";\n\ntype RoleWithMinInGame = Role & { minInGame: number };\n\ntype UseCreateGameDtoValidation = {\n  isMinimumPlayersReached: ComputedRef<boolean>;\n  areAllRolesSet: ComputedRef<boolean>;\n  doesContainOneVillagerSidedRole: ComputedRef<boolean>;\n  doesContainOneWerewolfSidedRole: ComputedRef<boolean>;\n  areRolesMinimumPlayersReached: ComputedRef<boolean>;\n  isTwoSistersRolePresentAndMinimumPlayersReached: ComputedRef<boolean>;\n  isThreeBrothersRolePresentAndMinimumPlayersReached: ComputedRef<boolean>;\n  areAdditionalCardsSetForThiefIfPresent: ComputedRef<boolean>;\n  areAdditionalCardsSetForActorIfPresent: ComputedRef<boolean>;\n  areAdditionalCardsSetForAdditionalCardsDependantRoles: ComputedRef<boolean>;\n  arePlayerGroupsSetForPrejudicedManipulatorIfPresent: ComputedRef<boolean>;\n  canCreateGame: ComputedRef<boolean>;\n  gameCreationValidationErrors: ComputedRef<string[]>;\n  isRolePresentAndMinimumPlayersReached: (role: RoleWithMinInGame) => boolean;\n};\n\nfunction useCreateGameDtoValidation(createGameDto: Ref<CreateGameDto>): UseCreateGameDtoValidation {\n  const rolesStore = useRolesStore();\n  const { roles } = storeToRefs(rolesStore);\n\n  const { t } = useI18n();\n\n  const isMinimumPlayersReached = computed<boolean>(() => createGameDto.value.players.length >= MIN_PLAYERS_IN_GAME);\n\n  const areAllRolesSet = computed<boolean>(() => createGameDto.value.players.every(player => player.role.name !== undefined));\n\n  const doesContainOneVillagerSidedRole = computed<boolean>(() => createGameDto.value.players.some(player => player.side.current === \"villagers\"));\n\n  const doesContainOneWerewolfSidedRole = computed<boolean>(() => createGameDto.value.players.some(player => player.side.current === \"werewolves\"));\n\n  const areRolesMinimumPlayersReached = computed<boolean>(() => {\n    if (!roles.value) {\n      return false;\n    }\n    const rolesWithMinimumPlayers = roles.value.filter((role): role is RoleWithMinInGame => role.minInGame !== undefined);\n\n    return rolesWithMinimumPlayers.every(role => isRolePresentAndMinimumPlayersReached(role));\n  });\n\n  const isTwoSistersRolePresentAndMinimumPlayersReached = computed<boolean>(() => {\n    if (!roles.value) {\n      return false;\n    }\n    const role = roles.value.find(({ name }) => name === \"two-sisters\") as RoleWithMinInGame;\n\n    return isRolePresentAndMinimumPlayersReached(role);\n  });\n\n  const isThreeBrothersRolePresentAndMinimumPlayersReached = computed<boolean>(() => {\n    if (!roles.value) {\n      return false;\n    }\n    const role = roles.value.find(({ name }) => name === \"three-brothers\") as RoleWithMinInGame;\n\n    return isRolePresentAndMinimumPlayersReached(role);\n  });\n\n  const areAdditionalCardsSetForThiefIfPresent = computed<boolean>(() => {\n    const isThiefPresent = createGameDto.value.players.some(player => player.role.name === \"thief\");\n    if (!isThiefPresent) {\n      return true;\n    }\n    return createGameDto.value.additionalCards?.some(card => card.recipient === \"thief\") === true;\n  });\n\n  const areAdditionalCardsSetForActorIfPresent = computed<boolean>(() => {\n    const isActorPresent = createGameDto.value.players.some(player => player.role.name === \"actor\");\n    if (!isActorPresent) {\n      return true;\n    }\n    return createGameDto.value.additionalCards?.some(card => card.recipient === \"actor\") === true;\n  });\n\n  const areAdditionalCardsSetForAdditionalCardsDependantRoles = computed<boolean>(() => areAdditionalCardsSetForActorIfPresent.value &&\n    areAdditionalCardsSetForThiefIfPresent.value);\n\n  const arePlayerGroupsSetForPrejudicedManipulatorIfPresent = computed<boolean>(() => {\n    const isPrejudicedManipulatorPresent = createGameDto.value.players.some(player => player.role.name === \"prejudiced-manipulator\");\n    if (!isPrejudicedManipulatorPresent) {\n      return true;\n    }\n    const minimumGroups = 2;\n    const playersWithGroup = createGameDto.value.players.filter(player => player.group !== undefined) as CreateGamePlayerWithGroupDto[];\n    const groups = groupByField(playersWithGroup, player => player.group) as Record<string, CreateGamePlayerWithGroupDto[]>;\n    const areAllGroupsMinimumPlayersReached = Object.values(groups).every(group => group.length >= MIN_PLAYERS_IN_GROUP);\n\n    return Object.keys(groups).length >= minimumGroups && areAllGroupsMinimumPlayersReached;\n  });\n\n  const canCreateGame = computed<boolean>(() => isMinimumPlayersReached.value &&\n    areAllRolesSet.value &&\n    doesContainOneVillagerSidedRole.value &&\n    doesContainOneWerewolfSidedRole.value &&\n    areRolesMinimumPlayersReached.value &&\n    areAdditionalCardsSetForThiefIfPresent.value &&\n    areAdditionalCardsSetForActorIfPresent.value &&\n    arePlayerGroupsSetForPrejudicedManipulatorIfPresent.value);\n\n  const gameCreationValidationErrors = computed<string[]>(() => {\n    const errors: Record<string, boolean> = {\n      [t(\"composables.useCreateGameDtoValidation.minimumOfPlayersNotReached\")]: !isMinimumPlayersReached.value,\n      [t(\"composables.useCreateGameDtoValidation.notAllRolesAreSet\")]: !areAllRolesSet.value,\n      [t(\"composables.useCreateGameDtoValidation.noVillagerSidedRole\")]: !doesContainOneVillagerSidedRole.value,\n      [t(\"composables.useCreateGameDtoValidation.noWerewolfSidedRole\")]: !doesContainOneWerewolfSidedRole.value,\n      [t(\"composables.useCreateGameDtoValidation.twoSistersMinimumPlayersNotReached\")]: !isTwoSistersRolePresentAndMinimumPlayersReached.value,\n      [t(\"composables.useCreateGameDtoValidation.threeBrothersMinimumPlayersNotReached\")]: !isThreeBrothersRolePresentAndMinimumPlayersReached.value,\n      [t(\"composables.useCreateGameDtoValidation.thiefAdditionalCardsNotSet\")]: !areAdditionalCardsSetForThiefIfPresent.value,\n      [t(\"composables.useCreateGameDtoValidation.actorAdditionalCardsNotSet\")]: !areAdditionalCardsSetForActorIfPresent.value,\n      [t(\"composables.useCreateGameDtoValidation.prejudicedManipulatorGroupsNotSet\")]: !arePlayerGroupsSetForPrejudicedManipulatorIfPresent.value,\n    };\n\n    return Object.keys(errors).filter((key: keyof typeof errors) => errors[key]);\n  });\n\n  function isRolePresentAndMinimumPlayersReached(role: RoleWithMinInGame): boolean {\n    const playersWithRole = createGameDto.value.players.filter(player => player.role.name === role.name);\n    const playersWithRoleCount = playersWithRole.length;\n\n    return playersWithRoleCount === 0 || playersWithRoleCount >= role.minInGame;\n  }\n  return {\n    isMinimumPlayersReached,\n    areAllRolesSet,\n    doesContainOneVillagerSidedRole,\n    doesContainOneWerewolfSidedRole,\n    areRolesMinimumPlayersReached,\n    isTwoSistersRolePresentAndMinimumPlayersReached,\n    isThreeBrothersRolePresentAndMinimumPlayersReached,\n    areAdditionalCardsSetForThiefIfPresent,\n    areAdditionalCardsSetForActorIfPresent,\n    areAdditionalCardsSetForAdditionalCardsDependantRoles,\n    arePlayerGroupsSetForPrejudicedManipulatorIfPresent,\n    canCreateGame,\n    gameCreationValidationErrors,\n    isRolePresentAndMinimumPlayersReached,\n  };\n}\n\nexport { useCreateGameDtoValidation };"
    },
    "app/composables/api/game/useFetchGames.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "513",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useFetchGames.ts(15,27): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "87",
            "88",
            "89",
            "90",
            "91",
            "92",
            "93",
            "94",
            "95",
            "96"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 73
            },
            "start": {
              "column": 41,
              "line": 15
            }
          }
        },
        {
          "id": "514",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useFetchGames.ts(18,60): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "87",
            "88"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 27
            },
            "start": {
              "column": 108,
              "line": 18
            }
          }
        },
        {
          "id": "515",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useFetchGames.ts(18,60): error TS2366: Function lacks ending return statement and return type does not include 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "87",
            "88"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 24
            },
            "start": {
              "column": 9,
              "line": 19
            }
          }
        },
        {
          "id": "516",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games\",\n  Object {\n    \"body\": \"{\"players\":[],\"options\":{\"composition\":{\"isHidden\":false},\"votes\":{\"canBeSkipped\":true,\"duration\":369},\"roles\":{\"doSkipCallIfNoTarget\":false,\"areRevealedOnDeath\":false,\"sheriff\":{\"isEnabled\":false,\"electedAt\":{\"turn\":6402000488725687,\"phaseName\":\"night\"},\"hasDoubledVote\":true,\"mustSettleTieInVotes\":true},\"werewolf\":{\"canEatEachOther\":true},\"bigBadWolf\":{\"isPowerlessIfWerewolfDies\":false},\"whiteWerewolf\":{\"wakingUpInterval\":2},\"seer\":{\"isTalkative\":false,\"canSeeRoles\":false},\"cupid\":{\"lovers\":{\"doRevealRoleToEachOther\":false},\"mustWinWithLovers\":false},\"littleGirl\":{\"isProtectedByDefender\":false},\"defender\":{\"canProtectTwice\":false},\"elder\":{\"livesCountAgainstWerewolves\":3,\"doesTakeHisRevenge\":false},\"idiot\":{\"doesDieOnElderDeath\":false},\"twoSisters\":{\"wakingUpInterval\":2},\"threeBrothers\":{\"wakingUpInterval\":1},\"fox\":{\"isPowerlessIfMissesWerewolf\":false},\"bearTamer\":{\"doesGrowlOnWerewolvesSide\":true},\"stutteringJudge\":{\"voteRequestsCount\":2},\"wildChild\":{\"isTransformationRevealed\":false},\"wolfHound\":{\"isChosenSideRevealed\":false,\"isSideRandomlyChosen\":true},\"thief\":{\"mustChooseBetweenWerewolves\":false,\"isChosenCardRevealed\":true},\"piedPiper\":{\"charmedPeopleCountPerNight\":1,\"isPowerlessOnWerewolvesSide\":false,\"areCharmedPeopleRevealed\":true},\"scandalmonger\":{\"markPenalty\":5},\"witch\":{\"doesKnowWerewolvesTargets\":false},\"prejudicedManipulator\":{\"isPowerlessOnWerewolvesSide\":true},\"actor\":{\"isPowerlessOnWerewolvesSide\":true}}}}\",\n    \"method\": \"POST\",\n  },\n], but it was called with \"\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "87"
          ],
          "coveredBy": [
            "87",
            "88"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 20
            },
            "start": {
              "column": 54,
              "line": 20
            }
          }
        },
        {
          "id": "517",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games\",\n  Object {\n    \"body\": \"{\"players\":[],\"options\":{\"composition\":{\"isHidden\":false},\"votes\":{\"canBeSkipped\":false,\"duration\":323},\"roles\":{\"doSkipCallIfNoTarget\":false,\"areRevealedOnDeath\":false,\"sheriff\":{\"isEnabled\":true,\"electedAt\":{\"turn\":3411833232186655,\"phaseName\":\"twilight\"},\"hasDoubledVote\":true,\"mustSettleTieInVotes\":false},\"werewolf\":{\"canEatEachOther\":false},\"bigBadWolf\":{\"isPowerlessIfWerewolfDies\":false},\"whiteWerewolf\":{\"wakingUpInterval\":3},\"seer\":{\"isTalkative\":false,\"canSeeRoles\":true},\"cupid\":{\"lovers\":{\"doRevealRoleToEachOther\":false},\"mustWinWithLovers\":true},\"littleGirl\":{\"isProtectedByDefender\":false},\"defender\":{\"canProtectTwice\":true},\"elder\":{\"livesCountAgainstWerewolves\":3,\"doesTakeHisRevenge\":false},\"idiot\":{\"doesDieOnElderDeath\":false},\"twoSisters\":{\"wakingUpInterval\":2},\"threeBrothers\":{\"wakingUpInterval\":3},\"fox\":{\"isPowerlessIfMissesWerewolf\":true},\"bearTamer\":{\"doesGrowlOnWerewolvesSide\":true},\"stutteringJudge\":{\"voteRequestsCount\":1},\"wildChild\":{\"isTransformationRevealed\":true},\"wolfHound\":{\"isChosenSideRevealed\":false,\"isSideRandomlyChosen\":true},\"thief\":{\"mustChooseBetweenWerewolves\":true,\"isChosenCardRevealed\":true},\"piedPiper\":{\"charmedPeopleCountPerNight\":1,\"isPowerlessOnWerewolvesSide\":false,\"areCharmedPeopleRevealed\":true},\"scandalmonger\":{\"markPenalty\":3},\"witch\":{\"doesKnowWerewolvesTargets\":true},\"prejudicedManipulator\":{\"isPowerlessOnWerewolvesSide\":true},\"actor\":{\"isPowerlessOnWerewolvesSide\":true}}}}\",\n    \"method\": \"POST\",\n  },\n], but it was called with \"/games\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "87"
          ],
          "coveredBy": [
            "87",
            "88"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 23
            },
            "start": {
              "column": 64,
              "line": 20
            }
          }
        },
        {
          "id": "518",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games\",\n  Object {\n    \"body\": \"{\"players\":[],\"options\":{\"composition\":{\"isHidden\":false},\"votes\":{\"canBeSkipped\":true,\"duration\":237},\"roles\":{\"doSkipCallIfNoTarget\":true,\"areRevealedOnDeath\":false,\"sheriff\":{\"isEnabled\":false,\"electedAt\":{\"turn\":5948365637917700,\"phaseName\":\"day\"},\"hasDoubledVote\":true,\"mustSettleTieInVotes\":false},\"werewolf\":{\"canEatEachOther\":true},\"bigBadWolf\":{\"isPowerlessIfWerewolfDies\":false},\"whiteWerewolf\":{\"wakingUpInterval\":2},\"seer\":{\"isTalkative\":false,\"canSeeRoles\":true},\"cupid\":{\"lovers\":{\"doRevealRoleToEachOther\":true},\"mustWinWithLovers\":false},\"littleGirl\":{\"isProtectedByDefender\":false},\"defender\":{\"canProtectTwice\":false},\"elder\":{\"livesCountAgainstWerewolves\":5,\"doesTakeHisRevenge\":true},\"idiot\":{\"doesDieOnElderDeath\":false},\"twoSisters\":{\"wakingUpInterval\":4},\"threeBrothers\":{\"wakingUpInterval\":3},\"fox\":{\"isPowerlessIfMissesWerewolf\":true},\"bearTamer\":{\"doesGrowlOnWerewolvesSide\":false},\"stutteringJudge\":{\"voteRequestsCount\":4},\"wildChild\":{\"isTransformationRevealed\":true},\"wolfHound\":{\"isChosenSideRevealed\":false,\"isSideRandomlyChosen\":true},\"thief\":{\"mustChooseBetweenWerewolves\":true,\"isChosenCardRevealed\":false},\"piedPiper\":{\"charmedPeopleCountPerNight\":5,\"isPowerlessOnWerewolvesSide\":true,\"areCharmedPeopleRevealed\":true},\"scandalmonger\":{\"markPenalty\":4},\"witch\":{\"doesKnowWerewolvesTargets\":false},\"prejudicedManipulator\":{\"isPowerlessOnWerewolvesSide\":false},\"actor\":{\"isPowerlessOnWerewolvesSide\":false}}}}\",\n    \"method\": \"POST\",\n  },\n], but it was called with \"/games\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "87"
          ],
          "coveredBy": [
            "87",
            "88"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 21
            },
            "start": {
              "column": 17,
              "line": 21
            }
          }
        },
        {
          "id": "519",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useFetchGames.ts(18,60): error TS2366: Function lacks ending return statement and return type does not include 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "88"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 26
            },
            "start": {
              "column": 13,
              "line": 24
            }
          }
        },
        {
          "id": "520",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useFetchGames.ts(29,43): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "89",
            "90"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 35
            },
            "start": {
              "column": 91,
              "line": 29
            }
          }
        },
        {
          "id": "521",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useFetchGames.ts(29,43): error TS2366: Function lacks ending return statement and return type does not include 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "89",
            "90"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 32
            },
            "start": {
              "column": 9,
              "line": 30
            }
          }
        },
        {
          "id": "522",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games/game-id\",\n  Object {\n    \"method\": \"GET\",\n  },\n], but it was called with \"\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "89"
          ],
          "coveredBy": [
            "89",
            "90"
          ],
          "location": {
            "end": {
              "column": 72,
              "line": 31
            },
            "start": {
              "column": 54,
              "line": 31
            }
          }
        },
        {
          "id": "523",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games/game-id\",\n  Object {\n    \"method\": \"GET\",\n  },\n], but it was called with \"/games/game-id\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "89"
          ],
          "coveredBy": [
            "89",
            "90"
          ],
          "location": {
            "end": {
              "column": 91,
              "line": 31
            },
            "start": {
              "column": 74,
              "line": 31
            }
          }
        },
        {
          "id": "524",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games/game-id\",\n  Object {\n    \"method\": \"GET\",\n  },\n], but it was called with \"/games/game-id\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "89"
          ],
          "coveredBy": [
            "89",
            "90"
          ],
          "location": {
            "end": {
              "column": 89,
              "line": 31
            },
            "start": {
              "column": 84,
              "line": 31
            }
          }
        },
        {
          "id": "525",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useFetchGames.ts(29,43): error TS2366: Function lacks ending return statement and return type does not include 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "90"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 34
            },
            "start": {
              "column": 13,
              "line": 32
            }
          }
        },
        {
          "id": "526",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useFetchGames.ts(37,46): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "91",
            "92"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 43
            },
            "start": {
              "column": 94,
              "line": 37
            }
          }
        },
        {
          "id": "527",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useFetchGames.ts(37,46): error TS2366: Function lacks ending return statement and return type does not include 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "91",
            "92"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 40
            },
            "start": {
              "column": 9,
              "line": 38
            }
          }
        },
        {
          "id": "528",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games/game-id\",\n  Object {\n    \"method\": \"DELETE\",\n  },\n], but it was called with \"\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "91"
          ],
          "coveredBy": [
            "91",
            "92"
          ],
          "location": {
            "end": {
              "column": 72,
              "line": 39
            },
            "start": {
              "column": 54,
              "line": 39
            }
          }
        },
        {
          "id": "529",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games/game-id\",\n  Object {\n    \"method\": \"DELETE\",\n  },\n], but it was called with \"/games/game-id\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "91"
          ],
          "coveredBy": [
            "91",
            "92"
          ],
          "location": {
            "end": {
              "column": 94,
              "line": 39
            },
            "start": {
              "column": 74,
              "line": 39
            }
          }
        },
        {
          "id": "530",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games/game-id\",\n  Object {\n    \"method\": \"DELETE\",\n  },\n], but it was called with \"/games/game-id\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "91"
          ],
          "coveredBy": [
            "91",
            "92"
          ],
          "location": {
            "end": {
              "column": 92,
              "line": 39
            },
            "start": {
              "column": 84,
              "line": 39
            }
          }
        },
        {
          "id": "531",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useFetchGames.ts(37,46): error TS2366: Function lacks ending return statement and return type does not include 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "92"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 42
            },
            "start": {
              "column": 13,
              "line": 40
            }
          }
        },
        {
          "id": "532",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useFetchGames.ts(45,82): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "93",
            "94"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 54
            },
            "start": {
              "column": 130,
              "line": 45
            }
          }
        },
        {
          "id": "533",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useFetchGames.ts(45,82): error TS2366: Function lacks ending return statement and return type does not include 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "93",
            "94"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 51
            },
            "start": {
              "column": 9,
              "line": 46
            }
          }
        },
        {
          "id": "534",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games/game-id/play\",\n  Object {\n    \"body\": \"{}\",\n    \"method\": \"POST\",\n  },\n], but it was called with \"\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "93"
          ],
          "coveredBy": [
            "93",
            "94"
          ],
          "location": {
            "end": {
              "column": 77,
              "line": 47
            },
            "start": {
              "column": 54,
              "line": 47
            }
          }
        },
        {
          "id": "535",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games/game-id/play\",\n  Object {\n    \"body\": \"{}\",\n    \"method\": \"POST\",\n  },\n], but it was called with \"/games/game-id/play\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "93"
          ],
          "coveredBy": [
            "93",
            "94"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 50
            },
            "start": {
              "column": 79,
              "line": 47
            }
          }
        },
        {
          "id": "536",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games/game-id/play\",\n  Object {\n    \"body\": \"{}\",\n    \"method\": \"POST\",\n  },\n], but it was called with \"/games/game-id/play\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "93"
          ],
          "coveredBy": [
            "93",
            "94"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 48
            },
            "start": {
              "column": 17,
              "line": 48
            }
          }
        },
        {
          "id": "537",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useFetchGames.ts(45,82): error TS2366: Function lacks ending return statement and return type does not include 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "94"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 53
            },
            "start": {
              "column": 13,
              "line": 51
            }
          }
        },
        {
          "id": "538",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useFetchGames.ts(56,100): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "95",
            "96"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 65
            },
            "start": {
              "column": 148,
              "line": 56
            }
          }
        },
        {
          "id": "539",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useFetchGames.ts(56,100): error TS2366: Function lacks ending return statement and return type does not include 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "95",
            "96"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 62
            },
            "start": {
              "column": 9,
              "line": 57
            }
          }
        },
        {
          "id": "540",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games/game-id/feedback\",\n  Object {\n    \"body\": \"{\"score\":3,\"hasEncounteredError\":true}\",\n    \"method\": \"POST\",\n  },\n], but it was called with \"\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "95"
          ],
          "coveredBy": [
            "95",
            "96"
          ],
          "location": {
            "end": {
              "column": 81,
              "line": 58
            },
            "start": {
              "column": 54,
              "line": 58
            }
          }
        },
        {
          "id": "541",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games/game-id/feedback\",\n  Object {\n    \"body\": \"{\"score\":1,\"hasEncounteredError\":false}\",\n    \"method\": \"POST\",\n  },\n], but it was called with \"/games/game-id/feedback\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "95"
          ],
          "coveredBy": [
            "95",
            "96"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 61
            },
            "start": {
              "column": 83,
              "line": 58
            }
          }
        },
        {
          "id": "542",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games/game-id/feedback\",\n  Object {\n    \"body\": \"{\"score\":1,\"hasEncounteredError\":true}\",\n    \"method\": \"POST\",\n  },\n], but it was called with \"/games/game-id/feedback\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "95"
          ],
          "coveredBy": [
            "95",
            "96"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 59
            },
            "start": {
              "column": 17,
              "line": 59
            }
          }
        },
        {
          "id": "543",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useFetchGames.ts(56,100): error TS2366: Function lacks ending return statement and return type does not include 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "96"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 64
            },
            "start": {
              "column": 13,
              "line": 62
            }
          }
        },
        {
          "id": "544",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useFetchGames.ts(66,3): error TS2739: Type '{}' is missing the following properties from type 'UseFetchGames': createGame, getGame, cancelGame, makeGamePlay, createGameFeedback\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "87",
            "88",
            "89",
            "90",
            "91",
            "92",
            "93",
            "94",
            "95",
            "96"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 72
            },
            "start": {
              "column": 10,
              "line": 66
            }
          }
        }
      ],
      "source": "import type { CreateGameFeedbackDto } from \"~/composables/api/game/dto/create-game-feedback/create-game-feedback.dto\";\nimport type { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport type { MakeGamePlayDto } from \"~/composables/api/game/dto/make-game-play/make-game-play.dto\";\nimport type { Game } from \"~/composables/api/game/types/game.class\";\nimport { useWerewolvesAssistantApi } from \"~/composables/api/useWerewolvesAssistantApi\";\n\ntype UseFetchGames = {\n  createGame: (createGameDto: CreateGameDto) => Promise<ReturnType<typeof $fetch<Game>> | null>;\n  getGame: (gameId: string) => Promise<ReturnType<typeof $fetch<Game>> | null>;\n  cancelGame: (gameId: string) => Promise<ReturnType<typeof $fetch<Game>> | null>;\n  makeGamePlay: (gameId: string, makeGamePlayDto: MakeGamePlayDto) => Promise<ReturnType<typeof $fetch<Game>> | null>;\n  createGameFeedback: (gameId: string, createGameFeedbackDto: CreateGameFeedbackDto) => Promise<ReturnType<typeof $fetch<Game>> | null>;\n};\n\nfunction useFetchGames(): UseFetchGames {\n  const { fetchWerewolvesAssistantApi } = useWerewolvesAssistantApi();\n\n  async function createGame(createGameDto: CreateGameDto): Promise<ReturnType<typeof $fetch<Game>> | null> {\n    try {\n      return await fetchWerewolvesAssistantApi<Game>(`/games`, {\n        method: \"POST\",\n        body: JSON.stringify(createGameDto),\n      });\n    } catch {\n      return null;\n    }\n  }\n\n  async function getGame(gameId: string): Promise<ReturnType<typeof $fetch<Game>> | null> {\n    try {\n      return await fetchWerewolvesAssistantApi<Game>(`/games/${gameId}`, { method: \"GET\" });\n    } catch {\n      return null;\n    }\n  }\n\n  async function cancelGame(gameId: string): Promise<ReturnType<typeof $fetch<Game>> | null> {\n    try {\n      return await fetchWerewolvesAssistantApi<Game>(`/games/${gameId}`, { method: \"DELETE\" });\n    } catch {\n      return null;\n    }\n  }\n\n  async function makeGamePlay(gameId: string, makeGamePlayDto: MakeGamePlayDto): Promise<ReturnType<typeof $fetch<Game>> | null> {\n    try {\n      return await fetchWerewolvesAssistantApi<Game>(`/games/${gameId}/play`, {\n        method: \"POST\",\n        body: JSON.stringify(makeGamePlayDto),\n      });\n    } catch {\n      return null;\n    }\n  }\n\n  async function createGameFeedback(gameId: string, createGameFeedbackDto: CreateGameFeedbackDto): Promise<ReturnType<typeof $fetch<Game>> | null> {\n    try {\n      return await fetchWerewolvesAssistantApi<Game>(`/games/${gameId}/feedback`, {\n        method: \"POST\",\n        body: JSON.stringify(createGameFeedbackDto),\n      });\n    } catch {\n      return null;\n    }\n  }\n  return {\n    createGame,\n    getGame,\n    cancelGame,\n    makeGamePlay,\n    createGameFeedback,\n  };\n}\n\nexport { useFetchGames };"
    },
    "app/composables/api/game/useFetchRandomGameComposition.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "545",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useFetchRandomGameComposition.ts(18,43): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "125"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 27
            },
            "start": {
              "column": 73,
              "line": 18
            }
          }
        },
        {
          "id": "546",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useFetchRandomGameComposition.ts(21,84): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "125"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 25
            },
            "start": {
              "column": 149,
              "line": 21
            }
          }
        },
        {
          "id": "547",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games/random-composition?stringifiedQuery\",\n  Object {\n    \"method\": \"GET\",\n  },\n], but it was called with \"\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "125"
          ],
          "coveredBy": [
            "125"
          ],
          "location": {
            "end": {
              "column": 117,
              "line": 24
            },
            "start": {
              "column": 70,
              "line": 24
            }
          }
        },
        {
          "id": "548",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games/random-composition?stringifiedQuery\",\n  Object {\n    \"method\": \"GET\",\n  },\n], but it was called with \"/games/random-composition?stringifiedQuery\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "125"
          ],
          "coveredBy": [
            "125"
          ],
          "location": {
            "end": {
              "column": 136,
              "line": 24
            },
            "start": {
              "column": 119,
              "line": 24
            }
          }
        },
        {
          "id": "549",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games/random-composition?stringifiedQuery\",\n  Object {\n    \"method\": \"GET\",\n  },\n], but it was called with \"/games/random-composition?stringifiedQuery\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "125"
          ],
          "coveredBy": [
            "125"
          ],
          "location": {
            "end": {
              "column": 134,
              "line": 24
            },
            "start": {
              "column": 129,
              "line": 24
            }
          }
        },
        {
          "id": "550",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useFetchRandomGameComposition.ts(26,3): error TS2741: Property 'fetchRandomGameComposition' is missing in type '{}' but required in type 'UseFetchRandomGameComposition'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "125"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 26
            },
            "start": {
              "column": 10,
              "line": 26
            }
          }
        }
      ],
      "source": "import { stringify } from \"qs\";\n\nimport type { CreateGamePlayerDto } from \"~/composables/api/game/dto/create-game/create-game-player/create-game-player.dto\";\nimport type { RoleName } from \"~/composables/api/role/types/role.types\";\nimport { useWerewolvesAssistantApi } from \"~/composables/api/useWerewolvesAssistantApi\";\n\ntype GetRandomGameCompositionQuery = {\n  players: { name: string }[];\n  excludedRoles?: RoleName[];\n};\n\ntype UseFetchRandomGameComposition = {\n  fetchRandomGameComposition: (\n    query: GetRandomGameCompositionQuery,\n  ) => Promise<ReturnType<typeof $fetch<CreateGamePlayerDto[] | null>>>;\n};\n\nfunction useFetchRandomGameComposition(): UseFetchRandomGameComposition {\n  const { fetchWerewolvesAssistantApi } = useWerewolvesAssistantApi();\n\n  async function fetchRandomGameComposition(query: GetRandomGameCompositionQuery): Promise<ReturnType<typeof $fetch<CreateGamePlayerDto[] | null>>> {\n    const stringifiedQuery = stringify(query);\n\n    return fetchWerewolvesAssistantApi<CreateGamePlayerDto[] | null>(`/games/random-composition?${stringifiedQuery}`, { method: \"GET\" });\n  }\n  return { fetchRandomGameComposition };\n}\n\nexport { useFetchRandomGameComposition };"
    },
    "app/composables/api/game/useGamePlayers.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "551",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useGamePlayers.ts(12,43): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "109",
            "110",
            "111",
            "112"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 22
            },
            "start": {
              "column": 58,
              "line": 12
            }
          }
        },
        {
          "id": "552",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected undefined to strictly equal _Player{ …(7) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "109"
          ],
          "coveredBy": [
            "109",
            "110",
            "111",
            "112"
          ],
          "location": {
            "end": {
              "column": 157,
              "line": 13
            },
            "start": {
              "column": 57,
              "line": 13
            }
          }
        },
        {
          "id": "553",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected undefined to strictly equal _Player{ …(7) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "109"
          ],
          "coveredBy": [
            "109",
            "110"
          ],
          "location": {
            "end": {
              "column": 156,
              "line": 13
            },
            "start": {
              "column": 87,
              "line": 13
            }
          }
        },
        {
          "id": "554",
          "mutatorName": "MethodExpression",
          "replacement": "attributes.every(({\n  name\n}) => name === \"sheriff\")",
          "statusReason": "expected _Player{ …(7) } to strictly equal _Player{ …(7) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "109"
          ],
          "coveredBy": [
            "109",
            "110"
          ],
          "location": {
            "end": {
              "column": 156,
              "line": 13
            },
            "start": {
              "column": 107,
              "line": 13
            }
          }
        },
        {
          "id": "555",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected undefined to strictly equal _Player{ …(7) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "109"
          ],
          "coveredBy": [
            "109",
            "110"
          ],
          "location": {
            "end": {
              "column": 155,
              "line": 13
            },
            "start": {
              "column": 123,
              "line": 13
            }
          }
        },
        {
          "id": "556",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected _Player{ …(7) } to be undefined",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "110"
          ],
          "coveredBy": [
            "109",
            "110"
          ],
          "location": {
            "end": {
              "column": 155,
              "line": 13
            },
            "start": {
              "column": 137,
              "line": 13
            }
          }
        },
        {
          "id": "557",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected undefined to strictly equal _Player{ …(7) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "109"
          ],
          "coveredBy": [
            "109",
            "110"
          ],
          "location": {
            "end": {
              "column": 155,
              "line": 13
            },
            "start": {
              "column": 137,
              "line": 13
            }
          }
        },
        {
          "id": "558",
          "mutatorName": "EqualityOperator",
          "replacement": "name !== \"sheriff\"",
          "statusReason": "expected _Player{ …(7) } to strictly equal _Player{ …(7) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "109"
          ],
          "coveredBy": [
            "109",
            "110"
          ],
          "location": {
            "end": {
              "column": 155,
              "line": 13
            },
            "start": {
              "column": 137,
              "line": 13
            }
          }
        },
        {
          "id": "559",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/api/game/useGamePlayers.ts(13,137): error TS2367: This comparison appears to be unintentional because the types '\"charmed\" | \"sheriff\" | \"seen\" | \"eaten\" | \"drank-life-potion\" | \"drank-death-potion\" | \"protected\" | \"scandalmonger-marked\" | \"in-love\" | \"worshiped\" | \"powerless\" | \"cant-vote\" | \"contaminated\" | \"stolen-role\" | \"acting\"' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "109",
            "110"
          ],
          "location": {
            "end": {
              "column": 155,
              "line": 13
            },
            "start": {
              "column": 146,
              "line": 13
            }
          }
        },
        {
          "id": "560",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useGamePlayers.ts(15,55): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "111",
            "112"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 17
            },
            "start": {
              "column": 64,
              "line": 15
            }
          }
        },
        {
          "id": "561",
          "mutatorName": "MethodExpression",
          "replacement": "game.value.players",
          "statusReason": "expected [ _Player{ …(7) }, …(3) ] to strictly equal [ _Player{ …(7) }, _Player{ …(7) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "111"
          ],
          "coveredBy": [
            "111",
            "112"
          ],
          "location": {
            "end": {
              "column": 77,
              "line": 16
            },
            "start": {
              "column": 12,
              "line": 16
            }
          }
        },
        {
          "id": "562",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected [] to strictly equal [ _Player{ …(7) }, _Player{ …(7) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "111"
          ],
          "coveredBy": [
            "111",
            "112"
          ],
          "location": {
            "end": {
              "column": 76,
              "line": 16
            },
            "start": {
              "column": 38,
              "line": 16
            }
          }
        },
        {
          "id": "563",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected [ _Player{ …(7) }, …(3) ] to strictly equal [ _Player{ …(7) }, _Player{ …(7) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "111"
          ],
          "coveredBy": [
            "111",
            "112"
          ],
          "location": {
            "end": {
              "column": 76,
              "line": 16
            },
            "start": {
              "column": 48,
              "line": 16
            }
          }
        },
        {
          "id": "564",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected [] to strictly equal [ _Player{ …(7) }, _Player{ …(7) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "111"
          ],
          "coveredBy": [
            "111",
            "112"
          ],
          "location": {
            "end": {
              "column": 76,
              "line": 16
            },
            "start": {
              "column": 48,
              "line": 16
            }
          }
        },
        {
          "id": "565",
          "mutatorName": "EqualityOperator",
          "replacement": "player.role.current !== role",
          "statusReason": "expected [ _Player{ …(7) }, _Player{ …(7) } ] to strictly equal [ _Player{ …(7) }, _Player{ …(7) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "111"
          ],
          "coveredBy": [
            "111",
            "112"
          ],
          "location": {
            "end": {
              "column": 76,
              "line": 16
            },
            "start": {
              "column": 48,
              "line": 16
            }
          }
        },
        {
          "id": "566",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useGamePlayers.ts(18,3): error TS2739: Type '{}' is missing the following properties from type 'UseGamePlayers': sheriffInPlayers, getPlayersWithCurrentRole\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "109",
            "110",
            "111",
            "112"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 21
            },
            "start": {
              "column": 10,
              "line": 18
            }
          }
        }
      ],
      "source": "import type { ComputedRef, Ref } from \"vue\";\n\nimport type { Game } from \"~/composables/api/game/types/game.class\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\nimport type { RoleName } from \"~/composables/api/role/types/role.types\";\n\ntype UseGamePlayers = {\n  sheriffInPlayers: ComputedRef<Player | undefined>;\n  getPlayersWithCurrentRole: (role: RoleName) => Player[];\n};\n\nfunction useGamePlayers(game: Ref<Game>): UseGamePlayers {\n  const sheriffInPlayers = computed<Player | undefined>(() => game.value.players.find(({ attributes }) => attributes.some(({ name }) => name === \"sheriff\")));\n\n  function getPlayersWithCurrentRole(role: RoleName): Player[] {\n    return game.value.players.filter(player => player.role.current === role);\n  }\n  return {\n    getPlayersWithCurrentRole,\n    sheriffInPlayers,\n  };\n}\n\nexport { useGamePlayers };"
    },
    "app/composables/api/game/useGameSource.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "567",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useGameSource.ts(11,31): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "128",
            "129"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 25
            },
            "start": {
              "column": 49,
              "line": 11
            }
          }
        },
        {
          "id": "568",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useGameSource.ts(15,83): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "128",
            "129"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 23
            },
            "start": {
              "column": 90,
              "line": 15
            }
          }
        },
        {
          "id": "569",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'shared.game.player.attribute.definite…' to be 'shared.game.player.group.definiteName…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "128"
          ],
          "coveredBy": [
            "128",
            "129"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 16
            },
            "start": {
              "column": 9,
              "line": 16
            }
          }
        },
        {
          "id": "570",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected 'shared.role.definiteName.sheriff, 1' to be 'shared.game.player.attribute.definite…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "128"
          ],
          "coveredBy": [
            "128",
            "129"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 16
            },
            "start": {
              "column": 9,
              "line": 16
            }
          }
        },
        {
          "id": "571",
          "mutatorName": "EqualityOperator",
          "replacement": "gameSource !== \"sheriff\"",
          "statusReason": "expected 'shared.role.definiteName.sheriff, 1' to be 'shared.game.player.attribute.definite…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "128"
          ],
          "coveredBy": [
            "128",
            "129"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 16
            },
            "start": {
              "column": 9,
              "line": 16
            }
          }
        },
        {
          "id": "572",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/api/game/useGameSource.ts(16,9): error TS2367: This comparison appears to be unintentional because the types '\"werewolf\" | \"big-bad-wolf\" | \"accursed-wolf-father\" | \"white-werewolf\" | \"villager\" | \"villager-villager\" | \"seer\" | \"cupid\" | \"witch\" | \"hunter\" | \"little-girl\" | \"defender\" | ... 23 more ... | \"lovers\"' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "128",
            "129"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 16
            },
            "start": {
              "column": 24,
              "line": 16
            }
          }
        },
        {
          "id": "573",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected 'shared.role.definiteName.sheriff, 1' to be 'shared.game.player.attribute.definite…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "128"
          ],
          "coveredBy": [
            "128"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 18
            },
            "start": {
              "column": 35,
              "line": 16
            }
          }
        },
        {
          "id": "574",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected ', 1' to be 'shared.game.player.attribute.definite…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "128"
          ],
          "coveredBy": [
            "128"
          ],
          "location": {
            "end": {
              "column": 67,
              "line": 17
            },
            "start": {
              "column": 16,
              "line": 17
            }
          }
        },
        {
          "id": "575",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'shared.game.player.group.definiteName…' to be 'shared.role.definiteName.werewolf, 1' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "129"
          ],
          "coveredBy": [
            "128",
            "129"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 19
            },
            "start": {
              "column": 9,
              "line": 19
            }
          }
        },
        {
          "id": "576",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected 'shared.role.definiteName.werewolves, 1' to be 'shared.game.player.group.definiteName…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "128"
          ],
          "coveredBy": [
            "128",
            "129"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 19
            },
            "start": {
              "column": 9,
              "line": 19
            }
          }
        },
        {
          "id": "577",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected 'shared.role.definiteName.werewolves, 1' to be 'shared.game.player.group.definiteName…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "128"
          ],
          "coveredBy": [
            "128"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 21
            },
            "start": {
              "column": 60,
              "line": 19
            }
          }
        },
        {
          "id": "578",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected ', 1' to be 'shared.game.player.group.definiteName…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "128"
          ],
          "coveredBy": [
            "128"
          ],
          "location": {
            "end": {
              "column": 69,
              "line": 20
            },
            "start": {
              "column": 16,
              "line": 20
            }
          }
        },
        {
          "id": "579",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useGameSource.ts(24,3): error TS2741: Property 'getDefiniteGameSourceNameLabel' is missing in type '{}' but required in type 'UseGameSourceName'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "128",
            "129"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 24
            },
            "start": {
              "column": 10,
              "line": 24
            }
          }
        }
      ],
      "source": "import { PLAYER_GROUPS } from \"~/composables/api/game/constants/player/player.constants\";\nimport type { GameSource } from \"~/composables/api/game/types/game.types\";\nimport type { PlayerGroup } from \"~/composables/api/game/types/players/player.types\";\nimport type { RoleName } from \"~/composables/api/role/types/role.types\";\nimport { useRoleName } from \"~/composables/api/role/useRoleName\";\n\ntype UseGameSourceName = {\n  getDefiniteGameSourceNameLabel: (gameSource: GameSource, count: number) => string;\n};\n\nfunction useGameSourceName(): UseGameSourceName {\n  const { t } = useI18n();\n  const { getDefiniteRoleNameLabel } = useRoleName();\n\n  function getDefiniteGameSourceNameLabel(gameSource: GameSource, count: number): string {\n    if (gameSource === \"sheriff\") {\n      return t(`shared.game.player.attribute.definiteName.sheriff`, count);\n    }\n    if (PLAYER_GROUPS.includes(gameSource as PlayerGroup)) {\n      return t(`shared.game.player.group.definiteName.${gameSource}`, count);\n    }\n    return getDefiniteRoleNameLabel(gameSource as RoleName, count);\n  }\n  return { getDefiniteGameSourceNameLabel };\n}\n\nexport { useGameSourceName };"
    },
    "app/composables/api/game/useMakeGamePlayDtoValidation.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "580",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(15,96): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 63
            },
            "start": {
              "column": 125,
              "line": 15
            }
          }
        },
        {
          "id": "581",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(16,63): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'ComputedGetter<boolean>'.\n      Type 'void' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean, boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean, boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'WritableComputedOptions<boolean, boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 27
            },
            "start": {
              "column": 69,
              "line": 16
            }
          }
        },
        {
          "id": "582",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(20,29): error TS18047: 'game.value.currentPlay' is possibly 'null'.\napp/composables/api/game/useMakeGamePlayDtoValidation.ts(26,12): error TS18048: 'votes' is possibly 'undefined'.\napp/composables/api/game/useMakeGamePlayDtoValidation.ts(26,28): error TS18048: 'voteInteraction' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 93,
              "line": 17
            },
            "start": {
              "column": 9,
              "line": 17
            }
          }
        },
        {
          "id": "583",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(20,29): error TS18047: 'game.value.currentPlay' is possibly 'null'.\napp/composables/api/game/useMakeGamePlayDtoValidation.ts(26,12): error TS18048: 'votes' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 93,
              "line": 17
            },
            "start": {
              "column": 9,
              "line": 17
            }
          }
        },
        {
          "id": "584",
          "mutatorName": "LogicalOperator",
          "replacement": "game.value.currentPlay?.type !== \"vote\" && makeGamePlayDto.value.votes === undefined",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(20,29): error TS18047: 'game.value.currentPlay' is possibly 'null'.\napp/composables/api/game/useMakeGamePlayDtoValidation.ts(26,12): error TS18048: 'votes' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 93,
              "line": 17
            },
            "start": {
              "column": 9,
              "line": 17
            }
          }
        },
        {
          "id": "585",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(20,29): error TS18047: 'game.value.currentPlay' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 17
            },
            "start": {
              "column": 9,
              "line": 17
            }
          }
        },
        {
          "id": "586",
          "mutatorName": "EqualityOperator",
          "replacement": "game.value.currentPlay?.type === \"vote\"",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(20,29): error TS18047: 'game.value.currentPlay' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 17
            },
            "start": {
              "column": 9,
              "line": 17
            }
          }
        },
        {
          "id": "587",
          "mutatorName": "OptionalChaining",
          "replacement": "game.value.currentPlay.type",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(17,9): error TS18047: 'game.value.currentPlay' is possibly 'null'.\napp/composables/api/game/useMakeGamePlayDtoValidation.ts(20,29): error TS18047: 'game.value.currentPlay' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 17
            },
            "start": {
              "column": 9,
              "line": 17
            }
          }
        },
        {
          "id": "588",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(17,9): error TS2367: This comparison appears to be unintentional because the types '\"no-action\" | \"vote\" | \"target\" | \"choose-card\" | \"choose-side\" | \"request-another-vote\" | \"bury-dead-bodies\" | undefined' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 17
            },
            "start": {
              "column": 42,
              "line": 17
            }
          }
        },
        {
          "id": "589",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(26,12): error TS18048: 'votes' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "40",
            "41",
            "42",
            "43",
            "44",
            "60"
          ],
          "location": {
            "end": {
              "column": 93,
              "line": 17
            },
            "start": {
              "column": 52,
              "line": 17
            }
          }
        },
        {
          "id": "590",
          "mutatorName": "EqualityOperator",
          "replacement": "makeGamePlayDto.value.votes !== undefined",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(26,12): error TS18048: 'votes' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "40",
            "41",
            "42",
            "43",
            "44",
            "60"
          ],
          "location": {
            "end": {
              "column": 93,
              "line": 17
            },
            "start": {
              "column": 52,
              "line": 17
            }
          }
        },
        {
          "id": "591",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(18,29): error TS18047: 'game.value.currentPlay' is possibly 'null'.\napp/composables/api/game/useMakeGamePlayDtoValidation.ts(24,12): error TS18048: 'votes' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "39",
            "41",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 19
            },
            "start": {
              "column": 95,
              "line": 17
            }
          }
        },
        {
          "id": "592",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "39"
          ],
          "coveredBy": [
            "39",
            "41",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 18
            },
            "start": {
              "column": 14,
              "line": 18
            }
          }
        },
        {
          "id": "593",
          "mutatorName": "OptionalChaining",
          "replacement": "game.value.currentPlay.source.interactions[0]",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(20,29): error TS18048: 'game.value.currentPlay.source.interactions' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "40",
            "42",
            "43",
            "44",
            "60"
          ],
          "location": {
            "end": {
              "column": 76,
              "line": 20
            },
            "start": {
              "column": 29,
              "line": 20
            }
          }
        },
        {
          "id": "594",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(26,12): error TS18048: 'votes' is possibly 'undefined'.\napp/composables/api/game/useMakeGamePlayDtoValidation.ts(26,28): error TS18048: 'voteInteraction' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "40",
            "42",
            "43",
            "44",
            "60"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 21
            },
            "start": {
              "column": 9,
              "line": 21
            }
          }
        },
        {
          "id": "595",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(26,28): error TS18048: 'voteInteraction' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "40",
            "42",
            "43",
            "44",
            "60"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 21
            },
            "start": {
              "column": 9,
              "line": 21
            }
          }
        },
        {
          "id": "596",
          "mutatorName": "EqualityOperator",
          "replacement": "voteInteraction !== undefined",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(26,28): error TS18048: 'voteInteraction' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "40",
            "42",
            "43",
            "44",
            "60"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 21
            },
            "start": {
              "column": 9,
              "line": 21
            }
          }
        },
        {
          "id": "597",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(24,28): error TS18048: 'voteInteraction' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "40"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 23
            },
            "start": {
              "column": 40,
              "line": 21
            }
          }
        },
        {
          "id": "598",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "40"
          ],
          "coveredBy": [
            "40"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 22
            },
            "start": {
              "column": 14,
              "line": 22
            }
          }
        },
        {
          "id": "599",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "42"
          ],
          "coveredBy": [
            "42",
            "43",
            "44",
            "60"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 26
            },
            "start": {
              "column": 12,
              "line": 26
            }
          }
        },
        {
          "id": "600",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "43"
          ],
          "coveredBy": [
            "42",
            "43",
            "44",
            "60"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 26
            },
            "start": {
              "column": 12,
              "line": 26
            }
          }
        },
        {
          "id": "601",
          "mutatorName": "EqualityOperator",
          "replacement": "votes.length > voteInteraction.boundaries.min",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "43"
          ],
          "coveredBy": [
            "42",
            "43",
            "44",
            "60"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 26
            },
            "start": {
              "column": 12,
              "line": 26
            }
          }
        },
        {
          "id": "602",
          "mutatorName": "EqualityOperator",
          "replacement": "votes.length < voteInteraction.boundaries.min",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "42"
          ],
          "coveredBy": [
            "42",
            "43",
            "44",
            "60"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 26
            },
            "start": {
              "column": 12,
              "line": 26
            }
          }
        },
        {
          "id": "603",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(29,65): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'ComputedGetter<boolean>'.\n      Type 'void' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean, boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean, boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'WritableComputedOptions<boolean, boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 41
            },
            "start": {
              "column": 71,
              "line": 29
            }
          }
        },
        {
          "id": "604",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(34,31): error TS18047: 'game.value.currentPlay' is possibly 'null'.\napp/composables/api/game/useMakeGamePlayDtoValidation.ts(40,12): error TS18048: 'targets' is possibly 'undefined'.\napp/composables/api/game/useMakeGamePlayDtoValidation.ts(40,30): error TS18048: 'targetInteraction' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 97,
              "line": 30
            },
            "start": {
              "column": 9,
              "line": 30
            }
          }
        },
        {
          "id": "605",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(34,31): error TS18047: 'game.value.currentPlay' is possibly 'null'.\napp/composables/api/game/useMakeGamePlayDtoValidation.ts(40,12): error TS18048: 'targets' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 97,
              "line": 30
            },
            "start": {
              "column": 9,
              "line": 30
            }
          }
        },
        {
          "id": "606",
          "mutatorName": "LogicalOperator",
          "replacement": "game.value.currentPlay?.type !== \"target\" && makeGamePlayDto.value.targets === undefined",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(34,31): error TS18047: 'game.value.currentPlay' is possibly 'null'.\napp/composables/api/game/useMakeGamePlayDtoValidation.ts(40,12): error TS18048: 'targets' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 97,
              "line": 30
            },
            "start": {
              "column": 9,
              "line": 30
            }
          }
        },
        {
          "id": "607",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(34,31): error TS18047: 'game.value.currentPlay' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 30
            },
            "start": {
              "column": 9,
              "line": 30
            }
          }
        },
        {
          "id": "608",
          "mutatorName": "EqualityOperator",
          "replacement": "game.value.currentPlay?.type === \"target\"",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(34,31): error TS18047: 'game.value.currentPlay' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 30
            },
            "start": {
              "column": 9,
              "line": 30
            }
          }
        },
        {
          "id": "609",
          "mutatorName": "OptionalChaining",
          "replacement": "game.value.currentPlay.type",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(30,9): error TS18047: 'game.value.currentPlay' is possibly 'null'.\napp/composables/api/game/useMakeGamePlayDtoValidation.ts(34,31): error TS18047: 'game.value.currentPlay' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 30
            },
            "start": {
              "column": 9,
              "line": 30
            }
          }
        },
        {
          "id": "610",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(30,9): error TS2367: This comparison appears to be unintentional because the types '\"vote\" | \"no-action\" | \"target\" | \"choose-card\" | \"choose-side\" | \"request-another-vote\" | \"bury-dead-bodies\" | undefined' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 30
            },
            "start": {
              "column": 42,
              "line": 30
            }
          }
        },
        {
          "id": "611",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(40,12): error TS18048: 'targets' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "46",
            "47",
            "48",
            "49",
            "50",
            "60"
          ],
          "location": {
            "end": {
              "column": 97,
              "line": 30
            },
            "start": {
              "column": 54,
              "line": 30
            }
          }
        },
        {
          "id": "612",
          "mutatorName": "EqualityOperator",
          "replacement": "makeGamePlayDto.value.targets !== undefined",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(40,12): error TS18048: 'targets' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "46",
            "47",
            "48",
            "49",
            "50",
            "60"
          ],
          "location": {
            "end": {
              "column": 97,
              "line": 30
            },
            "start": {
              "column": 54,
              "line": 30
            }
          }
        },
        {
          "id": "613",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(32,31): error TS18047: 'game.value.currentPlay' is possibly 'null'.\napp/composables/api/game/useMakeGamePlayDtoValidation.ts(38,12): error TS18048: 'targets' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "45",
            "47",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 32
            },
            "start": {
              "column": 99,
              "line": 30
            }
          }
        },
        {
          "id": "614",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "45"
          ],
          "coveredBy": [
            "45",
            "47",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 31
            },
            "start": {
              "column": 14,
              "line": 31
            }
          }
        },
        {
          "id": "615",
          "mutatorName": "OptionalChaining",
          "replacement": "game.value.currentPlay.source.interactions[0]",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(34,31): error TS18048: 'game.value.currentPlay.source.interactions' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "46",
            "48",
            "49",
            "50",
            "60"
          ],
          "location": {
            "end": {
              "column": 78,
              "line": 34
            },
            "start": {
              "column": 31,
              "line": 34
            }
          }
        },
        {
          "id": "616",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(40,12): error TS18048: 'targets' is possibly 'undefined'.\napp/composables/api/game/useMakeGamePlayDtoValidation.ts(40,30): error TS18048: 'targetInteraction' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "46",
            "48",
            "49",
            "50",
            "60"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 35
            },
            "start": {
              "column": 9,
              "line": 35
            }
          }
        },
        {
          "id": "617",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(40,30): error TS18048: 'targetInteraction' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "46",
            "48",
            "49",
            "50",
            "60"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 35
            },
            "start": {
              "column": 9,
              "line": 35
            }
          }
        },
        {
          "id": "618",
          "mutatorName": "EqualityOperator",
          "replacement": "targetInteraction !== undefined",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(40,30): error TS18048: 'targetInteraction' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "46",
            "48",
            "49",
            "50",
            "60"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 35
            },
            "start": {
              "column": 9,
              "line": 35
            }
          }
        },
        {
          "id": "619",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(38,30): error TS18048: 'targetInteraction' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "46"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 37
            },
            "start": {
              "column": 42,
              "line": 35
            }
          }
        },
        {
          "id": "620",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "46"
          ],
          "coveredBy": [
            "46"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 36
            },
            "start": {
              "column": 14,
              "line": 36
            }
          }
        },
        {
          "id": "621",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "48"
          ],
          "coveredBy": [
            "48",
            "49",
            "50",
            "60"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 40
            },
            "start": {
              "column": 12,
              "line": 40
            }
          }
        },
        {
          "id": "622",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "49"
          ],
          "coveredBy": [
            "48",
            "49",
            "50",
            "60"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 40
            },
            "start": {
              "column": 12,
              "line": 40
            }
          }
        },
        {
          "id": "623",
          "mutatorName": "EqualityOperator",
          "replacement": "targets.length > targetInteraction.boundaries.min",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "49"
          ],
          "coveredBy": [
            "48",
            "49",
            "50",
            "60"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 40
            },
            "start": {
              "column": 12,
              "line": 40
            }
          }
        },
        {
          "id": "624",
          "mutatorName": "EqualityOperator",
          "replacement": "targets.length < targetInteraction.boundaries.min",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "48"
          ],
          "coveredBy": [
            "48",
            "49",
            "50",
            "60"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 40
            },
            "start": {
              "column": 12,
              "line": 40
            }
          }
        },
        {
          "id": "625",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(43,51): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Type 'undefined' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean, boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean, boolean>', gave the following error.\n    Argument of type '() => undefined' is not assignable to parameter of type 'WritableComputedOptions<boolean, boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 173,
              "line": 43
            },
            "start": {
              "column": 69,
              "line": 43
            }
          }
        },
        {
          "id": "626",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "51"
          ],
          "coveredBy": [
            "51",
            "52",
            "53",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 173,
              "line": 43
            },
            "start": {
              "column": 75,
              "line": 43
            }
          }
        },
        {
          "id": "627",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "53"
          ],
          "coveredBy": [
            "51",
            "52",
            "53",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 173,
              "line": 43
            },
            "start": {
              "column": 75,
              "line": 43
            }
          }
        },
        {
          "id": "628",
          "mutatorName": "LogicalOperator",
          "replacement": "game.value.currentPlay?.type === \"choose-card\" || makeGamePlayDto.value.chosenCardId !== undefined",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "51"
          ],
          "coveredBy": [
            "51",
            "52",
            "53",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 173,
              "line": 43
            },
            "start": {
              "column": 75,
              "line": 43
            }
          }
        },
        {
          "id": "629",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "51"
          ],
          "coveredBy": [
            "51",
            "52",
            "53",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 121,
              "line": 43
            },
            "start": {
              "column": 75,
              "line": 43
            }
          }
        },
        {
          "id": "630",
          "mutatorName": "EqualityOperator",
          "replacement": "game.value.currentPlay?.type !== \"choose-card\"",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "51"
          ],
          "coveredBy": [
            "51",
            "52",
            "53",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 121,
              "line": 43
            },
            "start": {
              "column": 75,
              "line": 43
            }
          }
        },
        {
          "id": "631",
          "mutatorName": "OptionalChaining",
          "replacement": "game.value.currentPlay.type",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(43,75): error TS18047: 'game.value.currentPlay' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "51",
            "52",
            "53",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 103,
              "line": 43
            },
            "start": {
              "column": 75,
              "line": 43
            }
          }
        },
        {
          "id": "632",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(43,75): error TS2367: This comparison appears to be unintentional because the types '\"vote\" | \"no-action\" | \"target\" | \"choose-card\" | \"choose-side\" | \"request-another-vote\" | \"bury-dead-bodies\" | undefined' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "51",
            "52",
            "53",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 121,
              "line": 43
            },
            "start": {
              "column": 108,
              "line": 43
            }
          }
        },
        {
          "id": "633",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "52"
          ],
          "coveredBy": [
            "52",
            "53",
            "60"
          ],
          "location": {
            "end": {
              "column": 173,
              "line": 43
            },
            "start": {
              "column": 125,
              "line": 43
            }
          }
        },
        {
          "id": "634",
          "mutatorName": "EqualityOperator",
          "replacement": "makeGamePlayDto.value.chosenCardId === undefined",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "52"
          ],
          "coveredBy": [
            "52",
            "53",
            "60"
          ],
          "location": {
            "end": {
              "column": 173,
              "line": 43
            },
            "start": {
              "column": 125,
              "line": 43
            }
          }
        },
        {
          "id": "635",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(45,51): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Type 'undefined' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean, boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean, boolean>', gave the following error.\n    Argument of type '() => undefined' is not assignable to parameter of type 'WritableComputedOptions<boolean, boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 171,
              "line": 45
            },
            "start": {
              "column": 69,
              "line": 45
            }
          }
        },
        {
          "id": "636",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "54"
          ],
          "coveredBy": [
            "54",
            "55",
            "56",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 171,
              "line": 45
            },
            "start": {
              "column": 75,
              "line": 45
            }
          }
        },
        {
          "id": "637",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "56"
          ],
          "coveredBy": [
            "54",
            "55",
            "56",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 171,
              "line": 45
            },
            "start": {
              "column": 75,
              "line": 45
            }
          }
        },
        {
          "id": "638",
          "mutatorName": "LogicalOperator",
          "replacement": "game.value.currentPlay?.type === \"choose-side\" || makeGamePlayDto.value.chosenSide !== undefined",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "54"
          ],
          "coveredBy": [
            "54",
            "55",
            "56",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 171,
              "line": 45
            },
            "start": {
              "column": 75,
              "line": 45
            }
          }
        },
        {
          "id": "639",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "54"
          ],
          "coveredBy": [
            "54",
            "55",
            "56",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 121,
              "line": 45
            },
            "start": {
              "column": 75,
              "line": 45
            }
          }
        },
        {
          "id": "640",
          "mutatorName": "EqualityOperator",
          "replacement": "game.value.currentPlay?.type !== \"choose-side\"",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "54"
          ],
          "coveredBy": [
            "54",
            "55",
            "56",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 121,
              "line": 45
            },
            "start": {
              "column": 75,
              "line": 45
            }
          }
        },
        {
          "id": "641",
          "mutatorName": "OptionalChaining",
          "replacement": "game.value.currentPlay.type",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(45,75): error TS18047: 'game.value.currentPlay' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "54",
            "55",
            "56",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 103,
              "line": 45
            },
            "start": {
              "column": 75,
              "line": 45
            }
          }
        },
        {
          "id": "642",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(45,75): error TS2367: This comparison appears to be unintentional because the types '\"vote\" | \"no-action\" | \"target\" | \"choose-card\" | \"choose-side\" | \"request-another-vote\" | \"bury-dead-bodies\" | undefined' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "54",
            "55",
            "56",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 121,
              "line": 45
            },
            "start": {
              "column": 108,
              "line": 45
            }
          }
        },
        {
          "id": "643",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "55"
          ],
          "coveredBy": [
            "55",
            "56",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 171,
              "line": 45
            },
            "start": {
              "column": 125,
              "line": 45
            }
          }
        },
        {
          "id": "644",
          "mutatorName": "EqualityOperator",
          "replacement": "makeGamePlayDto.value.chosenSide === undefined",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "55"
          ],
          "coveredBy": [
            "55",
            "56",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 171,
              "line": 45
            },
            "start": {
              "column": 125,
              "line": 45
            }
          }
        },
        {
          "id": "645",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(47,35): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Type 'undefined' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean, boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean, boolean>', gave the following error.\n    Argument of type '() => undefined' is not assignable to parameter of type 'WritableComputedOptions<boolean, boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 104,
              "line": 47
            },
            "start": {
              "column": 53,
              "line": 47
            }
          }
        },
        {
          "id": "646",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be falsy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "57"
          ],
          "coveredBy": [
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 104,
              "line": 47
            },
            "start": {
              "column": 59,
              "line": 47
            }
          }
        },
        {
          "id": "647",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "58"
          ],
          "coveredBy": [
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 104,
              "line": 47
            },
            "start": {
              "column": 59,
              "line": 47
            }
          }
        },
        {
          "id": "648",
          "mutatorName": "EqualityOperator",
          "replacement": "game.value.currentPlay?.canBeSkipped !== true",
          "statusReason": "expected true to be falsy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "57"
          ],
          "coveredBy": [
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 104,
              "line": 47
            },
            "start": {
              "column": 59,
              "line": 47
            }
          }
        },
        {
          "id": "649",
          "mutatorName": "OptionalChaining",
          "replacement": "game.value.currentPlay.canBeSkipped",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(47,59): error TS18047: 'game.value.currentPlay' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 95,
              "line": 47
            },
            "start": {
              "column": 59,
              "line": 47
            }
          }
        },
        {
          "id": "650",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "expected true to be falsy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "57"
          ],
          "coveredBy": [
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 104,
              "line": 47
            },
            "start": {
              "column": 100,
              "line": 47
            }
          }
        },
        {
          "id": "651",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(49,27): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Type 'undefined' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean, boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean, boolean>', gave the following error.\n    Argument of type '() => undefined' is not assignable to parameter of type 'WritableComputedOptions<boolean, boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 53
            },
            "start": {
              "column": 45,
              "line": 49
            }
          }
        },
        {
          "id": "652",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "61"
          ],
          "coveredBy": [
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 53
            },
            "start": {
              "column": 51,
              "line": 49
            }
          }
        },
        {
          "id": "653",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "59"
          ],
          "coveredBy": [
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 53
            },
            "start": {
              "column": 51,
              "line": 49
            }
          }
        },
        {
          "id": "654",
          "mutatorName": "LogicalOperator",
          "replacement": "(canCurrentPlayBeSkipped.value || isCurrentGamePlayVoteTypeAndValid.value || isCurrentGamePlayTargetTypeAndValid.value || isCurrentGamePlayChooseCardTypeAndValid.value) && isCurrentGamePlayChooseSideTypeAndValid.value",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "59"
          ],
          "coveredBy": [
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 53
            },
            "start": {
              "column": 51,
              "line": 49
            }
          }
        },
        {
          "id": "655",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "59"
          ],
          "coveredBy": [
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 52
            },
            "start": {
              "column": 51,
              "line": 49
            }
          }
        },
        {
          "id": "656",
          "mutatorName": "LogicalOperator",
          "replacement": "(canCurrentPlayBeSkipped.value || isCurrentGamePlayVoteTypeAndValid.value || isCurrentGamePlayTargetTypeAndValid.value) && isCurrentGamePlayChooseCardTypeAndValid.value",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "59"
          ],
          "coveredBy": [
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 52
            },
            "start": {
              "column": 51,
              "line": 49
            }
          }
        },
        {
          "id": "657",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "59"
          ],
          "coveredBy": [
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 46,
              "line": 51
            },
            "start": {
              "column": 51,
              "line": 49
            }
          }
        },
        {
          "id": "658",
          "mutatorName": "LogicalOperator",
          "replacement": "(canCurrentPlayBeSkipped.value || isCurrentGamePlayVoteTypeAndValid.value) && isCurrentGamePlayTargetTypeAndValid.value",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "59"
          ],
          "coveredBy": [
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 46,
              "line": 51
            },
            "start": {
              "column": 51,
              "line": 49
            }
          }
        },
        {
          "id": "659",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "59"
          ],
          "coveredBy": [
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 50
            },
            "start": {
              "column": 51,
              "line": 49
            }
          }
        },
        {
          "id": "660",
          "mutatorName": "LogicalOperator",
          "replacement": "canCurrentPlayBeSkipped.value && isCurrentGamePlayVoteTypeAndValid.value",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "59"
          ],
          "coveredBy": [
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 50
            },
            "start": {
              "column": 51,
              "line": 49
            }
          }
        },
        {
          "id": "661",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/game/useMakeGamePlayDtoValidation.ts(55,3): error TS2740: Type '{}' is missing the following properties from type 'UseMakeGamePlayDtoValidation': isCurrentGamePlayVoteTypeAndValid, isCurrentGamePlayTargetTypeAndValid, isCurrentGamePlayChooseCardTypeAndValid, isCurrentGamePlayChooseSideTypeAndValid, and 2 more.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 62
            },
            "start": {
              "column": 10,
              "line": 55
            }
          }
        }
      ],
      "source": "import type { ComputedRef, Ref } from \"vue\";\n\nimport type { MakeGamePlayDto } from \"~/composables/api/game/dto/make-game-play/make-game-play.dto\";\nimport type { Game } from \"~/composables/api/game/types/game.class\";\n\ntype UseMakeGamePlayDtoValidation = {\n  isCurrentGamePlayVoteTypeAndValid: ComputedRef<boolean>;\n  isCurrentGamePlayTargetTypeAndValid: ComputedRef<boolean>;\n  isCurrentGamePlayChooseCardTypeAndValid: ComputedRef<boolean>;\n  isCurrentGamePlayChooseSideTypeAndValid: ComputedRef<boolean>;\n  canCurrentPlayBeSkipped: ComputedRef<boolean>;\n  canMakeGamePlay: ComputedRef<boolean>;\n};\n\nfunction useMakeGamePlayDtoValidation(makeGamePlayDto: Ref<MakeGamePlayDto>, game: Ref<Game>): UseMakeGamePlayDtoValidation {\n  const isCurrentGamePlayVoteTypeAndValid = computed<boolean>(() => {\n    if (game.value.currentPlay?.type !== \"vote\" || makeGamePlayDto.value.votes === undefined) {\n      return false;\n    }\n    const voteInteraction = game.value.currentPlay.source.interactions?.[0];\n    if (voteInteraction === undefined) {\n      return false;\n    }\n    const { votes } = makeGamePlayDto.value;\n\n    return votes.length >= voteInteraction.boundaries.min;\n  });\n\n  const isCurrentGamePlayTargetTypeAndValid = computed<boolean>(() => {\n    if (game.value.currentPlay?.type !== \"target\" || makeGamePlayDto.value.targets === undefined) {\n      return false;\n    }\n\n    const targetInteraction = game.value.currentPlay.source.interactions?.[0];\n    if (targetInteraction === undefined) {\n      return false;\n    }\n    const { targets } = makeGamePlayDto.value;\n\n    return targets.length >= targetInteraction.boundaries.min;\n  });\n\n  const isCurrentGamePlayChooseCardTypeAndValid = computed<boolean>(() => game.value.currentPlay?.type === \"choose-card\" && makeGamePlayDto.value.chosenCardId !== undefined);\n\n  const isCurrentGamePlayChooseSideTypeAndValid = computed<boolean>(() => game.value.currentPlay?.type === \"choose-side\" && makeGamePlayDto.value.chosenSide !== undefined);\n\n  const canCurrentPlayBeSkipped = computed<boolean>(() => game.value.currentPlay?.canBeSkipped === true);\n\n  const canMakeGamePlay = computed<boolean>(() => canCurrentPlayBeSkipped.value ||\n    isCurrentGamePlayVoteTypeAndValid.value ||\n    isCurrentGamePlayTargetTypeAndValid.value ||\n    isCurrentGamePlayChooseCardTypeAndValid.value ||\n    isCurrentGamePlayChooseSideTypeAndValid.value);\n\n  return {\n    isCurrentGamePlayVoteTypeAndValid,\n    isCurrentGamePlayTargetTypeAndValid,\n    isCurrentGamePlayChooseCardTypeAndValid,\n    isCurrentGamePlayChooseSideTypeAndValid,\n    canCurrentPlayBeSkipped,\n    canMakeGamePlay,\n  };\n}\n\nexport { useMakeGamePlayDtoValidation };"
    },
    "app/composables/api/role/types/role.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "662",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/role/types/role.class.ts(32,37): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "159"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 34
            },
            "start": {
              "column": 42,
              "line": 32
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport type { GameAdditionalCardRecipientRoleName } from \"~/composables/api/game/types/game-additional-card/game-additional-card.types\";\nimport type { RoleName, RoleOrigin, RoleSide, RoleType } from \"~/composables/api/role/types/role.types\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass Role {\n  @Expose()\n  public name: RoleName;\n\n  @Expose()\n  public side: RoleSide;\n\n  @Expose()\n  public type: RoleType;\n\n  @Expose()\n  public origin: RoleOrigin;\n\n  @Expose()\n  public additionalCardsEligibleRecipients?: GameAdditionalCardRecipientRoleName[];\n\n  @Expose()\n  public minInGame?: number;\n\n  @Expose()\n  public maxInGame: number;\n\n  @Expose()\n  public recommendedMinPlayers?: number;\n\n  public static create(role: Role): Role {\n    return plainToInstance(Role, role, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { Role };"
    },
    "app/composables/api/role/useFetchRoles.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "663",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/role/useFetchRoles.ts(8,27): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "134",
            "135"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 19
            },
            "start": {
              "column": 41,
              "line": 8
            }
          }
        },
        {
          "id": "664",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/role/useFetchRoles.ts(11,32): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "134",
            "135"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 17
            },
            "start": {
              "column": 82,
              "line": 11
            }
          }
        },
        {
          "id": "665",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/role/useFetchRoles.ts(11,32): error TS2366: Function lacks ending return statement and return type does not include 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "134",
            "135"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 14
            },
            "start": {
              "column": 9,
              "line": 12
            }
          }
        },
        {
          "id": "666",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/roles\",\n  Object {\n    \"method\": \"GET\",\n  },\n], but it was called with \"\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "134"
          ],
          "coveredBy": [
            "134",
            "135"
          ],
          "location": {
            "end": {
              "column": 64,
              "line": 13
            },
            "start": {
              "column": 56,
              "line": 13
            }
          }
        },
        {
          "id": "667",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/roles\",\n  Object {\n    \"method\": \"GET\",\n  },\n], but it was called with \"/roles\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "134"
          ],
          "coveredBy": [
            "134",
            "135"
          ],
          "location": {
            "end": {
              "column": 83,
              "line": 13
            },
            "start": {
              "column": 66,
              "line": 13
            }
          }
        },
        {
          "id": "668",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/roles\",\n  Object {\n    \"method\": \"GET\",\n  },\n], but it was called with \"/roles\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "134"
          ],
          "coveredBy": [
            "134",
            "135"
          ],
          "location": {
            "end": {
              "column": 81,
              "line": 13
            },
            "start": {
              "column": 76,
              "line": 13
            }
          }
        },
        {
          "id": "669",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/role/useFetchRoles.ts(11,32): error TS2366: Function lacks ending return statement and return type does not include 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "135"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 16
            },
            "start": {
              "column": 13,
              "line": 14
            }
          }
        },
        {
          "id": "670",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/role/useFetchRoles.ts(18,3): error TS2741: Property 'fetchRoles' is missing in type '{}' but required in type 'UseFetchRoles'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "134",
            "135"
          ],
          "location": {
            "end": {
              "column": 24,
              "line": 18
            },
            "start": {
              "column": 10,
              "line": 18
            }
          }
        }
      ],
      "source": "import type { Role } from \"~/composables/api/role/types/role.class\";\nimport { useWerewolvesAssistantApi } from \"~/composables/api/useWerewolvesAssistantApi\";\n\ntype UseFetchRoles = {\n  fetchRoles: () => Promise<ReturnType<typeof $fetch<Role[]>> | null>;\n};\n\nfunction useFetchRoles(): UseFetchRoles {\n  const { fetchWerewolvesAssistantApi } = useWerewolvesAssistantApi();\n\n  async function fetchRoles(): Promise<ReturnType<typeof $fetch<Role[]>> | null> {\n    try {\n      return await fetchWerewolvesAssistantApi<Role[]>(`/roles`, { method: \"GET\" });\n    } catch {\n      return null;\n    }\n  }\n  return { fetchRoles };\n}\n\nexport { useFetchRoles };"
    },
    "app/composables/api/role/useRoleName.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "671",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/role/useRoleName.ts(8,25): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "128",
            "129",
            "146",
            "147"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 22
            },
            "start": {
              "column": 37,
              "line": 8
            }
          }
        },
        {
          "id": "672",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/role/useRoleName.ts(11,50): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "146"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 13
            },
            "start": {
              "column": 57,
              "line": 11
            }
          }
        },
        {
          "id": "673",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"shared.role.name.werewolf\",\n], but it was called with \"\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "146"
          ],
          "coveredBy": [
            "146"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 12
            },
            "start": {
              "column": 14,
              "line": 12
            }
          }
        },
        {
          "id": "674",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/role/useRoleName.ts(15,73): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "129",
            "147"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 17
            },
            "start": {
              "column": 80,
              "line": 15
            }
          }
        },
        {
          "id": "675",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected ', 1' to be 'shared.role.definiteName.werewolf, 1' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "129"
          ],
          "coveredBy": [
            "129",
            "147"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 16
            },
            "start": {
              "column": 14,
              "line": 16
            }
          }
        },
        {
          "id": "676",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/role/useRoleName.ts(18,3): error TS2739: Type '{}' is missing the following properties from type 'UseRoleName': getRoleNameLabel, getDefiniteRoleNameLabel\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "128",
            "129",
            "146",
            "147"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 21
            },
            "start": {
              "column": 10,
              "line": 18
            }
          }
        }
      ],
      "source": "import type { RoleName } from \"~/composables/api/role/types/role.types\";\n\ntype UseRoleName = {\n  getRoleNameLabel: (roleName: RoleName) => string;\n  getDefiniteRoleNameLabel: (roleName: RoleName, count: number) => string;\n};\n\nfunction useRoleName(): UseRoleName {\n  const { t } = useI18n();\n\n  function getRoleNameLabel(roleName: RoleName): string {\n    return t(`shared.role.name.${roleName}`);\n  }\n\n  function getDefiniteRoleNameLabel(roleName: RoleName, count: number): string {\n    return t(`shared.role.definiteName.${roleName}`, count);\n  }\n  return {\n    getRoleNameLabel,\n    getDefiniteRoleNameLabel,\n  };\n}\n\nexport { useRoleName };"
    },
    "app/composables/api/useWerewolvesAssistantApi.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "677",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/api/useWerewolvesAssistantApi.ts(10,39): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "175"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 22
            },
            "start": {
              "column": 65,
              "line": 10
            }
          }
        },
        {
          "id": "678",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"baseURL\": \"http://127.0.0.1\",\n    \"headers\": Object {\n      \"Content-Type\": \"application/json\",\n    },\n    \"onResponseError\": Any<Function>,\n  },\n], but it was called with Object {}",
          "status": "Killed",
          "testsCompleted": 58,
          "static": false,
          "killedBy": [
            "175"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "175"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 19
            },
            "start": {
              "column": 60,
              "line": 15
            }
          }
        },
        {
          "id": "679",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"baseURL\": \"http://127.0.0.1\",\n    \"headers\": Object {\n      \"Content-Type\": \"application/json\",\n    },\n    \"onResponseError\": Any<Function>,\n  },\n], but it was called with Object {\n  \"baseURL\": \"http://127.0.0.1\",\n  \"headers\": Object {},\n  \"onResponseError\": [Function handleWerewolvesAssistantApiError],\n}",
          "status": "Killed",
          "testsCompleted": 58,
          "static": false,
          "killedBy": [
            "175"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "175"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 17
            },
            "start": {
              "column": 14,
              "line": 17
            }
          }
        },
        {
          "id": "680",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"baseURL\": \"http://127.0.0.1\",\n    \"headers\": Object {\n      \"Content-Type\": \"application/json\",\n    },\n    \"onResponseError\": Any<Function>,\n  },\n], but it was called with Object {\n  \"baseURL\": \"http://127.0.0.1\",\n  \"headers\": Object {\n    \"Content-Type\": \"\",\n  },\n  \"onResponseError\": [Function handleWerewolvesAssistantApiError],\n}",
          "status": "Killed",
          "testsCompleted": 58,
          "static": false,
          "killedBy": [
            "175"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "175"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 17
            },
            "start": {
              "column": 32,
              "line": 17
            }
          }
        },
        {
          "id": "681",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/api/useWerewolvesAssistantApi.ts(21,3): error TS2741: Property 'fetchWerewolvesAssistantApi' is missing in type '{}' but required in type 'UseWerewolvesAssistantApi'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "175"
          ],
          "location": {
            "end": {
              "column": 41,
              "line": 21
            },
            "start": {
              "column": 10,
              "line": 21
            }
          }
        }
      ],
      "source": "import { createFetch } from \"ofetch\";\n\nimport { useWerewolvesAssistantApiError } from \"~/composables/api/error/useWerewolvesAssistantApiError\";\nimport { removeTrailingSlashes } from \"~/utils/url.utils\";\n\ntype UseWerewolvesAssistantApi = {\n  fetchWerewolvesAssistantApi: ReturnType<typeof createFetch>;\n};\n\nfunction useWerewolvesAssistantApi(): UseWerewolvesAssistantApi {\n  const config = useRuntimeConfig();\n  const { baseUrl } = config.public.werewolvesAssistantApi;\n  const { handleWerewolvesAssistantApiError } = useWerewolvesAssistantApiError();\n\n  const fetchWerewolvesAssistantApi = createFetch().create({\n    baseURL: removeTrailingSlashes(baseUrl),\n    headers: { \"Content-Type\": \"application/json\" },\n    onResponseError: handleWerewolvesAssistantApiError,\n  });\n\n  return { fetchWerewolvesAssistantApi };\n}\n\nexport { useWerewolvesAssistantApi };"
    },
    "app/composables/misc/useArrays.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "682",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/misc/useArrays.ts(5,23): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "177",
            "178"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 10
            },
            "start": {
              "column": 33,
              "line": 5
            }
          }
        },
        {
          "id": "683",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/misc/useArrays.ts(6,60): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "177",
            "178"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 8
            },
            "start": {
              "column": 64,
              "line": 6
            }
          }
        },
        {
          "id": "684",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "expected [] to strictly equal [ 'value' ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "178"
          ],
          "coveredBy": [
            "178"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 7
            },
            "start": {
              "column": 29,
              "line": 7
            }
          }
        },
        {
          "id": "685",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "app/composables/misc/useArrays.ts(7,5): error TS2322: Type 'string[] | T[]' is not assignable to type 'T[]'.\n  Type 'string[]' is not assignable to type 'T[]'.\n    Type 'string' is not assignable to type 'T'.\n      'T' could be instantiated with an arbitrary type which could be unrelated to 'string'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "177"
          ],
          "location": {
            "end": {
              "column": 41,
              "line": 7
            },
            "start": {
              "column": 39,
              "line": 7
            }
          }
        },
        {
          "id": "686",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/misc/useArrays.ts(9,3): error TS2741: Property 'insertIf' is missing in type '{}' but required in type 'UseArrays'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "177",
            "178"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 9
            },
            "start": {
              "column": 10,
              "line": 9
            }
          }
        }
      ],
      "source": "type UseArrays = {\n  insertIf: <T>(mustBeInserted: boolean, value: T) => T[];\n};\n\nfunction useArrays(): UseArrays {\n  function insertIf<T>(mustBeInserted: boolean, value: T): T[] {\n    return mustBeInserted ? [value] : [];\n  }\n  return { insertIf };\n}\n\nexport { useArrays };"
    },
    "app/composables/misc/useDevice.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "687",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/misc/useDevice.ts(7,23): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "130",
            "131",
            "132",
            "133"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 18
            },
            "start": {
              "column": 33,
              "line": 7
            }
          }
        },
        {
          "id": "688",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/misc/useDevice.ts(8,45): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'ComputedGetter<boolean>'.\n      Type 'void' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean, boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean, boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'WritableComputedOptions<boolean, boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "130",
            "131",
            "132",
            "133"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 13
            },
            "start": {
              "column": 51,
              "line": 8
            }
          }
        },
        {
          "id": "689",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "130"
          ],
          "coveredBy": [
            "130",
            "131",
            "132",
            "133"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 9
            },
            "start": {
              "column": 9,
              "line": 9
            }
          }
        },
        {
          "id": "690",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Cannot use 'in' operator to search for 'ontouchstart' in undefined",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "133"
          ],
          "coveredBy": [
            "130",
            "131",
            "132",
            "133"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 9
            },
            "start": {
              "column": 9,
              "line": 9
            }
          }
        },
        {
          "id": "691",
          "mutatorName": "EqualityOperator",
          "replacement": "typeof window !== \"undefined\"",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "130"
          ],
          "coveredBy": [
            "130",
            "131",
            "132",
            "133"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 9
            },
            "start": {
              "column": 9,
              "line": 9
            }
          }
        },
        {
          "id": "692",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/misc/useDevice.ts(9,9): error TS2367: This comparison appears to be unintentional because the types '\"string\" | \"number\" | \"bigint\" | \"boolean\" | \"symbol\" | \"undefined\" | \"object\" | \"function\"' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "130",
            "131",
            "132",
            "133"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 9
            },
            "start": {
              "column": 27,
              "line": 9
            }
          }
        },
        {
          "id": "693",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Cannot use 'in' operator to search for 'ontouchstart' in undefined",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "133"
          ],
          "coveredBy": [
            "133"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 11
            },
            "start": {
              "column": 40,
              "line": 9
            }
          }
        },
        {
          "id": "694",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "expected true to be falsy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "133"
          ],
          "coveredBy": [
            "133"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 10
            },
            "start": {
              "column": 14,
              "line": 10
            }
          }
        },
        {
          "id": "695",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be falsy",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "132"
          ],
          "coveredBy": [
            "130",
            "131",
            "132"
          ],
          "location": {
            "end": {
              "column": 68,
              "line": 12
            },
            "start": {
              "column": 12,
              "line": 12
            }
          }
        },
        {
          "id": "696",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "130"
          ],
          "coveredBy": [
            "130",
            "131",
            "132"
          ],
          "location": {
            "end": {
              "column": 68,
              "line": 12
            },
            "start": {
              "column": 12,
              "line": 12
            }
          }
        },
        {
          "id": "697",
          "mutatorName": "LogicalOperator",
          "replacement": "\"ontouchstart\" in window && navigator.maxTouchPoints > 0",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "130"
          ],
          "coveredBy": [
            "130",
            "131",
            "132"
          ],
          "location": {
            "end": {
              "column": 68,
              "line": 12
            },
            "start": {
              "column": 12,
              "line": 12
            }
          }
        },
        {
          "id": "698",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "130"
          ],
          "coveredBy": [
            "130",
            "131",
            "132"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 12
            },
            "start": {
              "column": 12,
              "line": 12
            }
          }
        },
        {
          "id": "699",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "131"
          ],
          "coveredBy": [
            "131",
            "132"
          ],
          "location": {
            "end": {
              "column": 68,
              "line": 12
            },
            "start": {
              "column": 40,
              "line": 12
            }
          }
        },
        {
          "id": "700",
          "mutatorName": "EqualityOperator",
          "replacement": "navigator.maxTouchPoints >= 0",
          "statusReason": "expected true to be falsy",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "132"
          ],
          "coveredBy": [
            "131",
            "132"
          ],
          "location": {
            "end": {
              "column": 68,
              "line": 12
            },
            "start": {
              "column": 40,
              "line": 12
            }
          }
        },
        {
          "id": "701",
          "mutatorName": "EqualityOperator",
          "replacement": "navigator.maxTouchPoints <= 0",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "131"
          ],
          "coveredBy": [
            "131",
            "132"
          ],
          "location": {
            "end": {
              "column": 68,
              "line": 12
            },
            "start": {
              "column": 40,
              "line": 12
            }
          }
        },
        {
          "id": "702",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/misc/useDevice.ts(15,3): error TS2741: Property 'isOnTouchDevice' is missing in type '{}' but required in type 'UseDevice'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "130",
            "131",
            "132",
            "133"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 17
            },
            "start": {
              "column": 10,
              "line": 15
            }
          }
        }
      ],
      "source": "import type { ComputedRef } from \"vue\";\n\ntype UseDevice = {\n  isOnTouchDevice: ComputedRef<boolean>;\n};\n\nfunction useDevice(): UseDevice {\n  const isOnTouchDevice = computed<boolean>(() => {\n    if (typeof window === \"undefined\") {\n      return false;\n    }\n    return \"ontouchstart\" in window || navigator.maxTouchPoints > 0;\n  });\n\n  return {\n    isOnTouchDevice,\n  };\n}\n\nexport {\n  useDevice,\n};"
    },
    "app/composables/misc/useStrings.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "703",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/misc/useStrings.ts(6,24): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "171",
            "172",
            "173"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 18
            },
            "start": {
              "column": 35,
              "line": 6
            }
          }
        },
        {
          "id": "704",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/misc/useStrings.ts(7,63): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82",
            "171",
            "172"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 9
            },
            "start": {
              "column": 76,
              "line": 7
            }
          }
        },
        {
          "id": "705",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/misc/useStrings.ts(8,5): error TS2322: Type '\"no\" | \"\"' is not assignable to type '\"yes\" | \"no\"'.\n  Type '\"\"' is not assignable to type '\"yes\" | \"no\"'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82",
            "171"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 8
            },
            "start": {
              "column": 20,
              "line": 8
            }
          }
        },
        {
          "id": "706",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/misc/useStrings.ts(8,5): error TS2322: Type '\"yes\" | \"\"' is not assignable to type '\"yes\" | \"no\"'.\n  Type '\"\"' is not assignable to type '\"yes\" | \"no\"'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82",
            "172"
          ],
          "location": {
            "end": {
              "column": 32,
              "line": 8
            },
            "start": {
              "column": 28,
              "line": 8
            }
          }
        },
        {
          "id": "707",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/misc/useStrings.ts(11,49): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "173"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 13
            },
            "start": {
              "column": 56,
              "line": 11
            }
          }
        },
        {
          "id": "708",
          "mutatorName": "ArithmeticOperator",
          "replacement": "value.charAt(0).toLowerCase() - value.slice(1)",
          "statusReason": "app/composables/misc/useStrings.ts(12,5): error TS2322: Type 'number' is not assignable to type 'string'.\napp/composables/misc/useStrings.ts(12,12): error TS2362: The left-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.\napp/composables/misc/useStrings.ts(12,44): error TS2363: The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "173"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 12
            },
            "start": {
              "column": 12,
              "line": 12
            }
          }
        },
        {
          "id": "709",
          "mutatorName": "MethodExpression",
          "replacement": "value.charAt(0).toUpperCase()",
          "statusReason": "expected 'Test' to be 'test' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "173"
          ],
          "coveredBy": [
            "173"
          ],
          "location": {
            "end": {
              "column": 41,
              "line": 12
            },
            "start": {
              "column": 12,
              "line": 12
            }
          }
        },
        {
          "id": "710",
          "mutatorName": "MethodExpression",
          "replacement": "value",
          "statusReason": "expected 'testest' to be 'test' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "173"
          ],
          "coveredBy": [
            "173"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 12
            },
            "start": {
              "column": 12,
              "line": 12
            }
          }
        },
        {
          "id": "711",
          "mutatorName": "MethodExpression",
          "replacement": "value",
          "statusReason": "expected 'tTest' to be 'test' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "173"
          ],
          "coveredBy": [
            "173"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 12
            },
            "start": {
              "column": 44,
              "line": 12
            }
          }
        },
        {
          "id": "712",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/misc/useStrings.ts(14,3): error TS2739: Type '{}' is missing the following properties from type 'UseStrings': convertBooleanAsAffirmativeString, lowerCaseFirstLetter\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "171",
            "172",
            "173"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 17
            },
            "start": {
              "column": 10,
              "line": 14
            }
          }
        }
      ],
      "source": "type UseStrings = {\n  convertBooleanAsAffirmativeString: (value: boolean) => string;\n  lowerCaseFirstLetter: (value: string) => string;\n};\n\nfunction useStrings(): UseStrings {\n  function convertBooleanAsAffirmativeString(value: boolean): \"yes\" | \"no\" {\n    return value ? \"yes\" : \"no\";\n  }\n\n  function lowerCaseFirstLetter(value: string): string {\n    return value.charAt(0).toLowerCase() + value.slice(1);\n  }\n  return {\n    convertBooleanAsAffirmativeString,\n    lowerCaseFirstLetter,\n  };\n}\n\nexport { useStrings };"
    },
    "app/composables/misc/useTimers.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "713",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/misc/useTimers.ts(5,23): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "163",
            "164",
            "165"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 24
            },
            "start": {
              "column": 33,
              "line": 5
            }
          }
        },
        {
          "id": "714",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/misc/useTimers.ts(9,55): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82",
            "163",
            "164",
            "165"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 22
            },
            "start": {
              "column": 62,
              "line": 9
            }
          }
        },
        {
          "id": "715",
          "mutatorName": "ArithmeticOperator",
          "replacement": "seconds * secondsInOneMinute",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82",
            "163",
            "164",
            "165"
          ],
          "location": {
            "end": {
              "column": 60,
              "line": 10
            },
            "start": {
              "column": 32,
              "line": 10
            }
          }
        },
        {
          "id": "716",
          "mutatorName": "ArithmeticOperator",
          "replacement": "seconds * secondsInOneMinute",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82",
            "163",
            "164",
            "165"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 11
            },
            "start": {
              "column": 30,
              "line": 11
            }
          }
        },
        {
          "id": "717",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82",
            "163",
            "164",
            "165"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 12
            },
            "start": {
              "column": 28,
              "line": 12
            }
          }
        },
        {
          "id": "718",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82",
            "163",
            "164",
            "165"
          ],
          "location": {
            "end": {
              "column": 68,
              "line": 12
            },
            "start": {
              "column": 50,
              "line": 12
            }
          }
        },
        {
          "id": "719",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected ', {\"count\":30}, 30' to be 'shared.time.second, {\"count\":30}, 30' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "164"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82",
            "163",
            "164",
            "165"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 13
            },
            "start": {
              "column": 28,
              "line": 13
            }
          }
        },
        {
          "id": "720",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected 'shared.time.second, {}, 30' to be 'shared.time.second, {\"count\":30}, 30' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "164"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82",
            "163",
            "164",
            "165"
          ],
          "location": {
            "end": {
              "column": 77,
              "line": 13
            },
            "start": {
              "column": 50,
              "line": 13
            }
          }
        },
        {
          "id": "721",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'shared.time.second, {\"count\":0}, 0' to be 'shared.time.minute, {\"count\":1}, 1' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "163"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82",
            "163",
            "164",
            "165"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 15
            },
            "start": {
              "column": 9,
              "line": 15
            }
          }
        },
        {
          "id": "722",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected 'shared.time.minute, {\"count\":0}, 0 sh…' to be 'shared.time.second, {\"count\":30}, 30' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "164"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82",
            "163",
            "164",
            "165"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 15
            },
            "start": {
              "column": 9,
              "line": 15
            }
          }
        },
        {
          "id": "723",
          "mutatorName": "EqualityOperator",
          "replacement": "minutes !== 0",
          "statusReason": "expected 'shared.time.second, {\"count\":0}, 0' to be 'shared.time.minute, {\"count\":1}, 1' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "163"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82",
            "163",
            "164",
            "165"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 15
            },
            "start": {
              "column": 9,
              "line": 15
            }
          }
        },
        {
          "id": "724",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected 'shared.time.minute, {\"count\":0}, 0 sh…' to be 'shared.time.second, {\"count\":30}, 30' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "164"
          ],
          "coveredBy": [
            "164"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 17
            },
            "start": {
              "column": 24,
              "line": 15
            }
          }
        },
        {
          "id": "725",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'shared.time.minute, {\"count\":1}, 1' to be 'shared.time.minute, {\"count\":1}, 1 sh…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "165"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82",
            "163",
            "165"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 18
            },
            "start": {
              "column": 9,
              "line": 18
            }
          }
        },
        {
          "id": "726",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected 'shared.time.minute, {\"count\":1}, 1 sh…' to be 'shared.time.minute, {\"count\":1}, 1' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "163"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82",
            "163",
            "165"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 18
            },
            "start": {
              "column": 9,
              "line": 18
            }
          }
        },
        {
          "id": "727",
          "mutatorName": "EqualityOperator",
          "replacement": "remainingSeconds !== 0",
          "statusReason": "expected 'shared.time.minute, {\"count\":1}, 1 sh…' to be 'shared.time.minute, {\"count\":1}, 1' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "163"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82",
            "163",
            "165"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 18
            },
            "start": {
              "column": 9,
              "line": 18
            }
          }
        },
        {
          "id": "728",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected 'shared.time.minute, {\"count\":1}, 1 sh…' to be 'shared.time.minute, {\"count\":1}, 1' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "163"
          ],
          "coveredBy": [
            "77",
            "79",
            "80",
            "81",
            "82",
            "163"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 20
            },
            "start": {
              "column": 33,
              "line": 18
            }
          }
        },
        {
          "id": "729",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected '' to be 'shared.time.minute, {\"count\":1}, 1 sh…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "165"
          ],
          "coveredBy": [
            "165"
          ],
          "location": {
            "end": {
              "column": 64,
              "line": 21
            },
            "start": {
              "column": 12,
              "line": 21
            }
          }
        },
        {
          "id": "730",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected 'shared.time.minute, {\"count\":1}, 1  s…' to be 'shared.time.minute, {\"count\":1}, 1 sh…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "165"
          ],
          "coveredBy": [
            "165"
          ],
          "location": {
            "end": {
              "column": 45,
              "line": 21
            },
            "start": {
              "column": 33,
              "line": 21
            }
          }
        },
        {
          "id": "731",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/misc/useTimers.ts(23,3): error TS2741: Property 'getSecondsInMinutesLabel' is missing in type '{}' but required in type 'UseTimers'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "163",
            "164",
            "165"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 23
            },
            "start": {
              "column": 10,
              "line": 23
            }
          }
        }
      ],
      "source": "type UseTimers = {\n  getSecondsInMinutesLabel: (seconds: number) => string;\n};\n\nfunction useTimers(): UseTimers {\n  const secondsInOneMinute = 60;\n  const { t } = useI18n();\n\n  function getSecondsInMinutesLabel(seconds: number): string {\n    const minutes = Math.floor(seconds / secondsInOneMinute);\n    const remainingSeconds = seconds % secondsInOneMinute;\n    const minutesLabel = t(\"shared.time.minute\", { count: minutes }, minutes);\n    const secondsLabel = t(\"shared.time.second\", { count: remainingSeconds }, remainingSeconds);\n\n    if (minutes === 0) {\n      return secondsLabel;\n    }\n    if (remainingSeconds === 0) {\n      return minutesLabel;\n    }\n    return `${minutesLabel} ${t(\"shared.and\")} ${secondsLabel}`;\n  }\n  return { getSecondsInMinutesLabel };\n}\n\nexport { useTimers };"
    },
    "app/composables/prime-vue/usePrimeVueToasts.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "732",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/prime-vue/usePrimeVueToasts.ts(14,31): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "104",
            "105",
            "106",
            "107",
            "108",
            "175"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 46
            },
            "start": {
              "column": 49,
              "line": 14
            }
          }
        },
        {
          "id": "733",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "104"
          ],
          "coveredBy": [
            "104",
            "105",
            "106",
            "107",
            "108"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 22
            },
            "start": {
              "column": 57,
              "line": 17
            }
          }
        },
        {
          "id": "734",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"closable\": true,\n    \"detail\": \"detail\",\n    \"life\": 4000,\n    \"summary\": \"summary\",\n  },\n], but it was called with Object {}",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "104"
          ],
          "coveredBy": [
            "104",
            "105",
            "106",
            "107",
            "108"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 21
            },
            "start": {
              "column": 15,
              "line": 18
            }
          }
        },
        {
          "id": "735",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "105"
          ],
          "coveredBy": [
            "105"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 26
            },
            "start": {
              "column": 64,
              "line": 24
            }
          }
        },
        {
          "id": "736",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"closable\": true,\n    \"detail\": \"detail\",\n    \"life\": 4000,\n    \"severity\": \"success\",\n    \"summary\": \"summary\",\n  },\n], but it was called with Object {\n  \"closable\": true,\n  \"life\": 4000,\n}",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "105"
          ],
          "coveredBy": [
            "105"
          ],
          "location": {
            "end": {
              "column": 49,
              "line": 25
            },
            "start": {
              "column": 14,
              "line": 25
            }
          }
        },
        {
          "id": "737",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/prime-vue/usePrimeVueToasts.ts(25,16): error TS2322: Type '\"\"' is not assignable to type '\"success\" | \"info\" | \"warn\" | \"error\" | \"secondary\" | \"contrast\" | undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "105"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 25
            },
            "start": {
              "column": 26,
              "line": 25
            }
          }
        },
        {
          "id": "738",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "106"
          ],
          "coveredBy": [
            "106"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 30
            },
            "start": {
              "column": 61,
              "line": 28
            }
          }
        },
        {
          "id": "739",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"closable\": true,\n    \"detail\": \"detail\",\n    \"life\": 4000,\n    \"severity\": \"info\",\n    \"summary\": \"summary\",\n  },\n], but it was called with Object {\n  \"closable\": true,\n  \"life\": 4000,\n}",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "106"
          ],
          "coveredBy": [
            "106"
          ],
          "location": {
            "end": {
              "column": 46,
              "line": 29
            },
            "start": {
              "column": 14,
              "line": 29
            }
          }
        },
        {
          "id": "740",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/prime-vue/usePrimeVueToasts.ts(29,16): error TS2322: Type '\"\"' is not assignable to type '\"success\" | \"info\" | \"warn\" | \"error\" | \"secondary\" | \"contrast\" | undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "106"
          ],
          "location": {
            "end": {
              "column": 32,
              "line": 29
            },
            "start": {
              "column": 26,
              "line": 29
            }
          }
        },
        {
          "id": "741",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "107"
          ],
          "coveredBy": [
            "107"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 34
            },
            "start": {
              "column": 61,
              "line": 32
            }
          }
        },
        {
          "id": "742",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"closable\": true,\n    \"detail\": \"detail\",\n    \"life\": 4000,\n    \"severity\": \"warn\",\n    \"summary\": \"summary\",\n  },\n], but it was called with Object {\n  \"closable\": true,\n  \"life\": 4000,\n}",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "107"
          ],
          "coveredBy": [
            "107"
          ],
          "location": {
            "end": {
              "column": 46,
              "line": 33
            },
            "start": {
              "column": 14,
              "line": 33
            }
          }
        },
        {
          "id": "743",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/prime-vue/usePrimeVueToasts.ts(33,16): error TS2322: Type '\"\"' is not assignable to type '\"success\" | \"info\" | \"warn\" | \"error\" | \"secondary\" | \"contrast\" | undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "107"
          ],
          "location": {
            "end": {
              "column": 32,
              "line": 33
            },
            "start": {
              "column": 26,
              "line": 33
            }
          }
        },
        {
          "id": "744",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "108"
          ],
          "coveredBy": [
            "108"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 38
            },
            "start": {
              "column": 62,
              "line": 36
            }
          }
        },
        {
          "id": "745",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"closable\": true,\n    \"detail\": \"detail\",\n    \"life\": 4000,\n    \"severity\": \"error\",\n    \"summary\": \"summary\",\n  },\n], but it was called with Object {\n  \"closable\": true,\n  \"life\": 4000,\n}",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "108"
          ],
          "coveredBy": [
            "108"
          ],
          "location": {
            "end": {
              "column": 47,
              "line": 37
            },
            "start": {
              "column": 14,
              "line": 37
            }
          }
        },
        {
          "id": "746",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/prime-vue/usePrimeVueToasts.ts(37,16): error TS2322: Type '\"\"' is not assignable to type '\"success\" | \"info\" | \"warn\" | \"error\" | \"secondary\" | \"contrast\" | undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "108"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 37
            },
            "start": {
              "column": 26,
              "line": 37
            }
          }
        },
        {
          "id": "747",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/prime-vue/usePrimeVueToasts.ts(39,3): error TS2739: Type '{}' is missing the following properties from type 'UsePrimeVueToasts': addToast, addSuccessToast, addInfoToast, addWarnToast, addErrorToast\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "104",
            "105",
            "106",
            "107",
            "108",
            "175"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 45
            },
            "start": {
              "column": 10,
              "line": 39
            }
          }
        }
      ],
      "source": "import type { ToastMessageOptions } from \"primevue/toast\";\nimport { useToast } from \"primevue/usetoast\";\n\nimport { DEFAULT_PRIME_VUE_TOAST_OPTIONS } from \"~/composables/prime-vue/constants/prime-vue.constants\";\n\ntype UsePrimeVueToasts = {\n  addToast: (options: ToastMessageOptions) => void;\n  addSuccessToast: (options: ToastMessageOptions) => void;\n  addInfoToast: (options: ToastMessageOptions) => void;\n  addWarnToast: (options: ToastMessageOptions) => void;\n  addErrorToast: (options: ToastMessageOptions) => void;\n};\n\nfunction usePrimeVueToasts(): UsePrimeVueToasts {\n  const toast = useToast();\n\n  function addToast(options: ToastMessageOptions): void {\n    toast.add({\n      ...DEFAULT_PRIME_VUE_TOAST_OPTIONS,\n      ...options,\n    });\n  }\n\n  function addSuccessToast(options: ToastMessageOptions): void {\n    addToast({ severity: \"success\", ...options });\n  }\n\n  function addInfoToast(options: ToastMessageOptions): void {\n    addToast({ severity: \"info\", ...options });\n  }\n\n  function addWarnToast(options: ToastMessageOptions): void {\n    addToast({ severity: \"warn\", ...options });\n  }\n\n  function addErrorToast(options: ToastMessageOptions): void {\n    addToast({ severity: \"error\", ...options });\n  }\n  return {\n    addToast,\n    addSuccessToast,\n    addInfoToast,\n    addWarnToast,\n    addErrorToast,\n  };\n}\n\nexport { usePrimeVueToasts };"
    },
    "app/composables/route/useWerewolvesAssistantRoutes.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "748",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/route/useWerewolvesAssistantRoutes.ts(7,42): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "148",
            "149"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 12
            },
            "start": {
              "column": 71,
              "line": 7
            }
          }
        },
        {
          "id": "749",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "app/composables/route/useWerewolvesAssistantRoutes.ts(9,24): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Type 'undefined' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean, boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean, boolean>', gave the following error.\n    Argument of type '() => undefined' is not assignable to parameter of type 'WritableComputedOptions<boolean, boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "148",
            "149"
          ],
          "location": {
            "end": {
              "column": 72,
              "line": 9
            },
            "start": {
              "column": 42,
              "line": 9
            }
          }
        },
        {
          "id": "750",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be falsy",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "149"
          ],
          "coveredBy": [
            "148",
            "149"
          ],
          "location": {
            "end": {
              "column": 72,
              "line": 9
            },
            "start": {
              "column": 48,
              "line": 9
            }
          }
        },
        {
          "id": "751",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "148"
          ],
          "coveredBy": [
            "148",
            "149"
          ],
          "location": {
            "end": {
              "column": 72,
              "line": 9
            },
            "start": {
              "column": 48,
              "line": 9
            }
          }
        },
        {
          "id": "752",
          "mutatorName": "EqualityOperator",
          "replacement": "route.name !== \"game-id\"",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "148"
          ],
          "coveredBy": [
            "148",
            "149"
          ],
          "location": {
            "end": {
              "column": 72,
              "line": 9
            },
            "start": {
              "column": 48,
              "line": 9
            }
          }
        },
        {
          "id": "753",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "148"
          ],
          "coveredBy": [
            "148",
            "149"
          ],
          "location": {
            "end": {
              "column": 72,
              "line": 9
            },
            "start": {
              "column": 63,
              "line": 9
            }
          }
        },
        {
          "id": "754",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/route/useWerewolvesAssistantRoutes.ts(11,3): error TS2741: Property 'isOnGamePage' is missing in type '{}' but required in type 'UseWerewolvesAssistantRoutes'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "148",
            "149"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 11
            },
            "start": {
              "column": 10,
              "line": 11
            }
          }
        }
      ],
      "source": "import type { ComputedRef } from \"vue\";\n\ntype UseWerewolvesAssistantRoutes = {\n  isOnGamePage: ComputedRef<boolean>;\n};\n\nfunction useWerewolvesAssistantRoutes(): UseWerewolvesAssistantRoutes {\n  const route = useRoute();\n  const isOnGamePage = computed<boolean>(() => route.name === \"game-id\");\n\n  return { isOnGamePage };\n}\n\nexport { useWerewolvesAssistantRoutes };"
    },
    "app/composables/style/useAnimateCss.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "755",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/style/useAnimateCss.ts(28,27): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "113",
            "114",
            "115",
            "116",
            "117",
            "118"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 52
            },
            "start": {
              "column": 41,
              "line": 28
            }
          }
        },
        {
          "id": "756",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected true to be falsy",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "117"
          ],
          "coveredBy": [
            "115",
            "116",
            "117",
            "118"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 34
            },
            "start": {
              "column": 108,
              "line": 29
            }
          }
        },
        {
          "id": "757",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected true to be falsy",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "117"
          ],
          "coveredBy": [
            "115",
            "116",
            "117",
            "118"
          ],
          "location": {
            "end": {
              "column": 49,
              "line": 32
            },
            "start": {
              "column": 30,
              "line": 32
            }
          }
        },
        {
          "id": "758",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected true to be falsy",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "117"
          ],
          "coveredBy": [
            "115",
            "116",
            "117",
            "118"
          ],
          "location": {
            "end": {
              "column": 74,
              "line": 32
            },
            "start": {
              "column": 51,
              "line": 32
            }
          }
        },
        {
          "id": "759",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "115"
          ],
          "coveredBy": [
            "113",
            "114",
            "115",
            "116",
            "117",
            "118"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 47
            },
            "start": {
              "column": 127,
              "line": 36
            }
          }
        },
        {
          "id": "760",
          "mutatorName": "BooleanLiteral",
          "replacement": "HtmlElement",
          "statusReason": "app/composables/style/useAnimateCss.ts(42,5): error TS18047: 'HtmlElement' is possibly 'null'.\napp/composables/style/useAnimateCss.ts(45,7): error TS18047: 'HtmlElement' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "113",
            "114",
            "115",
            "116",
            "117",
            "118"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 38
            },
            "start": {
              "column": 9,
              "line": 38
            }
          }
        },
        {
          "id": "761",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "app/composables/style/useAnimateCss.ts(42,5): error TS18047: 'HtmlElement' is possibly 'null'.\napp/composables/style/useAnimateCss.ts(45,7): error TS18047: 'HtmlElement' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "113",
            "114",
            "115",
            "116",
            "117",
            "118"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 38
            },
            "start": {
              "column": 9,
              "line": 38
            }
          }
        },
        {
          "id": "762",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "app/composables/style/useAnimateCss.ts(42,5): error TS18047: 'HtmlElement' is possibly 'null'.\napp/composables/style/useAnimateCss.ts(45,7): error TS18047: 'HtmlElement' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "113",
            "114",
            "115",
            "116",
            "117",
            "118"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 38
            },
            "start": {
              "column": 9,
              "line": 38
            }
          }
        },
        {
          "id": "763",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/style/useAnimateCss.ts(40,5): error TS18047: 'HtmlElement' is possibly 'null'.\napp/composables/style/useAnimateCss.ts(43,7): error TS18047: 'HtmlElement' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "113",
            "114"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 40
            },
            "start": {
              "column": 23,
              "line": 38
            }
          }
        },
        {
          "id": "764",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "115"
          ],
          "coveredBy": [
            "115",
            "116",
            "117",
            "118"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 41
            },
            "start": {
              "column": 27,
              "line": 41
            }
          }
        },
        {
          "id": "765",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "115"
          ],
          "coveredBy": [
            "115",
            "116",
            "117",
            "118"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 42
            },
            "start": {
              "column": 31,
              "line": 42
            }
          }
        },
        {
          "id": "766",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected true to be falsy",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "117"
          ],
          "coveredBy": [
            "115",
            "116",
            "117",
            "118"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 46
            },
            "start": {
              "column": 35,
              "line": 44
            }
          }
        },
        {
          "id": "767",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected true to be falsy",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "117"
          ],
          "coveredBy": [
            "115",
            "116",
            "117",
            "118"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 45
            },
            "start": {
              "column": 36,
              "line": 45
            }
          }
        },
        {
          "id": "768",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected true to be falsy",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "117"
          ],
          "coveredBy": [
            "115",
            "116",
            "117",
            "118"
          ],
          "location": {
            "end": {
              "column": 115,
              "line": 45
            },
            "start": {
              "column": 52,
              "line": 45
            }
          }
        },
        {
          "id": "769",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"animationend\",\n  Any<Function>,\n  Object {\n    \"once\": true,\n  },\n], but it was called with \"animationend\"",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "118"
          ],
          "coveredBy": [
            "115",
            "116",
            "117",
            "118"
          ],
          "location": {
            "end": {
              "column": 131,
              "line": 45
            },
            "start": {
              "column": 117,
              "line": 45
            }
          }
        },
        {
          "id": "770",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"animationend\",\n  Any<Function>,\n  Object {\n    \"once\": true,\n  },\n], but it was called with \"animationend\"",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "118"
          ],
          "coveredBy": [
            "115",
            "116",
            "117",
            "118"
          ],
          "location": {
            "end": {
              "column": 129,
              "line": 45
            },
            "start": {
              "column": 125,
              "line": 45
            }
          }
        },
        {
          "id": "771",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/style/useAnimateCss.ts(48,3): error TS2739: Type '{}' is missing the following properties from type 'UseAnimateCss': handleAnimationEnd, animateElementOnce\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "113",
            "114",
            "115",
            "116",
            "117",
            "118"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 51
            },
            "start": {
              "column": 10,
              "line": 48
            }
          }
        }
      ],
      "source": "import type { MaybeRef } from \"vue\";\n\ntype AnimateCssAnimationName =\n  | \"bounce\"\n  | \"fadeIn\"\n  | \"flash\"\n  | \"flip\"\n  | \"headShake\"\n  | \"heartBeat\"\n  | \"hinge\"\n  | \"jackInTheBox\"\n  | \"jello\"\n  | \"pulse\"\n  | \"rollIn\"\n  | \"rollOut\"\n  | \"rubberBand\"\n  | \"shakeX\"\n  | \"shakeY\"\n  | \"swing\"\n  | \"tada\"\n  | \"wobble\";\n\ntype UseAnimateCss = {\n  handleAnimationEnd: (event: Event, animation: AnimateCssAnimationName, resolve: () => void) => void;\n  animateElementOnce: (element: MaybeRef<HTMLElement | null>, animation: AnimateCssAnimationName) => Promise<void>;\n};\n\nfunction useAnimateCss(): UseAnimateCss {\n  function handleAnimationEnd(event: Event, animation: AnimateCssAnimationName, resolve: () => void): void {\n    event.stopPropagation();\n    const element = event.target as HTMLElement;\n    element.classList.remove(\"animate__animated\", `animate__${animation}`);\n    resolve();\n  }\n\n  async function animateElementOnce(element: MaybeRef<HTMLElement | null>, animation: AnimateCssAnimationName): Promise<void> {\n    const HtmlElement = isRef(element) ? element.value : element;\n    if (!HtmlElement) {\n      return Promise.resolve();\n    }\n    const animationName = `animate__${animation}`;\n    HtmlElement.classList.add(`animate__animated`, animationName);\n\n    return new Promise(resolve => {\n      HtmlElement.addEventListener(\"animationend\", (event: Event) => handleAnimationEnd(event, animation, resolve), { once: true });\n    });\n  }\n  return {\n    handleAnimationEnd,\n    animateElementOnce,\n  };\n}\n\nexport { useAnimateCss };"
    },
    "app/composables/style/useAppBreakpoints.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "772",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/style/useAppBreakpoints.ts(10,31): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "191"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 17
            },
            "start": {
              "column": 49,
              "line": 10
            }
          }
        },
        {
          "id": "773",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/style/useAppBreakpoints.ts(14,3): error TS2741: Property 'isSmallerThanMdBreakpoint' is missing in type '{}' but required in type 'UseAppBreakpoints'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "191"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 16
            },
            "start": {
              "column": 10,
              "line": 14
            }
          }
        }
      ],
      "source": "import type { Ref } from \"vue\";\nimport { breakpointsTailwind, useBreakpoints as useVueUseBreakpoints } from \"@vueuse/core\";\n\nimport { BreakpointTypes } from \"~/utils/enums/breakpoint.enums\";\n\ntype UseAppBreakpoints = {\n  isSmallerThanMdBreakpoint: Ref<boolean>;\n};\n\nfunction useAppBreakpoints(): UseAppBreakpoints {\n  const breakpoints = useVueUseBreakpoints(breakpointsTailwind);\n  const isSmallerThanMdBreakpoint = breakpoints.smaller(BreakpointTypes.MD);\n\n  return {\n    isSmallerThanMdBreakpoint,\n  };\n}\n\nexport { useAppBreakpoints };"
    }
  },
  "schemaVersion": "1.0",
  "thresholds": {
    "high": 100,
    "low": 100,
    "break": 100
  },
  "testFiles": {
    "tests/unit/specs/composables/api/game/useCreateGameDtoValidation.spec.ts": {
      "tests": [
        {
          "id": "0",
          "name": "Use Create Game Dto Validation Composable isMinimumPlayersReached 'should return false when the number o…'"
        },
        {
          "id": "1",
          "name": "Use Create Game Dto Validation Composable isMinimumPlayersReached 'should return true when the number of…'"
        },
        {
          "id": "2",
          "name": "Use Create Game Dto Validation Composable areAllRolesSet 'should return true when all roles amo…'"
        },
        {
          "id": "3",
          "name": "Use Create Game Dto Validation Composable areAllRolesSet 'should return false when not all role…'"
        },
        {
          "id": "4",
          "name": "Use Create Game Dto Validation Composable doesContainOneVillagerSidedRole 'should return true when at least one …'"
        },
        {
          "id": "5",
          "name": "Use Create Game Dto Validation Composable doesContainOneVillagerSidedRole 'should return false when no player ha…'"
        },
        {
          "id": "6",
          "name": "Use Create Game Dto Validation Composable doesContainOneWerewolfSidedRole 'should return true when at least one …'"
        },
        {
          "id": "7",
          "name": "Use Create Game Dto Validation Composable doesContainOneWerewolfSidedRole 'should return false when no player ha…'"
        },
        {
          "id": "8",
          "name": "Use Create Game Dto Validation Composable areRolesMinimumPlayersReached 'should return false when roles are se…'"
        },
        {
          "id": "9",
          "name": "Use Create Game Dto Validation Composable areRolesMinimumPlayersReached 'should return true when all roles wit…'"
        },
        {
          "id": "10",
          "name": "Use Create Game Dto Validation Composable areRolesMinimumPlayersReached 'should return false when the minimum …'"
        },
        {
          "id": "11",
          "name": "Use Create Game Dto Validation Composable isTwoSistersRolePresentAndMinimumPlayersReached 'should return false when roles are se…'"
        },
        {
          "id": "12",
          "name": "Use Create Game Dto Validation Composable isTwoSistersRolePresentAndMinimumPlayersReached 'should return true when the two-siste…'"
        },
        {
          "id": "13",
          "name": "Use Create Game Dto Validation Composable isTwoSistersRolePresentAndMinimumPlayersReached 'should return false when the two-sist…'"
        },
        {
          "id": "14",
          "name": "Use Create Game Dto Validation Composable isThreeBrothersRolePresentAndMinimumPlayersReached 'should return false when roles are se…'"
        },
        {
          "id": "15",
          "name": "Use Create Game Dto Validation Composable isThreeBrothersRolePresentAndMinimumPlayersReached 'should return true when the three-bro…'"
        },
        {
          "id": "16",
          "name": "Use Create Game Dto Validation Composable isThreeBrothersRolePresentAndMinimumPlayersReached 'should return false when the three-br…'"
        },
        {
          "id": "17",
          "name": "Use Create Game Dto Validation Composable areAdditionalCardsSetForThiefIfPresent 'should return true when the thief is …'"
        },
        {
          "id": "18",
          "name": "Use Create Game Dto Validation Composable areAdditionalCardsSetForThiefIfPresent 'should return false when the thief is…'"
        },
        {
          "id": "19",
          "name": "Use Create Game Dto Validation Composable areAdditionalCardsSetForActorIfPresent 'should return true when the actor is …'"
        },
        {
          "id": "20",
          "name": "Use Create Game Dto Validation Composable areAdditionalCardsSetForActorIfPresent 'should return false when the actor is…'"
        },
        {
          "id": "21",
          "name": "Use Create Game Dto Validation Composable areAdditionalCardsSetForAdditionalCardsDependantRoles 'should return true when the actor and…'"
        },
        {
          "id": "22",
          "name": "Use Create Game Dto Validation Composable areAdditionalCardsSetForAdditionalCardsDependantRoles 'should return false when the actor is…'"
        },
        {
          "id": "23",
          "name": "Use Create Game Dto Validation Composable areAdditionalCardsSetForAdditionalCardsDependantRoles 'should return false when the thief is…'"
        },
        {
          "id": "24",
          "name": "Use Create Game Dto Validation Composable arePlayerGroupsSetForPrejudicedManipulatorIfPresent 'should return true when the prejudice…'"
        },
        {
          "id": "25",
          "name": "Use Create Game Dto Validation Composable arePlayerGroupsSetForPrejudicedManipulatorIfPresent 'should return false when the prejudic…'"
        },
        {
          "id": "26",
          "name": "Use Create Game Dto Validation Composable canCreateGame 'should return false when the minimum …'"
        },
        {
          "id": "27",
          "name": "Use Create Game Dto Validation Composable canCreateGame 'should return false when not all role…'"
        },
        {
          "id": "28",
          "name": "Use Create Game Dto Validation Composable canCreateGame 'should return false when no player ha…'"
        },
        {
          "id": "29",
          "name": "Use Create Game Dto Validation Composable canCreateGame 'should return false when there are no…'"
        },
        {
          "id": "30",
          "name": "Use Create Game Dto Validation Composable canCreateGame 'should return false when the thief is…'"
        },
        {
          "id": "31",
          "name": "Use Create Game Dto Validation Composable canCreateGame 'should return false when the actor is…'"
        },
        {
          "id": "32",
          "name": "Use Create Game Dto Validation Composable canCreateGame 'should return false when the prejudic…'"
        },
        {
          "id": "33",
          "name": "Use Create Game Dto Validation Composable canCreateGame 'should return true when game can be c…'"
        },
        {
          "id": "34",
          "name": "Use Create Game Dto Validation Composable gameCreationValidationErrors 'should contain specific error message…'"
        },
        {
          "id": "35",
          "name": "Use Create Game Dto Validation Composable gameCreationValidationErrors should return empty array when game can be created."
        },
        {
          "id": "36",
          "name": "Use Create Game Dto Validation Composable isRolePresentAndMinimumPlayersReached 'should return true when the role is p…'"
        },
        {
          "id": "37",
          "name": "Use Create Game Dto Validation Composable isRolePresentAndMinimumPlayersReached 'should return false when the role is …'"
        },
        {
          "id": "38",
          "name": "Use Create Game Dto Validation Composable isRolePresentAndMinimumPlayersReached 'should return true when the role is n…'"
        }
      ],
      "source": "import { createPinia, setActivePinia } from \"pinia\";\nimport type { Ref } from \"vue\";\n\nimport type { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport { useCreateGameDtoValidation } from \"~/composables/api/game/useCreateGameDtoValidation\";\nimport type { Role } from \"~/composables/api/role/types/role.class\";\nimport { useRolesStore } from \"~/stores/role/useRolesStore\";\nimport { createFakeCreateGameAdditionalCardDto } from \"@tests/unit/utils/factories/composables/api/game/dto/create-game/create-game-additional-card/create-game-additional-card.dto.factory\";\nimport { createFakeCreateGamePlayerDto } from \"@tests/unit/utils/factories/composables/api/game/dto/create-game/create-game-player/create-game-player.dto.factory\";\nimport { createFakeCreateGameDto } from \"@tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\nimport { createFakeRole } from \"@tests/unit/utils/factories/composables/api/role/role.factory\";\n\ndescribe(\"Use Create Game Dto Validation Composable\", () => {\n  const defaultRoles = [\n    createFakeRole({ name: \"werewolf\" }),\n    createFakeRole({ name: \"two-sisters\", minInGame: 2 }),\n    createFakeRole({ name: \"three-brothers\", minInGame: 3 }),\n  ];\n\n  beforeEach(() => {\n    setActivePinia(createPinia());\n    const rolesStore = useRolesStore();\n    rolesStore.roles = defaultRoles;\n  });\n\n  const validCreateGameDto = createFakeCreateGameDto({\n    players: [\n      createFakeCreateGamePlayerDto({\n        name: \"Player 1\",\n        role: { name: \"werewolf\" },\n        side: { current: \"werewolves\" },\n      }),\n      createFakeCreateGamePlayerDto({\n        name: \"Player 2\",\n        role: { name: \"werewolf\" },\n        side: { current: \"werewolves\" },\n      }),\n      createFakeCreateGamePlayerDto({\n        name: \"Player 3\",\n        role: { name: \"werewolf\" },\n        side: { current: \"werewolves\" },\n      }),\n      createFakeCreateGamePlayerDto({\n        name: \"Player 4\",\n        role: { name: \"villager\" },\n        side: { current: \"villagers\" },\n      }),\n    ],\n  });\n\n  describe(\"isMinimumPlayersReached\", () => {\n    it.each<{\n      test: string;\n      createGameDto: Ref<CreateGameDto>;\n      expected: boolean;\n    }>([\n      {\n        test: \"should return false when the number of players is less than the minimum number of players in a game.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto(),\n            createFakeCreateGamePlayerDto(),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return true when the number of players is greater than or equal to the minimum number of players in a game.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto(),\n            createFakeCreateGamePlayerDto(),\n            createFakeCreateGamePlayerDto(),\n            createFakeCreateGamePlayerDto(),\n          ],\n        })),\n        expected: true,\n      },\n    ])(\"$test\", ({ createGameDto, expected }) => {\n      const { isMinimumPlayersReached } = useCreateGameDtoValidation(createGameDto);\n\n      expect(isMinimumPlayersReached.value).toBe(expected);\n    });\n  });\n\n  describe(\"areAllRolesSet\", () => {\n    it.each<{\n      test: string;\n      createGameDto: Ref<CreateGameDto>;\n      expected: boolean;\n    }>([\n      {\n        test: \"should return true when all roles among players are set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expected: true,\n      },\n      {\n        test: \"should return false when not all roles among players are set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto(),\n          ],\n        })),\n        expected: false,\n      },\n    ])(\"$test\", ({ createGameDto, expected }) => {\n      const { areAllRolesSet } = useCreateGameDtoValidation(createGameDto);\n\n      expect(areAllRolesSet.value).toBe(expected);\n    });\n  });\n\n  describe(\"doesContainOneVillagerSidedRole\", () => {\n    it.each<{\n      test: string;\n      createGameDto: Ref<CreateGameDto>;\n      expected: boolean;\n    }>([\n      {\n        test: \"should return true when at least one player has a villager sided role.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"villager\" }, side: { current: \"villagers\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n          ],\n        })),\n        expected: true,\n      },\n      {\n        test: \"should return false when no player has a villager sided role.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n          ],\n        })),\n        expected: false,\n      },\n    ])(\"$test\", ({ createGameDto, expected }) => {\n      const { doesContainOneVillagerSidedRole } = useCreateGameDtoValidation(createGameDto);\n\n      expect(doesContainOneVillagerSidedRole.value).toBe(expected);\n    });\n  });\n\n  describe(\"doesContainOneWerewolfSidedRole\", () => {\n    it.each<{\n      test: string;\n      createGameDto: Ref<CreateGameDto>;\n      expected: boolean;\n    }>([\n      {\n        test: \"should return true when at least one player has a werewolf sided role.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"villager\" }, side: { current: \"villagers\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n          ],\n        })),\n        expected: true,\n      },\n      {\n        test: \"should return false when no player has a werewolf sided role.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"villager\" }, side: { current: \"villagers\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"villager\" }, side: { current: \"villagers\" } }),\n          ],\n        })),\n        expected: false,\n      },\n    ])(\"$test\", ({ createGameDto, expected }) => {\n      const { doesContainOneWerewolfSidedRole } = useCreateGameDtoValidation(createGameDto);\n\n      expect(doesContainOneWerewolfSidedRole.value).toBe(expected);\n    });\n  });\n\n  describe(\"areRolesMinimumPlayersReached\", () => {\n    it.each<{\n      test: string;\n      roles: Role[] | null;\n      createGameDto: Ref<CreateGameDto>;\n      expected: boolean;\n    }>([\n      {\n        test: \"should return false when roles are set to null.\",\n        roles: null,\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"two-sisters\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"two-sisters\" } }),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return true when all roles with minimum players are present and the minimum number of players is reached.\",\n        roles: defaultRoles,\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"two-sisters\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"two-sisters\" } }),\n          ],\n        })),\n        expected: true,\n      },\n      {\n        test: \"should return false when the minimum number of players is not reached.\",\n        roles: defaultRoles,\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"two-sisters\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expected: false,\n      },\n    ])(\"$test\", ({ createGameDto, roles, expected }) => {\n      const rolesStore = useRolesStore();\n      rolesStore.roles = roles;\n      const { areRolesMinimumPlayersReached } = useCreateGameDtoValidation(createGameDto);\n\n      expect(areRolesMinimumPlayersReached.value).toBe(expected);\n    });\n  });\n\n  describe(\"isTwoSistersRolePresentAndMinimumPlayersReached\", () => {\n    it.each<{\n      test: string;\n      roles: Role[] | null;\n      createGameDto: Ref<CreateGameDto>;\n      expected: boolean;\n    }>([\n      {\n        test: \"should return false when roles are set to null.\",\n        roles: null,\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"two-sisters\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"two-sisters\" } }),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return true when the two-sisters role is present and the minimum number of players is reached.\",\n        roles: defaultRoles,\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"two-sisters\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"two-sisters\" } }),\n          ],\n        })),\n        expected: true,\n      },\n      {\n        test: \"should return false when the two-sisters role is present but the minimum number of players is not reached.\",\n        roles: defaultRoles,\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({ players: [createFakeCreateGamePlayerDto({ role: { name: \"two-sisters\" } })] })),\n        expected: false,\n      },\n    ])(\"$test\", ({ createGameDto, roles, expected }) => {\n      const rolesStore = useRolesStore();\n      rolesStore.roles = roles;\n      const { isTwoSistersRolePresentAndMinimumPlayersReached } = useCreateGameDtoValidation(createGameDto);\n\n      expect(isTwoSistersRolePresentAndMinimumPlayersReached.value).toBe(expected);\n    });\n  });\n\n  describe(\"isThreeBrothersRolePresentAndMinimumPlayersReached\", () => {\n    it.each<{\n      test: string;\n      roles: Role[] | null;\n      createGameDto: Ref<CreateGameDto>;\n      expected: boolean;\n    }>([\n      {\n        test: \"should return false when roles are set to null.\",\n        roles: null,\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"three-brothers\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"three-brothers\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"three-brothers\" } }),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return true when the three-brothers role is present and the minimum number of players is reached.\",\n        roles: defaultRoles,\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"three-brothers\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"three-brothers\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"three-brothers\" } }),\n          ],\n        })),\n        expected: true,\n      },\n      {\n        test: \"should return false when the three-brothers role is present but the minimum number of players is not reached.\",\n        roles: defaultRoles,\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"three-brothers\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"three-brothers\" } }),\n          ],\n        })),\n        expected: false,\n      },\n    ])(\"$test\", ({ createGameDto, roles, expected }) => {\n      const rolesStore = useRolesStore();\n      rolesStore.roles = roles;\n      const { isThreeBrothersRolePresentAndMinimumPlayersReached } = useCreateGameDtoValidation(createGameDto);\n\n      expect(isThreeBrothersRolePresentAndMinimumPlayersReached.value).toBe(expected);\n    });\n  });\n\n  describe(\"areAdditionalCardsSetForThiefIfPresent\", () => {\n    it.each<{\n      test: string;\n      createGameDto: Ref<CreateGameDto>;\n      expected: boolean;\n    }>([\n      {\n        test: \"should return true when the thief is not present.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"villager\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expected: true,\n      },\n      {\n        test: \"should return true when the thief is present and additional cards are set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"thief\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n          additionalCards: [\n            createFakeCreateGameAdditionalCardDto({ recipient: \"thief\" }),\n            createFakeCreateGameAdditionalCardDto({ recipient: \"actor\" }),\n          ],\n        })),\n        expected: true,\n      },\n      {\n        test: \"should return false when the thief is present and additional cards are not set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"thief\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return false when the thief is present but additional cards are for the actor.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"thief\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n          additionalCards: [\n            createFakeCreateGameAdditionalCardDto({ recipient: \"actor\" }),\n            createFakeCreateGameAdditionalCardDto({ recipient: \"actor\" }),\n          ],\n        })),\n        expected: false,\n      },\n    ])(\"$test\", ({ createGameDto, expected }) => {\n      const { areAdditionalCardsSetForThiefIfPresent } = useCreateGameDtoValidation(createGameDto);\n\n      expect(areAdditionalCardsSetForThiefIfPresent.value).toBe(expected);\n    });\n  });\n\n  describe(\"areAdditionalCardsSetForActorIfPresent\", () => {\n    it.each<{\n      test: string;\n      createGameDto: Ref<CreateGameDto>;\n      expected: boolean;\n    }>([\n      {\n        test: \"should return true when the actor is not present.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"villager\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expected: true,\n      },\n      {\n        test: \"should return true when the actor is present and additional cards are set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"actor\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n          additionalCards: [\n            createFakeCreateGameAdditionalCardDto({ recipient: \"thief\" }),\n            createFakeCreateGameAdditionalCardDto({ recipient: \"actor\" }),\n          ],\n        })),\n        expected: true,\n      },\n      {\n        test: \"should return false when the actor is present and additional cards are not set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"actor\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return false when the actor is present but additional cards are for the thief.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"actor\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n          additionalCards: [\n            createFakeCreateGameAdditionalCardDto({ recipient: \"thief\" }),\n            createFakeCreateGameAdditionalCardDto({ recipient: \"thief\" }),\n          ],\n        })),\n        expected: false,\n      },\n    ])(\"$test\", ({ createGameDto, expected }) => {\n      const { areAdditionalCardsSetForActorIfPresent } = useCreateGameDtoValidation(createGameDto);\n\n      expect(areAdditionalCardsSetForActorIfPresent.value).toBe(expected);\n    });\n  });\n\n  describe(\"areAdditionalCardsSetForAdditionalCardsDependantRoles\", () => {\n    it.each<{\n      test: string;\n      createGameDto: Ref<CreateGameDto>;\n      expected: boolean;\n    }>([\n      {\n        test: \"should return true when the actor and the thief are not present.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"villager\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expected: true,\n      },\n      {\n        test: \"should return true when the actor and the thief are present and additional cards are set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"actor\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"thief\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n          additionalCards: [\n            createFakeCreateGameAdditionalCardDto({ recipient: \"thief\" }),\n            createFakeCreateGameAdditionalCardDto({ recipient: \"actor\" }),\n          ],\n        })),\n        expected: true,\n      },\n      {\n        test: \"should return false when the actor is present but additional cards are not set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"actor\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return false when the thief is present but additional cards are not set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"thief\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return false when the actor is present but additional cards are for the thief.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"actor\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n          additionalCards: [\n            createFakeCreateGameAdditionalCardDto({ recipient: \"thief\" }),\n            createFakeCreateGameAdditionalCardDto({ recipient: \"thief\" }),\n          ],\n        })),\n        expected: false,\n      },\n    ])(`$test`, ({ createGameDto, expected }) => {\n      const { areAdditionalCardsSetForAdditionalCardsDependantRoles } = useCreateGameDtoValidation(createGameDto);\n\n      expect(areAdditionalCardsSetForAdditionalCardsDependantRoles.value).toBe(expected);\n    });\n  });\n\n  describe(\"arePlayerGroupsSetForPrejudicedManipulatorIfPresent\", () => {\n    it.each<{\n      test: string;\n      createGameDto: Ref<CreateGameDto>;\n      expected: boolean;\n    }>([\n      {\n        test: \"should return true when the prejudiced manipulator is not present.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({\n              role: { name: \"villager\" },\n              group: \"group 1\",\n            }),\n            createFakeCreateGamePlayerDto({\n              role: { name: \"werewolf\" },\n              group: \"group 2\",\n            }),\n          ],\n        })),\n        expected: true,\n      },\n      {\n        test: \"should return false when the prejudiced manipulator is present and first group doesn't have enough players.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({\n              role: { name: \"prejudiced-manipulator\" },\n              group: \"group 1\",\n            }),\n            createFakeCreateGamePlayerDto({\n              role: { name: \"werewolf\" },\n              group: \"group 2\",\n            }),\n            createFakeCreateGamePlayerDto({\n              role: { name: \"werewolf\" },\n              group: \"group 2\",\n            }),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return false when the prejudiced manipulator is present and second group doesn't have enough players.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({\n              role: { name: \"prejudiced-manipulator\" },\n              group: \"group 1\",\n            }),\n            createFakeCreateGamePlayerDto({\n              role: { name: \"werewolf\" },\n              group: \"group 1\",\n            }),\n            createFakeCreateGamePlayerDto({\n              role: { name: \"werewolf\" },\n              group: \"group 2\",\n            }),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return false when the prejudiced manipulator is present and player groups are not set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"prejudiced-manipulator\" } }),\n            createFakeCreateGamePlayerDto({\n              role: { name: \"werewolf\" },\n              group: \"group 2\",\n            }),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return true when the prejudiced manipulator is present and and groups are correctly set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({\n              role: { name: \"prejudiced-manipulator\" },\n              group: \"group 1\",\n            }),\n            createFakeCreateGamePlayerDto({\n              role: { name: \"werewolf\" },\n              group: \"group 1\",\n            }),\n            createFakeCreateGamePlayerDto({\n              role: { name: \"werewolf\" },\n              group: \"group 2\",\n            }),\n            createFakeCreateGamePlayerDto({\n              role: { name: \"werewolf\" },\n              group: \"group 2\",\n            }),\n          ],\n        })),\n        expected: true,\n      },\n    ])(\"$test\", ({ createGameDto, expected }) => {\n      const { arePlayerGroupsSetForPrejudicedManipulatorIfPresent } = useCreateGameDtoValidation(createGameDto);\n\n      expect(arePlayerGroupsSetForPrejudicedManipulatorIfPresent.value).toBe(expected);\n    });\n  });\n\n  describe(\"canCreateGame\", () => {\n    it.each<{\n      test: string;\n      createGameDto: Ref<CreateGameDto>;\n      expected: boolean;\n    }>([\n      {\n        test: \"should return false when the minimum of players are not set in game.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"villager\" }, side: { current: \"villagers\" } }),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return false when not all roles among players are set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"villager\" }, side: { current: \"villagers\" } }),\n            createFakeCreateGamePlayerDto(),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return false when no player has a villager sided role.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return false when no player has a werewolf sided role.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({\n              role: { name: \"villager\" },\n              side: { current: \"villagers\" },\n            }),\n            createFakeCreateGamePlayerDto({\n              role: { name: \"villager\" },\n              side: { current: \"villagers\" },\n            }),\n            createFakeCreateGamePlayerDto({\n              role: { name: \"villager\" },\n              side: { current: \"villagers\" },\n            }),\n            createFakeCreateGamePlayerDto({\n              role: { name: \"villager\" },\n              side: { current: \"villagers\" },\n            }),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return false when there are not enough players for the two-sisters role.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"two-sisters\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return false when the thief is present but additional cards are not set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"thief\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return false when the actor is present but additional cards are not set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"actor\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return false when the prejudiced manipulator is present and player groups are not set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"prejudiced-manipulator\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return true when game can be created.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto(validCreateGameDto)),\n        expected: true,\n      },\n    ])(\"$test\", ({ createGameDto, expected }) => {\n      const { canCreateGame } = useCreateGameDtoValidation(createGameDto);\n\n      expect(canCreateGame.value).toBe(expected);\n    });\n  });\n\n  describe(\"gameCreationValidationErrors\", () => {\n    it.each<{\n      test: string;\n      createGameDto: Ref<CreateGameDto>;\n      expectedItem: string;\n    }>([\n      {\n        test: \"should contain specific error message when the minimum of players are not set in game.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"villager\" }, side: { current: \"villagers\" } }),\n          ],\n        })),\n        expectedItem: \"composables.useCreateGameDtoValidation.minimumOfPlayersNotReached\",\n      },\n      {\n        test: \"should contain specific error message when not all roles among players are set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto(),\n          ],\n        })),\n        expectedItem: \"composables.useCreateGameDtoValidation.notAllRolesAreSet\",\n      },\n      {\n        test: \"should contain specific error message when no player has a villager sided role.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n          ],\n        })),\n        expectedItem: \"composables.useCreateGameDtoValidation.noVillagerSidedRole\",\n      },\n      {\n        test: \"should contain specific error message when no player has a werewolf sided role.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({\n              role: { name: \"villager\" },\n              side: { current: \"villagers\" },\n            }),\n            createFakeCreateGamePlayerDto({\n              role: { name: \"villager\" },\n              side: { current: \"villagers\" },\n            }),\n            createFakeCreateGamePlayerDto({\n              role: { name: \"villager\" },\n              side: { current: \"villagers\" },\n            }),\n            createFakeCreateGamePlayerDto({\n              role: { name: \"villager\" },\n              side: { current: \"villagers\" },\n            }),\n          ],\n        })),\n        expectedItem: \"composables.useCreateGameDtoValidation.noWerewolfSidedRole\",\n      },\n      {\n        test: \"should contain specific error message when there are not enough players for the two-sisters role.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"two-sisters\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expectedItem: \"composables.useCreateGameDtoValidation.twoSistersMinimumPlayersNotReached\",\n      },\n      {\n        test: \"should contain specific error message when there are not enough players for the three-brothers role.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"three-brothers\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"three-brothers\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expectedItem: \"composables.useCreateGameDtoValidation.threeBrothersMinimumPlayersNotReached\",\n      },\n      {\n        test: \"should contain specific error message when the thief is present but additional cards are not set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"thief\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expectedItem: \"composables.useCreateGameDtoValidation.thiefAdditionalCardsNotSet\",\n      },\n      {\n        test: \"should contain specific error message when the actor is present but additional cards are not set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"actor\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expectedItem: \"composables.useCreateGameDtoValidation.actorAdditionalCardsNotSet\",\n      },\n      {\n        test: \"should contain specific error message when the prejudiced manipulator is present and player groups are not set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"prejudiced-manipulator\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expectedItem: \"composables.useCreateGameDtoValidation.prejudicedManipulatorGroupsNotSet\",\n      },\n    ])(\"$test\", ({ createGameDto, expectedItem }) => {\n      const { gameCreationValidationErrors } = useCreateGameDtoValidation(createGameDto);\n\n      expect(gameCreationValidationErrors.value).toContain(expectedItem);\n    });\n\n    it(\"should return empty array when game can be created.\", () => {\n      const createGameDto = ref<CreateGameDto>(createFakeCreateGameDto(validCreateGameDto));\n      const { gameCreationValidationErrors } = useCreateGameDtoValidation(createGameDto);\n\n      expect(gameCreationValidationErrors.value).toStrictEqual([]);\n    });\n  });\n\n  describe(\"isRolePresentAndMinimumPlayersReached\", () => {\n    it.each<{\n      test: string;\n      role: Role & { minInGame: number };\n      createGameDto: Ref<CreateGameDto>;\n      expected: boolean;\n    }>([\n      {\n        test: \"should return true when the role is present and the minimum number of players is reached.\",\n        role: createFakeRole({ name: \"werewolf\", minInGame: 1 }) as Role & { minInGame: number },\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({ players: [createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } })] })),\n        expected: true,\n      },\n      {\n        test: \"should return false when the role is present but the minimum number of players is not reached.\",\n        role: createFakeRole({ name: \"werewolf\", minInGame: 2 }) as Role & { minInGame: number },\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({ players: [createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } })] })),\n        expected: false,\n      },\n      {\n        test: \"should return true when the role is not present.\",\n        role: createFakeRole({ name: \"werewolf\", minInGame: 1 }) as Role & { minInGame: number },\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({ players: [createFakeCreateGamePlayerDto({ role: { name: \"villager\" } })] })),\n        expected: true,\n      },\n    ])(\"$test\", ({ role, createGameDto, expected }) => {\n      const { isRolePresentAndMinimumPlayersReached } = useCreateGameDtoValidation(createGameDto);\n\n      expect(isRolePresentAndMinimumPlayersReached(role)).toBe(expected);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/useMakeGamePlayDtoValidation.spec.ts": {
      "tests": [
        {
          "id": "39",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayVoteTypeAndValid 'should return false when current play…'"
        },
        {
          "id": "40",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayVoteTypeAndValid 'should return false when interactions…'"
        },
        {
          "id": "41",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayVoteTypeAndValid 'should return false when votes are un…'"
        },
        {
          "id": "42",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayVoteTypeAndValid 'should return false when votes don\\'t…'"
        },
        {
          "id": "43",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayVoteTypeAndValid 'should return true when votes are equ…'"
        },
        {
          "id": "44",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayVoteTypeAndValid 'should return true when votes are gre…'"
        },
        {
          "id": "45",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayTargetTypeAndValid 'should return false when current play…'"
        },
        {
          "id": "46",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayTargetTypeAndValid 'should return false when eligible tar…'"
        },
        {
          "id": "47",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayTargetTypeAndValid 'should return false when targets are …'"
        },
        {
          "id": "48",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayTargetTypeAndValid 'should return false when targets don\\…'"
        },
        {
          "id": "49",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayTargetTypeAndValid 'should return true when targets are e…'"
        },
        {
          "id": "50",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayTargetTypeAndValid 'should return true when targets are g…'"
        },
        {
          "id": "51",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayChooseCardTypeAndValid 'should return false when current play…'"
        },
        {
          "id": "52",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayChooseCardTypeAndValid 'should return false when chosen card …'"
        },
        {
          "id": "53",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayChooseCardTypeAndValid 'should return true when chosen card i…'"
        },
        {
          "id": "54",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayChooseSideTypeAndValid 'should return false when current play…'"
        },
        {
          "id": "55",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayChooseSideTypeAndValid 'should return false when chosen side …'"
        },
        {
          "id": "56",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayChooseSideTypeAndValid 'should return true when chosen side i…'"
        },
        {
          "id": "57",
          "name": "Use Make Game Play Dto Validation Composable canCurrentPlayBeSkipped should return false when current play can't be skipped."
        },
        {
          "id": "58",
          "name": "Use Make Game Play Dto Validation Composable canCurrentPlayBeSkipped should return true when current play can be skipped."
        },
        {
          "id": "59",
          "name": "Use Make Game Play Dto Validation Composable canMakeGamePlay 'should return true when current play …'"
        },
        {
          "id": "60",
          "name": "Use Make Game Play Dto Validation Composable canMakeGamePlay 'should return true when current game …'"
        },
        {
          "id": "61",
          "name": "Use Make Game Play Dto Validation Composable canMakeGamePlay 'should return false when make game pl…'"
        }
      ],
      "source": "import type { MakeGamePlayDto } from \"~/composables/api/game/dto/make-game-play/make-game-play.dto\";\nimport type { Game } from \"~/composables/api/game/types/game.class\";\nimport { useMakeGamePlayDtoValidation } from \"~/composables/api/game/useMakeGamePlayDtoValidation\";\nimport { createFakeMakeGamePlayTargetDto } from \"@tests/unit/utils/factories/composables/api/game/dto/make-game-play/make-game-play-target/make-game-play-target.dto.factory\";\nimport { createFakeMakeGamePlayVoteDto } from \"@tests/unit/utils/factories/composables/api/game/dto/make-game-play/make-game-play-vote/make-game-play-vote.dto.factory\";\nimport { createFakeMakeGamePlayDto } from \"@tests/unit/utils/factories/composables/api/game/dto/make-game-play/make-game-play.dto.factory\";\nimport { createFakeGamePlaySourceInteractionBoundaries } from \"@tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction-boundaries/game-play-source-interaction-boundaries.factory\";\nimport { createFakeGamePlaySourceInteraction } from \"@tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction.factory\";\nimport { createFakeGamePlaySource } from \"@tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source.factory\";\nimport { createFakeGamePlay, createFakeGamePlayActorChoosesCard, createFakeGamePlaySurvivorsVote, createFakeGamePlayThiefChoosesCard, createFakeGamePlayWerewolvesEat, createFakeGamePlayWolfHoundChoosesSide } from \"@tests/unit/utils/factories/composables/api/game/game-play/game-play.factory\";\nimport { createFakeGame } from \"@tests/unit/utils/factories/composables/api/game/game.factory\";\n\ndescribe(\"Use Make Game Play Dto Validation Composable\", () => {\n  describe(\"isCurrentGamePlayVoteTypeAndValid\", () => {\n    it.each<{\n      game: Game;\n      makeGamePlayDto: MakeGamePlayDto;\n      expected: boolean;\n      test: string;\n    }>([\n      {\n        game: createFakeGame({ currentPlay: null }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ votes: [createFakeMakeGamePlayVoteDto()] }),\n        expected: false,\n        test: \"should return false when current play is null.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlayWerewolvesEat() }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ votes: [createFakeMakeGamePlayVoteDto()] }),\n        expected: false,\n        test: \"should return false when current play type is 'target'.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlaySurvivorsVote({ source: createFakeGamePlaySource({ interactions: [] }) }) }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ votes: [] }),\n        expected: false,\n        test: \"should return false when interactions are empty.\",\n      },\n      {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlaySurvivorsVote({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  boundaries: createFakeGamePlaySourceInteractionBoundaries({\n                    min: 1,\n                    max: 2,\n                  }),\n                }),\n              ],\n            }),\n          }),\n        }),\n        makeGamePlayDto: createFakeMakeGamePlayDto(),\n        expected: false,\n        test: \"should return false when votes are undefined in make game play dto.\",\n      },\n      {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlaySurvivorsVote({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  boundaries: createFakeGamePlaySourceInteractionBoundaries({\n                    min: 1,\n                    max: 2,\n                  }),\n                }),\n              ],\n            }),\n          }),\n        }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ votes: [] }),\n        expected: false,\n        test: \"should return false when votes don't reach the minimum boundary.\",\n      },\n      {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlaySurvivorsVote({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  boundaries: createFakeGamePlaySourceInteractionBoundaries({\n                    min: 1,\n                    max: 2,\n                  }),\n                }),\n              ],\n            }),\n          }),\n        }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ votes: [createFakeMakeGamePlayVoteDto()] }),\n        expected: true,\n        test: \"should return true when votes are equal to eligible targets boundaries min.\",\n      },\n      {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlaySurvivorsVote({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  boundaries: createFakeGamePlaySourceInteractionBoundaries({\n                    min: 1,\n                    max: 2,\n                  }),\n                }),\n              ],\n            }),\n          }),\n        }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({\n          votes: [\n            createFakeMakeGamePlayVoteDto(),\n            createFakeMakeGamePlayVoteDto(),\n          ],\n        }),\n        expected: true,\n        test: \"should return true when votes are greater than eligible targets boundaries min.\",\n      },\n    ])(\"$test\", ({ game, makeGamePlayDto, expected }) => {\n      const { isCurrentGamePlayVoteTypeAndValid } = useMakeGamePlayDtoValidation(ref(makeGamePlayDto), ref(game));\n\n      expect(isCurrentGamePlayVoteTypeAndValid.value).toBe(expected);\n    });\n  });\n\n  describe(\"isCurrentGamePlayTargetTypeAndValid\", () => {\n    it.each<{\n      game: Game;\n      makeGamePlayDto: MakeGamePlayDto;\n      expected: boolean;\n      test: string;\n    }>([\n      {\n        game: createFakeGame({ currentPlay: null }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ targets: [createFakeMakeGamePlayTargetDto()] }),\n        expected: false,\n        test: \"should return false when current play is null.\",\n      },\n      {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlaySurvivorsVote({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  boundaries: createFakeGamePlaySourceInteractionBoundaries({\n                    min: 1,\n                    max: 2,\n                  }),\n                }),\n              ],\n            }),\n          }),\n        }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ targets: [createFakeMakeGamePlayTargetDto()] }),\n        expected: false,\n        test: \"should return false when current play type is 'vote'.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlayWerewolvesEat() }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ targets: [createFakeMakeGamePlayTargetDto()] }),\n        expected: false,\n        test: \"should return false when eligible targets are undefined.\",\n      },\n      {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlayWerewolvesEat({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  boundaries: createFakeGamePlaySourceInteractionBoundaries({\n                    min: 1,\n                    max: 2,\n                  }),\n                }),\n              ],\n            }),\n          }),\n        }),\n        makeGamePlayDto: createFakeMakeGamePlayDto(),\n        expected: false,\n        test: \"should return false when targets are undefined in make game play dto.\",\n      },\n      {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlayWerewolvesEat({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  boundaries: createFakeGamePlaySourceInteractionBoundaries({\n                    min: 1,\n                    max: 2,\n                  }),\n                }),\n              ],\n            }),\n          }),\n        }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ targets: [] }),\n        expected: false,\n        test: \"should return false when targets don't reach the minimum boundary.\",\n      },\n      {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlayWerewolvesEat({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  boundaries: createFakeGamePlaySourceInteractionBoundaries({\n                    min: 1,\n                    max: 2,\n                  }),\n                }),\n              ],\n            }),\n          }),\n        }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ targets: [createFakeMakeGamePlayTargetDto()] }),\n        expected: true,\n        test: \"should return true when targets are equal to eligible targets boundaries min.\",\n      },\n      {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlayWerewolvesEat({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  boundaries: createFakeGamePlaySourceInteractionBoundaries({\n                    min: 1,\n                    max: 2,\n                  }),\n                }),\n              ],\n            }),\n          }),\n        }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({\n          targets: [\n            createFakeMakeGamePlayTargetDto(),\n            createFakeMakeGamePlayTargetDto(),\n          ],\n        }),\n        expected: true,\n        test: \"should return true when targets are greater than eligible targets boundaries min.\",\n      },\n    ])(\"$test\", ({ game, makeGamePlayDto, expected }) => {\n      const { isCurrentGamePlayTargetTypeAndValid } = useMakeGamePlayDtoValidation(ref(makeGamePlayDto), ref(game));\n\n      expect(isCurrentGamePlayTargetTypeAndValid.value).toBe(expected);\n    });\n  });\n\n  describe(\"isCurrentGamePlayChooseCardTypeAndValid\", () => {\n    it.each<{\n      game: Game;\n      makeGamePlayDto: MakeGamePlayDto;\n      expected: boolean;\n      test: string;\n    }>([\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlaySurvivorsVote() }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ chosenCardId: \"1\" }),\n        expected: false,\n        test: \"should return false when current play type is 'vote'.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: null }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ chosenCardId: \"1\" }),\n        expected: false,\n        test: \"should return false when current play is null.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlayThiefChoosesCard() }),\n        makeGamePlayDto: createFakeMakeGamePlayDto(),\n        expected: false,\n        test: \"should return false when chosen card id is undefined.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlayThiefChoosesCard() }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ chosenCardId: \"1\" }),\n        expected: true,\n        test: \"should return true when chosen card id is defined.\",\n      },\n    ])(\"$test\", ({ game, makeGamePlayDto, expected }) => {\n      const { isCurrentGamePlayChooseCardTypeAndValid } = useMakeGamePlayDtoValidation(ref(makeGamePlayDto), ref(game));\n\n      expect(isCurrentGamePlayChooseCardTypeAndValid.value).toBe(expected);\n    });\n  });\n\n  describe(\"isCurrentGamePlayChooseSideTypeAndValid\", () => {\n    it.each<{\n      game: Game;\n      makeGamePlayDto: MakeGamePlayDto;\n      expected: boolean;\n      test: string;\n    }>([\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlaySurvivorsVote() }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ chosenSide: \"villagers\" }),\n        expected: false,\n        test: \"should return false when current play type is 'vote'.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: null }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ chosenSide: \"villagers\" }),\n        expected: false,\n        test: \"should return false when current play is null.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlayWolfHoundChoosesSide() }),\n        makeGamePlayDto: createFakeMakeGamePlayDto(),\n        expected: false,\n        test: \"should return false when chosen side is undefined.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlayWolfHoundChoosesSide() }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ chosenSide: \"villagers\" }),\n        expected: true,\n        test: \"should return true when chosen side is defined.\",\n      },\n    ])(\"$test\", ({ game, makeGamePlayDto, expected }) => {\n      const { isCurrentGamePlayChooseSideTypeAndValid } = useMakeGamePlayDtoValidation(ref(makeGamePlayDto), ref(game));\n\n      expect(isCurrentGamePlayChooseSideTypeAndValid.value).toBe(expected);\n    });\n  });\n\n  describe(\"canCurrentPlayBeSkipped\", () => {\n    it(\"should return false when current play can't be skipped.\", () => {\n      const game = ref(createFakeGame({ currentPlay: createFakeGamePlay({ canBeSkipped: false }) }));\n      const makeGamePlayDto = ref(createFakeMakeGamePlayDto());\n      const { canCurrentPlayBeSkipped } = useMakeGamePlayDtoValidation(makeGamePlayDto, game);\n\n      expect(canCurrentPlayBeSkipped.value).toBeFalsy();\n    });\n\n    it(\"should return true when current play can be skipped.\", () => {\n      const game = ref(createFakeGame({ currentPlay: createFakeGamePlay({ canBeSkipped: true }) }));\n      const makeGamePlayDto = ref(createFakeMakeGamePlayDto());\n      const { canCurrentPlayBeSkipped } = useMakeGamePlayDtoValidation(makeGamePlayDto, game);\n\n      expect(canCurrentPlayBeSkipped.value).toBeTruthy();\n    });\n  });\n\n  describe(\"canMakeGamePlay\", () => {\n    it.each<{\n      game: Game;\n      makeGamePlayDto: MakeGamePlayDto;\n      expected: boolean;\n      test: string;\n    }>([\n      {\n        test: \"should return true when current play can be skipped.\",\n        game: createFakeGame({ currentPlay: createFakeGamePlay({ canBeSkipped: true }) }),\n        makeGamePlayDto: createFakeMakeGamePlayDto(),\n        expected: true,\n      },\n      {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlaySurvivorsVote({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  boundaries: createFakeGamePlaySourceInteractionBoundaries({\n                    min: 1,\n                    max: 2,\n                  }),\n                }),\n              ],\n            }),\n          }),\n        }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({\n          votes: [\n            createFakeMakeGamePlayVoteDto(),\n            createFakeMakeGamePlayVoteDto(),\n          ],\n        }),\n        expected: true,\n        test: \"should return true when current game play type is vote and votes are greater than eligible targets boundaries min.\",\n      },\n      {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlayWerewolvesEat({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  boundaries: createFakeGamePlaySourceInteractionBoundaries({\n                    min: 1,\n                    max: 2,\n                  }),\n                }),\n              ],\n            }),\n          }),\n        }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({\n          targets: [\n            createFakeMakeGamePlayTargetDto(),\n            createFakeMakeGamePlayTargetDto(),\n          ],\n        }),\n        expected: true,\n        test: \"should return true when current game play type is target and targets are greater than eligible targets boundaries min.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlayActorChoosesCard({ action: \"choose-card\" }) }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ chosenCardId: \"1\" }),\n        expected: true,\n        test: \"should return true when current game play type is choose card and chosen card id is defined.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlayWolfHoundChoosesSide({ action: \"choose-side\" }) }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ chosenSide: \"villagers\" }),\n        expected: true,\n        test: \"should return true when current game play type is choose side and chosen side is defined.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlayWolfHoundChoosesSide({ action: \"choose-side\" }) }),\n        makeGamePlayDto: createFakeMakeGamePlayDto(),\n        expected: false,\n        test: \"should return false when make game play dto is not valid in any case.\",\n      },\n    ])(\"$test\", ({ game, makeGamePlayDto, expected }) => {\n      const { canMakeGamePlay } = useMakeGamePlayDtoValidation(ref(makeGamePlayDto), ref(game));\n\n      expect(canMakeGamePlay.value).toBe(expected);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-play/useCurrentGamePlay.spec.ts": {
      "tests": [
        {
          "id": "62",
          "name": "Use Current Game Play Composable mustCurrentGamePlayBeSkipped 'should return false when game current…'"
        },
        {
          "id": "63",
          "name": "Use Current Game Play Composable mustCurrentGamePlayBeSkipped 'should return false when there are no…'"
        },
        {
          "id": "64",
          "name": "Use Current Game Play Composable mustCurrentGamePlayBeSkipped 'should return false when game play ac…'"
        },
        {
          "id": "65",
          "name": "Use Current Game Play Composable mustCurrentGamePlayBeSkipped 'should return true when action is bur…'"
        },
        {
          "id": "66",
          "name": "Use Current Game Play Composable priorityCauseInCurrentGamePlay 'should return undefined when game cur…'"
        },
        {
          "id": "67",
          "name": "Use Current Game Play Composable priorityCauseInCurrentGamePlay 'should return angel presence when gam…'"
        },
        {
          "id": "68",
          "name": "Use Current Game Play Composable priorityCauseInCurrentGamePlay 'should return stuttering judge reques…'"
        },
        {
          "id": "69",
          "name": "Use Current Game Play Composable priorityCauseInCurrentGamePlay 'should return previous votes were in …'"
        },
        {
          "id": "70",
          "name": "Use Current Game Play Composable getEligibleTargetsWithInteractionInCurrentGamePlay 'should return empty array when game c…'"
        },
        {
          "id": "71",
          "name": "Use Current Game Play Composable getEligibleTargetsWithInteractionInCurrentGamePlay 'should return player when game curren…'"
        },
        {
          "id": "72",
          "name": "Use Current Game Play Composable getEligibleAdditionalCardsToChooseInCurrentGamePlay 'should return empty array when game a…'"
        },
        {
          "id": "73",
          "name": "Use Current Game Play Composable getEligibleAdditionalCardsToChooseInCurrentGamePlay 'should return empty array when game c…'"
        },
        {
          "id": "74",
          "name": "Use Current Game Play Composable getEligibleAdditionalCardsToChooseInCurrentGamePlay 'should return cards for recipient whi…'"
        },
        {
          "id": "75",
          "name": "Use Current Game Play Composable getEligibleAdditionalCardsToChooseInCurrentGamePlay should return empty array when game current play action is not choose card with game not a ref."
        },
        {
          "id": "76",
          "name": "Use Current Game Play Composable getEligibleAdditionalCardsToChooseInCurrentGamePlay should return cards for recipient which are not used yet when game is not a ref."
        }
      ],
      "source": "import { createFakeGameAdditionalCard } from \"@tests/unit/utils/factories/composables/api/game/game-additional-card/game-additional-card.factory\";\nimport { useCurrentGamePlay } from \"~/composables/api/game/game-play/useCurrentGamePlay\";\nimport type { GameAdditionalCard } from \"~/composables/api/game/types/game-additional-card/game-additional-card.class\";\nimport type { GamePlayCause } from \"~/composables/api/game/types/game-play/game-play.types\";\nimport type { Game } from \"~/composables/api/game/types/game.class\";\nimport type { PlayerInteractionType } from \"~/composables/api/game/types/players/player-interaction/player-interaction.types\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { createFakeGamePlaySourceInteraction } from \"@tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction.factory\";\nimport { createFakeGamePlaySource } from \"@tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source.factory\";\nimport { createFakeGamePlaySheriffDelegates, createFakeGamePlaySurvivorsBuryDeadBodies, createFakeGamePlayThiefChoosesCard } from \"@tests/unit/utils/factories/composables/api/game/game-play/game-play.factory\";\nimport { createFakeGame } from \"@tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { createFakePlayer } from \"@tests/unit/utils/factories/composables/api/game/player/player.factory\";\n\ndescribe(\"Use Current Game Play Composable\", () => {\n  describe(\"mustCurrentGamePlayBeSkipped\", () => {\n    it.each<{\n      game: Game;\n      expectedBoolean: boolean;\n      test: string;\n    }>([\n      {\n        game: createFakeGame(),\n        expectedBoolean: false,\n        test: \"should return false when game current play is null.\",\n      },\n      {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlaySurvivorsBuryDeadBodies({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  type: \"steal-role\",\n                  eligibleTargets: [createFakePlayer()],\n                }),\n              ],\n            }),\n          }),\n        }),\n        expectedBoolean: false,\n        test: \"should return false when there are no steal role interaction.\",\n      },\n      {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlaySheriffDelegates({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  type: \"steal-role\",\n                  eligibleTargets: [createFakePlayer()],\n                }),\n              ],\n            }),\n          }),\n        }),\n        expectedBoolean: false,\n        test: \"should return false when game play action is not bury dead bodies.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlaySurvivorsBuryDeadBodies({ source: createFakeGamePlaySource({ interactions: [] }) }) }),\n        expectedBoolean: true,\n        test: \"should return true when action is bury dead bodies and there are no steal role eligible targets\",\n      },\n    ])(\"$test\", ({ game, expectedBoolean }) => {\n      const { mustCurrentGamePlayBeSkipped } = useCurrentGamePlay(ref(game));\n\n      expect(mustCurrentGamePlayBeSkipped.value).toBe(expectedBoolean);\n    });\n  });\n\n  describe(\"priorityCauseInCurrentGamePlay\", () => {\n    it.each<{\n      game: Game;\n      expectedCause: GamePlayCause | undefined;\n      test: string;\n    }>([\n      {\n        game: createFakeGame(),\n        expectedCause: undefined,\n        test: \"should return undefined when game current play is null.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlaySurvivorsBuryDeadBodies() }),\n        expectedCause: undefined,\n        test: \"should return undefined when game current play causes are undefined.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlaySurvivorsBuryDeadBodies({ causes: [] }) }),\n        expectedCause: undefined,\n        test: \"should return undefined when game current play causes are empty.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlaySurvivorsBuryDeadBodies({ causes: [\"stuttering-judge-request\", \"angel-presence\"] }) }),\n        expectedCause: \"angel-presence\",\n        test: \"should return angel presence when game current play causes includes angel presence.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlaySurvivorsBuryDeadBodies({ causes: [\"stuttering-judge-request\"] }) }),\n        expectedCause: \"stuttering-judge-request\",\n        test: \"should return stuttering judge request when game current play causes includes stuttering judge request.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlaySurvivorsBuryDeadBodies({ causes: [\"previous-votes-were-in-ties\", \"angel-presence\", \"stuttering-judge-request\"] }) }),\n        expectedCause: \"previous-votes-were-in-ties\",\n        test: \"should return previous votes were in ties when game current play causes includes previous votes were in ties.\",\n      },\n    ])(\"$test\", ({ game, expectedCause }) => {\n      const { priorityCauseInCurrentGamePlay } = useCurrentGamePlay(ref(game));\n\n      expect(priorityCauseInCurrentGamePlay.value).toBe(expectedCause);\n    });\n  });\n\n  describe(\"getEligibleTargetsWithInteractionInCurrentGamePlay\", () => {\n    const foundPlayersWithInteraction = [\n      createFakePlayer(),\n      createFakePlayer(),\n      createFakePlayer(),\n    ];\n\n    it.each<{\n      game: Game;\n      interaction: PlayerInteractionType;\n      expectedPlayers: Player[];\n      test: string;\n    }>([\n      {\n        game: createFakeGame(),\n        interaction: \"steal-role\",\n        expectedPlayers: [],\n        test: \"should return empty array when game current play is null.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlaySurvivorsBuryDeadBodies() }),\n        interaction: \"steal-role\",\n        expectedPlayers: [],\n        test: \"should return empty array when game current play source interactions are undefined.\",\n      },\n      {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlaySurvivorsBuryDeadBodies({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  type: \"charm\",\n                  eligibleTargets: [createFakePlayer()],\n                }),\n              ],\n            }),\n          }),\n        }),\n        interaction: \"steal-role\",\n        expectedPlayers: [],\n        test: \"should return empty array when game current play interaction is not found among interactions.\",\n      },\n      {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlaySurvivorsBuryDeadBodies({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  type: \"charm\",\n                  eligibleTargets: [\n                    createFakePlayer(),\n                    createFakePlayer(),\n                  ],\n                }),\n                createFakeGamePlaySourceInteraction({\n                  type: \"steal-role\",\n                  eligibleTargets: foundPlayersWithInteraction,\n                }),\n              ],\n            }),\n          }),\n        }),\n        interaction: \"steal-role\",\n        expectedPlayers: foundPlayersWithInteraction,\n        test: \"should return player when game current play interaction is found among interactable players.\",\n      },\n    ])(\"$test\", ({ game, interaction, expectedPlayers }) => {\n      const { getEligibleTargetsWithInteractionInCurrentGamePlay } = useCurrentGamePlay(ref(game));\n\n      expect(getEligibleTargetsWithInteractionInCurrentGamePlay(interaction)).toStrictEqual<Player[] | undefined>(expectedPlayers);\n    });\n  });\n\n  describe(\"getEligibleAdditionalCardsToChooseInCurrentGamePlay\", () => {\n    it.each<{\n      game: Game;\n      expectedCards: GameAdditionalCard[];\n      test: string;\n    }>([\n      {\n        test: \"should return empty array when game additional cards are not set.\",\n        game: createFakeGame(),\n        expectedCards: [],\n      },\n      {\n        test: \"should return empty array when game current play action is null.\",\n        game: createFakeGame({\n          additionalCards: [\n            createFakeGameAdditionalCard(),\n            createFakeGameAdditionalCard(),\n            createFakeGameAdditionalCard(),\n          ],\n        }),\n        expectedCards: [],\n      },\n      {\n        test: \"should return empty array when game current play action is not choose card.\",\n        game: createFakeGame({\n          additionalCards: [\n            createFakeGameAdditionalCard(),\n            createFakeGameAdditionalCard(),\n            createFakeGameAdditionalCard(),\n          ],\n          currentPlay: createFakeGamePlaySurvivorsBuryDeadBodies(),\n        }),\n        expectedCards: [],\n      },\n      {\n        test: \"should return cards for recipient which are not used yet.\",\n        game: createFakeGame({\n          additionalCards: [\n            createFakeGameAdditionalCard({\n              _id: \"1\",\n              recipient: \"thief\",\n              isUsed: false,\n              roleName: \"villager\",\n            }),\n            createFakeGameAdditionalCard({\n              _id: \"2\",\n              recipient: \"actor\",\n              isUsed: true,\n              roleName: \"villager\",\n            }),\n            createFakeGameAdditionalCard({\n              _id: \"3\",\n              recipient: \"actor\",\n              isUsed: false,\n              roleName: \"villager\",\n            }),\n            createFakeGameAdditionalCard({\n              _id: \"4\",\n              recipient: \"thief\",\n              isUsed: true,\n              roleName: \"villager\",\n            }),\n          ],\n          currentPlay: createFakeGamePlayThiefChoosesCard(),\n        }),\n        expectedCards: [\n          createFakeGameAdditionalCard({\n            recipient: \"thief\",\n            isUsed: false,\n            _id: \"1\",\n            roleName: \"villager\",\n          }),\n        ],\n      },\n    ])(\"$test\", ({ game, expectedCards }) => {\n      const { getEligibleAdditionalCardsToChooseInCurrentGamePlay } = useCurrentGamePlay(ref(game));\n\n      expect(getEligibleAdditionalCardsToChooseInCurrentGamePlay()).toStrictEqual<GameAdditionalCard[] | undefined>(expectedCards);\n    });\n\n    it(\"should return empty array when game current play action is not choose card with game not a ref.\", () => {\n      const game = createFakeGame({\n        additionalCards: [\n          createFakeGameAdditionalCard(),\n          createFakeGameAdditionalCard(),\n          createFakeGameAdditionalCard(),\n        ],\n        currentPlay: createFakeGamePlaySurvivorsBuryDeadBodies(),\n      });\n      const { getEligibleAdditionalCardsToChooseInCurrentGamePlay } = useCurrentGamePlay(game);\n\n      expect(getEligibleAdditionalCardsToChooseInCurrentGamePlay()).toStrictEqual<GameAdditionalCard[]>([]);\n    });\n\n    it(\"should return cards for recipient which are not used yet when game is not a ref.\", () => {\n      const game = createFakeGame({\n        additionalCards: [\n          createFakeGameAdditionalCard({\n            _id: \"1\",\n            recipient: \"thief\",\n            isUsed: false,\n            roleName: \"villager\",\n          }),\n          createFakeGameAdditionalCard({\n            _id: \"2\",\n            recipient: \"actor\",\n            isUsed: true,\n            roleName: \"villager\",\n          }),\n          createFakeGameAdditionalCard({\n            _id: \"3\",\n            recipient: \"actor\",\n            isUsed: false,\n            roleName: \"villager\",\n          }),\n          createFakeGameAdditionalCard({\n            _id: \"4\",\n            recipient: \"thief\",\n            isUsed: true,\n            roleName: \"villager\",\n          }),\n        ],\n        currentPlay: createFakeGamePlayThiefChoosesCard(),\n      });\n      const { getEligibleAdditionalCardsToChooseInCurrentGamePlay } = useCurrentGamePlay(game);\n\n      expect(getEligibleAdditionalCardsToChooseInCurrentGamePlay()).toStrictEqual<GameAdditionalCard[]>([\n        createFakeGameAdditionalCard({\n          recipient: \"thief\",\n          isUsed: false,\n          _id: \"1\",\n          roleName: \"villager\",\n        }),\n      ]);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/useGameOptionsTexts.spec.ts": {
      "tests": [
        {
          "id": "77",
          "name": "Use Game Options Texts Composable gameOptionsTexts should translate all game options when called."
        },
        {
          "id": "78",
          "name": "Use Game Options Texts Composable changedGameOptionsTexts should return empty array when there is no changed game options."
        },
        {
          "id": "79",
          "name": "Use Game Options Texts Composable changedGameOptionsTexts should return an array of changed game options when there are changed game options."
        },
        {
          "id": "80",
          "name": "Use Game Options Texts Composable getGameOptionText should return the translated text of the given game option when called."
        },
        {
          "id": "81",
          "name": "Use Game Options Texts Composable getGameOptionKeyFromText should return the game option key of the given text when called."
        },
        {
          "id": "82",
          "name": "Use Game Options Texts Composable getGameOptionKeyFromText should return undefined when the given text is not a game option text."
        }
      ],
      "source": "import { createFakeGameOptions } from \"@tests/unit/utils/factories/composables/api/game/game-options/game-options.factory\";\nimport { DEFAULT_GAME_OPTIONS } from \"~/composables/api/game/constants/game-options/game-options.constants\";\nimport { useGameOptionsTexts } from \"~/composables/api/game/game-options/useGameOptionsTexts\";\nimport type { GameOptions } from \"~/composables/api/game/types/game-options/game-options.class\";\nimport type { DeepStringifiedGameOptions } from \"~/composables/api/game/types/game-options/game-options.types\";\n\ndescribe(\"Use Game Options Texts Composable\", () => {\n  describe(\"gameOptionsTexts\", () => {\n    it(\"should translate all game options when called.\", () => {\n      const { gameOptionsTexts } = useGameOptionsTexts(ref(createFakeGameOptions(DEFAULT_GAME_OPTIONS)));\n      const expectedGameOptionsTexts: DeepStringifiedGameOptions = {\n        composition: { isHidden: `composables.useGameOptionsTexts.composition.isHidden.no` },\n        votes: {\n          canBeSkipped: `composables.useGameOptionsTexts.votes.canBeSkipped.yes`,\n          duration: `composables.useGameOptionsTexts.votes.duration, {\"time\":\"shared.time.minute, {\\\\\"count\\\\\":3}, 3\"}`,\n        },\n        roles: {\n          areRevealedOnDeath: `composables.useGameOptionsTexts.roles.areRevealedOnDeath.yes`,\n          doSkipCallIfNoTarget: `composables.useGameOptionsTexts.roles.doSkipCallIfNoTarget.no`,\n          werewolf: { canEatEachOther: `composables.useGameOptionsTexts.roles.werewolf.canEatEachOther.no` },\n          sheriff: {\n            isEnabled: `composables.useGameOptionsTexts.roles.sheriff.isEnabled.yes`,\n            electedAt: {\n              turn: `composables.useGameOptionsTexts.roles.sheriff.electedAt, {\"turn\":1,\"phase\":\"shared.game.definitephase.night\"}`,\n              phaseName: `composables.useGameOptionsTexts.roles.sheriff.electedAt, {\"turn\":1,\"phase\":\"shared.game.definitephase.night\"}`,\n            },\n            hasDoubledVote: `composables.useGameOptionsTexts.roles.sheriff.hasDoubledVote.yes`,\n            mustSettleTieInVotes: `composables.useGameOptionsTexts.roles.sheriff.mustSettleTieInVotes.yes`,\n          },\n          bigBadWolf: { isPowerlessIfWerewolfDies: `composables.useGameOptionsTexts.roles.bigBadWolf.isPowerlessIfWerewolfDies.yes` },\n          whiteWerewolf: { wakingUpInterval: `composables.useGameOptionsTexts.roles.whiteWerewolf.wakingUpInterval, {\"interval\":2}, 2` },\n          seer: {\n            isTalkative: `composables.useGameOptionsTexts.roles.seer.isTalkative.yes`,\n            canSeeRoles: `composables.useGameOptionsTexts.roles.seer.canSeeRoles.yes`,\n          },\n          cupid: {\n            lovers: { doRevealRoleToEachOther: `composables.useGameOptionsTexts.roles.cupid.lovers.doRevealRoleToEachOther.no` },\n            mustWinWithLovers: `composables.useGameOptionsTexts.roles.cupid.mustWinWithLovers.no`,\n          },\n          littleGirl: { isProtectedByDefender: `composables.useGameOptionsTexts.roles.littleGirl.isProtectedByDefender.no` },\n          defender: { canProtectTwice: `composables.useGameOptionsTexts.roles.defender.canProtectTwice.no` },\n          elder: {\n            livesCountAgainstWerewolves: `composables.useGameOptionsTexts.roles.elder.livesCountAgainstWerewolves, {\"livesCount\":2}, 2`,\n            doesTakeHisRevenge: `composables.useGameOptionsTexts.roles.elder.doesTakeHisRevenge.yes`,\n          },\n          idiot: { doesDieOnElderDeath: `composables.useGameOptionsTexts.roles.idiot.doesDieOnElderDeath.yes` },\n          twoSisters: { wakingUpInterval: `composables.useGameOptionsTexts.roles.twoSisters.wakingUpInterval, {\"interval\":2}, 2` },\n          threeBrothers: { wakingUpInterval: `composables.useGameOptionsTexts.roles.threeBrothers.wakingUpInterval, {\"interval\":2}, 2` },\n          fox: { isPowerlessIfMissesWerewolf: `composables.useGameOptionsTexts.roles.fox.isPowerlessIfMissesWerewolf.yes` },\n          bearTamer: { doesGrowlOnWerewolvesSide: `composables.useGameOptionsTexts.roles.bearTamer.doesGrowlOnWerewolvesSide.yes` },\n          stutteringJudge: { voteRequestsCount: `composables.useGameOptionsTexts.roles.stutteringJudge.voteRequestsCount, {\"voteRequestsCount\":1}, 1` },\n          wildChild: { isTransformationRevealed: `composables.useGameOptionsTexts.roles.wildChild.isTransformationRevealed.no` },\n          wolfHound: {\n            isChosenSideRevealed: `composables.useGameOptionsTexts.roles.wolfHound.isChosenSideRevealed.no`,\n            isSideRandomlyChosen: `composables.useGameOptionsTexts.roles.wolfHound.isSideRandomlyChosen.no`,\n          },\n          thief: {\n            mustChooseBetweenWerewolves: `composables.useGameOptionsTexts.roles.thief.mustChooseBetweenWerewolves.yes`,\n            isChosenCardRevealed: `composables.useGameOptionsTexts.roles.thief.isChosenCardRevealed.no`,\n          },\n          piedPiper: {\n            charmedPeopleCountPerNight: `composables.useGameOptionsTexts.roles.piedPiper.charmedPeopleCountPerNight, {\"charmedPeopleCountPerNight\":2}, 2`,\n            isPowerlessOnWerewolvesSide: `composables.useGameOptionsTexts.roles.piedPiper.isPowerlessOnWerewolvesSide.yes`,\n            areCharmedPeopleRevealed: `composables.useGameOptionsTexts.roles.piedPiper.areCharmedPeopleRevealed.no`,\n          },\n          scandalmonger: { markPenalty: `composables.useGameOptionsTexts.roles.scandalmonger.markPenalty, {\"markPenalty\":2}, 2` },\n          witch: { doesKnowWerewolvesTargets: `composables.useGameOptionsTexts.roles.witch.doesKnowWerewolvesTargets.yes` },\n          prejudicedManipulator: { isPowerlessOnWerewolvesSide: `composables.useGameOptionsTexts.roles.prejudicedManipulator.isPowerlessOnWerewolvesSide.yes` },\n          actor: {\n            isPowerlessOnWerewolvesSide: `composables.useGameOptionsTexts.roles.actor.isPowerlessOnWerewolvesSide.yes`,\n          },\n        },\n      };\n\n      expect(gameOptionsTexts.value).toStrictEqual<DeepStringifiedGameOptions>(expectedGameOptionsTexts);\n    });\n  });\n\n  describe(\"changedGameOptionsTexts\", () => {\n    it(\"should return empty array when there is no changed game options.\", () => {\n      const { changedGameOptionsTexts } = useGameOptionsTexts(ref(createFakeGameOptions(DEFAULT_GAME_OPTIONS)));\n\n      expect(changedGameOptionsTexts.value).toStrictEqual<string[]>([]);\n    });\n\n    it(\"should return an array of changed game options when there are changed game options.\", () => {\n      const gameOptions = ref<GameOptions>(createFakeGameOptions(DEFAULT_GAME_OPTIONS));\n      gameOptions.value.votes.canBeSkipped = false;\n      gameOptions.value.roles.seer.canSeeRoles = false;\n      const { changedGameOptionsTexts } = useGameOptionsTexts(gameOptions);\n\n      expect(changedGameOptionsTexts.value).toStrictEqual<string[]>([\n        \"composables.useGameOptionsTexts.votes.canBeSkipped.no\",\n        \"composables.useGameOptionsTexts.roles.seer.canSeeRoles.no\",\n      ]);\n    });\n  });\n\n  describe(\"getGameOptionText\", () => {\n    it(\"should return the translated text of the given game option when called.\", () => {\n      const { getGameOptionText } = useGameOptionsTexts(ref(DEFAULT_GAME_OPTIONS));\n      const expectedGameOptionText = `composables.useGameOptionsTexts.votes.canBeSkipped.yes`;\n\n      expect(getGameOptionText(\"votes.canBeSkipped\")).toBe(expectedGameOptionText);\n    });\n  });\n\n  describe(\"getGameOptionKeyFromText\", () => {\n    it(\"should return the game option key of the given text when called.\", () => {\n      const { getGameOptionKeyFromText } = useGameOptionsTexts(ref(DEFAULT_GAME_OPTIONS));\n      const expectedGameOptionKey = \"votes.canBeSkipped\";\n\n      expect(getGameOptionKeyFromText(\"composables.useGameOptionsTexts.votes.canBeSkipped.yes\")).toBe(expectedGameOptionKey);\n    });\n\n    it(\"should return undefined when the given text is not a game option text.\", () => {\n      const { getGameOptionKeyFromText } = useGameOptionsTexts(ref(DEFAULT_GAME_OPTIONS));\n\n      expect(getGameOptionKeyFromText(\"This is not a game option text.\")).toBeUndefined();\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-history-record/useGameLastHistoryRecord.spec.ts": {
      "tests": [
        {
          "id": "83",
          "name": "Use Game Last History Record Composable lastTargetedPlayers 'should return empty array when called…'"
        },
        {
          "id": "84",
          "name": "Use Game Last History Record Composable lastTargetedPlayers 'should return array with two players …'"
        },
        {
          "id": "85",
          "name": "Use Game Last History Record Composable doesHavePlayerAttributeAlteration 'should return true when there is a pl…'"
        },
        {
          "id": "86",
          "name": "Use Game Last History Record Composable doesHavePlayerAttributeAlteration 'should return false when there is no …'"
        }
      ],
      "source": "import { createFakeGameHistoryRecordPlayerAttributeAlteration } from \"@tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-player-attribute-alteration/game-history-record-player-attribute-alteration.factory\";\nimport { useGameLastHistoryRecord } from \"~/composables/api/game/game-history-record/useGameLastHistoryRecord\";\nimport type { GameHistoryRecordPlayerAttributeAlterationStatus } from \"~/composables/api/game/types/game-history-record/game-history-record-player-attribute-alteration/game-history-record-player-attribute-alteration.types\";\nimport type { Game } from \"~/composables/api/game/types/game.class\";\nimport type { GameSource } from \"~/composables/api/game/types/game.types\";\nimport type { PlayerAttributeName } from \"~/composables/api/game/types/players/player-attribute/player-attribute.types\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { createFakeGameHistoryRecordPlayTarget } from \"@tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-target/game-history-record-play-target.factory\";\nimport { createFakeGameHistoryRecordPlay } from \"@tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play.factory\";\nimport { createFakeGameHistoryRecord } from \"@tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record.factory\";\nimport { createFakeGame } from \"@tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { createFakePlayer } from \"@tests/unit/utils/factories/composables/api/game/player/player.factory\";\n\ndescribe(\"Use Game Last History Record Composable\", () => {\n  describe(\"lastTargetedPlayers\", () => {\n    const expectedPlayers = [\n      createFakePlayer(),\n      createFakePlayer(),\n    ];\n\n    it.each<{\n      test: string;\n      game: Game;\n      expected: Player[];\n    }>([\n      {\n        game: createFakeGame({\n          lastGameHistoryRecord: createFakeGameHistoryRecord({\n            play: createFakeGameHistoryRecordPlay({\n              type: \"target\",\n              targets: undefined,\n            }),\n          }),\n        }),\n        expected: [],\n        test: \"should return empty array when called with target type and targets undefined.\",\n      },\n      {\n        game: createFakeGame({\n          lastGameHistoryRecord: createFakeGameHistoryRecord({\n            play: createFakeGameHistoryRecordPlay({\n              type: \"target\",\n              targets: [\n                createFakeGameHistoryRecordPlayTarget({ player: expectedPlayers[0] }),\n                createFakeGameHistoryRecordPlayTarget({ player: expectedPlayers[1] }),\n              ],\n            }),\n          }),\n        }),\n        expected: expectedPlayers,\n        test: \"should return array with two players when called with target type and targets are not empty.\",\n      },\n    ])(\"$test\", ({ game, expected }) => {\n      const { lastTargetedPlayers } = useGameLastHistoryRecord(game);\n\n      expect(lastTargetedPlayers.value).toStrictEqual<Player[]>(expected);\n    });\n  });\n\n  describe(\"doesHavePlayerAttributeAlteration\", () => {\n    it.each<{\n      test: string;\n      game: Game;\n      attributeName: PlayerAttributeName;\n      source: GameSource;\n      status: GameHistoryRecordPlayerAttributeAlterationStatus;\n      expected: boolean;\n    }>([\n      {\n        test: \"should return true when there is a player attribute alteration with the given attribute name, source and status.\",\n        game: createFakeGame({\n          lastGameHistoryRecord: createFakeGameHistoryRecord({\n            playerAttributeAlterations: [\n              createFakeGameHistoryRecordPlayerAttributeAlteration({\n                playerName: \"Antoine\",\n                name: \"drank-death-potion\",\n                source: \"witch\",\n                status: \"attached\",\n              }),\n              createFakeGameHistoryRecordPlayerAttributeAlteration({\n                playerName: \"Antoine\",\n                name: \"drank-life-potion\",\n                source: \"witch\",\n                status: \"detached\",\n              }),\n            ],\n          }),\n        }),\n        attributeName: \"drank-death-potion\",\n        source: \"witch\",\n        status: \"attached\",\n        expected: true,\n      },\n      {\n        test: \"should return false when there is no player attribute alteration with the given attribute name, source and status.\",\n        game: createFakeGame({\n          lastGameHistoryRecord: createFakeGameHistoryRecord({\n            playerAttributeAlterations: [\n              createFakeGameHistoryRecordPlayerAttributeAlteration({\n                playerName: \"Antoine\",\n                name: \"drank-death-potion\",\n                source: \"witch\",\n                status: \"attached\",\n              }),\n              createFakeGameHistoryRecordPlayerAttributeAlteration({\n                playerName: \"Antoine\",\n                name: \"drank-life-potion\",\n                source: \"witch\",\n                status: \"detached\",\n              }),\n              createFakeGameHistoryRecordPlayerAttributeAlteration({\n                playerName: \"Antoine\",\n                name: \"drank-death-potion\",\n                source: \"sheriff\",\n                status: \"detached\",\n              }),\n            ],\n          }),\n        }),\n        attributeName: \"drank-death-potion\",\n        source: \"witch\",\n        status: \"detached\",\n        expected: false,\n      },\n      {\n        test: \"should return false when there is no player attribute alteration.\",\n        game: createFakeGame({\n          lastGameHistoryRecord: createFakeGameHistoryRecord(),\n        }),\n        attributeName: \"drank-death-potion\",\n        source: \"witch\",\n        status: \"attached\",\n        expected: false,\n      },\n      {\n        test: \"should return false when there is no last game history record\",\n        game: createFakeGame(),\n        attributeName: \"drank-death-potion\",\n        source: \"witch\",\n        status: \"attached\",\n        expected: false,\n      },\n    ])(\"$test\", ({ game, attributeName, source, status, expected }) => {\n      const { doesHavePlayerAttributeAlteration } = useGameLastHistoryRecord(game);\n\n      expect(doesHavePlayerAttributeAlteration(attributeName, source, status)).toBe(expected);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/useFetchGames.spec.ts": {
      "tests": [
        {
          "id": "87",
          "name": "Use Fetch Game Composable createGame should create game when called."
        },
        {
          "id": "88",
          "name": "Use Fetch Game Composable createGame should return null when create game throws."
        },
        {
          "id": "89",
          "name": "Use Fetch Game Composable getGame should get game when called."
        },
        {
          "id": "90",
          "name": "Use Fetch Game Composable getGame should return null when get game throws."
        },
        {
          "id": "91",
          "name": "Use Fetch Game Composable cancelGame should cancel game when called."
        },
        {
          "id": "92",
          "name": "Use Fetch Game Composable cancelGame should return null when cancel game throws."
        },
        {
          "id": "93",
          "name": "Use Fetch Game Composable makeGamePlay should make game play when called."
        },
        {
          "id": "94",
          "name": "Use Fetch Game Composable makeGamePlay should return null when make game play throws."
        },
        {
          "id": "95",
          "name": "Use Fetch Game Composable createGameFeedback should create game feedback when called."
        },
        {
          "id": "96",
          "name": "Use Fetch Game Composable createGameFeedback should return null when create game feedback throws."
        }
      ],
      "source": "import type { Mock } from \"vitest\";\n\nimport { createFakeCreateGameFeedbackDto } from \"@tests/unit/utils/factories/composables/api/game/dto/create-game-feedback/create-game-feedback.dto.factory\";\nimport { useFetchGames } from \"~/composables/api/game/useFetchGames\";\nimport * as UseWerewolvesAssistantApi from \"~/composables/api/useWerewolvesAssistantApi\";\nimport { createFakeCreateGameDto } from \"@tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\nimport { createFakeMakeGamePlayDto } from \"@tests/unit/utils/factories/composables/api/game/dto/make-game-play/make-game-play.dto.factory\";\n\ndescribe(\"Use Fetch Game Composable\", () => {\n  let mocks: {\n    composables: {\n      useWerewolvesAssistantApi: {\n        fetchWerewolvesAssistantApi: Mock;\n      };\n    };\n  };\n\n  beforeEach(() => {\n    mocks = { composables: { useWerewolvesAssistantApi: { fetchWerewolvesAssistantApi: vi.fn() } } };\n    const useWerewolvesAssistantApiMock = mocks.composables.useWerewolvesAssistantApi as unknown as ReturnType<typeof UseWerewolvesAssistantApi.useWerewolvesAssistantApi>;\n    vi.spyOn(UseWerewolvesAssistantApi, \"useWerewolvesAssistantApi\").mockReturnValue(useWerewolvesAssistantApiMock);\n  });\n\n  describe(\"createGame\", () => {\n    it(\"should create game when called.\", async() => {\n      const createGameDto = createFakeCreateGameDto();\n      await useFetchGames().createGame(createGameDto);\n      const expectedOptions = { method: \"POST\", body: JSON.stringify(createGameDto) };\n\n      expect(mocks.composables.useWerewolvesAssistantApi.fetchWerewolvesAssistantApi).toHaveBeenCalledExactlyOnceWith(`/games`, expectedOptions);\n    });\n\n    it(\"should return null when create game throws.\", async() => {\n      vi.spyOn(mocks.composables.useWerewolvesAssistantApi, \"fetchWerewolvesAssistantApi\").mockRejectedValue(undefined);\n      const result = await useFetchGames().createGame(createFakeCreateGameDto());\n\n      expect(result).toBeNull();\n    });\n  });\n\n  describe(\"getGame\", () => {\n    it(\"should get game when called.\", async() => {\n      const gameId = \"game-id\";\n      await useFetchGames().getGame(gameId);\n\n      expect(mocks.composables.useWerewolvesAssistantApi.fetchWerewolvesAssistantApi).toHaveBeenCalledExactlyOnceWith(`/games/${gameId}`, { method: \"GET\" });\n    });\n\n    it(\"should return null when get game throws.\", async() => {\n      vi.spyOn(mocks.composables.useWerewolvesAssistantApi, \"fetchWerewolvesAssistantApi\").mockRejectedValue(new Error(\"error\"));\n      const result = await useFetchGames().getGame(\"game-id\");\n\n      expect(result).toBeNull();\n    });\n  });\n\n  describe(\"cancelGame\", () => {\n    it(\"should cancel game when called.\", async() => {\n      const gameId = \"game-id\";\n      await useFetchGames().cancelGame(gameId);\n\n      expect(mocks.composables.useWerewolvesAssistantApi.fetchWerewolvesAssistantApi).toHaveBeenCalledExactlyOnceWith(`/games/${gameId}`, { method: \"DELETE\" });\n    });\n\n    it(\"should return null when cancel game throws.\", async() => {\n      vi.spyOn(mocks.composables.useWerewolvesAssistantApi, \"fetchWerewolvesAssistantApi\").mockRejectedValue(new Error(\"error\"));\n      const result = await useFetchGames().cancelGame(\"game-id\");\n\n      expect(result).toBeNull();\n    });\n  });\n\n  describe(\"makeGamePlay\", () => {\n    it(\"should make game play when called.\", async() => {\n      const gameId = \"game-id\";\n      const makeGamePlayDto = createFakeMakeGamePlayDto();\n      await useFetchGames().makeGamePlay(gameId, makeGamePlayDto);\n\n      expect(mocks.composables.useWerewolvesAssistantApi.fetchWerewolvesAssistantApi).toHaveBeenCalledExactlyOnceWith(`/games/${gameId}/play`, { method: \"POST\", body: JSON.stringify(makeGamePlayDto) });\n    });\n\n    it(\"should return null when make game play throws.\", async() => {\n      vi.spyOn(mocks.composables.useWerewolvesAssistantApi, \"fetchWerewolvesAssistantApi\").mockRejectedValue(new Error(\"error\"));\n      const result = await useFetchGames().makeGamePlay(\"game-id\", createFakeMakeGamePlayDto());\n\n      expect(result).toBeNull();\n    });\n  });\n\n  describe(\"createGameFeedback\", () => {\n    it(\"should create game feedback when called.\", async() => {\n      const gameId = \"game-id\";\n      const createGameFeedbackDto = createFakeCreateGameFeedbackDto();\n      await useFetchGames().createGameFeedback(gameId, createGameFeedbackDto);\n\n      expect(mocks.composables.useWerewolvesAssistantApi.fetchWerewolvesAssistantApi).toHaveBeenCalledExactlyOnceWith(`/games/${gameId}/feedback`, { method: \"POST\", body: JSON.stringify(createGameFeedbackDto) });\n    });\n\n    it(\"should return null when create game feedback throws.\", async() => {\n      vi.spyOn(mocks.composables.useWerewolvesAssistantApi, \"fetchWerewolvesAssistantApi\").mockRejectedValue(new Error(\"error\"));\n      const result = await useFetchGames().createGameFeedback(\"game-id\", createFakeCreateGameFeedbackDto());\n\n      expect(result).toBeNull();\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-history-record/useGameHistoryRecord.spec.ts": {
      "tests": [
        {
          "id": "97",
          "name": "Use Game History Record Spec didSourceSkipped 'should return true when called with v…'"
        },
        {
          "id": "98",
          "name": "Use Game History Record Spec didSourceSkipped 'should return true when called with t…'"
        },
        {
          "id": "99",
          "name": "Use Game History Record Spec didSourceSkipped 'should return true when called with r…'"
        },
        {
          "id": "100",
          "name": "Use Game History Record Spec didSourceSkipped 'should return true when called with c…'"
        },
        {
          "id": "101",
          "name": "Use Game History Record Spec didSourceSkipped 'should return false when called with …'"
        }
      ],
      "source": "import { useGameHistoryRecord } from \"~/composables/api/game/game-history-record/useGameHistoryRecord\";\nimport type { GameHistoryRecord } from \"~/composables/api/game/types/game-history-record/game-history-record.class\";\nimport { createFakeGameAdditionalCard } from \"@tests/unit/utils/factories/composables/api/game/game-additional-card/game-additional-card.factory\";\nimport { createFakeGameHistoryRecordPlayTarget } from \"@tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-target/game-history-record-play-target.factory\";\nimport { createFakeGameHistoryRecordPlayVote } from \"@tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-vote/game-history-record-play-vote.factory\";\nimport { createFakeGameHistoryRecordPlay } from \"@tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play.factory\";\nimport { createFakeGameHistoryRecord } from \"@tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record.factory\";\n\ndescribe(\"Use Game History Record Spec\", () => {\n  describe(\"didSourceSkipped\", () => {\n    it.each<{\n      gameHistoryRecord: GameHistoryRecord;\n      expected: boolean;\n      test: string;\n    }>([\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            type: \"vote\",\n            votes: undefined,\n          }),\n        }),\n        expected: true,\n        test: \"should return true when called with vote type and votes undefined.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            type: \"target\",\n            targets: undefined,\n          }),\n        }),\n        expected: true,\n        test: \"should return true when called with target type and targets undefined.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            type: \"request-another-vote\",\n            didJudgeRequestAnotherVote: undefined,\n          }),\n        }),\n        expected: true,\n        test: \"should return true when called with request-another-vote type and didJudgeRequestAnotherVote undefined.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            type: \"choose-card\",\n            chosenCard: undefined,\n          }),\n        }),\n        expected: true,\n        test: \"should return true when called with choose-card type and chosenCard undefined.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            type: \"vote\",\n            votes: [createFakeGameHistoryRecordPlayVote()],\n          }),\n        }),\n        expected: false,\n        test: \"should return false when called with vote type and votes are not empty.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expected: false,\n        test: \"should return false when called with target type and targets are not empty.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            type: \"request-another-vote\",\n            didJudgeRequestAnotherVote: true,\n          }),\n        }),\n        expected: false,\n        test: \"should return false when called with request-another-vote type and didJudgeRequestAnotherVote is true.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            type: \"choose-card\",\n            chosenCard: createFakeGameAdditionalCard(),\n          }),\n        }),\n        expected: false,\n        test: \"should return false when called with choose-card type and chosenCard is not empty.\",\n      },\n    ])(\"$test\", ({ gameHistoryRecord, expected }) => {\n      expect(useGameHistoryRecord().didSourceSkipped(gameHistoryRecord)).toBe(expected);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game.class.spec.ts": {
      "tests": [
        {
          "id": "102",
          "name": "Game Class create should create a game when called."
        },
        {
          "id": "103",
          "name": "Game Class toJSON should return the JSON representation of the Game when called."
        }
      ],
      "source": "import { createFakeGameFeedback } from \"@tests/unit/utils/factories/composables/api/game/game-feedback/game-feedback.factory\";\nimport { Game } from \"~/composables/api/game/types/game.class\";\nimport { createFakeGameHistoryRecord } from \"@tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record.factory\";\nimport { createFakeGameOptions } from \"@tests/unit/utils/factories/composables/api/game/game-options/game-options.factory\";\nimport { createFakeGamePhase } from \"@tests/unit/utils/factories/composables/api/game/game-phase/game-phase.factory\";\nimport { createFakeGamePlay } from \"@tests/unit/utils/factories/composables/api/game/game-play/game-play.factory\";\nimport type { OmitToJSON } from \"~/utils/types/class.types\";\n\ndescribe(\"Game Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a game when called.\", () => {\n      const currentPlay = createFakeGamePlay();\n      const upcomingPlays = [\n        createFakeGamePlay(),\n        createFakeGamePlay(),\n      ];\n      const options = createFakeGameOptions();\n      const phase = createFakeGamePhase();\n      const feedback = createFakeGameFeedback();\n      const lastGameHistoryRecord = createFakeGameHistoryRecord();\n      const createdAt = new Date();\n      const updatedAt = new Date();\n      const createdGame = Game.create({\n        _id: \"1\",\n        phase,\n        players: [],\n        status: \"playing\",\n        currentPlay,\n        upcomingPlays,\n        tick: 1,\n        turn: 1,\n        lastGameHistoryRecord,\n        feedback,\n        options,\n        createdAt,\n        updatedAt,\n        extra: \"Extra\",\n      } as OmitToJSON<Game>);\n      const expectedGame = new Game();\n      expectedGame._id = \"1\";\n      expectedGame.phase = phase;\n      expectedGame.players = [];\n      expectedGame.status = \"playing\";\n      expectedGame.tick = 1;\n      expectedGame.turn = 1;\n      expectedGame.currentPlay = currentPlay;\n      expectedGame.upcomingPlays = upcomingPlays;\n      expectedGame.options = options;\n      expectedGame.feedback = feedback;\n      expectedGame.lastGameHistoryRecord = lastGameHistoryRecord;\n      expectedGame.createdAt = createdAt;\n      expectedGame.updatedAt = updatedAt;\n\n      expect(createdGame).toStrictEqual<Game>(expectedGame);\n    });\n  });\n\n  describe(\"toJSON\", () => {\n    it(\"should return the JSON representation of the Game when called.\", () => {\n      const currentPlay = createFakeGamePlay();\n      const upcomingPlays = [\n        createFakeGamePlay(),\n        createFakeGamePlay(),\n      ];\n      const options = createFakeGameOptions();\n      const phase = createFakeGamePhase();\n      const feedback = createFakeGameFeedback();\n      const lastGameHistoryRecord = createFakeGameHistoryRecord();\n      const createdAt = new Date();\n      const updatedAt = new Date();\n      const game = new Game();\n      game._id = \"1\";\n      game.phase = phase;\n      game.players = [];\n      game.status = \"playing\";\n      game.currentPlay = currentPlay;\n      game.upcomingPlays = upcomingPlays;\n      game.tick = 1;\n      game.turn = 1;\n      game.options = options;\n      game.feedback = feedback;\n      game.lastGameHistoryRecord = lastGameHistoryRecord;\n      game.createdAt = createdAt;\n      game.updatedAt = updatedAt;\n      const expectedGame: OmitToJSON<Game> = {\n        _id: \"1\",\n        phase,\n        players: [],\n        status: \"playing\",\n        currentPlay,\n        upcomingPlays,\n        tick: 1,\n        turn: 1,\n        options,\n        feedback,\n        lastGameHistoryRecord,\n        createdAt,\n        updatedAt,\n        victory: undefined,\n      };\n\n      expect(game.toJSON()).toMatchObject({\n        ...expectedGame,\n        createdAt: new Date(createdAt.toISOString()),\n        updatedAt: new Date(updatedAt.toISOString()),\n      });\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/prime-vue/usePrimeVueToasts.spec.ts": {
      "tests": [
        {
          "id": "104",
          "name": "Use Prime Vue Toasts Composable addToast should add a toast with default options when called."
        },
        {
          "id": "105",
          "name": "Use Prime Vue Toasts Composable addSuccessToast should add a success toast with default options when called."
        },
        {
          "id": "106",
          "name": "Use Prime Vue Toasts Composable addInfoToast should add an info toast with default options when called."
        },
        {
          "id": "107",
          "name": "Use Prime Vue Toasts Composable addWarnToast should add a warn toast with default options when called."
        },
        {
          "id": "108",
          "name": "Use Prime Vue Toasts Composable addErrorToast should add an error toast with default options when called."
        }
      ],
      "source": "import type { ToastMessageOptions } from \"primevue/toast\";\nimport type { Mock } from \"vitest\";\nimport * as UseToast from \"primevue/usetoast\";\n\nimport { usePrimeVueToasts } from \"~/composables/prime-vue/usePrimeVueToasts\";\n\ndescribe(\"Use Prime Vue Toasts Composable\", () => {\n  let mocks: {\n    composables: {\n      useToast: {\n        add: Mock;\n        remove: Mock;\n        removeGroup: Mock;\n        removeAllGroups: Mock;\n      };\n    };\n  };\n\n  beforeEach(() => {\n    mocks = {\n      composables: {\n        useToast: {\n          add: vi.fn(),\n          remove: vi.fn(),\n          removeGroup: vi.fn(),\n          removeAllGroups: vi.fn(),\n        },\n      },\n    };\n    vi.spyOn(UseToast, \"useToast\").mockReturnValue(mocks.composables.useToast);\n  });\n\n  describe(\"addToast\", () => {\n    it(\"should add a toast with default options when called.\", () => {\n      const { addToast } = usePrimeVueToasts();\n      const options: ToastMessageOptions = { summary: \"summary\", detail: \"detail\" };\n      addToast(options);\n      const expectedOptions = { life: 4000, closable: true, ...options };\n\n      expect(mocks.composables.useToast.add).toHaveBeenCalledExactlyOnceWith(expectedOptions);\n    });\n  });\n\n  describe(\"addSuccessToast\", () => {\n    it(\"should add a success toast with default options when called.\", () => {\n      const { addSuccessToast } = usePrimeVueToasts();\n      const options: ToastMessageOptions = { summary: \"summary\", detail: \"detail\" };\n      addSuccessToast(options);\n      const expectedOptions = { severity: \"success\", life: 4000, closable: true, ...options };\n\n      expect(mocks.composables.useToast.add).toHaveBeenCalledExactlyOnceWith(expectedOptions);\n    });\n  });\n\n  describe(\"addInfoToast\", () => {\n    it(\"should add an info toast with default options when called.\", () => {\n      const { addInfoToast } = usePrimeVueToasts();\n      const options: ToastMessageOptions = { summary: \"summary\", detail: \"detail\" };\n      addInfoToast(options);\n      const expectedOptions = { severity: \"info\", life: 4000, closable: true, ...options };\n\n      expect(mocks.composables.useToast.add).toHaveBeenCalledExactlyOnceWith(expectedOptions);\n    });\n  });\n\n  describe(\"addWarnToast\", () => {\n    it(\"should add a warn toast with default options when called.\", () => {\n      const { addWarnToast } = usePrimeVueToasts();\n      const options: ToastMessageOptions = { summary: \"summary\", detail: \"detail\" };\n      addWarnToast(options);\n      const expectedOptions = { severity: \"warn\", life: 4000, closable: true, ...options };\n\n      expect(mocks.composables.useToast.add).toHaveBeenCalledExactlyOnceWith(expectedOptions);\n    });\n  });\n\n  describe(\"addErrorToast\", () => {\n    it(\"should add an error toast with default options when called.\", () => {\n      const { addErrorToast } = usePrimeVueToasts();\n      const options: ToastMessageOptions = { summary: \"summary\", detail: \"detail\" };\n      addErrorToast(options);\n      const expectedOptions = { severity: \"error\", life: 4000, closable: true, ...options };\n\n      expect(mocks.composables.useToast.add).toHaveBeenCalledExactlyOnceWith(expectedOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/useGamePlayers.spec.ts": {
      "tests": [
        {
          "id": "109",
          "name": "Use Game Players Composable sheriffInPlayers should return sheriff player when sheriff is in players."
        },
        {
          "id": "110",
          "name": "Use Game Players Composable sheriffInPlayers should return undefined when sheriff is not in players."
        },
        {
          "id": "111",
          "name": "Use Game Players Composable getPlayersWithCurrentRole should return players with current role when called."
        },
        {
          "id": "112",
          "name": "Use Game Players Composable getPlayersWithCurrentRole should return empty array when no player with current role."
        }
      ],
      "source": "import { createFakeAccursedWolfFatherAlivePlayer, createFakeVillagerVillagerAlivePlayer } from \"@tests/unit/utils/factories/composables/api/game/player/player-with-role.factory\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { useGamePlayers } from \"~/composables/api/game/useGamePlayers\";\nimport { createFakeGame } from \"@tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { createFakeProtectedByDefenderPlayerAttribute, createFakeSheriffBySheriffPlayerAttribute } from \"@tests/unit/utils/factories/composables/api/game/player/player-attribute/player-attribute.factory\";\nimport { createFakePlayer } from \"@tests/unit/utils/factories/composables/api/game/player/player.factory\";\n\ndescribe(\"Use Game Players Composable\", () => {\n  describe(\"sheriffInPlayers\", () => {\n    it(\"should return sheriff player when sheriff is in players.\", () => {\n      const game = createFakeGame({\n        players: [\n          createFakePlayer(),\n          createFakePlayer({ attributes: [createFakeSheriffBySheriffPlayerAttribute()] }),\n          createFakePlayer({ attributes: [createFakeProtectedByDefenderPlayerAttribute()] }),\n        ],\n      });\n      const { sheriffInPlayers } = useGamePlayers(ref(game));\n\n      expect(sheriffInPlayers.value).toStrictEqual<Player>(game.players[1]);\n    });\n\n    it(\"should return undefined when sheriff is not in players.\", () => {\n      const game = createFakeGame({\n        players: [\n          createFakePlayer(),\n          createFakePlayer({ attributes: [createFakeProtectedByDefenderPlayerAttribute()] }),\n        ],\n      });\n      const { sheriffInPlayers } = useGamePlayers(ref(game));\n\n      expect(sheriffInPlayers.value).toBeUndefined();\n    });\n  });\n\n  describe(\"getPlayersWithCurrentRole\", () => {\n    it(\"should return players with current role when called.\", () => {\n      const game = createFakeGame({\n        players: [\n          createFakeAccursedWolfFatherAlivePlayer(),\n          createFakeVillagerVillagerAlivePlayer(),\n          createFakeVillagerVillagerAlivePlayer(),\n          createFakeAccursedWolfFatherAlivePlayer(),\n        ],\n      });\n      const { getPlayersWithCurrentRole } = useGamePlayers(ref(game));\n\n      expect(getPlayersWithCurrentRole(\"villager-villager\")).toStrictEqual<Player[]>([game.players[1], game.players[2]]);\n    });\n\n    it(\"should return empty array when no player with current role.\", () => {\n      const game = createFakeGame({\n        players: [\n          createFakeAccursedWolfFatherAlivePlayer(),\n          createFakeAccursedWolfFatherAlivePlayer(),\n        ],\n      });\n      const { getPlayersWithCurrentRole } = useGamePlayers(ref(game));\n\n      expect(getPlayersWithCurrentRole(\"villager-villager\")).toStrictEqual<Player[]>([]);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/style/useAnimateCss.spec.ts": {
      "tests": [
        {
          "id": "113",
          "name": "Use Animate Css Composable animateElementOnce should not add animate__animated and animate__bounce classes to element when element is not a ref and null."
        },
        {
          "id": "114",
          "name": "Use Animate Css Composable animateElementOnce should not add animate__animated and animate__bounce classes to ref element when element ref and value is null."
        },
        {
          "id": "115",
          "name": "Use Animate Css Composable animateElementOnce should add animate__animated and animate__bounce classes to element when called."
        },
        {
          "id": "116",
          "name": "Use Animate Css Composable animateElementOnce should add animate__animated and animate__bounce classes to ref element when called."
        },
        {
          "id": "117",
          "name": "Use Animate Css Composable animateElementOnce should remove animate__animated and animate__bounce classes from ref element when animation ends."
        },
        {
          "id": "118",
          "name": "Use Animate Css Composable animateElementOnce should add event listener to ref element when called."
        }
      ],
      "source": "import type { Ref } from \"vue\";\n\nimport { useAnimateCss } from \"~/composables/style/useAnimateCss\";\n\ndescribe(\"Use Animate Css Composable\", () => {\n  const element = ref<HTMLElement | null>(null);\n\n  beforeEach(() => {\n    element.value = document.createElement(\"div\");\n  });\n\n  afterEach(() => {\n    element.value?.dispatchEvent(new Event(\"animationend\"));\n  });\n\n  describe(\"animateElementOnce\", () => {\n    it(\"should not add animate__animated and animate__bounce classes to element when element is not a ref and null.\", async() => {\n      const animateCss = useAnimateCss();\n      element.value = null;\n      await animateCss.animateElementOnce(element.value, \"bounce\");\n\n      expect(element.value).toBeNull();\n    });\n\n    it(\"should not add animate__animated and animate__bounce classes to ref element when element ref and value is null.\", async() => {\n      const animateCss = useAnimateCss();\n      element.value = null;\n      await animateCss.animateElementOnce(element, \"bounce\");\n\n      expect(element.value).toBeNull();\n    });\n\n    it(\"should add animate__animated and animate__bounce classes to element when called.\", () => {\n      const animateCss = useAnimateCss();\n      void animateCss.animateElementOnce(element.value, \"bounce\");\n\n      expect(element.value?.classList.contains(\"animate__animated\")).toBeTruthy();\n      expect(element.value?.classList.contains(\"animate__bounce\")).toBeTruthy();\n    });\n\n    it(\"should add animate__animated and animate__bounce classes to ref element when called.\", () => {\n      const animateCss = useAnimateCss();\n      void animateCss.animateElementOnce(element, \"bounce\");\n\n      expect(element.value?.classList.contains(\"animate__animated\")).toBeTruthy();\n      expect(element.value?.classList.contains(\"animate__bounce\")).toBeTruthy();\n    });\n\n    it(\"should remove animate__animated and animate__bounce classes from ref element when animation ends.\", () => {\n      const animateCss = useAnimateCss();\n      void animateCss.animateElementOnce(element, \"bounce\");\n      element.value?.dispatchEvent(new Event(\"animationend\"));\n\n      expect(element.value?.classList.contains(\"animate__animated\")).toBeFalsy();\n      expect(element.value?.classList.contains(\"animate__bounce\")).toBeFalsy();\n    });\n\n    it(\"should add event listener to ref element when called.\", () => {\n      const animateCss = useAnimateCss();\n      const { value } = element as Ref<HTMLElement>;\n      const addEventListenerSpy = vi.spyOn(value, \"addEventListener\");\n      void animateCss.animateElementOnce(element, \"bounce\");\n\n      expect(addEventListenerSpy).toHaveBeenCalledExactlyOnceWith(\"animationend\", expect.any(Function), { once: true });\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-history-record/game-history-record-play/game-history-record-play.class.spec.ts": {
      "tests": [
        {
          "id": "119",
          "name": "Game History Record Play Class Create should create a game history record play when called."
        }
      ],
      "source": "import { GameHistoryRecordPlay } from \"~/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play.class\";\nimport { createFakeGameAdditionalCard } from \"@tests/unit/utils/factories/composables/api/game/game-additional-card/game-additional-card.factory\";\nimport { createFakeGameHistoryRecordPlaySource } from \"@tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-source/game-history-record-play-source.factory\";\nimport { createFakeGameHistoryRecordPlayTarget } from \"@tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-target/game-history-record-play-target.factory\";\nimport { createFakeGameHistoryRecordPlayVote } from \"@tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-vote/game-history-record-play-vote.factory\";\nimport { createFakeGameHistoryRecordPlayVoting } from \"@tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-voting/game-history-record-play-voting.factory\";\n\ndescribe(\"Game History Record Play Class\", () => {\n  describe(\"Create\", () => {\n    it(\"should create a game history record play when called.\", () => {\n      const source = createFakeGameHistoryRecordPlaySource();\n      const targets = [\n        createFakeGameHistoryRecordPlayTarget(),\n        createFakeGameHistoryRecordPlayTarget(),\n      ];\n      const votes = [\n        createFakeGameHistoryRecordPlayVote(),\n        createFakeGameHistoryRecordPlayVote(),\n      ];\n      const chosenCard = createFakeGameAdditionalCard();\n      const voting = createFakeGameHistoryRecordPlayVoting();\n      const gameHistoryRecordPlay = GameHistoryRecordPlay.create({\n        action: \"eat\",\n        source,\n        type: \"vote\",\n        targets,\n        votes,\n        voting,\n        chosenCard,\n        extra: \"Extra\",\n      } as GameHistoryRecordPlay);\n      const expectedGameHistoryRecordPlay = new GameHistoryRecordPlay();\n      expectedGameHistoryRecordPlay.action = \"eat\";\n      expectedGameHistoryRecordPlay.source = source;\n      expectedGameHistoryRecordPlay.type = \"vote\";\n      expectedGameHistoryRecordPlay.targets = targets;\n      expectedGameHistoryRecordPlay.votes = votes;\n      expectedGameHistoryRecordPlay.voting = voting;\n      expectedGameHistoryRecordPlay.chosenCard = chosenCard;\n\n      expect(gameHistoryRecordPlay).toStrictEqual<GameHistoryRecordPlay>(expectedGameHistoryRecordPlay);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-history-record/game-history-record.class.spec.ts": {
      "tests": [
        {
          "id": "120",
          "name": "Game History Record Class Create should create a game history record when called."
        }
      ],
      "source": "import { createFakeGameHistoryRecordPlayerAttributeAlteration } from \"@tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-player-attribute-alteration/game-history-record-player-attribute-alteration.factory\";\nimport { GameHistoryRecord } from \"~/composables/api/game/types/game-history-record/game-history-record.class\";\nimport { createFakeGameHistoryRecordPlay } from \"@tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play.factory\";\nimport { createFakeGamePhase } from \"@tests/unit/utils/factories/composables/api/game/game-phase/game-phase.factory\";\nimport { createFakePlayer } from \"@tests/unit/utils/factories/composables/api/game/player/player.factory\";\n\ndescribe(\"Game History Record Class\", () => {\n  describe(\"Create\", () => {\n    it(\"should create a game history record when called.\", () => {\n      const gameHistoryRecordPlay = createFakeGameHistoryRecordPlay();\n      const revealedPlayers = [\n        createFakePlayer(),\n        createFakePlayer(),\n      ];\n      const playerAttributeAlterations = [\n        createFakeGameHistoryRecordPlayerAttributeAlteration(),\n        createFakeGameHistoryRecordPlayerAttributeAlteration(),\n      ];\n      const phase = createFakeGamePhase();\n      const createdAt = new Date();\n      const gameHistoryRecord = GameHistoryRecord.create({\n        _id: \"1\",\n        gameId: \"1\",\n        phase,\n        play: gameHistoryRecordPlay,\n        tick: 1,\n        turn: 1,\n        revealedPlayers,\n        playerAttributeAlterations,\n        createdAt,\n        extra: \"Extra\",\n      } as GameHistoryRecord);\n      const expectedGameHistoryRecord = new GameHistoryRecord();\n      expectedGameHistoryRecord._id = \"1\";\n      expectedGameHistoryRecord.gameId = \"1\";\n      expectedGameHistoryRecord.phase = phase;\n      expectedGameHistoryRecord.play = gameHistoryRecordPlay;\n      expectedGameHistoryRecord.revealedPlayers = revealedPlayers;\n      expectedGameHistoryRecord.tick = 1;\n      expectedGameHistoryRecord.turn = 1;\n      expectedGameHistoryRecord.playerAttributeAlterations = playerAttributeAlterations;\n      expectedGameHistoryRecord.createdAt = createdAt;\n\n      expect(gameHistoryRecord).toStrictEqual<GameHistoryRecord>(expectedGameHistoryRecord);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/error/useWerewolvesAssistantApiError.spec.ts": {
      "tests": [
        {
          "id": "121",
          "name": "Use Werewolves Assistant Api Error Composable handleWerewolvesAssistantApiError should log error in console when called."
        },
        {
          "id": "122",
          "name": "Use Werewolves Assistant Api Error Composable handleWerewolvesAssistantApiError should add error toast when called."
        }
      ],
      "source": "import type { FetchResponse } from \"ofetch\";\nimport type { Mock, MockInstance } from \"vitest\";\n\nimport type { WerewolvesAssistantApiError } from \"~/composables/api/error/types/api-error.types\";\nimport { useWerewolvesAssistantApiError } from \"~/composables/api/error/useWerewolvesAssistantApiError\";\nimport * as UsePrimeVueToasts from \"~/composables/prime-vue/usePrimeVueToasts\";\n\ndescribe(\"Use Werewolves Assistant Api Error Composable\", () => {\n  let mocks: {\n    console: {\n      error: MockInstance;\n    };\n    composables: {\n      usePrimeVueToasts: {\n        addToast: Mock;\n        addSuccessToast: Mock;\n        addInfoToast: Mock;\n        addWarnToast: Mock;\n        addErrorToast: Mock;\n      };\n    };\n  };\n\n  beforeEach(() => {\n    mocks = {\n      console: { error: vi.spyOn(console, \"error\").mockImplementation(vi.fn()) },\n      composables: {\n        usePrimeVueToasts: {\n          addToast: vi.fn(),\n          addErrorToast: vi.fn(),\n          addInfoToast: vi.fn(),\n          addSuccessToast: vi.fn(),\n          addWarnToast: vi.fn(),\n        },\n      },\n    };\n    vi.spyOn(UsePrimeVueToasts, \"usePrimeVueToasts\").mockReturnValue(mocks.composables.usePrimeVueToasts);\n  });\n\n  describe(\"handleWerewolvesAssistantApiError\", () => {\n    it(\"should log error in console when called.\", () => {\n      const response = { _data: \"error-data\" } as unknown as FetchResponse<WerewolvesAssistantApiError>;\n      useWerewolvesAssistantApiError().handleWerewolvesAssistantApiError({ response });\n      const { _data: expectedData } = response;\n\n      expect(mocks.console.error).toHaveBeenCalledExactlyOnceWith(expectedData);\n    });\n\n    it(\"should add error toast when called.\", () => {\n      const response = { status: 404 } as unknown as FetchResponse<WerewolvesAssistantApiError>;\n      useWerewolvesAssistantApiError().handleWerewolvesAssistantApiError({ response });\n\n      expect(mocks.composables.usePrimeVueToasts.addErrorToast).toHaveBeenCalledExactlyOnceWith({\n        summary: \"composables.useWerewolvesAssistantApiError.statusCode.404\",\n        detail: \"composables.useWerewolvesAssistantApiError.checkConsoleForMoreDetails\",\n      });\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/dto/create-game/create-game.dto.spec.ts": {
      "tests": [
        {
          "id": "123",
          "name": "Create Game Dto create should create a game when called."
        },
        {
          "id": "124",
          "name": "Create Game Dto toJSON should return the JSON representation of the CreateGameDto when called."
        }
      ],
      "source": "import { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport { createFakeCreateGamePlayerDto } from \"@tests/unit/utils/factories/composables/api/game/dto/create-game/create-game-player/create-game-player.dto.factory\";\nimport { createFakeGameOptions } from \"@tests/unit/utils/factories/composables/api/game/game-options/game-options.factory\";\nimport type { OmitToJSON } from \"~/utils/types/class.types\";\n\ndescribe(\"Create Game Dto\", () => {\n  describe(\"create\", () => {\n    it(\"should create a game when called.\", () => {\n      const players = [\n        createFakeCreateGamePlayerDto({\n          name: \"Player 1\",\n          role: { name: \"werewolf\" },\n        }),\n      ];\n      const options = createFakeGameOptions();\n      const createGameDto = CreateGameDto.create({\n        players,\n        options,\n        extra: \"Extra\",\n      } as OmitToJSON<CreateGameDto>);\n      const expectedCreateGameDto = new CreateGameDto();\n      expectedCreateGameDto.players = players;\n      expectedCreateGameDto.options = options;\n\n      expect(createGameDto).toStrictEqual<CreateGameDto>(expectedCreateGameDto);\n    });\n  });\n\n  describe(\"toJSON\", () => {\n    it(\"should return the JSON representation of the CreateGameDto when called.\", () => {\n      const players = [\n        createFakeCreateGamePlayerDto({\n          name: \"Player 1\",\n          role: { name: \"werewolf\" },\n        }),\n      ];\n      const options = createFakeGameOptions();\n      const createGameDto = new CreateGameDto();\n      createGameDto.players = players;\n      createGameDto.options = options;\n      const expectedCreateGameDto: OmitToJSON<CreateGameDto> = {\n        players,\n        options,\n        additionalCards: undefined,\n      };\n\n      expect(createGameDto.toJSON()).toMatchObject(JSON.parse(JSON.stringify(expectedCreateGameDto)));\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/useFetchRandomGameComposition.spec.ts": {
      "tests": [
        {
          "id": "125",
          "name": "Use Fetch Random Game Composition fetchRandomGameComposition should fetch random game composition when called."
        }
      ],
      "source": "import type { createFetch } from \"ofetch\";\nimport type Qs from \"qs\";\nimport { vi } from \"vitest\";\n\nimport { useFetchRandomGameComposition } from \"~/composables/api/game/useFetchRandomGameComposition\";\nimport * as UseWerewolvesAssistantApi from \"~/composables/api/useWerewolvesAssistantApi\";\n\nconst hoistedMocks = vi.hoisted(() => ({ qs: { stringify: vi.fn() } }));\n\nvi.mock(\"qs\", async importOriginal => ({\n  ...await importOriginal<typeof Qs>(),\n  ...hoistedMocks.qs,\n}));\n\ndescribe(\"Use Fetch Random Game Composition\", () => {\n  let mocks: {\n    composables: {\n      useWerewolvesAssistantApi: {\n        fetchWerewolvesAssistantApi: ReturnType<typeof createFetch>;\n      };\n    };\n  };\n\n  beforeEach(() => {\n    mocks = { composables: { useWerewolvesAssistantApi: { fetchWerewolvesAssistantApi: vi.fn() as unknown as ReturnType<typeof createFetch> } } };\n    vi.spyOn(UseWerewolvesAssistantApi, \"useWerewolvesAssistantApi\").mockReturnValue(mocks.composables.useWerewolvesAssistantApi);\n  });\n\n  describe(\"fetchRandomGameComposition\", () => {\n    it(\"should fetch random game composition when called.\", async() => {\n      hoistedMocks.qs.stringify.mockReturnValue(\"stringifiedQuery\");\n      const expectedUrl = `/games/random-composition?stringifiedQuery`;\n      await useFetchRandomGameComposition().fetchRandomGameComposition({\n        players: [\n          { name: \"Player 1\" },\n          { name: \"Player 2\" },\n          { name: \"Player 3\" },\n        ],\n      });\n\n      expect(mocks.composables.useWerewolvesAssistantApi.fetchWerewolvesAssistantApi).toHaveBeenCalledExactlyOnceWith(expectedUrl, { method: \"GET\" });\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-history-record/useFetchGameHistoryRecords.spec.ts": {
      "tests": [
        {
          "id": "126",
          "name": "Use Fetch Game History Records getGameHistoryRecords should get game history records when called."
        },
        {
          "id": "127",
          "name": "Use Fetch Game History Records getGameHistoryRecords should return null when an error is thrown."
        }
      ],
      "source": "import type { Mock } from \"vitest\";\n\nimport { useFetchGameHistoryRecords } from \"~/composables/api/game/game-history-record/useFetchGameHistoryRecords\";\nimport * as UseWerewolvesAssistantApi from \"~/composables/api/useWerewolvesAssistantApi\";\n\ndescribe(\"Use Fetch Game History Records\", () => {\n  let mocks: {\n    composables: {\n      useWerewolvesAssistantApi: {\n        fetchWerewolvesAssistantApi: Mock;\n      };\n    };\n  };\n\n  beforeEach(() => {\n    mocks = { composables: { useWerewolvesAssistantApi: { fetchWerewolvesAssistantApi: vi.fn() } } };\n    const useWerewolvesAssistantApiMock = mocks.composables.useWerewolvesAssistantApi as unknown as ReturnType<typeof UseWerewolvesAssistantApi.useWerewolvesAssistantApi>;\n    vi.spyOn(UseWerewolvesAssistantApi, \"useWerewolvesAssistantApi\").mockReturnValue(useWerewolvesAssistantApiMock);\n  });\n\n  describe(\"getGameHistoryRecords\", () => {\n    it(\"should get game history records when called.\", async() => {\n      const gameId = \"gameId\";\n      await useFetchGameHistoryRecords().getGameHistoryRecords(gameId);\n\n      expect(mocks.composables.useWerewolvesAssistantApi.fetchWerewolvesAssistantApi).toHaveBeenCalledExactlyOnceWith(`/games/${gameId}/history`, { method: \"GET\" });\n    });\n\n    it(\"should return null when an error is thrown.\", async() => {\n      mocks.composables.useWerewolvesAssistantApi.fetchWerewolvesAssistantApi.mockRejectedValue(undefined);\n      const gameId = \"gameId\";\n      const result = await useFetchGameHistoryRecords().getGameHistoryRecords(gameId);\n\n      expect(result).toBeNull();\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/useGameSource.spec.ts": {
      "tests": [
        {
          "id": "128",
          "name": "Use Game Source Composable getDefiniteGameSourceNameLabel 'should translate game source when cal…'"
        },
        {
          "id": "129",
          "name": "Use Game Source Composable getDefiniteGameSourceNameLabel 'should translate definite role name w…'"
        }
      ],
      "source": "import type { GameSource } from \"~/composables/api/game/types/game.types\";\nimport { useGameSourceName } from \"~/composables/api/game/useGameSource\";\n\ndescribe(\"Use Game Source Composable\", () => {\n  describe(\"getDefiniteGameSourceNameLabel\", () => {\n    it.each<{\n      gameSource: GameSource;\n      count: number;\n      expectedLabel: string;\n      test: string;\n    }>([\n      {\n        gameSource: \"sheriff\",\n        count: 1,\n        expectedLabel: \"shared.game.player.attribute.definiteName.sheriff, 1\",\n        test: \"should translate game source when called with sheriff and count 1.\",\n      },\n      {\n        gameSource: \"werewolves\",\n        count: 1,\n        expectedLabel: \"shared.game.player.group.definiteName.werewolves, 1\",\n        test: \"should translate game source when called with werewolves and count 1.\",\n      },\n      {\n        gameSource: \"villagers\",\n        count: 1,\n        expectedLabel: \"shared.game.player.group.definiteName.villagers, 1\",\n        test: \"should translate game source when called with villagers and count 1.\",\n      },\n      {\n        gameSource: \"werewolf\",\n        count: 1,\n        expectedLabel: \"shared.role.definiteName.werewolf, 1\",\n        test: \"should translate definite role name when called with werewolf and count 1.\",\n      },\n    ])(\"$test\", ({ gameSource, count, expectedLabel }) => {\n      expect(useGameSourceName().getDefiniteGameSourceNameLabel(gameSource, count)).toBe(expectedLabel);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/misc/useDevice.spec.ts": {
      "tests": [
        {
          "id": "130",
          "name": "Use Device Composable isOnTouchDevice should return true when on touchstartevent is available on window object."
        },
        {
          "id": "131",
          "name": "Use Device Composable isOnTouchDevice should return true when navigator.maxTouchPoints is greater than 0."
        },
        {
          "id": "132",
          "name": "Use Device Composable isOnTouchDevice should return false when neither 'ontouchstart' nor navigator.maxTouchPoints are available."
        },
        {
          "id": "133",
          "name": "Use Device Composable isOnTouchDevice should return false when window is undefined."
        }
      ],
      "source": "import { beforeEach } from \"vitest\";\n\nimport { useDevice } from \"~/composables/misc/useDevice\";\n\ndescribe(\"Use Device Composable\", () => {\n  describe(\"isOnTouchDevice\", () => {\n    const originalWindow = global.window;\n\n    beforeEach(() => {\n      vi.stubGlobal(\"navigator\", { maxTouchPoints: 0 });\n      vi.stubGlobal(\"window\", {});\n    });\n\n    afterEach(() => {\n      vi.stubGlobal(\"window\", originalWindow);\n      vi.unstubAllGlobals();\n    });\n\n    it(\"should return true when on touchstartevent is available on window object.\", () => {\n      vi.stubGlobal(\"window\", { ontouchstart: () => ({}) });\n      const { isOnTouchDevice } = useDevice();\n\n      expect(isOnTouchDevice.value).toBeTruthy();\n    });\n\n    it(\"should return true when navigator.maxTouchPoints is greater than 0.\", () => {\n      vi.stubGlobal(\"navigator\", { maxTouchPoints: 2 });\n      const { isOnTouchDevice } = useDevice();\n\n      expect(isOnTouchDevice.value).toBeTruthy();\n    });\n\n    it(\"should return false when neither 'ontouchstart' nor navigator.maxTouchPoints are available.\", () => {\n      const { isOnTouchDevice } = useDevice();\n\n      expect(isOnTouchDevice.value).toBeFalsy();\n    });\n\n    it(\"should return false when window is undefined.\", () => {\n      vi.stubGlobal(\"navigator\", { maxTouchPoints: 2 });\n      vi.stubGlobal(\"window\", undefined);\n\n      const { isOnTouchDevice } = useDevice();\n\n      expect(isOnTouchDevice.value).toBeFalsy();\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/role/useFetchRoles.spec.ts": {
      "tests": [
        {
          "id": "134",
          "name": "Use Fetch Roles Composable fetchRoles should fetch roles when called."
        },
        {
          "id": "135",
          "name": "Use Fetch Roles Composable fetchRoles should return null when fetch roles throws."
        }
      ],
      "source": "import type { Mock } from \"vitest\";\n\nimport { useFetchRoles } from \"~/composables/api/role/useFetchRoles\";\nimport * as UseWerewolvesAssistantApi from \"~/composables/api/useWerewolvesAssistantApi\";\n\ndescribe(\"Use Fetch Roles Composable\", () => {\n  let mocks: {\n    composables: {\n      useWerewolvesAssistantApi: {\n        fetchWerewolvesAssistantApi: Mock;\n      };\n    };\n  };\n\n  beforeEach(() => {\n    mocks = { composables: { useWerewolvesAssistantApi: { fetchWerewolvesAssistantApi: vi.fn() } } };\n    const useWerewolvesAssistantApiMock = mocks.composables.useWerewolvesAssistantApi as unknown as ReturnType<typeof UseWerewolvesAssistantApi.useWerewolvesAssistantApi>;\n    vi.spyOn(UseWerewolvesAssistantApi, \"useWerewolvesAssistantApi\").mockReturnValue(useWerewolvesAssistantApiMock);\n  });\n\n  describe(\"fetchRoles\", () => {\n    it(\"should fetch roles when called.\", async() => {\n      await useFetchRoles().fetchRoles();\n\n      expect(mocks.composables.useWerewolvesAssistantApi.fetchWerewolvesAssistantApi).toHaveBeenCalledExactlyOnceWith(`/roles`, { method: \"GET\" });\n    });\n\n    it(\"should return null when fetch roles throws.\", async() => {\n      vi.spyOn(mocks.composables.useWerewolvesAssistantApi, \"fetchWerewolvesAssistantApi\").mockRejectedValue(new Error(\"error\"));\n      const result = await useFetchRoles().fetchRoles();\n\n      expect(result).toBeNull();\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction.class.spec.ts": {
      "tests": [
        {
          "id": "136",
          "name": "Game Play Source Interaction Class create should create a game play source interaction when called."
        }
      ],
      "source": "import { GamePlaySourceInteraction } from \"~/composables/api/game/types/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction.class\";\nimport { createFakePlayer } from \"@tests/unit/utils/factories/composables/api/game/player/player.factory\";\n\ndescribe(\"Game Play Source Interaction Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a game play source interaction when called.\", () => {\n      const eligibleTargets = [\n        createFakePlayer(),\n        createFakePlayer(),\n        createFakePlayer(),\n      ];\n      const createdGamePlaySourceInteraction = GamePlaySourceInteraction.create({\n        type: \"steal-role\",\n        source: \"devoted-servant\",\n        eligibleTargets,\n        boundaries: {\n          min: 1,\n          max: 1,\n        },\n        extra: \"Extra\",\n      } as GamePlaySourceInteraction);\n      const expectedGamePlaySourceInteraction = new GamePlaySourceInteraction();\n      expectedGamePlaySourceInteraction.source = \"devoted-servant\";\n      expectedGamePlaySourceInteraction.type = \"steal-role\";\n      expectedGamePlaySourceInteraction.eligibleTargets = eligibleTargets;\n      expectedGamePlaySourceInteraction.boundaries = {\n        min: 1,\n        max: 1,\n      };\n\n      expect(createdGamePlaySourceInteraction).toStrictEqual<GamePlaySourceInteraction>(expectedGamePlaySourceInteraction);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/player/player.class.spec.ts": {
      "tests": [
        {
          "id": "137",
          "name": "Player Class create should create a player when called."
        }
      ],
      "source": "import { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { createFakePlayerAttribute } from \"@tests/unit/utils/factories/composables/api/game/player/player-attribute/player-attribute.factory\";\nimport { createFakePlayerRole } from \"@tests/unit/utils/factories/composables/api/game/player/player-role/player-role.factory\";\nimport { createFakePlayerSide } from \"@tests/unit/utils/factories/composables/api/game/player/player-side/player-side.factory\";\n\ndescribe(\"Player Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a player when called.\", () => {\n      const role = createFakePlayerRole();\n      const side = createFakePlayerSide();\n      const attributes = [\n        createFakePlayerAttribute(),\n        createFakePlayerAttribute(),\n        createFakePlayerAttribute(),\n      ];\n      const createdPlayer = Player.create({\n        _id: \"1\",\n        name: \"Player 1\",\n        isAlive: true,\n        role,\n        side,\n        attributes,\n        extra: \"Extra\",\n      } as Player);\n      const expectedPlayer = new Player();\n      expectedPlayer._id = \"1\";\n      expectedPlayer.name = \"Player 1\";\n      expectedPlayer.isAlive = true;\n      expectedPlayer.role = role;\n      expectedPlayer.side = side;\n      expectedPlayer.attributes = attributes;\n\n      expect(createdPlayer).toStrictEqual<Player>(expectedPlayer);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/dto/create-game/create-game-player/create-game-player.dto.spec.ts": {
      "tests": [
        {
          "id": "138",
          "name": "Create Game Player Dto create should create a game player dto when called."
        }
      ],
      "source": "import { CreateGamePlayerDto } from \"~/composables/api/game/dto/create-game/create-game-player/create-game-player.dto\";\nimport { createFakeCreateGamePlayerRoleDto } from \"@tests/unit/utils/factories/composables/api/game/dto/create-game/create-game-player/create-game-player-role/create-game-player-role.dto.factory\";\nimport { createFakeCreateGamePlayerSideDto } from \"@tests/unit/utils/factories/composables/api/game/dto/create-game/create-game-player/create-game-player-side/create-game-player-side.dto.factory\";\n\ndescribe(\"Create Game Player Dto\", () => {\n  describe(\"create\", () => {\n    it(\"should create a game player dto when called.\", () => {\n      const expectedRole = createFakeCreateGamePlayerRoleDto({ name: \"werewolf\" });\n      const expectedSide = createFakeCreateGamePlayerSideDto();\n      const createGamePlayerDto = CreateGamePlayerDto.create({\n        name: \"Player 1\",\n        role: expectedRole,\n        side: {},\n        extra: \"Extra\",\n      } as CreateGamePlayerDto);\n      const expectedCreateGamePlayerDto = new CreateGamePlayerDto();\n      expectedCreateGamePlayerDto.name = \"Player 1\";\n      expectedCreateGamePlayerDto.role = expectedRole;\n      expectedCreateGamePlayerDto.side = expectedSide;\n\n      expect(createGamePlayerDto).toStrictEqual<CreateGamePlayerDto>(expectedCreateGamePlayerDto);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-history-record/game-history-record-player-attribute-alteration/game-history-record-player-attribute-alteration.class.spec.ts": {
      "tests": [
        {
          "id": "139",
          "name": "Game History Record Player Attribute Alteration Class create should create a game history record player attribute alteration when called."
        }
      ],
      "source": "import { GameHistoryRecordPlayerAttributeAlteration } from \"~/composables/api/game/types/game-history-record/game-history-record-player-attribute-alteration/game-history-record-player-attribute-alteration.class\";\n\ndescribe(\"Game History Record Player Attribute Alteration Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a game history record player attribute alteration when called.\", () => {\n      const gameHistoryRecordPlayerAttributeAlteration = GameHistoryRecordPlayerAttributeAlteration.create({\n        playerName: \"Player\",\n        name: \"drank-death-potion\",\n        source: \"witch\",\n        status: \"attached\",\n      });\n      const expectedGameHistoryRecordPlayerAttributeAlteration = new GameHistoryRecordPlayerAttributeAlteration();\n      expectedGameHistoryRecordPlayerAttributeAlteration.playerName = \"Player\";\n      expectedGameHistoryRecordPlayerAttributeAlteration.name = \"drank-death-potion\";\n      expectedGameHistoryRecordPlayerAttributeAlteration.source = \"witch\";\n      expectedGameHistoryRecordPlayerAttributeAlteration.status = \"attached\";\n\n      expect(gameHistoryRecordPlayerAttributeAlteration).toStrictEqual<GameHistoryRecordPlayerAttributeAlteration>(expectedGameHistoryRecordPlayerAttributeAlteration);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/game-options.class.spec.ts": {
      "tests": [
        {
          "id": "140",
          "name": "Game Options Class create should create a game options when called."
        }
      ],
      "source": "import { GameOptions } from \"~/composables/api/game/types/game-options/game-options.class\";\nimport { createFakeCompositionGameOptions } from \"@tests/unit/utils/factories/composables/api/game/game-options/composition-game-options/composition-game-options.factory\";\nimport { createFakeRolesGameOptions } from \"@tests/unit/utils/factories/composables/api/game/game-options/roles-game-options/roles-game-options.factory\";\nimport { createFakeVotesGameOptions } from \"@tests/unit/utils/factories/composables/api/game/game-options/votes-game-options/votes-game-options.factory\";\n\ndescribe(\"Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a game options when called.\", () => {\n      const composition = createFakeCompositionGameOptions();\n      const roles = createFakeRolesGameOptions();\n      const votes = createFakeVotesGameOptions();\n      const createdGameOptions = GameOptions.create({\n        composition,\n        roles,\n        votes,\n      });\n      const expectedGameOptions = new GameOptions();\n      expectedGameOptions.composition = composition;\n      expectedGameOptions.roles = roles;\n      expectedGameOptions.votes = votes;\n\n      expect(createdGameOptions).toStrictEqual<GameOptions>(expectedGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/sheriff-game-options/sheriff-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "141",
          "name": "Sheriff Game Options Class create should create a sheriff game options when called."
        }
      ],
      "source": "import { SheriffGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/sheriff-game-options/sheriff-game-options.class\";\nimport { createFakeSheriffElectionGameOptions } from \"@tests/unit/utils/factories/composables/api/game/game-options/roles-game-options/sheriff-game-options/sheriff-election-game-options/sheriff-election-game-options.factory\";\n\ndescribe(\"Sheriff Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a sheriff game options when called.\", () => {\n      const sheriffElectionGameOptions = createFakeSheriffElectionGameOptions();\n      const createdSheriffGameOptions = SheriffGameOptions.create({\n        mustSettleTieInVotes: false,\n        isEnabled: false,\n        hasDoubledVote: false,\n        electedAt: sheriffElectionGameOptions,\n      });\n      const expectedSheriffGameOptions = new SheriffGameOptions();\n      expectedSheriffGameOptions.mustSettleTieInVotes = false;\n      expectedSheriffGameOptions.isEnabled = false;\n      expectedSheriffGameOptions.hasDoubledVote = false;\n      expectedSheriffGameOptions.electedAt = sheriffElectionGameOptions;\n\n      expect(createdSheriffGameOptions).toStrictEqual<SheriffGameOptions>(expectedSheriffGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-voting/game-history-record-play-voting.class.spec.ts": {
      "tests": [
        {
          "id": "142",
          "name": "Game History Record Play Voting Class Create should create a game history record play voting when called."
        }
      ],
      "source": "import { GameHistoryRecordPlayVoting } from \"~/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-voting/game-history-record-play-voting.class\";\nimport { createFakePlayer } from \"@tests/unit/utils/factories/composables/api/game/player/player.factory\";\n\ndescribe(\"Game History Record Play Voting Class\", () => {\n  describe(\"Create\", () => {\n    it(\"should create a game history record play voting when called.\", () => {\n      const nominatedPlayers = [\n        createFakePlayer(),\n        createFakePlayer(),\n      ];\n      const gameHistoryRecordPlayVoting = GameHistoryRecordPlayVoting.create({\n        result: \"sheriff-election\",\n        nominatedPlayers,\n        extra: \"Extra\",\n      } as GameHistoryRecordPlayVoting);\n      const expectedGameHistoryRecordPlayVoting = new GameHistoryRecordPlayVoting();\n      expectedGameHistoryRecordPlayVoting.result = \"sheriff-election\";\n      expectedGameHistoryRecordPlayVoting.nominatedPlayers = nominatedPlayers;\n\n      expect(gameHistoryRecordPlayVoting).toStrictEqual<GameHistoryRecordPlayVoting>(expectedGameHistoryRecordPlayVoting);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-feedback/game-feedback.class.spec.ts": {
      "tests": [
        {
          "id": "143",
          "name": "Game Feedback class create should create a game feedback when called."
        }
      ],
      "source": "import { createFakeGameFeedback } from \"@tests/unit/utils/factories/composables/api/game/game-feedback/game-feedback.factory\";\nimport { GameFeedback } from \"~/composables/api/game/types/game-feedback/game-feedback.class\";\n\ndescribe(\"Game Feedback class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a game feedback when called.\", () => {\n      const createdAt = new Date();\n      const gameFeedback = createFakeGameFeedback({\n        _id: \"game-feedback-id\",\n        gameId: \"game-id\",\n        score: 5,\n        review: \"Great game!\",\n        hasEncounteredError: false,\n        createdAt,\n      });\n      const createdGameFeedback = GameFeedback.create(gameFeedback);\n      const expectedGameFeedback = new GameFeedback();\n      expectedGameFeedback._id = \"game-feedback-id\";\n      expectedGameFeedback.gameId = \"game-id\";\n      expectedGameFeedback.score = 5;\n      expectedGameFeedback.review = \"Great game!\";\n      expectedGameFeedback.hasEncounteredError = false;\n      expectedGameFeedback.createdAt = createdAt;\n\n      expect(createdGameFeedback).toStrictEqual<GameFeedback>(expectedGameFeedback);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-source/game-history-record-play-source.class.spec.ts": {
      "tests": [
        {
          "id": "144",
          "name": "Game History Record Play Source Class Create should create a game history record play source when called."
        }
      ],
      "source": "import { GameHistoryRecordPlaySource } from \"~/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-source/game-history-record-play-source.class\";\nimport { createFakePlayer } from \"@tests/unit/utils/factories/composables/api/game/player/player.factory\";\n\ndescribe(\"Game History Record Play Source Class\", () => {\n  describe(\"Create\", () => {\n    it(\"should create a game history record play source when called.\", () => {\n      const players = [\n        createFakePlayer(),\n        createFakePlayer(),\n      ];\n      const gameHistoryRecordPlaySource = GameHistoryRecordPlaySource.create({\n        name: \"sheriff\",\n        players,\n        extra: \"Extra\",\n      } as GameHistoryRecordPlaySource);\n      const expectedGameHistoryRecordPlaySource = new GameHistoryRecordPlaySource();\n      expectedGameHistoryRecordPlaySource.name = \"sheriff\";\n      expectedGameHistoryRecordPlaySource.players = players;\n\n      expect(gameHistoryRecordPlaySource).toStrictEqual<GameHistoryRecordPlaySource>(expectedGameHistoryRecordPlaySource);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/player/player-attribute/player-attribute.class.spec.ts": {
      "tests": [
        {
          "id": "145",
          "name": "Player Attribute Class create should create a player attribute when called."
        }
      ],
      "source": "import { PlayerAttribute } from \"~/composables/api/game/types/players/player-attribute/player-attribute.class\";\nimport { createFakePlayerAttributeActivation } from \"@tests/unit/utils/factories/composables/api/game/player/player-attribute/player-attribute-activation/player-attribute-activation.factory\";\n\ndescribe(\"Player Attribute Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a player attribute when called.\", () => {\n      const activeAt = createFakePlayerAttributeActivation();\n      const createdPlayerAttribute = PlayerAttribute.create({\n        name: \"sheriff\",\n        source: \"werewolves\",\n        activeAt,\n        remainingPhases: 1,\n      } as PlayerAttribute);\n      const expectedPlayerAttribute = new PlayerAttribute();\n      expectedPlayerAttribute.name = \"sheriff\";\n      expectedPlayerAttribute.source = \"werewolves\";\n      expectedPlayerAttribute.activeAt = activeAt;\n      expectedPlayerAttribute.remainingPhases = 1;\n\n      expect(createdPlayerAttribute).toStrictEqual<PlayerAttribute>(expectedPlayerAttribute);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/role/useRoleName.spec.ts": {
      "tests": [
        {
          "id": "146",
          "name": "Use Role Name Composable getRoleNameLabel should translate role when called with role name."
        },
        {
          "id": "147",
          "name": "Use Role Name Composable getDefiniteRoleNameLabel should translate definite role name when called with role name and count."
        }
      ],
      "source": "import { mockNuxtImport } from \"@nuxt/test-utils/runtime\";\n\nimport { useRoleName } from \"~/composables/api/role/useRoleName\";\nimport { createFakeI18n } from \"@tests/unit/utils/factories/composables/i18n/useI18n.factory\";\n\nconst { tMock } = vi.hoisted(() => ({ tMock: vi.fn() }));\n\ndescribe(\"Use Role Name Composable\", () => {\n  beforeEach(() => {\n    mockNuxtImport<() => ReturnType<typeof createFakeI18n>>(\n      \"useI18n\",\n    () => vi.fn(() => createFakeI18n({ t: tMock })),\n    );\n  });\n\n  describe(\"getRoleNameLabel\", () => {\n    it(\"should translate role when called with role name.\", () => {\n      useRoleName().getRoleNameLabel(\"werewolf\");\n\n      expect(tMock).toHaveBeenCalledExactlyOnceWith(\"shared.role.name.werewolf\");\n    });\n  });\n\n  describe(\"getDefiniteRoleNameLabel\", () => {\n    it(\"should translate definite role name when called with role name and count.\", () => {\n      useRoleName().getDefiniteRoleNameLabel(\"werewolf\", 1);\n\n      expect(tMock).toHaveBeenCalledExactlyOnceWith(\"shared.role.definiteName.werewolf\", 1);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/route/useWerewolvesAssistantRoutes.spec.ts": {
      "tests": [
        {
          "id": "148",
          "name": "Use Werewolves Assistant Routes Composable isOnGamePage should be set to true when route name is game."
        },
        {
          "id": "149",
          "name": "Use Werewolves Assistant Routes Composable isOnGamePage should be set to false when route name is not game."
        }
      ],
      "source": "import { mockNuxtImport } from \"@nuxt/test-utils/runtime\";\nimport type { RouteLocationNormalizedLoaded } from \"vue-router\";\n\nimport { useWerewolvesAssistantRoutes } from \"~/composables/route/useWerewolvesAssistantRoutes\";\n\nconst { mockedUseRoute } = vi.hoisted(() => ({ mockedUseRoute: { name: \"home\" } }));\n\ndescribe(\"Use Werewolves Assistant Routes Composable\", () => {\n  beforeEach(() => {\n    mockNuxtImport<typeof useRoute>(\"useRoute\", () => vi.fn(() => mockedUseRoute as RouteLocationNormalizedLoaded));\n  });\n\n  describe(\"isOnGamePage\", () => {\n    it(\"should be set to true when route name is game.\", () => {\n      const route = useRoute();\n      route.name = \"game-id\";\n      const { isOnGamePage } = useWerewolvesAssistantRoutes();\n\n      expect(isOnGamePage.value).toBeTruthy();\n    });\n\n    it(\"should be set to false when route name is not game.\", () => {\n      const route = useRoute();\n      route.name = \"home\";\n      const { isOnGamePage } = useWerewolvesAssistantRoutes();\n\n      expect(isOnGamePage.value).toBeFalsy();\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-target/game-history-record-play-target.class.spec.ts": {
      "tests": [
        {
          "id": "150",
          "name": "Game History Record Play Target Class Create should create a game history record play target when called."
        }
      ],
      "source": "import { GameHistoryRecordPlayTarget } from \"~/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-target/game-history-record-play-target.class\";\nimport { createFakePlayer } from \"@tests/unit/utils/factories/composables/api/game/player/player.factory\";\n\ndescribe(\"Game History Record Play Target Class\", () => {\n  describe(\"Create\", () => {\n    it(\"should create a game history record play target when called.\", () => {\n      const player = createFakePlayer();\n      const gameHistoryRecordPlayTarget = GameHistoryRecordPlayTarget.create({\n        player,\n        drankPotion: \"death\",\n        extra: \"Extra\",\n      } as GameHistoryRecordPlayTarget);\n      const expectedGameHistoryRecordPlayTarget = new GameHistoryRecordPlayTarget();\n      expectedGameHistoryRecordPlayTarget.player = player;\n      expectedGameHistoryRecordPlayTarget.drankPotion = \"death\";\n\n      expect(gameHistoryRecordPlayTarget).toStrictEqual<GameHistoryRecordPlayTarget>(expectedGameHistoryRecordPlayTarget);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-vote/game-history-record-play-vote.class.spec.ts": {
      "tests": [
        {
          "id": "151",
          "name": "Game History Record Play Vote Class Create should create a game history record play vote when called."
        }
      ],
      "source": "import { GameHistoryRecordPlayVote } from \"~/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-vote/game-history-record-play-vote.class\";\nimport { createFakePlayer } from \"@tests/unit/utils/factories/composables/api/game/player/player.factory\";\n\ndescribe(\"Game History Record Play Vote Class\", () => {\n  describe(\"Create\", () => {\n    it(\"should create a game history record play vote when called.\", () => {\n      const source = createFakePlayer();\n      const target = createFakePlayer();\n      const gameHistoryRecordPlayVote = GameHistoryRecordPlayVote.create({\n        source,\n        target,\n        extra: \"Extra\",\n      } as GameHistoryRecordPlayVote);\n      const expectedGameHistoryRecordPlayVote = new GameHistoryRecordPlayVote();\n      expectedGameHistoryRecordPlayVote.source = source;\n      expectedGameHistoryRecordPlayVote.target = target;\n\n      expect(gameHistoryRecordPlayVote).toStrictEqual<GameHistoryRecordPlayVote>(expectedGameHistoryRecordPlayVote);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction-boundaries/game-play-source-interaction-boundaries.class.spec.ts": {
      "tests": [
        {
          "id": "152",
          "name": "Game Play Source Interaction Boundaries Class create should create a game play source interaction boundaries when called."
        }
      ],
      "source": "import { GamePlaySourceInteractionBoundaries } from \"~/composables/api/game/types/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction-boundaries/game-play-source-interaction-boundaries.class\";\n\ndescribe(\"Game Play Source Interaction Boundaries Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a game play source interaction boundaries when called.\", () => {\n      const createdGamePlaySourceInteractionBoundaries = GamePlaySourceInteractionBoundaries.create({\n        min: 1,\n        max: 1,\n        extra: \"Extra\",\n      } as GamePlaySourceInteractionBoundaries);\n      const expectedGamePlaySourceInteractionBoundaries = new GamePlaySourceInteractionBoundaries();\n      expectedGamePlaySourceInteractionBoundaries.min = 1;\n      expectedGamePlaySourceInteractionBoundaries.max = 1;\n\n      expect(createdGamePlaySourceInteractionBoundaries).toStrictEqual<GamePlaySourceInteractionBoundaries>(expectedGamePlaySourceInteractionBoundaries);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-play/game-play.class.spec.ts": {
      "tests": [
        {
          "id": "153",
          "name": "Game Play Class create should create a game play when called."
        }
      ],
      "source": "import { GamePlay } from \"~/composables/api/game/types/game-play/game-play.class\";\nimport { createFakeGamePlaySource } from \"@tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source.factory\";\n\ndescribe(\"Game Play Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a game play when called.\", () => {\n      const source = createFakeGamePlaySource();\n      const createdGamePlay = GamePlay.create({\n        type: \"target\",\n        source,\n        action: \"eat\",\n        occurrence: \"on-days\",\n        causes: [\"stuttering-judge-request\"],\n        extra: \"Extra\",\n      } as GamePlay);\n      const expectedGamePlay = new GamePlay();\n      expectedGamePlay.type = \"target\";\n      expectedGamePlay.source = source;\n      expectedGamePlay.action = \"eat\";\n      expectedGamePlay.occurrence = \"on-days\";\n      expectedGamePlay.causes = [\"stuttering-judge-request\"];\n\n      expect(createdGamePlay).toStrictEqual<GamePlay>(expectedGamePlay);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/dto/create-game-feedback/create-game-feedback.dto.spec.ts": {
      "tests": [
        {
          "id": "154",
          "name": "Create Game Feedback Dto create should create game feedback dto when called."
        }
      ],
      "source": "import { createFakeCreateGameFeedbackDto } from \"@tests/unit/utils/factories/composables/api/game/dto/create-game-feedback/create-game-feedback.dto.factory\";\nimport { CreateGameFeedbackDto } from \"~/composables/api/game/dto/create-game-feedback/create-game-feedback.dto\";\n\ndescribe(\"Create Game Feedback Dto\", () => {\n  describe(\"create\", () => {\n    it(\"should create game feedback dto when called.\", () => {\n      const gameFeedbackDto = createFakeCreateGameFeedbackDto({\n        score: 5,\n        review: \"Great game!\",\n        hasEncounteredError: false,\n      });\n      const createdGameFeedbackDto = CreateGameFeedbackDto.create(gameFeedbackDto);\n      const expectedGameFeedbackDto = new CreateGameFeedbackDto();\n      expectedGameFeedbackDto.score = 5;\n      expectedGameFeedbackDto.review = \"Great game!\";\n      expectedGameFeedbackDto.hasEncounteredError = false;\n\n      expect(createdGameFeedbackDto).toStrictEqual<CreateGameFeedbackDto>(expectedGameFeedbackDto);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/cupid-game-options/cupid-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "155",
          "name": "Cupid Game Options Class create should create a cupid game options when called."
        }
      ],
      "source": "import { CupidGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/cupid-game-options/cupid-game-options.class\";\nimport { createFakeCupidLoversGameOptions } from \"@tests/unit/utils/factories/composables/api/game/game-options/roles-game-options/cupid-game-options/cupid-lovers-game-options/cupid-lovers-game-options.factory\";\n\ndescribe(\"Cupid Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a cupid game options when called.\", () => {\n      const loversOptions = createFakeCupidLoversGameOptions();\n      const createdCupidGameOptions = CupidGameOptions.create({\n        mustWinWithLovers: true,\n        lovers: loversOptions,\n      });\n      const expectedCupidGameOptions = new CupidGameOptions();\n      expectedCupidGameOptions.mustWinWithLovers = true;\n      expectedCupidGameOptions.lovers = loversOptions;\n\n      expect(createdCupidGameOptions).toStrictEqual<CupidGameOptions>(expectedCupidGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-play/game-play-source/game-play-source.class.spec.ts": {
      "tests": [
        {
          "id": "156",
          "name": "Game Play Source Class create should create a game play source when called."
        }
      ],
      "source": "import { GamePlaySource } from \"~/composables/api/game/types/game-play/game-play-source/game-play-source.class\";\nimport { createFakePlayer } from \"@tests/unit/utils/factories/composables/api/game/player/player.factory\";\n\ndescribe(\"Game Play Source Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a game play source when called.\", () => {\n      const players = [\n        createFakePlayer(),\n        createFakePlayer(),\n        createFakePlayer(),\n      ];\n      const createdGamePlaySource = GamePlaySource.create({\n        name: \"sheriff\",\n        players,\n        interactions: [],\n        extra: \"Extra\",\n      } as GamePlaySource);\n      const expectedGamePlaySource = new GamePlaySource();\n      expectedGamePlaySource.name = \"sheriff\";\n      expectedGamePlaySource.players = players;\n      expectedGamePlaySource.interactions = [];\n\n      expect(createdGamePlaySource).toStrictEqual<GamePlaySource>(expectedGamePlaySource);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/pied-piper-game-options/pied-piper-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "157",
          "name": "Pied Piper Game Options Class create should create a pied piper game options when called."
        }
      ],
      "source": "import { PiedPiperGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/pied-piper-game-options/pied-piper-game-options.class\";\n\ndescribe(\"Pied Piper Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a pied piper game options when called.\", () => {\n      const createdPiedPiperGameOptions = PiedPiperGameOptions.create({\n        isPowerlessOnWerewolvesSide: false,\n        charmedPeopleCountPerNight: 1,\n        areCharmedPeopleRevealed: true,\n      });\n      const expectedPiedPiperGameOptions = new PiedPiperGameOptions();\n      expectedPiedPiperGameOptions.isPowerlessOnWerewolvesSide = false;\n      expectedPiedPiperGameOptions.charmedPeopleCountPerNight = 1;\n      expectedPiedPiperGameOptions.areCharmedPeopleRevealed = true;\n\n      expect(createdPiedPiperGameOptions).toStrictEqual<PiedPiperGameOptions>(expectedPiedPiperGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-event/game-event.class.spec.ts": {
      "tests": [
        {
          "id": "158",
          "name": "Game Event class create should create a game event when called."
        }
      ],
      "source": "import { createFakeGameEvent } from \"@tests/unit/utils/factories/composables/api/game/game-event/game-event.factory\";\nimport { createFakePlayer } from \"@tests/unit/utils/factories/composables/api/game/player/player.factory\";\nimport { GameEvent } from \"~/composables/api/game/types/game-event/game-event.class\";\n\ndescribe(\"Game Event class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a game event when called.\", () => {\n      const players = [\n        createFakePlayer(),\n        createFakePlayer(),\n        createFakePlayer(),\n      ];\n      const gameEvent = createFakeGameEvent({ players });\n      const createdGameEvent = GameEvent.create(gameEvent);\n      const expectedGameEvent = new GameEvent();\n      expectedGameEvent.type = gameEvent.type;\n      expectedGameEvent.players = gameEvent.players;\n\n      expect(createdGameEvent).toStrictEqual<GameEvent>(expectedGameEvent);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/role/role.class.spec.ts": {
      "tests": [
        {
          "id": "159",
          "name": "Role Class create should create a role when called."
        }
      ],
      "source": "import { Role } from \"~/composables/api/role/types/role.class\";\nimport { createFakeRole } from \"@tests/unit/utils/factories/composables/api/role/role.factory\";\n\ndescribe(\"Role Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a role when called.\", () => {\n      const role = createFakeRole();\n      const createdRole = Role.create(role);\n      const expectedRole = new Role();\n      expectedRole.name = role.name;\n      expectedRole.side = role.side;\n      expectedRole.type = role.type;\n      expectedRole.origin = role.origin;\n      expectedRole.minInGame = role.minInGame;\n      expectedRole.maxInGame = role.maxInGame;\n      expectedRole.additionalCardsEligibleRecipients = role.additionalCardsEligibleRecipients;\n      expectedRole.recommendedMinPlayers = role.recommendedMinPlayers;\n\n      expect(createdRole).toStrictEqual<Role>(expectedRole);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/player/usePlayers.spec.ts": {
      "tests": [
        {
          "id": "160",
          "name": "Use Players Composable getPlayersNamesText should return player names text when called."
        },
        {
          "id": "161",
          "name": "Use Players Composable getPlayersNamesText should return empty string when there are no players."
        }
      ],
      "source": "import { usePlayers } from \"~/composables/api/game/player/usePlayers\";\nimport { createFakePlayer } from \"@tests/unit/utils/factories/composables/api/game/player/player.factory\";\n\ndescribe(\"Use Players Composable\", () => {\n  describe(\"getPlayersNamesText\", () => {\n    it(\"should return player names text when called.\", () => {\n      const players = [\n        createFakePlayer({ name: \"player-1\" }),\n        createFakePlayer({ name: \"player-2\" }),\n        createFakePlayer({ name: \"player-3\" }),\n      ];\n      const text = usePlayers().getPlayersNamesText(players);\n      const expectedText = \"player-1, player-2 shared.and player-3\";\n\n      expect(text).toBe(expectedText);\n    });\n\n    it(\"should return empty string when there are no players.\", () => {\n      const text = usePlayers().getPlayersNamesText([]);\n\n      expect(text).toBe(\"\");\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/dto/create-game/create-game-additional-card/create-game-additional-card.dto.spec.ts": {
      "tests": [
        {
          "id": "162",
          "name": "Create Game Additional Card Dto create should create a game additional card dto when called."
        }
      ],
      "source": "import { CreateGameAdditionalCardDto } from \"~/composables/api/game/dto/create-game/create-game-additional-card/create-game-additional-card.dto\";\n\ndescribe(\"Create Game Additional Card Dto\", () => {\n  describe(\"create\", () => {\n    it(\"should create a game additional card dto when called.\", () => {\n      const createGameAdditionalCardDto = CreateGameAdditionalCardDto.create({\n        roleName: \"werewolf\",\n        recipient: \"thief\",\n        extra: \"Extra\",\n      } as CreateGameAdditionalCardDto);\n      const expectedCreateGameAdditionalCardDto = new CreateGameAdditionalCardDto();\n      expectedCreateGameAdditionalCardDto.roleName = \"werewolf\";\n      expectedCreateGameAdditionalCardDto.recipient = \"thief\";\n\n      expect(createGameAdditionalCardDto).toStrictEqual<CreateGameAdditionalCardDto>(expectedCreateGameAdditionalCardDto);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/misc/useTimers.spec.ts": {
      "tests": [
        {
          "id": "163",
          "name": "Use Timers Composable getSecondsInMinutesLabel should return only minutes when there are no remaining seconds."
        },
        {
          "id": "164",
          "name": "Use Timers Composable getSecondsInMinutesLabel should return only seconds when there are no minutes."
        },
        {
          "id": "165",
          "name": "Use Timers Composable getSecondsInMinutesLabel should return minutes and seconds when there are both."
        }
      ],
      "source": "import { useTimers } from \"~/composables/misc/useTimers\";\n\ndescribe(\"Use Timers Composable\", () => {\n  describe(\"getSecondsInMinutesLabel\", () => {\n    it(\"should return only minutes when there are no remaining seconds.\", () => {\n      const result = useTimers().getSecondsInMinutesLabel(60);\n\n      expect(result).toBe(\"shared.time.minute, {\\\"count\\\":1}, 1\");\n    });\n\n    it(\"should return only seconds when there are no minutes.\", () => {\n      const result = useTimers().getSecondsInMinutesLabel(30);\n\n      expect(result).toBe(\"shared.time.second, {\\\"count\\\":30}, 30\");\n    });\n\n    it(\"should return minutes and seconds when there are both.\", () => {\n      const result = useTimers().getSecondsInMinutesLabel(90);\n\n      expect(result).toBe(\"shared.time.minute, {\\\"count\\\":1}, 1 shared.and shared.time.second, {\\\"count\\\":30}, 30\");\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-additional-card/game-additional-card.class.spec.ts": {
      "tests": [
        {
          "id": "166",
          "name": "Game Additional Card Class Create should create a game additional card when called."
        }
      ],
      "source": "import { GameAdditionalCard } from \"~/composables/api/game/types/game-additional-card/game-additional-card.class\";\n\ndescribe(\"Game Additional Card Class\", () => {\n  describe(\"Create\", () => {\n    it(\"should create a game additional card when called.\", () => {\n      const gameAdditionalCard = GameAdditionalCard.create({\n        _id: \"id\",\n        isUsed: false,\n        recipient: \"thief\",\n        roleName: \"seer\",\n        extra: \"Extra\",\n      } as GameAdditionalCard);\n      const expectedGameAdditionalCard = new GameAdditionalCard();\n      expectedGameAdditionalCard._id = \"id\";\n      expectedGameAdditionalCard.isUsed = false;\n      expectedGameAdditionalCard.recipient = \"thief\";\n      expectedGameAdditionalCard.roleName = \"seer\";\n\n      expect(gameAdditionalCard).toStrictEqual<GameAdditionalCard>(expectedGameAdditionalCard);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/player/player-attribute/player-attribute-activation/player-attribute-activation.class.spec.ts": {
      "tests": [
        {
          "id": "167",
          "name": "Player Attribute Activation Class create should create a player attribute activation when called."
        }
      ],
      "source": "import { PlayerAttributeActivation } from \"~/composables/api/game/types/players/player-attribute/player-attribute-activation/player-attribute-activation.class\";\n\ndescribe(\"Player Attribute Activation Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a player attribute activation when called.\", () => {\n      const createdPlayerAttributeActivation = PlayerAttributeActivation.create({\n        turn: 5,\n        phaseName: \"night\",\n        extra: \"Extra\",\n      } as PlayerAttributeActivation);\n      const expectedPlayerAttributeActivation = new PlayerAttributeActivation();\n      expectedPlayerAttributeActivation.turn = 5;\n      expectedPlayerAttributeActivation.phaseName = \"night\";\n\n      expect(createdPlayerAttributeActivation).toStrictEqual<PlayerAttributeActivation>(expectedPlayerAttributeActivation);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/sheriff-game-options/sheriff-election-game-options/sheriff-election-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "168",
          "name": "Sheriff Election Game Options Class create should create a sheriff election game options when called."
        }
      ],
      "source": "import { SheriffElectionGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/sheriff-game-options/sheriff-election-game-options/sheriff-election-game-options.class\";\n\ndescribe(\"Sheriff Election Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a sheriff election game options when called.\", () => {\n      const createdSheriffElectionGameOptions = SheriffElectionGameOptions.create({\n        turn: 3,\n        phaseName: \"day\",\n      });\n      const expectedSheriffElectionGameOptions = new SheriffElectionGameOptions();\n      expectedSheriffElectionGameOptions.turn = 3;\n      expectedSheriffElectionGameOptions.phaseName = \"day\";\n\n      expect(createdSheriffElectionGameOptions).toStrictEqual<SheriffElectionGameOptions>(expectedSheriffElectionGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-victory/game-victory.class.spec.ts": {
      "tests": [
        {
          "id": "169",
          "name": "Game Victory Class create should create a game victory when called."
        }
      ],
      "source": "import { GameVictory } from \"~/composables/api/game/types/game-victory/game-victory.class\";\nimport { createFakePlayer } from \"@tests/unit/utils/factories/composables/api/game/player/player.factory\";\n\ndescribe(\"Game Victory Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a game victory when called.\", () => {\n      const winners = [\n        createFakePlayer(),\n        createFakePlayer(),\n      ];\n      const createdGameVictory = GameVictory.create({\n        type: \"werewolves\",\n        winners,\n        extra: \"Extra\",\n      } as GameVictory);\n      const expectedGameVictory = new GameVictory();\n      expectedGameVictory.type = \"werewolves\";\n      expectedGameVictory.winners = winners;\n\n      expect(createdGameVictory).toStrictEqual<GameVictory>(expectedGameVictory);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/wolf-hound-game-options/wolf-hound-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "170",
          "name": "Wolf Hound Game Options Class create should create a wolf hound game options when called."
        }
      ],
      "source": "import { WolfHoundGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/wolf-hound-game-options/wolf-hound-game-options.class\";\n\ndescribe(\"Wolf Hound Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a wolf hound game options when called.\", () => {\n      const createdWolfHoundGameOptions = WolfHoundGameOptions.create({\n        isSideRandomlyChosen: true,\n        isChosenSideRevealed: false,\n      });\n      const expectedWolfHoundGameOptions = new WolfHoundGameOptions();\n      expectedWolfHoundGameOptions.isSideRandomlyChosen = true;\n      expectedWolfHoundGameOptions.isChosenSideRevealed = false;\n\n      expect(createdWolfHoundGameOptions).toStrictEqual<WolfHoundGameOptions>(expectedWolfHoundGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/misc/useStrings.spec.ts": {
      "tests": [
        {
          "id": "171",
          "name": "Use Strings Composable convertBooleanAsAffirmativeString should return 'yes' when value is true."
        },
        {
          "id": "172",
          "name": "Use Strings Composable convertBooleanAsAffirmativeString should return 'no' when value is false."
        },
        {
          "id": "173",
          "name": "Use Strings Composable lowerCaseFirstLetter should return a string with the first letter in lowercase when called."
        }
      ],
      "source": "import { useStrings } from \"~/composables/misc/useStrings\";\n\ndescribe(\"Use Strings Composable\", () => {\n  describe(\"convertBooleanAsAffirmativeString\", () => {\n    it(\"should return 'yes' when value is true.\", () => {\n      const result = useStrings().convertBooleanAsAffirmativeString(true);\n\n      expect(result).toBe(\"yes\");\n    });\n\n    it(\"should return 'no' when value is false.\", () => {\n      const result = useStrings().convertBooleanAsAffirmativeString(false);\n\n      expect(result).toBe(\"no\");\n    });\n  });\n\n  describe(\"lowerCaseFirstLetter\", () => {\n    it(\"should return a string with the first letter in lowercase when called.\", () => {\n      const result = useStrings().lowerCaseFirstLetter(\"Test\");\n\n      expect(result).toBe(\"test\");\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/thief-game-options/thief-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "174",
          "name": "Thief Game Options Class create should create a thief game options when called."
        }
      ],
      "source": "import { ThiefGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/thief-game-options/thief-game-options.class\";\n\ndescribe(\"Thief Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a thief game options when called.\", () => {\n      const createdThiefGameOptions = ThiefGameOptions.create({\n        mustChooseBetweenWerewolves: false,\n        isChosenCardRevealed: false,\n      });\n      const expectedThiefGameOptions = new ThiefGameOptions();\n      expectedThiefGameOptions.mustChooseBetweenWerewolves = false;\n      expectedThiefGameOptions.isChosenCardRevealed = false;\n\n      expect(createdThiefGameOptions).toStrictEqual<ThiefGameOptions>(expectedThiefGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/useWerewolvesAssistantApi.spec.ts": {
      "tests": [
        {
          "id": "175",
          "name": "Use Werewolves Assistant Api Composable fetchWerewolvesAssistantApi should create a fetch instance for Werewolves Assistant API when called."
        }
      ],
      "source": "import { useWerewolvesAssistantApi } from \"~/composables/api/useWerewolvesAssistantApi\";\n\nconst hoistedMocks = vi.hoisted(() => ({ oFetch: { create: vi.fn() } }));\n\nvi.mock(\"ofetch\", () => ({\n  createFetch: vi.fn(() => hoistedMocks.oFetch),\n}));\n\ndescribe(\"Use Werewolves Assistant Api Composable\", () => {\n  describe(\"fetchWerewolvesAssistantApi\", () => {\n    it(\"should create a fetch instance for Werewolves Assistant API when called.\", () => {\n      useWerewolvesAssistantApi();\n\n      expect(hoistedMocks.oFetch.create).toHaveBeenCalledExactlyOnceWith({\n        baseURL: \"http://127.0.0.1\",\n        headers: { \"Content-Type\": \"application/json\" },\n        onResponseError: expect.any(Function) as () => void,\n      });\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/stuttering-judge-game-options/stuttering-judge-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "176",
          "name": "Stuttering Judge Game Options Class create should create a stuttering judge game options when called."
        }
      ],
      "source": "import { StutteringJudgeGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/stuttering-judge-game-options/stuttering-judge-game-options.class\";\n\ndescribe(\"Stuttering Judge Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a stuttering judge game options when called.\", () => {\n      const createdStutteringJudgeGameOptions = StutteringJudgeGameOptions.create({ voteRequestsCount: 3 });\n      const expectedStutteringJudgeGameOptions = new StutteringJudgeGameOptions();\n      expectedStutteringJudgeGameOptions.voteRequestsCount = 3;\n\n      expect(createdStutteringJudgeGameOptions).toStrictEqual<StutteringJudgeGameOptions>(expectedStutteringJudgeGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/misc/useArrays.spec.ts": {
      "tests": [
        {
          "id": "177",
          "name": "Use Arrays Composable insertIf should return an empty array when condition is false."
        },
        {
          "id": "178",
          "name": "Use Arrays Composable insertIf should return an array with the value when condition is true."
        }
      ],
      "source": "import { useArrays } from \"~/composables/misc/useArrays\";\n\ndescribe(\"Use Arrays Composable\", () => {\n  describe(\"insertIf\", () => {\n    it(\"should return an empty array when condition is false.\", () => {\n      const { insertIf } = useArrays();\n      const mustBeInserted = false;\n      const value = \"value\";\n      const result = insertIf(mustBeInserted, value);\n\n      expect(result).toStrictEqual<string[]>([]);\n    });\n\n    it(\"should return an array with the value when condition is true.\", () => {\n      const { insertIf } = useArrays();\n      const mustBeInserted = true;\n      const value = \"value\";\n      const result = insertIf(mustBeInserted, value);\n\n      expect(result).toStrictEqual<string[]>([value]);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/elder-game-options/elder-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "179",
          "name": "Elder Game Options Class create should create an elder game options when called."
        }
      ],
      "source": "import { ElderGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/elder-game-options/elder-game-options.class\";\n\ndescribe(\"Elder Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create an elder game options when called.\", () => {\n      const createdElderGameOptions = ElderGameOptions.create({\n        doesTakeHisRevenge: false,\n        livesCountAgainstWerewolves: 5,\n      });\n      const expectedElderGameOptions = new ElderGameOptions();\n      expectedElderGameOptions.doesTakeHisRevenge = false;\n      expectedElderGameOptions.livesCountAgainstWerewolves = 5;\n\n      expect(createdElderGameOptions).toStrictEqual<ElderGameOptions>(expectedElderGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/cupid-game-options/cupid-lovers-game-options/cupid-lovers-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "180",
          "name": "Cupid Lovers Game Options Class create should create a cupid lovers game options when called."
        }
      ],
      "source": "import { CupidLoversGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/cupid-game-options/cupid-lovers-game-options/cupid-lovers-game-options.class\";\n\ndescribe(\"Cupid Lovers Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a cupid lovers game options when called.\", () => {\n      const createdCupidLoversGameOptions = CupidLoversGameOptions.create({ doRevealRoleToEachOther: false });\n      const expectedCupidLoversGameOptions = new CupidLoversGameOptions();\n      expectedCupidLoversGameOptions.doRevealRoleToEachOther = false;\n\n      expect(createdCupidLoversGameOptions).toStrictEqual<CupidLoversGameOptions>(expectedCupidLoversGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/three-brothers-game-options/three-brothers-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "181",
          "name": "Three Brothers Game Options Class create should create a three brothers game options when called."
        }
      ],
      "source": "import { ThreeBrothersGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/three-brothers-game-options/three-brothers-game-options.class\";\n\ndescribe(\"Three Brothers Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a three brothers game options when called.\", () => {\n      const createdThreeBrothersGameOptions = ThreeBrothersGameOptions.create({ wakingUpInterval: 5 });\n      const expectedThreeBrothersGameOptions = new ThreeBrothersGameOptions();\n      expectedThreeBrothersGameOptions.wakingUpInterval = 5;\n\n      expect(createdThreeBrothersGameOptions).toStrictEqual<ThreeBrothersGameOptions>(expectedThreeBrothersGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/scandalmonger-game-options/scandalmonger-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "182",
          "name": "Scandalmonger Game Options Class create should create a scandalmonger game options when called."
        }
      ],
      "source": "import { ScandalmongerGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/scandalmonger-game-options/scandalmongonger-game-options.class\";\n\ndescribe(\"Scandalmonger Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a scandalmonger game options when called.\", () => {\n      const createdScandalmongerGameOptions = ScandalmongerGameOptions.create({ markPenalty: 4 });\n      const expectedScandalmongerGameOptions = new ScandalmongerGameOptions();\n      expectedScandalmongerGameOptions.markPenalty = 4;\n      \n      expect(createdScandalmongerGameOptions).toStrictEqual<ScandalmongerGameOptions>(expectedScandalmongerGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-phase/useGamePhase.spec.ts": {
      "tests": [
        {
          "id": "183",
          "name": "Use Game Phase Composable getGamePhaseWithTurnText should return game phase without turn text when phase is twilight."
        },
        {
          "id": "184",
          "name": "Use Game Phase Composable getGamePhaseWithTurnText should return game phase with turn text when called."
        }
      ],
      "source": "import { useGamePhase } from \"~/composables/api/game/game-phase/useGamePhase\";\n\ndescribe(\"Use Game Phase Composable\", () => {\n  describe(\"getGamePhaseWithTurnText\", () => {\n    it(\"should return game phase without turn text when phase is twilight.\", () => {\n      const expectedPhaseWithTurnText = \"shared.game.phase.twilight\";\n\n      expect(useGamePhase().getGamePhaseWithTurnText(\"twilight\", 3)).toBe(expectedPhaseWithTurnText);\n    });\n\n    it(\"should return game phase with turn text when called.\", () => {\n      const expectedPhaseWithTurnText = \"shared.game.phase.day 3\";\n\n      expect(useGamePhase().getGamePhaseWithTurnText(\"day\", 3)).toBe(expectedPhaseWithTurnText);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/player/player-role/player-role.class.spec.ts": {
      "tests": [
        {
          "id": "185",
          "name": "Player Role Class create should create a player role when called."
        }
      ],
      "source": "import { PlayerRole } from \"~/composables/api/game/types/players/player-role/player-role.class\";\n\ndescribe(\"Player Role Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a player role when called.\", () => {\n      const createdPlayerSide = PlayerRole.create({\n        original: \"werewolf\",\n        current: \"seer\",\n        isRevealed: true,\n        extra: \"Extra\",\n      } as PlayerRole);\n      const expectedPlayerSide = new PlayerRole();\n      expectedPlayerSide.original = \"werewolf\";\n      expectedPlayerSide.current = \"seer\";\n      expectedPlayerSide.isRevealed = true;\n\n      expect(createdPlayerSide).toStrictEqual<PlayerRole>(expectedPlayerSide);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/little-girl-game-options/little-girl-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "186",
          "name": "Little Girl Game Options Class create should create a little girl game options when called."
        }
      ],
      "source": "import { LittleGirlGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/little-girl-game-options/little-girl-game-options.class\";\n\ndescribe(\"Little Girl Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a little girl game options when called.\", () => {\n      const createdLittleGirlGameOptions = LittleGirlGameOptions.create({ isProtectedByDefender: true });\n      const expectedLittleGirlGameOptions = new LittleGirlGameOptions();\n      expectedLittleGirlGameOptions.isProtectedByDefender = true;\n\n      expect(createdLittleGirlGameOptions).toStrictEqual<LittleGirlGameOptions>(expectedLittleGirlGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/white-werewolf-game-options/white-werewolf-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "187",
          "name": "White Werewolf create should create a white werewolf game options when called."
        }
      ],
      "source": "import { WhiteWerewolfGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/white-werewolf-options/white-werewolf-game-options.class\";\n\ndescribe(\"White Werewolf\", () => {\n  describe(\"create\", () => {\n    it(\"should create a white werewolf game options when called.\", () => {\n      const createdWhiteWerewolfGameOptions = WhiteWerewolfGameOptions.create({ wakingUpInterval: 3 });\n      const expectedWhiteWerewolfGameOptions = new WhiteWerewolfGameOptions();\n      expectedWhiteWerewolfGameOptions.wakingUpInterval = 3;\n\n      expect(createdWhiteWerewolfGameOptions).toStrictEqual<WhiteWerewolfGameOptions>(expectedWhiteWerewolfGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/bear-tamer-game-options/bear-tamer-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "188",
          "name": "Bear Tamer Game Options Class create should create a bear tamer game options when called."
        }
      ],
      "source": "import { BearTamerGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/bear-tamer-game-options/bear-tamer-game-options.class\";\n\ndescribe(\"Bear Tamer Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a bear tamer game options when called.\", () => {\n      const createdBearTamerGameOptions = BearTamerGameOptions.create({ doesGrowlOnWerewolvesSide: false });\n      const expectedBearTamerGameOptions = new BearTamerGameOptions();\n      expectedBearTamerGameOptions.doesGrowlOnWerewolvesSide = false;\n\n      expect(createdBearTamerGameOptions).toStrictEqual<BearTamerGameOptions>(expectedBearTamerGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/seer-game-options/seer-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "189",
          "name": "Seer Game Options Class create should create a seer game options when called."
        }
      ],
      "source": "import { SeerGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/seer-game-options/seer-game-options.class\";\n\ndescribe(\"Seer Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a seer game options when called.\", () => {\n      const createdSeerGameOptions = SeerGameOptions.create({\n        isTalkative: false,\n        canSeeRoles: false,\n      });\n      const expectedSeerGameOptions = new SeerGameOptions();\n      expectedSeerGameOptions.isTalkative = false;\n      expectedSeerGameOptions.canSeeRoles = false;\n\n      expect(createdSeerGameOptions).toStrictEqual<SeerGameOptions>(expectedSeerGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/wild-child-game-options/wild-child-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "190",
          "name": "Wild Child Game Options Class create should create a wild child game options when called."
        }
      ],
      "source": "import { WildChildGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/wild-child-game-options/wild-child-game-options.class\";\n\ndescribe(\"Wild Child Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a wild child game options when called.\", () => {\n      const createdWildChildGameOptions = WildChildGameOptions.create({ isTransformationRevealed: true });\n      const expectedWildChildGameOptions = new WildChildGameOptions();\n      expectedWildChildGameOptions.isTransformationRevealed = true;\n\n      expect(createdWildChildGameOptions).toStrictEqual<WildChildGameOptions>(expectedWildChildGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/style/useAppBreakpoints.spec.ts": {
      "tests": [
        {
          "id": "191",
          "name": "Use App Breakpoints breakpoints should call smaller with MD breakpoint when called."
        }
      ],
      "source": "import type VueUseCore from \"@vueuse/core\";\n\nimport { useAppBreakpoints } from \"~/composables/style/useAppBreakpoints\";\n\nconst hoistedMocks = vi.hoisted(() => ({\n  useBreakpoints: {\n    smaller: vi.fn(),\n  },\n}));\n\nvi.mock(\"@vueuse/core\", async importOriginal => ({\n  ...await importOriginal<typeof VueUseCore>(),\n  useBreakpoints: (): typeof hoistedMocks.useBreakpoints => hoistedMocks.useBreakpoints,\n}));\n\ndescribe(\"Use App Breakpoints\", () => {\n  describe(\"breakpoints\", () => {\n    it(\"should call smaller with MD breakpoint when called.\", () => {\n      useAppBreakpoints();\n\n      expect(hoistedMocks.useBreakpoints.smaller).toHaveBeenCalledWith(\"md\");\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/two-sisters-game-options/two-sisters-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "192",
          "name": "Two Sisters Game Options Class create should create a two sisters game options when called."
        }
      ],
      "source": "import { TwoSistersGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/two-sisters-game-options/two-sisters-game-options.class\";\n\ndescribe(\"Two Sisters Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a two sisters game options when called.\", () => {\n      const createdTwoSistersGameOptions = TwoSistersGameOptions.create({ wakingUpInterval: 5 });\n      const expectedTwoSistersGameOptions = new TwoSistersGameOptions();\n      expectedTwoSistersGameOptions.wakingUpInterval = 5;\n\n      expect(createdTwoSistersGameOptions).toStrictEqual<TwoSistersGameOptions>(expectedTwoSistersGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/big-bad-wolf-options/big-bad-wolf-options.class.spec.ts": {
      "tests": [
        {
          "id": "193",
          "name": "Big Bad Wolf Game Options Class create should create a big bad wolf options when called."
        }
      ],
      "source": "import { BigBadWolfGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/big-bad-wolf-options/big-bad-wolf-options.class\";\n\ndescribe(\"Big Bad Wolf Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a big bad wolf options when called.\", () => {\n      const createdBigBadWolfOptions = BigBadWolfGameOptions.create({ isPowerlessIfWerewolfDies: false });\n      const expectedBigBadWolfOptions = new BigBadWolfGameOptions();\n      expectedBigBadWolfOptions.isPowerlessIfWerewolfDies = false;\n\n      expect(createdBigBadWolfOptions).toStrictEqual<BigBadWolfGameOptions>(expectedBigBadWolfOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/votes-game-options/votes-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "194",
          "name": "Votes Game Option Class create should create a votes game option when called."
        }
      ],
      "source": "import { VotesGameOptions } from \"~/composables/api/game/types/game-options/votes-game-options/votes-game-options.class\";\n\ndescribe(\"Votes Game Option Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a votes game option when called.\", () => {\n      const createdVotesGameOption = VotesGameOptions.create({\n        canBeSkipped: true,\n        duration: 10,\n      });\n      const expectedVotesGameOption = new VotesGameOptions();\n      expectedVotesGameOption.canBeSkipped = true;\n      expectedVotesGameOption.duration = 10;\n\n      expect(createdVotesGameOption).toStrictEqual<VotesGameOptions>(expectedVotesGameOption);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/composition-game-options/composition-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "195",
          "name": "Composition Game Options Class create should create a composition game options when called."
        }
      ],
      "source": "import { CompositionGameOptions } from \"~/composables/api/game/types/game-options/composition-game-options/composition-game-options.class\";\n\ndescribe(\"Composition Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a composition game options when called.\", () => {\n      const createdCompositionGameOptions = CompositionGameOptions.create({ isHidden: true });\n      const expectedCompositionGameOptions = new CompositionGameOptions();\n      expectedCompositionGameOptions.isHidden = true;\n\n      expect(createdCompositionGameOptions).toStrictEqual<CompositionGameOptions>(expectedCompositionGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/actor-game-options/actor-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "196",
          "name": "Actor Game Options Class create should create an actor game options when called."
        }
      ],
      "source": "import { ActorGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/actor-game-options/actor-game-options.class\";\n\ndescribe(\"Actor Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create an actor game options when called.\", () => {\n      const createdActorGameOptions = ActorGameOptions.create({\n        isPowerlessOnWerewolvesSide: false,\n      });\n      const expectedActorGameOptions = new ActorGameOptions();\n      expectedActorGameOptions.isPowerlessOnWerewolvesSide = false;\n\n      expect(createdActorGameOptions).toStrictEqual<ActorGameOptions>(expectedActorGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/defender-game-options/defender-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "197",
          "name": "Defender Game Options Class create should create a defender game options when called."
        }
      ],
      "source": "import { DefenderGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/defender-game-options/defender-game-options.class\";\n\ndescribe(\"Defender Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a defender game options when called.\", () => {\n      const createdDefenderGameOptions = DefenderGameOptions.create({ canProtectTwice: true });\n      const expectedDefenderGameOptions = new DefenderGameOptions();\n      expectedDefenderGameOptions.canProtectTwice = true;\n\n      expect(createdDefenderGameOptions).toStrictEqual<DefenderGameOptions>(expectedDefenderGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/werewolf-game-options/werewolf-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "198",
          "name": "Werewolf Game Options Class create should create a werewolf game options when called."
        }
      ],
      "source": "import { WerewolfGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/werewolf-game-options/werewolf-game-options.class\";\n\ndescribe(\"Werewolf Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a werewolf game options when called.\", () => {\n      const createdWerewolfGameOptions = WerewolfGameOptions.create({ canEatEachOther: true });\n      const expectedWerewolfGameOptions = new WerewolfGameOptions();\n      expectedWerewolfGameOptions.canEatEachOther = true;\n\n      expect(createdWerewolfGameOptions).toStrictEqual<WerewolfGameOptions>(expectedWerewolfGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/player/player-side/player-side.class.spec.ts": {
      "tests": [
        {
          "id": "199",
          "name": "Player Side Class create should create a player side when called."
        }
      ],
      "source": "import { PlayerSide } from \"~/composables/api/game/types/players/player-side/player-side.class\";\n\ndescribe(\"Player Side Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a player side when called.\", () => {\n      const createdPlayerSide = PlayerSide.create({\n        original: \"werewolves\",\n        current: \"werewolves\",\n        extra: \"Extra\",\n      } as PlayerSide);\n      const expectedPlayerSide = new PlayerSide();\n      expectedPlayerSide.original = \"werewolves\";\n      expectedPlayerSide.current = \"werewolves\";\n\n      expect(createdPlayerSide).toStrictEqual<PlayerSide>(expectedPlayerSide);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/witch-game-options/witch-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "200",
          "name": "Witch Game Options Class create should create a witch game options when called."
        }
      ],
      "source": "import { WitchGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/witch-game-options/witch-game-options.class\";\n\ndescribe(\"Witch Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a witch game options when called.\", () => {\n      const createdWitchGameOptions = WitchGameOptions.create({ doesKnowWerewolvesTargets: false });\n      const expectedWitchGameOptions = new WitchGameOptions();\n      expectedWitchGameOptions.doesKnowWerewolvesTargets = false;\n\n      expect(createdWitchGameOptions).toStrictEqual<WitchGameOptions>(expectedWitchGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/idiot-game-options/idiot-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "201",
          "name": "Idiot Game Options Class create should create an idiot game options when called."
        }
      ],
      "source": "import { IdiotGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/idiot-game-options/idiot-game-options.class\";\n\ndescribe(\"Idiot Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create an idiot game options when called.\", () => {\n      const createdIdiotGameOptions = IdiotGameOptions.create({ doesDieOnElderDeath: false });\n      const expectedIdiotGameOptions = new IdiotGameOptions();\n      expectedIdiotGameOptions.doesDieOnElderDeath = false;\n\n      expect(createdIdiotGameOptions).toStrictEqual<IdiotGameOptions>(expectedIdiotGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/fox-game-options/fox-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "202",
          "name": "Fox Game Options Class create should create a fox game options when called."
        }
      ],
      "source": "import { FoxGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/fox-game-options/fox-game-options.class\";\n\ndescribe(\"Fox Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a fox game options when called.\", () => {\n      const createdFoxGameOptions = FoxGameOptions.create({ isPowerlessIfMissesWerewolf: false });\n      const expectedFoxGameOptions = new FoxGameOptions();\n      expectedFoxGameOptions.isPowerlessIfMissesWerewolf = false;\n\n      expect(createdFoxGameOptions).toStrictEqual<FoxGameOptions>(expectedFoxGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-phase/game-phase.class.spec.ts": {
      "tests": [
        {
          "id": "203",
          "name": "Game Phase Class create should create a game phase when called."
        }
      ],
      "source": "import { GamePhase } from \"~/composables/api/game/types/game-phase/game-phase.class\";\n\ndescribe(\"Game Phase Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a game phase when called.\", () => {\n      const createdGamePhase = GamePhase.create({\n        name: \"day\",\n        tick: 1,\n      } as GamePhase);\n      const expectedGamePhase = new GamePhase();\n      expectedGamePhase.name = \"day\";\n      expectedGamePhase.tick = 1;\n\n      expect(createdGamePhase).toStrictEqual<GamePhase>(expectedGamePhase);\n    });\n  });\n});"
    }
  },
  "projectRoot": "/Users/antoinezanardi/WebstormProjects/werewolves-assistant-web-next",
  "config": {
    "cleanTempDir": "always",
    "incremental": true,
    "incrementalFile": "tests/stryker/incremental/composables-incremental.json",
    "checkers": [
      "typescript"
    ],
    "tsconfigFile": "tsconfig.json",
    "testRunner": "vitest",
    "ignoreStatic": true,
    "mutate": [
      "app/composables/**/*.ts"
    ],
    "plugins": [
      "@stryker-mutator/vitest-runner",
      "@stryker-mutator/typescript-checker",
      "./config/stryker/plugins/stryker-define-props-ignorer-plugin.mjs",
      "./config/stryker/plugins/stryker-define-emits-ignorer-plugin.mjs",
      "./config/stryker/plugins/stryker-define-page-meta-ignorer-plugin.mjs",
      "./config/stryker/plugins/stryker-define-model-ignorer-plugin.mjs",
      "./config/stryker/plugins/stryker-define-expose-ignorer-plugin.mjs"
    ],
    "ignorers": [
      "defineProps",
      "defineEmits",
      "definePageMeta",
      "defineModel",
      "defineExpose"
    ],
    "ignorePatterns": [
      "!.nuxt/",
      ".github/",
      ".husky/",
      ".output/",
      ".run/",
      ".idea/",
      "config/commitlint",
      "config/cucumber",
      "config/eslint",
      "config/lint-staged",
      "config/stryker",
      "tests/acceptance",
      "tests/stryker",
      "tests/unit/coverage",
      "scripts/",
      "server/",
      ".editorconfig",
      ".npmrc",
      ".nvmrc",
      ".releaserc.js",
      ".DS_Store",
      ".validate-branch-namerc.json",
      "CHANGELOG.md",
      "LICENSE",
      "pnpm-lock.yaml",
      "sonar-project.properties",
      "README.md"
    ],
    "vitest": {
      "configFile": "config/vitest/vitest.composables-unit-tests-config.ts"
    },
    "reporters": [
      "clear-text",
      "progress",
      "html",
      "json"
    ],
    "htmlReporter": {
      "fileName": "tests/stryker/coverage/index.html"
    },
    "jsonReporter": {
      "fileName": "tests/stryker/coverage/mutation.json"
    },
    "thresholds": {
      "high": 100,
      "low": 100,
      "break": 100
    },
    "dryRunTimeoutMinutes": 10,
    "disableTypeChecks": true,
    "configFile": "config/stryker/stryker-composables.conf.mjs",
    "allowConsoleColors": true,
    "checkerNodeArgs": [],
    "commandRunner": {
      "command": "npm test"
    },
    "coverageAnalysis": "perTest",
    "clearTextReporter": {
      "allowColor": true,
      "allowEmojis": false,
      "logTests": true,
      "maxTestsToLog": 3,
      "reportTests": true,
      "reportMutants": true,
      "reportScoreTable": true,
      "skipFull": false
    },
    "dashboard": {
      "baseUrl": "https://dashboard.stryker-mutator.io/api/reports",
      "reportType": "full"
    },
    "dryRunOnly": false,
    "eventReporter": {
      "baseDir": "reports/mutation/events"
    },
    "force": false,
    "fileLogLevel": "off",
    "inPlace": false,
    "logLevel": "info",
    "maxConcurrentTestRunners": 9007199254740991,
    "maxTestRunnerReuse": 0,
    "mutator": {
      "plugins": null,
      "excludedMutations": []
    },
    "appendPlugins": [],
    "symlinkNodeModules": true,
    "tempDirName": ".stryker-tmp",
    "testRunnerNodeArgs": [],
    "timeoutFactor": 1.5,
    "timeoutMS": 5000,
    "warnings": true,
    "disableBail": false,
    "allowEmpty": false,
    "typescriptChecker": {
      "prioritizePerformanceOverAccuracy": true
    }
  },
  "framework": {
    "name": "StrykerJS",
    "version": "8.6.0",
    "branding": {
      "homepageUrl": "https://stryker-mutator.io",
      "imageUrl": "data:image/svg+xml;utf8,%3Csvg viewBox='0 0 1458 1458' xmlns='http://www.w3.org/2000/svg' fill-rule='evenodd' clip-rule='evenodd' stroke-linejoin='round' stroke-miterlimit='2'%3E%3Cpath fill='none' d='M0 0h1458v1458H0z'/%3E%3CclipPath id='a'%3E%3Cpath d='M0 0h1458v1458H0z'/%3E%3C/clipPath%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M1458 729c0 402.655-326.345 729-729 729S0 1131.655 0 729C0 326.445 326.345 0 729 0s729 326.345 729 729' fill='%23e74c3c' fill-rule='nonzero'/%3E%3Cpath d='M778.349 1456.15L576.6 1254.401l233-105 85-78.668v-64.332l-257-257-44-187-50-208 251.806-82.793L1076.6 389.401l380.14 379.15c-19.681 367.728-311.914 663.049-678.391 687.599z' fill-opacity='.3'/%3E%3Cpath d='M753.4 329.503c41.79 0 74.579 7.83 97.925 25.444 23.571 18.015 41.69 43.956 55.167 77.097l11.662 28.679 165.733-58.183-14.137-32.13c-26.688-60.655-64.896-108.61-114.191-144.011-49.329-35.423-117.458-54.302-204.859-54.302-50.78 0-95.646 7.376-134.767 21.542-40.093 14.671-74.09 34.79-102.239 60.259-28.84 26.207-50.646 57.06-65.496 92.701-14.718 35.052-22.101 72.538-22.101 112.401 0 72.536 20.667 133.294 61.165 182.704 38.624 47.255 98.346 88.037 179.861 121.291 42.257 17.475 78.715 33.125 109.227 46.994 27.193 12.361 49.294 26.124 66.157 41.751 15.309 14.186 26.497 30.584 33.63 49.258 7.721 20.214 11.16 45.69 11.16 76.402 0 28.021-4.251 51.787-13.591 71.219-8.832 18.374-20.171 33.178-34.523 44.219-14.787 11.374-31.193 19.591-49.393 24.466-19.68 5.359-39.14 7.993-58.69 7.993-29.359 0-54.387-3.407-75.182-10.747-20.112-7.013-37.144-16.144-51.259-27.486-13.618-11.009-24.971-23.766-33.744-38.279-9.64-15.8-17.272-31.924-23.032-48.408l-10.965-31.376-161.669 60.585 10.734 30.124c10.191 28.601 24.197 56.228 42.059 82.748 18.208 27.144 41.322 51.369 69.525 72.745 27.695 21.075 60.904 38.218 99.481 51.041 37.777 12.664 82.004 19.159 132.552 19.159 49.998 0 95.818-8.321 137.611-24.622 42.228-16.471 78.436-38.992 108.835-67.291 30.719-28.597 54.631-62.103 71.834-100.642 17.263-38.56 25.923-79.392 25.923-122.248 0-54.339-8.368-100.37-24.208-138.32-16.29-38.759-38.252-71.661-65.948-98.797-26.965-26.418-58.269-48.835-93.858-67.175-33.655-17.241-69.196-33.11-106.593-47.533-35.934-13.429-65.822-26.601-89.948-39.525-22.153-11.868-40.009-24.21-53.547-37.309-11.429-11.13-19.83-23.678-24.718-37.664-5.413-15.49-7.98-33.423-7.98-53.577 0-40.883 11.293-71.522 37.086-90.539 28.443-20.825 64.985-30.658 109.311-30.658z' fill='%23f1c40f' fill-rule='nonzero'/%3E%3Cpath d='M720 0h18v113h-18zM1458 738v-18h-113v18h113zM720 1345h18v113h-18zM113 738v-18H0v18h113z'/%3E%3C/g%3E%3C/svg%3E"
    },
    "dependencies": {
      "@stryker-mutator/typescript-checker": "8.6.0",
      "typescript": "5.6.3"
    }
  }
}