{
  "files": {
    "app.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "0",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {}",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "992"
          ],
          "coveredBy": [
            "990",
            "991",
            "992",
            "993"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 31
            },
            "start": {
              "column": 9,
              "line": 20
            }
          }
        },
        {
          "id": "1",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"\",\n}",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "992"
          ],
          "coveredBy": [
            "990",
            "991",
            "992",
            "993"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 21
            },
            "start": {
              "column": 12,
              "line": 21
            }
          }
        },
        {
          "id": "2",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "992"
          ],
          "coveredBy": [
            "990",
            "991",
            "992",
            "993"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 30
            },
            "start": {
              "column": 9,
              "line": 22
            }
          }
        },
        {
          "id": "3",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {},\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "992"
          ],
          "coveredBy": [
            "990",
            "991",
            "992",
            "993"
          ],
          "location": {
            "end": {
              "column": 75,
              "line": 23
            },
            "start": {
              "column": 5,
              "line": 23
            }
          }
        },
        {
          "id": "4",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "992"
          ],
          "coveredBy": [
            "990",
            "991",
            "992",
            "993"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 23
            },
            "start": {
              "column": 13,
              "line": 23
            }
          }
        },
        {
          "id": "5",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "992"
          ],
          "coveredBy": [
            "990",
            "991",
            "992",
            "993"
          ],
          "location": {
            "end": {
              "column": 72,
              "line": 23
            },
            "start": {
              "column": 44,
              "line": 23
            }
          }
        },
        {
          "id": "6",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {},\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "992"
          ],
          "coveredBy": [
            "990",
            "991",
            "992",
            "993"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 24
            },
            "start": {
              "column": 5,
              "line": 24
            }
          }
        },
        {
          "id": "7",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "992"
          ],
          "coveredBy": [
            "990",
            "991",
            "992",
            "993"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 24
            },
            "start": {
              "column": 13,
              "line": 24
            }
          }
        },
        {
          "id": "8",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "992"
          ],
          "coveredBy": [
            "990",
            "991",
            "992",
            "993"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 24
            },
            "start": {
              "column": 33,
              "line": 24
            }
          }
        },
        {
          "id": "9",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {},\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "992"
          ],
          "coveredBy": [
            "990",
            "991",
            "992",
            "993"
          ],
          "location": {
            "end": {
              "column": 73,
              "line": 25
            },
            "start": {
              "column": 5,
              "line": 25
            }
          }
        },
        {
          "id": "10",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "992"
          ],
          "coveredBy": [
            "990",
            "991",
            "992",
            "993"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 25
            },
            "start": {
              "column": 13,
              "line": 25
            }
          }
        },
        {
          "id": "11",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "992"
          ],
          "coveredBy": [
            "990",
            "991",
            "992",
            "993"
          ],
          "location": {
            "end": {
              "column": 70,
              "line": 25
            },
            "start": {
              "column": 39,
              "line": 25
            }
          }
        },
        {
          "id": "12",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {},\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "992"
          ],
          "coveredBy": [
            "990",
            "991",
            "992",
            "993"
          ],
          "location": {
            "end": {
              "column": 73,
              "line": 26
            },
            "start": {
              "column": 5,
              "line": 26
            }
          }
        },
        {
          "id": "13",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "992"
          ],
          "coveredBy": [
            "990",
            "991",
            "992",
            "993"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 26
            },
            "start": {
              "column": 13,
              "line": 26
            }
          }
        },
        {
          "id": "14",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "992"
          ],
          "coveredBy": [
            "990",
            "991",
            "992",
            "993"
          ],
          "location": {
            "end": {
              "column": 71,
              "line": 26
            },
            "start": {
              "column": 34,
              "line": 26
            }
          }
        },
        {
          "id": "15",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {},\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "992"
          ],
          "coveredBy": [
            "990",
            "991",
            "992",
            "993"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 27
            },
            "start": {
              "column": 5,
              "line": 27
            }
          }
        },
        {
          "id": "16",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "992"
          ],
          "coveredBy": [
            "990",
            "991",
            "992",
            "993"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 27
            },
            "start": {
              "column": 13,
              "line": 27
            }
          }
        },
        {
          "id": "17",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "992"
          ],
          "coveredBy": [
            "990",
            "991",
            "992",
            "993"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 27
            },
            "start": {
              "column": 33,
              "line": 27
            }
          }
        },
        {
          "id": "18",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {},\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "992"
          ],
          "coveredBy": [
            "990",
            "991",
            "992",
            "993"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 28
            },
            "start": {
              "column": 5,
              "line": 28
            }
          }
        },
        {
          "id": "19",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "992"
          ],
          "coveredBy": [
            "990",
            "991",
            "992",
            "993"
          ],
          "location": {
            "end": {
              "column": 24,
              "line": 28
            },
            "start": {
              "column": 13,
              "line": 28
            }
          }
        },
        {
          "id": "20",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "992"
          ],
          "coveredBy": [
            "990",
            "991",
            "992",
            "993"
          ],
          "location": {
            "end": {
              "column": 41,
              "line": 28
            },
            "start": {
              "column": 35,
              "line": 28
            }
          }
        },
        {
          "id": "21",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {},\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "992"
          ],
          "coveredBy": [
            "990",
            "991",
            "992",
            "993"
          ],
          "location": {
            "end": {
              "column": 46,
              "line": 29
            },
            "start": {
              "column": 5,
              "line": 29
            }
          }
        },
        {
          "id": "22",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"dark\",\n      \"name\": \"\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "992"
          ],
          "coveredBy": [
            "990",
            "991",
            "992",
            "993"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 29
            },
            "start": {
              "column": 13,
              "line": 29
            }
          }
        },
        {
          "id": "23",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"shared.werewolvesAssistant\",\n        \"name\": \"application-name\",\n      },\n      Object {\n        \"content\": \"Antoine ZANARDI\",\n        \"name\": \"creator\",\n      },\n      Object {\n        \"content\": \"components.App.seoDescription\",\n        \"name\": \"description\",\n      },\n      Object {\n        \"content\": \"width=device-width, initial-scale=1\",\n        \"name\": \"viewport\",\n      },\n      Object {\n        \"content\": \"utf-8\",\n        \"name\": \"charset\",\n      },\n      Object {\n        \"content\": \"nuxt\",\n        \"name\": \"generator\",\n      },\n      Object {\n        \"content\": \"dark\",\n        \"name\": \"color-scheme\",\n      },\n    ],\n    \"title\": \"shared.werewolvesAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"shared.werewolvesAssistant\",\n      \"name\": \"application-name\",\n    },\n    Object {\n      \"content\": \"Antoine ZANARDI\",\n      \"name\": \"creator\",\n    },\n    Object {\n      \"content\": \"components.App.seoDescription\",\n      \"name\": \"description\",\n    },\n    Object {\n      \"content\": \"width=device-width, initial-scale=1\",\n      \"name\": \"viewport\",\n    },\n    Object {\n      \"content\": \"utf-8\",\n      \"name\": \"charset\",\n    },\n    Object {\n      \"content\": \"nuxt\",\n      \"name\": \"generator\",\n    },\n    Object {\n      \"content\": \"\",\n      \"name\": \"color-scheme\",\n    },\n  ],\n  \"title\": \"shared.werewolvesAssistant\",\n}",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "992"
          ],
          "coveredBy": [
            "990",
            "991",
            "992",
            "993"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 29
            },
            "start": {
              "column": 38,
              "line": 29
            }
          }
        }
      ],
      "source": "<template>\n  <NuxtLayout>\n    <NuxtPage\n      class=\"h-full p-2\"\n    />\n\n    <VuePrimeToast position=\"bottom-right\"/>\n  </NuxtLayout>\n</template>\n\n<script lang=\"ts\" setup>\nimport \"reflect-metadata\";\n\nimport { useRolesStore } from \"~/stores/role/useRolesStore\";\n\nconst rolesStore = useRolesStore();\n\nconst { t } = useI18n();\n\nuseHead({\n  title: t(\"shared.werewolvesAssistant\"),\n  meta: [\n    { name: \"application-name\", content: t(\"shared.werewolvesAssistant\") },\n    { name: \"creator\", content: \"Antoine ZANARDI\" },\n    { name: \"description\", content: t(\"components.App.seoDescription\") },\n    { name: \"viewport\", content: \"width=device-width, initial-scale=1\" },\n    { name: \"charset\", content: \"utf-8\" },\n    { name: \"generator\", content: \"nuxt\" },\n    { name: \"color-scheme\", content: \"dark\" },\n  ],\n});\n\nvoid rolesStore.fetchAndSetRoles();\n</script>\n\n<style lang=\"scss\" scoped>\n.page-content {\n  padding: 10px;\n}\n</style>"
    },
    "components/layouts/default/NavBar/ParametersMenu/ParametersMenu.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "24",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Parameters Menu Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "406"
          ],
          "coveredBy": [
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "939",
            "991"
          ],
          "location": {
            "end": {
              "column": 3,
              "line": 49
            },
            "start": {
              "column": 42,
              "line": 36
            }
          }
        },
        {
          "id": "25",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "409"
          ],
          "coveredBy": [
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "939",
            "991"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 49
            },
            "start": {
              "column": 49,
              "line": 36
            }
          }
        },
        {
          "id": "26",
          "mutatorName": "BooleanLiteral",
          "replacement": "!game.value._id",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "409"
          ],
          "coveredBy": [
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "939",
            "991"
          ],
          "location": {
            "end": {
              "column": 28,
              "line": 37
            },
            "start": {
              "column": 12,
              "line": 37
            }
          }
        },
        {
          "id": "27",
          "mutatorName": "BooleanLiteral",
          "replacement": "game.value._id",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "409"
          ],
          "coveredBy": [
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "939",
            "991"
          ],
          "location": {
            "end": {
              "column": 28,
              "line": 37
            },
            "start": {
              "column": 13,
              "line": 37
            }
          }
        },
        {
          "id": "28",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected [ { visible: false, …(2) }, { …(4) } ] to strictly equal [ { visible: false, …(2) }, { …(4) } ]",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "410"
          ],
          "coveredBy": [
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "939",
            "991"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 38
            },
            "start": {
              "column": 12,
              "line": 38
            }
          }
        },
        {
          "id": "29",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "409"
          ],
          "coveredBy": [
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "939",
            "991"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 48
            },
            "start": {
              "column": 10,
              "line": 39
            }
          }
        },
        {
          "id": "30",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "409"
          ],
          "coveredBy": [
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "939",
            "991"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 47
            },
            "start": {
              "column": 5,
              "line": 40
            }
          }
        },
        {
          "id": "31",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "409"
          ],
          "coveredBy": [
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "939",
            "991"
          ],
          "location": {
            "end": {
              "column": 54,
              "line": 41
            },
            "start": {
              "column": 16,
              "line": 41
            }
          }
        },
        {
          "id": "32",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected [ { visible: false, …(2) }, { …(4) } ] to strictly equal [ { visible: false, …(2) }, { …(4) } ]",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "410"
          ],
          "coveredBy": [
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "939",
            "991"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 42
            },
            "start": {
              "column": 13,
              "line": 42
            }
          }
        },
        {
          "id": "33",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "409"
          ],
          "coveredBy": [
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "939",
            "991"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 43
            },
            "start": {
              "column": 17,
              "line": 43
            }
          }
        },
        {
          "id": "34",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected [ { visible: false, …(2) }, { …(4) } ] to strictly equal [ { visible: false, …(2) }, { …(4) } ]",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "410"
          ],
          "coveredBy": [
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "939",
            "991"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 43
            },
            "start": {
              "column": 17,
              "line": 43
            }
          }
        },
        {
          "id": "35",
          "mutatorName": "EqualityOperator",
          "replacement": "game.value.status === \"playing\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "409"
          ],
          "coveredBy": [
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "939",
            "991"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 43
            },
            "start": {
              "column": 17,
              "line": 43
            }
          }
        },
        {
          "id": "36",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "409"
          ],
          "coveredBy": [
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "939",
            "991"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 43
            },
            "start": {
              "column": 39,
              "line": 43
            }
          }
        },
        {
          "id": "37",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "409"
          ],
          "coveredBy": [
            "409",
            "413"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 46
            },
            "start": {
              "column": 28,
              "line": 44
            }
          }
        },
        {
          "id": "38",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Parameters Menu Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "406"
          ],
          "coveredBy": [
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "939",
            "991"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 61
            },
            "start": {
              "column": 50,
              "line": 51
            }
          }
        },
        {
          "id": "39",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "Snapshot `Parameters Menu Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "406"
          ],
          "coveredBy": [
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "939",
            "991"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 61
            },
            "start": {
              "column": 56,
              "line": 51
            }
          }
        },
        {
          "id": "40",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected [ { visible: false, …(2) }, {} ] to strictly equal [ { visible: false, …(2) }, { …(4) } ]",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "410"
          ],
          "coveredBy": [
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "939",
            "991"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 60
            },
            "start": {
              "column": 3,
              "line": 53
            }
          }
        },
        {
          "id": "41",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected [ { visible: false, …(2) }, …(1) ] to strictly equal [ { visible: false, …(2) }, { …(4) } ]",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "410"
          ],
          "coveredBy": [
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "939",
            "991"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 54
            },
            "start": {
              "column": 14,
              "line": 54
            }
          }
        },
        {
          "id": "42",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected [ { visible: false, …(2) }, { …(4) } ] to strictly equal [ { visible: false, …(2) }, { …(4) } ]",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "410"
          ],
          "coveredBy": [
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "939",
            "991"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 55
            },
            "start": {
              "column": 11,
              "line": 55
            }
          }
        },
        {
          "id": "43",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected [ { visible: false, …(2) }, { …(4) } ] to strictly equal [ { visible: false, …(2) }, { …(4) } ]",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "410"
          ],
          "coveredBy": [
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "939",
            "991"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 56
            },
            "start": {
              "column": 19,
              "line": 56
            }
          }
        },
        {
          "id": "44",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "414"
          ],
          "coveredBy": [
            "414"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 59
            },
            "start": {
              "column": 21,
              "line": 57
            }
          }
        },
        {
          "id": "45",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/\",\n], but it was called with \"\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "414"
          ],
          "coveredBy": [
            "414"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 58
            },
            "start": {
              "column": 23,
              "line": 58
            }
          }
        },
        {
          "id": "46",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "407"
          ],
          "coveredBy": [
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 70
            },
            "start": {
              "column": 56,
              "line": 65
            }
          }
        },
        {
          "id": "47",
          "mutatorName": "BooleanLiteral",
          "replacement": "parametersMenu.value",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "407"
          ],
          "coveredBy": [
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414"
          ],
          "location": {
            "end": {
              "column": 28,
              "line": 66
            },
            "start": {
              "column": 7,
              "line": 66
            }
          }
        },
        {
          "id": "48",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "407"
          ],
          "coveredBy": [
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414"
          ],
          "location": {
            "end": {
              "column": 28,
              "line": 66
            },
            "start": {
              "column": 7,
              "line": 66
            }
          }
        },
        {
          "id": "49",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "408"
          ],
          "coveredBy": [
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414"
          ],
          "location": {
            "end": {
              "column": 28,
              "line": 66
            },
            "start": {
              "column": 7,
              "line": 66
            }
          }
        },
        {
          "id": "50",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "408"
          ],
          "coveredBy": [
            "408"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 68
            },
            "start": {
              "column": 30,
              "line": 66
            }
          }
        },
        {
          "id": "51",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"Parameters Menu is not initialized\",\n], but it was called with \"\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "408"
          ],
          "coveredBy": [
            "408"
          ],
          "location": {
            "end": {
              "column": 59,
              "line": 67
            },
            "start": {
              "column": 23,
              "line": 67
            }
          }
        },
        {
          "id": "52",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "409"
          ],
          "coveredBy": [
            "409",
            "413"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 75
            },
            "start": {
              "column": 29,
              "line": 72
            }
          }
        },
        {
          "id": "53",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"summary\": \"components.ParametersMenu.gameCanceled\",\n  },\n], but it was called with Object {}",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "409"
          ],
          "coveredBy": [
            "409",
            "413"
          ],
          "location": {
            "end": {
              "column": 75,
              "line": 74
            },
            "start": {
              "column": 19,
              "line": 74
            }
          }
        },
        {
          "id": "54",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"summary\": \"components.ParametersMenu.gameCanceled\",\n  },\n], but it was called with Object {\n  \"summary\": \"\",\n}",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "409"
          ],
          "coveredBy": [
            "409",
            "413"
          ],
          "location": {
            "end": {
              "column": 72,
              "line": 74
            },
            "start": {
              "column": 32,
              "line": 74
            }
          }
        }
      ],
      "source": "<template>\n  <div id=\"parameters-menu\">\n    <VuePrimeButton\n      :aria-label=\"$t('components.ParametersMenu.parameters')\"\n      icon=\"fa fa-cog\"\n      severity=\"secondary\"\n      type=\"button\"\n      @click=\"toggleParametersMenu\"\n    />\n\n    <VuePrimeMenu\n      id=\"overlay-menu\"\n      ref=\"parametersMenu\"\n      :aria-label=\"$t('components.ParametersMenu.parametersMenu')\"\n      :model=\"parametersMenuItems\"\n      popup\n    />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { storeToRefs } from \"pinia\";\nimport type { MenuItem } from \"primevue/menuitem\";\nimport { ref } from \"vue\";\n\nimport { VuePrimeMenu } from \"#components\";\nimport { useVuePrimeToasts } from \"~/composables/vue-prime/useVuePrimeToasts\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\n\nconst gameStore = useGameStore();\nconst { cancelGame: cancelGameFromStore } = gameStore;\nconst { game } = storeToRefs(gameStore);\nconst { t } = useI18n();\nconst { addSuccessToast } = useVuePrimeToasts();\n\nconst gameMenuItems = computed<MenuItem>(() => ({\n  visible: !!game.value._id,\n  label: t(\"components.ParametersMenu.game\"),\n  items: [\n    {\n      label: t(\"components.ParametersMenu.cancelGame\"),\n      icon: \"fa fa-ban text-danger\",\n      disabled: game.value.status !== \"playing\",\n      command: (): void => {\n        cancelGame();\n      },\n    },\n  ],\n}));\n\nconst parametersMenuItems = computed<MenuItem[]>(() => [\n  gameMenuItems.value,\n  {\n    label: t(\"components.ParametersMenu.backToHome\"),\n    icon: \"fa fa-sign-out\",\n    arialLabel: t(\"components.ParametersMenu.backToHome\"),\n    command(): void {\n      void navigateTo(\"/\");\n    },\n  },\n]);\n\nconst parametersMenu = ref<InstanceType<typeof VuePrimeMenu> | null>(null);\n\nfunction toggleParametersMenu(event: MouseEvent): void {\n  if (!parametersMenu.value) {\n    throw createError(\"Parameters Menu is not initialized\");\n  }\n  parametersMenu.value.toggle(event);\n}\n\nfunction cancelGame(): void {\n  void cancelGameFromStore();\n  addSuccessToast({ summary: t(\"components.ParametersMenu.gameCanceled\") });\n}\n</script>"
    },
    "components/pages/about/AboutAvailableRoles/AboutAvailableRoleDescription/AboutAvailableRoleDescription.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "55",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `About Available Role Description Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "892"
          ],
          "coveredBy": [
            "892",
            "893",
            "894",
            "895",
            "896",
            "897"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 50
            },
            "start": {
              "column": 69,
              "line": 48
            }
          }
        },
        {
          "id": "56",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `About Available Role Description Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "892"
          ],
          "coveredBy": [
            "892",
            "893",
            "894",
            "895",
            "896",
            "897"
          ],
          "location": {
            "end": {
              "column": 82,
              "line": 49
            },
            "start": {
              "column": 12,
              "line": 49
            }
          }
        },
        {
          "id": "57",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `About Available Role Description Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "892"
          ],
          "coveredBy": [
            "892",
            "893",
            "894",
            "895",
            "896",
            "897"
          ],
          "location": {
            "end": {
              "column": 120,
              "line": 49
            },
            "start": {
              "column": 84,
              "line": 49
            }
          }
        }
      ],
      "source": "<template>\n  <div class=\"flex\">\n    <div\n      id=\"role-left-description\"\n      class=\"flex flex-col items-center justify-center\"\n    >\n      <RoleImage\n        :alt=\"getRoleDescriptionLeftImageAlt(role.name)\"\n        class=\"available-role-description-role-image\"\n        :role-name=\"role.name\"\n        sizes=\"150\"\n      />\n\n      <h2 class=\"available-role-description-role-name mt-3\">\n        {{ getRoleNameLabel(role.name) }}\n      </h2>\n\n      <RoleTypeBadge\n        class=\"available-role-description-role-type-badge mt-3\"\n        :role-type=\"role.type\"\n      />\n\n      <RoleOriginBadge\n        class=\"available-role-description-role-origin-badge mt-3\"\n        :role-origin=\"role.origin\"\n      />\n    </div>\n\n    <RoleDescriptionLines :role=\"role\"/>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { AboutAvailableRoleDescriptionProps } from \"~/components/pages/about/AboutAvailableRoles/AboutAvailableRoleDescription/about-available-role-description.types\";\nimport RoleDescriptionLines from \"~/components/shared/role/RoleDescriptionLines/RoleDescriptionLines.vue\";\nimport RoleImage from \"~/components/shared/role/RoleImage/RoleImage.vue\";\nimport RoleOriginBadge from \"~/components/shared/role/RoleOriginBadge/RoleOriginBadge.vue\";\nimport RoleTypeBadge from \"~/components/shared/role/RoleTypeBadge/RoleTypeBadge.vue\";\nimport type { RoleName } from \"~/composables/api/role/types/role.types\";\nimport { useRoleName } from \"~/composables/api/role/useRoleName\";\n\ndefineProps<AboutAvailableRoleDescriptionProps>();\n\nconst { t } = useI18n();\n\nconst { getRoleNameLabel } = useRoleName();\n\nfunction getRoleDescriptionLeftImageAlt(roleName: RoleName): string {\n  return t(\"components.AboutAvailableRoleDescription.roleDescriptionLeftImageAlt\", { role: getRoleNameLabel(roleName) });\n}\n</script>\n\n<style scoped lang=\"scss\">\n#role-left-description {\n  min-width: 200px;\n}\n</style>"
    },
    "components/pages/about/AboutAvailableRoles/AboutAvailableRoles.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "58",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected '' to be 'components.AboutAvailableRoles.assist…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "474"
          ],
          "coveredBy": [
            "469",
            "470",
            "471",
            "472",
            "473",
            "474",
            "475",
            "476",
            "477",
            "478"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 84
            },
            "start": {
              "column": 63,
              "line": 79
            }
          }
        },
        {
          "id": "59",
          "mutatorName": "BooleanLiteral",
          "replacement": "roles.value",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "469"
          ],
          "coveredBy": [
            "469",
            "470",
            "471",
            "472",
            "473",
            "474",
            "475",
            "476",
            "477",
            "478"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 80
            },
            "start": {
              "column": 7,
              "line": 80
            }
          }
        },
        {
          "id": "60",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected '' to be 'components.AboutAvailableRoles.assist…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "474"
          ],
          "coveredBy": [
            "469",
            "470",
            "471",
            "472",
            "473",
            "474",
            "475",
            "476",
            "477",
            "478"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 80
            },
            "start": {
              "column": 7,
              "line": 80
            }
          }
        },
        {
          "id": "61",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "469"
          ],
          "coveredBy": [
            "469",
            "470",
            "471",
            "472",
            "473",
            "474",
            "475",
            "476",
            "477",
            "478"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 80
            },
            "start": {
              "column": 7,
              "line": 80
            }
          }
        },
        {
          "id": "62",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "469"
          ],
          "coveredBy": [
            "469",
            "470",
            "471",
            "472",
            "473",
            "474",
            "475",
            "476",
            "477",
            "478"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 82
            },
            "start": {
              "column": 21,
              "line": 80
            }
          }
        },
        {
          "id": "63",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected ', 3' to be 'components.AboutAvailableRoles.assist…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "474"
          ],
          "coveredBy": [
            "474",
            "475",
            "476",
            "477",
            "478"
          ],
          "location": {
            "end": {
              "column": 66,
              "line": 83
            },
            "start": {
              "column": 12,
              "line": 83
            }
          }
        },
        {
          "id": "64",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected { headerAction: { …(1) } } to strictly equal { Object (headerAction) }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "476"
          ],
          "coveredBy": [
            "474",
            "475",
            "476",
            "477",
            "478"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 88
            },
            "start": {
              "column": 79,
              "line": 86
            }
          }
        },
        {
          "id": "65",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { Object (headerAction) } to strictly equal { Object (headerAction) }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "476"
          ],
          "coveredBy": [
            "474",
            "475",
            "476",
            "477",
            "478"
          ],
          "location": {
            "end": {
              "column": 73,
              "line": 87
            },
            "start": {
              "column": 12,
              "line": 87
            }
          }
        },
        {
          "id": "66",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected { Object (headerAction) } to strictly equal { Object (headerAction) }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "476"
          ],
          "coveredBy": [
            "474",
            "475",
            "476",
            "477",
            "478"
          ],
          "location": {
            "end": {
              "column": 111,
              "line": 87
            },
            "start": {
              "column": 75,
              "line": 87
            }
          }
        },
        {
          "id": "67",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected undefined to be 'components.AboutAvailableRoles.availa…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "477"
          ],
          "coveredBy": [
            "474",
            "475",
            "476",
            "477",
            "478"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 92
            },
            "start": {
              "column": 69,
              "line": 90
            }
          }
        },
        {
          "id": "68",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected ', {\"role\":\"werewolf\"}' to be 'components.AboutAvailableRoles.availa…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "477"
          ],
          "coveredBy": [
            "474",
            "475",
            "476",
            "477",
            "478"
          ],
          "location": {
            "end": {
              "column": 63,
              "line": 91
            },
            "start": {
              "column": 12,
              "line": 91
            }
          }
        },
        {
          "id": "69",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected 'components.AboutAvailableRoles.availa…' to be 'components.AboutAvailableRoles.availa…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "477"
          ],
          "coveredBy": [
            "474",
            "475",
            "476",
            "477",
            "478"
          ],
          "location": {
            "end": {
              "column": 101,
              "line": 91
            },
            "start": {
              "column": 65,
              "line": 91
            }
          }
        }
      ],
      "source": "<template>\n  <div id=\"about-available-roles\">\n    <div class=\"flex items-center\">\n      <RoleImage\n        id=\"about-available-roles-title-role-image\"\n        :alt=\"$t('components.AboutAvailableRoles.availableRolesImage')\"\n        class=\"me-3\"\n        role-name=\"angel\"\n        sizes=\"50\"\n      />\n\n      <h2 id=\"about-available-roles-title\">\n        {{ $t('components.AboutAvailableRoles.availableRoles') }}\n      </h2>\n    </div>\n\n    <VuePrimeDivider/>\n\n    <div\n      v-if=\"!roles\"\n      id=\"loading-roles-container\"\n      class=\"flex flex-col items-center justify-center\"\n    >\n      <TextProgressSpinner\n        id=\"loading-roles-spinner\"\n        :text=\"$t('components.AboutAvailableRoles.loadingRoles')\"\n      />\n    </div>\n\n    <div v-else>\n      <p id=\"about-available-roles-first-section\">\n        {{ availableRolesText }}\n      </p>\n\n      <VuePrimeAccordion\n        class=\"w-full\"\n        multiple\n      >\n        <VuePrimeAccordionTab\n          v-for=\"role in roles\"\n          :key=\"role.name\"\n          :pt=\"{ 'headerAction': { 'aria-label': getAvailableRoleAccordionHeaderAriaLabel(role.name) } }\"\n        >\n          <template #header>\n            <div class=\"available-role-image-header flex items-center\">\n              <RoleImage\n                :alt=\"getAvailableRoleHeaderImageAlt(role.name)\"\n                :role-name=\"role.name\"\n                sizes=\"40\"\n              />\n\n              <div class=\"ms-2\">\n                {{ getRoleNameLabel(role.name) }}\n              </div>\n            </div>\n          </template>\n\n          <AboutAvailableRoleDescription :role=\"role\"/>\n        </VuePrimeAccordionTab>\n      </VuePrimeAccordion>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\n\nimport AboutAvailableRoleDescription from \"~/components/pages/about/AboutAvailableRoles/AboutAvailableRoleDescription/AboutAvailableRoleDescription.vue\";\nimport TextProgressSpinner from \"~/components/shared/misc/TextProgressSpinner/TextProgressSpinner.vue\";\nimport RoleImage from \"~/components/shared/role/RoleImage/RoleImage.vue\";\nimport type { RoleName } from \"~/composables/api/role/types/role.types\";\nimport { useRoleName } from \"~/composables/api/role/useRoleName\";\nimport { useRolesStore } from \"~/stores/role/useRolesStore\";\n\nconst { t } = useI18n();\nconst { getRoleNameLabel } = useRoleName();\nconst { roles } = storeToRefs(useRolesStore());\n\nconst availableRolesText = computed<string | undefined>(() => {\n  if (!roles.value) {\n    return undefined;\n  }\n  return t(\"components.AboutAvailableRoles.assistantHasManyRoles\", roles.value.length);\n});\n\nfunction getAvailableRoleAccordionHeaderAriaLabel(roleName: RoleName): string {\n  return t(\"components.AboutAvailableRoles.clickToExpandRoleDescription\", { role: getRoleNameLabel(roleName) });\n}\n\nfunction getAvailableRoleHeaderImageAlt(roleName: RoleName): string {\n  return t(\"components.AboutAvailableRoles.availableRoleImage\", { role: getRoleNameLabel(roleName) });\n}\n</script>"
    },
    "components/pages/game/GameCanceled/GameCanceled.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "70",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"title\": \"components.GameCanceled.gameCanceled\",\n  },\n], but it was called with Object {}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "1045"
          ],
          "coveredBy": [
            "1044",
            "1045",
            "1046"
          ],
          "location": {
            "end": {
              "column": 61,
              "line": 33
            },
            "start": {
              "column": 9,
              "line": 33
            }
          }
        },
        {
          "id": "71",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"title\": \"components.GameCanceled.gameCanceled\",\n  },\n], but it was called with Object {\n  \"title\": \"\",\n}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "1045"
          ],
          "coveredBy": [
            "1044",
            "1045",
            "1046"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 33
            },
            "start": {
              "column": 20,
              "line": 33
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-canceled\"\n    class=\"flex flex-col items-center justify-center\"\n  >\n    <h1\n      id=\"game-canceled-text\"\n      class=\"flex flex-col items-center justify-center\"\n    >\n      <i class=\"fa fa-2x fa-ban mb-3 text-error\"/>\n\n      <span>\n        {{ $t(\"components.GameCanceled.gameCanceled\") }}\n      </span>\n    </h1>\n\n    <div>\n      <VuePrimeDivider class=\"mb-4\"/>\n\n      <CreateAnotherGameButton/>\n\n      <BackToHomeButton/>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport BackToHomeButton from \"~/components/shared/buttons/BackToHomeButton/BackToHomeButton.vue\";\nimport CreateAnotherGameButton from \"~/components/shared/buttons/CreateAnotherGameButton/CreateAnotherGameButton.vue\";\n\nconst { t } = useI18n();\n\nuseHead({ title: t(\"components.GameCanceled.gameCanceled\") });\n</script>"
    },
    "components/pages/game/GameNotFound/GameNotFound.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "72",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"title\": \"components.GameNotFound.gameNotFound\",\n  },\n], but it was called with Object {}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "1039"
          ],
          "coveredBy": [
            "1038",
            "1039",
            "1040"
          ],
          "location": {
            "end": {
              "column": 61,
              "line": 33
            },
            "start": {
              "column": 9,
              "line": 33
            }
          }
        },
        {
          "id": "73",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"title\": \"components.GameNotFound.gameNotFound\",\n  },\n], but it was called with Object {\n  \"title\": \"\",\n}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "1039"
          ],
          "coveredBy": [
            "1038",
            "1039",
            "1040"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 33
            },
            "start": {
              "column": 20,
              "line": 33
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-not-found\"\n    class=\"flex flex-col items-center justify-center\"\n  >\n    <h1\n      id=\"game-not-found-text\"\n      class=\"flex flex-col items-center justify-center\"\n    >\n      <i class=\"fa fa-2x fa-question-circle mb-3 text-warning\"/>\n\n      <span>\n        {{ $t(\"components.GameNotFound.gameNotFound\") }}\n      </span>\n    </h1>\n\n    <div>\n      <VuePrimeDivider class=\"mb-4\"/>\n\n      <CreateAnotherGameButton class=\"me-2\"/>\n\n      <BackToHomeButton/>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport BackToHomeButton from \"~/components/shared/buttons/BackToHomeButton/BackToHomeButton.vue\";\nimport CreateAnotherGameButton from \"~/components/shared/buttons/CreateAnotherGameButton/CreateAnotherGameButton.vue\";\n\nconst { t } = useI18n();\n\nuseHead({ title: t(\"components.GameNotFound.gameNotFound\") });\n</script>"
    },
    "components/pages/game/GameOver/GameOver.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "74",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"title\": \"components.GameOver.gameOver\",\n  },\n], but it was called with Object {}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "671"
          ],
          "coveredBy": [
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677"
          ],
          "location": {
            "end": {
              "column": 53,
              "line": 44
            },
            "start": {
              "column": 9,
              "line": 44
            }
          }
        },
        {
          "id": "75",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"title\": \"components.GameOver.gameOver\",\n  },\n], but it was called with Object {\n  \"title\": \"\",\n}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "671"
          ],
          "coveredBy": [
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 44
            },
            "start": {
              "column": 20,
              "line": 44
            }
          }
        },
        {
          "id": "76",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Over Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "670"
          ],
          "coveredBy": [
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677"
          ],
          "location": {
            "end": {
              "column": 81,
              "line": 48
            },
            "start": {
              "column": 48,
              "line": 48
            }
          }
        },
        {
          "id": "77",
          "mutatorName": "OptionalChaining",
          "replacement": "game.value.victory.winners",
          "statusReason": "Cannot read properties of undefined (reading 'winners')",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "674"
          ],
          "coveredBy": [
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677"
          ],
          "location": {
            "end": {
              "column": 81,
              "line": 48
            },
            "start": {
              "column": 54,
              "line": 48
            }
          }
        },
        {
          "id": "78",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "676"
          ],
          "coveredBy": [
            "676",
            "677"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 55
            },
            "start": {
              "column": 34,
              "line": 50
            }
          }
        },
        {
          "id": "79",
          "mutatorName": "BooleanLiteral",
          "replacement": "gameOverHistory.value",
          "statusReason": "Mocked error",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "676"
          ],
          "coveredBy": [
            "676",
            "677"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 51
            },
            "start": {
              "column": 7,
              "line": 51
            }
          }
        },
        {
          "id": "80",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Mocked error",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "676"
          ],
          "coveredBy": [
            "676",
            "677"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 51
            },
            "start": {
              "column": 7,
              "line": 51
            }
          }
        },
        {
          "id": "81",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "677"
          ],
          "coveredBy": [
            "676",
            "677"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 51
            },
            "start": {
              "column": 7,
              "line": 51
            }
          }
        },
        {
          "id": "82",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "677"
          ],
          "coveredBy": [
            "677"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 53
            },
            "start": {
              "column": 31,
              "line": 51
            }
          }
        },
        {
          "id": "83",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"Game Over History is not defined\",\n], but it was called with \"\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "677"
          ],
          "coveredBy": [
            "677"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 52
            },
            "start": {
              "column": 23,
              "line": 52
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-over\"\n    class=\"flex flex-col gap-6 h-full items-center justify-center\"\n  >\n    <GameOverVictoryText/>\n\n    <GameOverWinners\n      v-if=\"!!winners\"\n      id=\"game-over-winners\"\n    />\n\n    <VuePrimeDivider/>\n\n    <GameOverActions\n      id=\"game-over-actions\"\n      @show-game-history=\"showGameHistory\"\n    />\n\n    <GameOverHistory ref=\"gameOverHistory\"/>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\n\nimport GameOverActions from \"~/components/pages/game/GameOver/GameOverActions/GameOverActions.vue\";\nimport type { GameOverHistoryExposed } from \"~/components/pages/game/GameOver/GameOverHistory/game-over-history.types\";\nimport GameOverHistory from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistory.vue\";\nimport GameOverVictoryText from \"~/components/pages/game/GameOver/GameOverVictoryText/GameOverVictoryText.vue\";\nimport GameOverWinners from \"~/components/pages/game/GameOver/GameOverWinners/GameOverWinners.vue\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { useGameHistoryRecordsStore } from \"~/stores/game/game-history-record/useGameHistoryRecordsStore\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\n\nconst gameStore = useGameStore();\nconst { game } = storeToRefs(gameStore);\n\nconst gameHistoryRecordsStore = useGameHistoryRecordsStore();\nconst { fetchAndSetGameHistoryRecords } = gameHistoryRecordsStore;\n\nconst { t } = useI18n();\n\nuseHead({ title: t(\"components.GameOver.gameOver\") });\n\nconst gameOverHistory = ref<GameOverHistoryExposed | null>(null);\n\nconst winners = computed<Player[] | undefined>(() => game.value.victory?.winners);\n\nfunction showGameHistory(): void {\n  if (!gameOverHistory.value) {\n    throw createError(\"Game Over History is not defined\");\n  }\n  gameOverHistory.value.showGameHistory();\n}\n\nvoid fetchAndSetGameHistoryRecords(game.value._id);\n</script>"
    },
    "components/pages/game/GameOver/GameOverActions/GameOverActions.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "84",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Over Actions Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "904"
          ],
          "coveredBy": [
            "904",
            "905",
            "906",
            "907",
            "908",
            "909"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 51
            },
            "start": {
              "column": 58,
              "line": 46
            }
          }
        },
        {
          "id": "85",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Game Over Actions Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "904"
          ],
          "coveredBy": [
            "904",
            "905",
            "906",
            "907",
            "908",
            "909"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 47
            },
            "start": {
              "column": 7,
              "line": 47
            }
          }
        },
        {
          "id": "86",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected 'components.GameOverActions.loadingGam…' to be 'components.GameOverActions.showGameHi…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "908"
          ],
          "coveredBy": [
            "904",
            "905",
            "906",
            "907",
            "908",
            "909"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 47
            },
            "start": {
              "column": 7,
              "line": 47
            }
          }
        },
        {
          "id": "87",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected 'components.GameOverActions.loadingGam…' to be 'components.GameOverActions.showGameHi…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "908"
          ],
          "coveredBy": [
            "908"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 49
            },
            "start": {
              "column": 40,
              "line": 47
            }
          }
        },
        {
          "id": "88",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be 'components.GameOverActions.showGameHi…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "908"
          ],
          "coveredBy": [
            "908"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 48
            },
            "start": {
              "column": 14,
              "line": 48
            }
          }
        },
        {
          "id": "89",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Over Actions Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "904"
          ],
          "coveredBy": [
            "904",
            "905",
            "906",
            "907",
            "908",
            "909"
          ],
          "location": {
            "end": {
              "column": 59,
              "line": 50
            },
            "start": {
              "column": 12,
              "line": 50
            }
          }
        },
        {
          "id": "90",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected undefined to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "909"
          ],
          "coveredBy": [
            "909"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 55
            },
            "start": {
              "column": 34,
              "line": 53
            }
          }
        },
        {
          "id": "91",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected undefined to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "909"
          ],
          "coveredBy": [
            "909"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 54
            },
            "start": {
              "column": 8,
              "line": 54
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-over-actions\"\n    class=\"flex gap-8 justify-center w-full\"\n  >\n    <NuxtLink\n      id=\"new-game-button\"\n      class=\"p-button p-button-raised\"\n      to=\"/game-lobby\"\n    >\n      <span class=\"fa fa-play-circle me-2\"/>\n\n      <span>\n        {{ $t('components.GameOverActions.createAnotherGame') }}\n      </span>\n    </NuxtLink>\n\n    <VuePrimeButton\n      id=\"show-game-history-button\"\n      :loading=\"!gameHistoryRecords.length\"\n      severity=\"help\"\n      @click=\"showGameHistory\"\n    >\n      <i class=\"fa fa-clock-rotate-left me-2\"/>\n\n      <span>\n        {{ showGameHistoryTextButton }}\n      </span>\n    </VuePrimeButton>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { storeToRefs } from \"pinia\";\n\nimport type { GameOverActionsEmits } from \"~/components/pages/game/GameOver/GameOverActions/game-over-actions.types\";\nimport { useGameHistoryRecordsStore } from \"~/stores/game/game-history-record/useGameHistoryRecordsStore\";\n\nconst emit = defineEmits<GameOverActionsEmits>();\n\nconst gameHistoryRecordsStore = useGameHistoryRecordsStore();\nconst { gameHistoryRecords } = storeToRefs(gameHistoryRecordsStore);\n\nconst { t } = useI18n();\n\nconst showGameHistoryTextButton = computed<string>(() => {\n  if (gameHistoryRecords.value.length) {\n    return t(\"components.GameOverActions.showGameHistory\");\n  }\n  return t(\"components.GameOverActions.loadingGameHistory\");\n});\n\nfunction showGameHistory(): void {\n  emit(\"showGameHistory\");\n}\n</script>"
    },
    "components/pages/game/GameOver/GameOverHistory/GameOverHistory.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "92",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "expected true to be falsy",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "689"
          ],
          "coveredBy": [
            "688",
            "689",
            "690",
            "691",
            "692",
            "693",
            "694",
            "695",
            "696",
            "697"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 46
            },
            "start": {
              "column": 32,
              "line": 46
            }
          }
        },
        {
          "id": "93",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "693"
          ],
          "coveredBy": [
            "693",
            "694",
            "695",
            "696",
            "697"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 50
            },
            "start": {
              "column": 34,
              "line": 48
            }
          }
        },
        {
          "id": "94",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "693"
          ],
          "coveredBy": [
            "693",
            "694",
            "695",
            "696",
            "697"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 49
            },
            "start": {
              "column": 21,
              "line": 49
            }
          }
        },
        {
          "id": "95",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected true to be falsy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "697"
          ],
          "coveredBy": [
            "697"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 54
            },
            "start": {
              "column": 24,
              "line": 52
            }
          }
        },
        {
          "id": "96",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "expected true to be falsy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "697"
          ],
          "coveredBy": [
            "697"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 53
            },
            "start": {
              "column": 21,
              "line": 53
            }
          }
        },
        {
          "id": "97",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "The macro defineExpose from Nuxt is breaking Stryker, so we ignore it.",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 33,
              "line": 56
            },
            "start": {
              "column": 14,
              "line": 56
            }
          }
        }
      ],
      "source": "<template>\n  <VuePrimeDialog\n    id=\"game-over-history\"\n    block-scroll\n    dismissable-mask\n    :draggable=\"false\"\n    modal\n    :pt=\"{\n      'icons': 'pb-2',\n      'header': '!py-2',\n      'content': 'w-x-screen-9/10 max-w-x-screen-9/10 !py-0',\n      'footer': '!py-2'\n    }\"\n    :visible=\"isVisible\"\n    @update:visible=\"close\"\n  >\n    <template #header>\n      <GameOverHistoryHeader id=\"game-over-history-header\"/>\n    </template>\n\n    <template #default>\n      <GameOverHistoryRecords id=\"game-over-history-records\"/>\n\n      <h2\n        id=\"end-of-game-text\"\n        class=\"text-center\"\n      >\n        {{ $t(\"components.GameOverHistory.endOfGame\") }}\n      </h2>\n    </template>\n\n    <template #footer>\n      <DialogFooterCloseButtonOnly\n        id=\"dialog-footer-close-button-only\"\n        @close-dialog=\"close\"\n      />\n    </template>\n  </VuePrimeDialog>\n</template>\n\n<script setup lang=\"ts\">\nimport GameOverHistoryHeader from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryHeader/GameOverHistoryHeader.vue\";\nimport GameOverHistoryRecords from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecords.vue\";\nimport DialogFooterCloseButtonOnly from \"~/components/shared/dialogs/DialogFooterCloseButtonOnly/DialogFooterCloseButtonOnly.vue\";\n\nconst isVisible = ref<boolean>(false);\n\nfunction showGameHistory(): void {\n  isVisible.value = true;\n}\n\nfunction close(): void {\n  isVisible.value = false;\n}\n\ndefineExpose({ showGameHistory });\n</script>"
    },
    "components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecord.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "98",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Over History Record Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "489"
          ],
          "coveredBy": [
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 45
            },
            "start": {
              "column": 68,
              "line": 40
            }
          }
        },
        {
          "id": "99",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "Snapshot `Game Over History Record Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "489"
          ],
          "coveredBy": [
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496"
          ],
          "location": {
            "end": {
              "column": 116,
              "line": 42
            },
            "start": {
              "column": 48,
              "line": 42
            }
          }
        },
        {
          "id": "100",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "493"
          ],
          "coveredBy": [
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 42
            },
            "start": {
              "column": 49,
              "line": 42
            }
          }
        },
        {
          "id": "101",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Over History Record Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "489"
          ],
          "coveredBy": [
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496"
          ],
          "location": {
            "end": {
              "column": 65,
              "line": 42
            },
            "start": {
              "column": 59,
              "line": 42
            }
          }
        },
        {
          "id": "102",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "494"
          ],
          "coveredBy": [
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496"
          ],
          "location": {
            "end": {
              "column": 85,
              "line": 42
            },
            "start": {
              "column": 67,
              "line": 42
            }
          }
        },
        {
          "id": "103",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "495"
          ],
          "coveredBy": [
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496"
          ],
          "location": {
            "end": {
              "column": 100,
              "line": 42
            },
            "start": {
              "column": 87,
              "line": 42
            }
          }
        },
        {
          "id": "104",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 8,
          "static": false,
          "killedBy": [
            "496"
          ],
          "coveredBy": [
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496"
          ],
          "location": {
            "end": {
              "column": 115,
              "line": 42
            },
            "start": {
              "column": 102,
              "line": 42
            }
          }
        },
        {
          "id": "105",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be falsy",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "490"
          ],
          "coveredBy": [
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496"
          ],
          "location": {
            "end": {
              "column": 91,
              "line": 44
            },
            "start": {
              "column": 10,
              "line": 44
            }
          }
        },
        {
          "id": "106",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Snapshot `Game Over History Record Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "489"
          ],
          "coveredBy": [
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496"
          ],
          "location": {
            "end": {
              "column": 91,
              "line": 44
            },
            "start": {
              "column": 10,
              "line": 44
            }
          }
        },
        {
          "id": "107",
          "mutatorName": "LogicalOperator",
          "replacement": "displayedTargetTypes.includes(type) || !didSourceSkipped(props.gameHistoryRecord)",
          "statusReason": "expected true to be falsy",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "490"
          ],
          "coveredBy": [
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496"
          ],
          "location": {
            "end": {
              "column": 91,
              "line": 44
            },
            "start": {
              "column": 10,
              "line": 44
            }
          }
        },
        {
          "id": "108",
          "mutatorName": "BooleanLiteral",
          "replacement": "didSourceSkipped(props.gameHistoryRecord)",
          "statusReason": "Snapshot `Game Over History Record Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "489"
          ],
          "coveredBy": [
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496"
          ],
          "location": {
            "end": {
              "column": 91,
              "line": 44
            },
            "start": {
              "column": 49,
              "line": 44
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-over-history-record\"\n    class=\"flex gap-4 items-center\"\n  >\n    <GameOverHistoryRecordSource\n      id=\"game-over-history-record-source\"\n      class=\"w-4/12\"\n      :game-history-record=\"gameHistoryRecord\"\n    />\n\n    <GameOverHistoryRecordAction\n      id=\"game-over-history-record-action\"\n      class=\"w-3/12\"\n      :game-history-record=\"gameHistoryRecord\"\n    />\n\n    <div class=\"game-over-history-record-target-container w-4/12\">\n      <GameOverHistoryRecordDecision\n        v-if=\"isGameHistoryRecordTargetDisplayed\"\n        id=\"game-over-history-record-decision\"\n        :game-history-record=\"gameHistoryRecord\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { GameOverHistoryRecordProps } from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/game-over-history-record.types\";\nimport GameOverHistoryRecordAction from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordAction/GameOverHistoryRecordAction.vue\";\nimport GameOverHistoryRecordSource from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordSource/GameOverHistoryRecordSource.vue\";\nimport GameOverHistoryRecordDecision from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecision.vue\";\nimport { useGameHistoryRecord } from \"~/composables/api/game/game-history-record/useGameHistoryRecord\";\nimport type { GamePlayType } from \"~/composables/api/game/types/game-play/game-play.types\";\n\nconst props = defineProps<GameOverHistoryRecordProps>();\n\nconst { didSourceSkipped } = useGameHistoryRecord();\n\nconst isGameHistoryRecordTargetDisplayed = computed<boolean>(() => {\n  const { type } = props.gameHistoryRecord.play;\n  const displayedTargetTypes: GamePlayType[] = [\"target\", \"vote\", \"bury-dead-bodies\", \"choose-card\", \"choose-side\"];\n\n  return displayedTargetTypes.includes(type) && !didSourceSkipped(props.gameHistoryRecord);\n});\n</script>"
    },
    "components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordAction/GameOverHistoryRecordAction.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "109",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Over History Record Action Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "36"
          ],
          "coveredBy": [
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61",
            "62",
            "63",
            "64"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 39
            },
            "start": {
              "column": 60,
              "line": 30
            }
          }
        },
        {
          "id": "110",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'components.GameOverHistoryRecordActio…' to be 'components.GameOverHistoryRecordActio…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "38"
          ],
          "coveredBy": [
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61",
            "62",
            "63",
            "64"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 31
            },
            "start": {
              "column": 7,
              "line": 31
            }
          }
        },
        {
          "id": "111",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Snapshot `Game Over History Record Action Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "36"
          ],
          "coveredBy": [
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61",
            "62",
            "63",
            "64"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 31
            },
            "start": {
              "column": 7,
              "line": 31
            }
          }
        },
        {
          "id": "112",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Over History Record Action Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "36"
          ],
          "coveredBy": [
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61",
            "62",
            "63",
            "64"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 33
            },
            "start": {
              "column": 50,
              "line": 31
            }
          }
        },
        {
          "id": "113",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Over History Record Action Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "36"
          ],
          "coveredBy": [
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61",
            "62",
            "63",
            "64"
          ],
          "location": {
            "end": {
              "column": 66,
              "line": 32
            },
            "start": {
              "column": 14,
              "line": 32
            }
          }
        },
        {
          "id": "114",
          "mutatorName": "OptionalChaining",
          "replacement": "GAME_HISTORY_RECORD_PLAYS_TEXT[props.gameHistoryRecord.play.source.name][props.gameHistoryRecord.play.action].textKey",
          "statusReason": "Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".",
          "status": "Killed",
          "testsCompleted": 30,
          "static": false,
          "killedBy": [
            "60"
          ],
          "coveredBy": [
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "62",
            "63",
            "64"
          ],
          "location": {
            "end": {
              "column": 137,
              "line": 34
            },
            "start": {
              "column": 19,
              "line": 34
            }
          }
        },
        {
          "id": "115",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'components.GameOverHistoryRecordActio…' to be 'components.GameOverHistoryRecordActio…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "38"
          ],
          "coveredBy": [
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "62",
            "63",
            "64"
          ],
          "location": {
            "end": {
              "column": 28,
              "line": 35
            },
            "start": {
              "column": 7,
              "line": 35
            }
          }
        },
        {
          "id": "116",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected '' to be 'components.GameOverHistoryRecordActio…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 30,
          "static": false,
          "killedBy": [
            "60"
          ],
          "coveredBy": [
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "62",
            "63",
            "64"
          ],
          "location": {
            "end": {
              "column": 28,
              "line": 35
            },
            "start": {
              "column": 7,
              "line": 35
            }
          }
        },
        {
          "id": "117",
          "mutatorName": "EqualityOperator",
          "replacement": "textKey !== undefined",
          "statusReason": "expected 'components.GameOverHistoryRecordActio…' to be 'components.GameOverHistoryRecordActio…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "38"
          ],
          "coveredBy": [
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "62",
            "63",
            "64"
          ],
          "location": {
            "end": {
              "column": 28,
              "line": 35
            },
            "start": {
              "column": 7,
              "line": 35
            }
          }
        },
        {
          "id": "118",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected '' to be 'components.GameOverHistoryRecordActio…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "60"
          ],
          "coveredBy": [
            "60",
            "63"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 37
            },
            "start": {
              "column": 30,
              "line": 35
            }
          }
        },
        {
          "id": "119",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be 'components.GameOverHistoryRecordActio…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "60"
          ],
          "coveredBy": [
            "60",
            "63"
          ],
          "location": {
            "end": {
              "column": 70,
              "line": 36
            },
            "start": {
              "column": 14,
              "line": 36
            }
          }
        },
        {
          "id": "120",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Over History Record Action Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "36"
          ],
          "coveredBy": [
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61",
            "62",
            "63",
            "64"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 53
            },
            "start": {
              "column": 64,
              "line": 41
            }
          }
        },
        {
          "id": "121",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected '/svg/game/player/player-attribute/pow…' to be '/svg/misc/exclamation-mark.svg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 34,
          "static": false,
          "killedBy": [
            "62"
          ],
          "coveredBy": [
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61",
            "62",
            "63",
            "64"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 43
            },
            "start": {
              "column": 7,
              "line": 43
            }
          }
        },
        {
          "id": "122",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Snapshot `Game Over History Record Action Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "36"
          ],
          "coveredBy": [
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61",
            "62",
            "63",
            "64"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 43
            },
            "start": {
              "column": 7,
              "line": 43
            }
          }
        },
        {
          "id": "123",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Over History Record Action Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "36"
          ],
          "coveredBy": [
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61",
            "62",
            "63",
            "64"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 45
            },
            "start": {
              "column": 50,
              "line": 43
            }
          }
        },
        {
          "id": "124",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Over History Record Action Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "36"
          ],
          "coveredBy": [
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61",
            "62",
            "63",
            "64"
          ],
          "location": {
            "end": {
              "column": 61,
              "line": 44
            },
            "start": {
              "column": 12,
              "line": 44
            }
          }
        },
        {
          "id": "125",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected '/svg/misc/exclamation-mark.svg' to be '/svg/misc/people.svg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 33,
          "static": false,
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "62",
            "63",
            "64"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 46
            },
            "start": {
              "column": 7,
              "line": 46
            }
          }
        },
        {
          "id": "126",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected '/svg/misc/arrow-right.svg' to be '/svg/misc/exclamation-mark.svg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 31,
          "static": false,
          "killedBy": [
            "62"
          ],
          "coveredBy": [
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "62",
            "63",
            "64"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 46
            },
            "start": {
              "column": 7,
              "line": 46
            }
          }
        },
        {
          "id": "127",
          "mutatorName": "LogicalOperator",
          "replacement": "action === \"growl\" && action === \"request-another-vote\"",
          "statusReason": "expected '/svg/misc/arrow-right.svg' to be '/svg/misc/exclamation-mark.svg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 31,
          "static": false,
          "killedBy": [
            "62"
          ],
          "coveredBy": [
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "62",
            "63",
            "64"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 46
            },
            "start": {
              "column": 7,
              "line": 46
            }
          }
        },
        {
          "id": "128",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected '/svg/misc/arrow-right.svg' to be '/svg/misc/exclamation-mark.svg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 31,
          "static": false,
          "killedBy": [
            "62"
          ],
          "coveredBy": [
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "62",
            "63",
            "64"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 46
            },
            "start": {
              "column": 7,
              "line": 46
            }
          }
        },
        {
          "id": "129",
          "mutatorName": "EqualityOperator",
          "replacement": "action !== \"growl\"",
          "statusReason": "expected '/svg/misc/arrow-right.svg' to be '/svg/misc/exclamation-mark.svg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 31,
          "static": false,
          "killedBy": [
            "62"
          ],
          "coveredBy": [
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "62",
            "63",
            "64"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 46
            },
            "start": {
              "column": 7,
              "line": 46
            }
          }
        },
        {
          "id": "130",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '/svg/misc/arrow-right.svg' to be '/svg/misc/exclamation-mark.svg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 31,
          "static": false,
          "killedBy": [
            "62"
          ],
          "coveredBy": [
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "62",
            "63",
            "64"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 46
            },
            "start": {
              "column": 18,
              "line": 46
            }
          }
        },
        {
          "id": "131",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected '/svg/misc/arrow-right.svg' to be '/svg/misc/exclamation-mark.svg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 31,
          "static": false,
          "killedBy": [
            "62"
          ],
          "coveredBy": [
            "38",
            "39",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "62",
            "63",
            "64"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 46
            },
            "start": {
              "column": 29,
              "line": 46
            }
          }
        },
        {
          "id": "132",
          "mutatorName": "EqualityOperator",
          "replacement": "action !== \"request-another-vote\"",
          "statusReason": "expected '/svg/misc/arrow-right.svg' to be '/svg/misc/exclamation-mark.svg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 31,
          "static": false,
          "killedBy": [
            "62"
          ],
          "coveredBy": [
            "38",
            "39",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "62",
            "63",
            "64"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 46
            },
            "start": {
              "column": 29,
              "line": 46
            }
          }
        },
        {
          "id": "133",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '/svg/misc/arrow-right.svg' to be '/svg/misc/exclamation-mark.svg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 31,
          "static": false,
          "killedBy": [
            "62"
          ],
          "coveredBy": [
            "38",
            "39",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "62",
            "63",
            "64"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 46
            },
            "start": {
              "column": 40,
              "line": 46
            }
          }
        },
        {
          "id": "134",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected '/svg/misc/arrow-right.svg' to be '/svg/misc/exclamation-mark.svg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "62"
          ],
          "coveredBy": [
            "40",
            "53",
            "62"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 48
            },
            "start": {
              "column": 64,
              "line": 46
            }
          }
        },
        {
          "id": "135",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be '/svg/misc/exclamation-mark.svg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "62"
          ],
          "coveredBy": [
            "40",
            "53",
            "62"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 47
            },
            "start": {
              "column": 12,
              "line": 47
            }
          }
        },
        {
          "id": "136",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected '/svg/misc/people.svg' to be '/svg/misc/arrow-right.svg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 30,
          "static": false,
          "killedBy": [
            "64"
          ],
          "coveredBy": [
            "38",
            "39",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "63",
            "64"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 49
            },
            "start": {
              "column": 7,
              "line": 49
            }
          }
        },
        {
          "id": "137",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected '/svg/misc/arrow-right.svg' to be '/svg/misc/people.svg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 29,
          "static": false,
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "38",
            "39",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "63",
            "64"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 49
            },
            "start": {
              "column": 7,
              "line": 49
            }
          }
        },
        {
          "id": "138",
          "mutatorName": "EqualityOperator",
          "replacement": "action !== \"meet-each-other\"",
          "statusReason": "expected '/svg/misc/arrow-right.svg' to be '/svg/misc/people.svg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 29,
          "static": false,
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "38",
            "39",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "63",
            "64"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 49
            },
            "start": {
              "column": 7,
              "line": 49
            }
          }
        },
        {
          "id": "139",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '/svg/misc/arrow-right.svg' to be '/svg/misc/people.svg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 29,
          "static": false,
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "38",
            "39",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "63",
            "64"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 49
            },
            "start": {
              "column": 18,
              "line": 49
            }
          }
        },
        {
          "id": "140",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected '/svg/misc/arrow-right.svg' to be '/svg/misc/people.svg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "42",
            "63"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 51
            },
            "start": {
              "column": 37,
              "line": 49
            }
          }
        },
        {
          "id": "141",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be '/svg/misc/people.svg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "42",
            "63"
          ],
          "location": {
            "end": {
              "column": 34,
              "line": 50
            },
            "start": {
              "column": 12,
              "line": 50
            }
          }
        },
        {
          "id": "142",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be '/svg/misc/arrow-right.svg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 25,
          "static": false,
          "killedBy": [
            "64"
          ],
          "coveredBy": [
            "38",
            "39",
            "41",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "64"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 52
            },
            "start": {
              "column": 10,
              "line": 52
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-over-history-record-action\"\n    class=\"flex flex-col gap-2 items-center justify-center\"\n  >\n    <h4 id=\"game-over-history-record-action-text\">\n      {{ gameHistoryRecordActionText }}\n    </h4>\n\n    <NuxtImg\n      :alt=\"$t('components.GameOverHistoryRecordAction.actionIconAltText')\"\n      height=\"25\"\n      :src=\"gameHistoryRecordActionTextIcon\"\n      width=\"25\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { GAME_HISTORY_RECORD_PLAYS_TEXT } from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordAction/game-over-history-record-action.constants\";\nimport type { GameOverHistoryRecordActionProps } from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordAction/game-over-history-record-action.types\";\nimport { useGameHistoryRecord } from \"~/composables/api/game/game-history-record/useGameHistoryRecord\";\n\nconst props = defineProps<GameOverHistoryRecordActionProps>();\n\nconst { t } = useI18n();\n\nconst { didSourceSkipped } = useGameHistoryRecord();\n\nconst gameHistoryRecordActionText = computed<string>(() => {\n  if (didSourceSkipped(props.gameHistoryRecord)) {\n    return t(\"components.GameOverHistoryRecordAction.skippedTurn\");\n  }\n  const textKey = GAME_HISTORY_RECORD_PLAYS_TEXT[props.gameHistoryRecord.play.source.name][props.gameHistoryRecord.play.action]?.textKey;\n  if (textKey === undefined) {\n    return t(\"components.GameOverHistoryRecordAction.unknownGamePlay\");\n  }\n  return t(textKey);\n});\n\nconst gameHistoryRecordActionTextIcon = computed<string>(() => {\n  const { action } = props.gameHistoryRecord.play;\n  if (didSourceSkipped(props.gameHistoryRecord)) {\n    return \"/svg/game/player/player-attribute/powerless.svg\";\n  }\n  if (action === \"growl\" || action === \"request-another-vote\") {\n    return \"/svg/misc/exclamation-mark.svg\";\n  }\n  if (action === \"meet-each-other\") {\n    return \"/svg/misc/people.svg\";\n  }\n  return \"/svg/misc/arrow-right.svg\";\n});\n</script>"
    },
    "components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordAction/game-over-history-record-action.constants.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "143",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 2,
              "line": 39
            },
            "start": {
              "column": 131,
              "line": 6
            }
          }
        },
        {
          "id": "144",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 101,
              "line": 7
            },
            "start": {
              "column": 27,
              "line": 7
            }
          }
        },
        {
          "id": "145",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 99,
              "line": 7
            },
            "start": {
              "column": 37,
              "line": 7
            }
          }
        },
        {
          "id": "146",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 97,
              "line": 7
            },
            "start": {
              "column": 48,
              "line": 7
            }
          }
        },
        {
          "id": "147",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 94,
              "line": 8
            },
            "start": {
              "column": 12,
              "line": 8
            }
          }
        },
        {
          "id": "148",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 92,
              "line": 8
            },
            "start": {
              "column": 29,
              "line": 8
            }
          }
        },
        {
          "id": "149",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 90,
              "line": 8
            },
            "start": {
              "column": 40,
              "line": 8
            }
          }
        },
        {
          "id": "150",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 89,
              "line": 9
            },
            "start": {
              "column": 17,
              "line": 9
            }
          }
        },
        {
          "id": "151",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 87,
              "line": 9
            },
            "start": {
              "column": 26,
              "line": 9
            }
          }
        },
        {
          "id": "152",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 85,
              "line": 9
            },
            "start": {
              "column": 37,
              "line": 9
            }
          }
        },
        {
          "id": "153",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 85,
              "line": 10
            },
            "start": {
              "column": 19,
              "line": 10
            }
          }
        },
        {
          "id": "154",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 83,
              "line": 10
            },
            "start": {
              "column": 26,
              "line": 10
            }
          }
        },
        {
          "id": "155",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 81,
              "line": 10
            },
            "start": {
              "column": 37,
              "line": 10
            }
          }
        },
        {
          "id": "156",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 103,
              "line": 11
            },
            "start": {
              "column": 14,
              "line": 11
            }
          }
        },
        {
          "id": "157",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 101,
              "line": 11
            },
            "start": {
              "column": 35,
              "line": 11
            }
          }
        },
        {
          "id": "158",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 99,
              "line": 11
            },
            "start": {
              "column": 46,
              "line": 11
            }
          }
        },
        {
          "id": "159",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 91,
              "line": 12
            },
            "start": {
              "column": 12,
              "line": 12
            }
          }
        },
        {
          "id": "160",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 89,
              "line": 12
            },
            "start": {
              "column": 21,
              "line": 12
            }
          }
        },
        {
          "id": "161",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 87,
              "line": 12
            },
            "start": {
              "column": 32,
              "line": 12
            }
          }
        },
        {
          "id": "162",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 91,
              "line": 13
            },
            "start": {
              "column": 15,
              "line": 13
            }
          }
        },
        {
          "id": "163",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 89,
              "line": 13
            },
            "start": {
              "column": 26,
              "line": 13
            }
          }
        },
        {
          "id": "164",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 87,
              "line": 13
            },
            "start": {
              "column": 37,
              "line": 13
            }
          }
        },
        {
          "id": "165",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 82,
              "line": 14
            },
            "start": {
              "column": 10,
              "line": 14
            }
          }
        },
        {
          "id": "166",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 80,
              "line": 14
            },
            "start": {
              "column": 19,
              "line": 14
            }
          }
        },
        {
          "id": "167",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 78,
              "line": 14
            },
            "start": {
              "column": 30,
              "line": 14
            }
          }
        },
        {
          "id": "168",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 82,
              "line": 15
            },
            "start": {
              "column": 13,
              "line": 15
            }
          }
        },
        {
          "id": "169",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 80,
              "line": 15
            },
            "start": {
              "column": 22,
              "line": 15
            }
          }
        },
        {
          "id": "170",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 78,
              "line": 15
            },
            "start": {
              "column": 33,
              "line": 15
            }
          }
        },
        {
          "id": "171",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 102,
              "line": 16
            },
            "start": {
              "column": 13,
              "line": 16
            }
          }
        },
        {
          "id": "172",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 100,
              "line": 16
            },
            "start": {
              "column": 34,
              "line": 16
            }
          }
        },
        {
          "id": "173",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 98,
              "line": 16
            },
            "start": {
              "column": 45,
              "line": 16
            }
          }
        },
        {
          "id": "174",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 89,
              "line": 17
            },
            "start": {
              "column": 17,
              "line": 17
            }
          }
        },
        {
          "id": "175",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 87,
              "line": 17
            },
            "start": {
              "column": 26,
              "line": 17
            }
          }
        },
        {
          "id": "176",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 85,
              "line": 17
            },
            "start": {
              "column": 37,
              "line": 17
            }
          }
        },
        {
          "id": "177",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 101,
              "line": 18
            },
            "start": {
              "column": 20,
              "line": 18
            }
          }
        },
        {
          "id": "178",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 99,
              "line": 18
            },
            "start": {
              "column": 28,
              "line": 18
            }
          }
        },
        {
          "id": "179",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 97,
              "line": 18
            },
            "start": {
              "column": 39,
              "line": 18
            }
          }
        },
        {
          "id": "180",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 103,
              "line": 19
            },
            "start": {
              "column": 16,
              "line": 19
            }
          }
        },
        {
          "id": "181",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 101,
              "line": 19
            },
            "start": {
              "column": 32,
              "line": 19
            }
          }
        },
        {
          "id": "182",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 99,
              "line": 19
            },
            "start": {
              "column": 43,
              "line": 19
            }
          }
        },
        {
          "id": "183",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 79,
              "line": 20
            },
            "start": {
              "column": 11,
              "line": 20
            }
          }
        },
        {
          "id": "184",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 77,
              "line": 20
            },
            "start": {
              "column": 19,
              "line": 20
            }
          }
        },
        {
          "id": "185",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 75,
              "line": 20
            },
            "start": {
              "column": 30,
              "line": 20
            }
          }
        },
        {
          "id": "186",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 24
            },
            "start": {
              "column": 14,
              "line": 21
            }
          }
        },
        {
          "id": "187",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 80,
              "line": 22
            },
            "start": {
              "column": 17,
              "line": 22
            }
          }
        },
        {
          "id": "188",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 78,
              "line": 22
            },
            "start": {
              "column": 28,
              "line": 22
            }
          }
        },
        {
          "id": "189",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 87,
              "line": 23
            },
            "start": {
              "column": 21,
              "line": 23
            }
          }
        },
        {
          "id": "190",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 85,
              "line": 23
            },
            "start": {
              "column": 32,
              "line": 23
            }
          }
        },
        {
          "id": "191",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 125,
              "line": 25
            },
            "start": {
              "column": 23,
              "line": 25
            }
          }
        },
        {
          "id": "192",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 123,
              "line": 25
            },
            "start": {
              "column": 49,
              "line": 25
            }
          }
        },
        {
          "id": "193",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 121,
              "line": 25
            },
            "start": {
              "column": 60,
              "line": 25
            }
          }
        },
        {
          "id": "194",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 30
            },
            "start": {
              "column": 16,
              "line": 26
            }
          }
        },
        {
          "id": "195",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 95,
              "line": 27
            },
            "start": {
              "column": 25,
              "line": 27
            }
          }
        },
        {
          "id": "196",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 93,
              "line": 27
            },
            "start": {
              "column": 36,
              "line": 27
            }
          }
        },
        {
          "id": "197",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 92,
              "line": 28
            },
            "start": {
              "column": 22,
              "line": 28
            }
          }
        },
        {
          "id": "198",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 90,
              "line": 28
            },
            "start": {
              "column": 33,
              "line": 28
            }
          }
        },
        {
          "id": "199",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 72,
              "line": 29
            },
            "start": {
              "column": 13,
              "line": 29
            }
          }
        },
        {
          "id": "200",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 70,
              "line": 29
            },
            "start": {
              "column": 24,
              "line": 29
            }
          }
        },
        {
          "id": "201",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 94,
              "line": 31
            },
            "start": {
              "column": 12,
              "line": 31
            }
          }
        },
        {
          "id": "202",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 92,
              "line": 31
            },
            "start": {
              "column": 29,
              "line": 31
            }
          }
        },
        {
          "id": "203",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 90,
              "line": 31
            },
            "start": {
              "column": 40,
              "line": 31
            }
          }
        },
        {
          "id": "204",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 110,
              "line": 32
            },
            "start": {
              "column": 21,
              "line": 32
            }
          }
        },
        {
          "id": "205",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 108,
              "line": 32
            },
            "start": {
              "column": 42,
              "line": 32
            }
          }
        },
        {
          "id": "206",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 106,
              "line": 32
            },
            "start": {
              "column": 53,
              "line": 32
            }
          }
        },
        {
          "id": "207",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 107,
              "line": 33
            },
            "start": {
              "column": 18,
              "line": 33
            }
          }
        },
        {
          "id": "208",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 105,
              "line": 33
            },
            "start": {
              "column": 39,
              "line": 33
            }
          }
        },
        {
          "id": "209",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 103,
              "line": 33
            },
            "start": {
              "column": 50,
              "line": 33
            }
          }
        },
        {
          "id": "210",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 83,
              "line": 34
            },
            "start": {
              "column": 17,
              "line": 34
            }
          }
        },
        {
          "id": "211",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 81,
              "line": 34
            },
            "start": {
              "column": 24,
              "line": 34
            }
          }
        },
        {
          "id": "212",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 79,
              "line": 34
            },
            "start": {
              "column": 35,
              "line": 34
            }
          }
        },
        {
          "id": "213",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 87,
              "line": 35
            },
            "start": {
              "column": 21,
              "line": 35
            }
          }
        },
        {
          "id": "214",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 85,
              "line": 35
            },
            "start": {
              "column": 28,
              "line": 35
            }
          }
        },
        {
          "id": "215",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 83,
              "line": 35
            },
            "start": {
              "column": 39,
              "line": 35
            }
          }
        },
        {
          "id": "216",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 103,
              "line": 36
            },
            "start": {
              "column": 17,
              "line": 36
            }
          }
        },
        {
          "id": "217",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 101,
              "line": 36
            },
            "start": {
              "column": 35,
              "line": 36
            }
          }
        },
        {
          "id": "218",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 99,
              "line": 36
            },
            "start": {
              "column": 46,
              "line": 36
            }
          }
        },
        {
          "id": "219",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 96,
              "line": 37
            },
            "start": {
              "column": 12,
              "line": 37
            }
          }
        },
        {
          "id": "220",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 94,
              "line": 37
            },
            "start": {
              "column": 29,
              "line": 37
            }
          }
        },
        {
          "id": "221",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 92,
              "line": 37
            },
            "start": {
              "column": 40,
              "line": 37
            }
          }
        },
        {
          "id": "222",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 99,
              "line": 38
            },
            "start": {
              "column": 17,
              "line": 38
            }
          }
        },
        {
          "id": "223",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 97,
              "line": 38
            },
            "start": {
              "column": 34,
              "line": 38
            }
          }
        },
        {
          "id": "224",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 95,
              "line": 38
            },
            "start": {
              "column": 45,
              "line": 38
            }
          }
        }
      ],
      "source": "import type { GamePlaySourceName } from \"~/composables/api/game/types/game-play/game-play-source/game-play-source.types\";\nimport type { GamePlayAction } from \"~/composables/api/game/types/game-play/game-play.types\";\n\ntype GameHistoryRecordPlayTextKey = { textKey: string };\n\nconst GAME_HISTORY_RECORD_PLAYS_TEXT: Record<GamePlaySourceName, Partial<Record<GamePlayAction, GameHistoryRecordPlayTextKey>>> = {\n  \"accursed-wolf-father\": { infect: { textKey: \"components.GameOverHistoryRecordAction.infected\" } },\n  \"actor\": { \"choose-card\": { textKey: \"components.GameOverHistoryRecordAction.choseCard\" } },\n  \"bear-tamer\": { growl: { textKey: \"components.GameOverHistoryRecordAction.growled\" } },\n  \"big-bad-wolf\": { eat: { textKey: \"components.GameOverHistoryRecordAction.ate\" } },\n  \"charmed\": { \"meet-each-other\": { textKey: \"components.GameOverHistoryRecordAction.metEachOther\" } },\n  \"cupid\": { charm: { textKey: \"components.GameOverHistoryRecordAction.madeFallInLove\" } },\n  \"defender\": { protect: { textKey: \"components.GameOverHistoryRecordAction.protected\" } },\n  \"fox\": { sniff: { textKey: \"components.GameOverHistoryRecordAction.sniffed\" } },\n  \"hunter\": { shoot: { textKey: \"components.GameOverHistoryRecordAction.shot\" } },\n  \"lovers\": { \"meet-each-other\": { textKey: \"components.GameOverHistoryRecordAction.metEachOther\" } },\n  \"pied-piper\": { charm: { textKey: \"components.GameOverHistoryRecordAction.charmed\" } },\n  \"scandalmonger\": { mark: { textKey: \"components.GameOverHistoryRecordAction.markedWithFeather\" } },\n  \"scapegoat\": { \"ban-voting\": { textKey: \"components.GameOverHistoryRecordAction.bannedFromVotes\" } },\n  \"seer\": { look: { textKey: \"components.GameOverHistoryRecordAction.seen\" } },\n  \"sheriff\": {\n    \"delegate\": { textKey: \"components.GameOverHistoryRecordAction.delegated\" },\n    \"settle-votes\": { textKey: \"components.GameOverHistoryRecordAction.settledVotes\" },\n  },\n  \"stuttering-judge\": { \"request-another-vote\": { textKey: \"components.GameOverHistoryRecordAction.requestedAnotherVote\" } },\n  \"survivors\": {\n    \"bury-dead-bodies\": { textKey: \"components.GameOverHistoryRecordAction.buriedDeadBodies\" },\n    \"elect-sheriff\": { textKey: \"components.GameOverHistoryRecordAction.electedAsSheriff\" },\n    \"vote\": { textKey: \"components.GameOverHistoryRecordAction.voted\" },\n  },\n  \"thief\": { \"choose-card\": { textKey: \"components.GameOverHistoryRecordAction.choseCard\" } },\n  \"three-brothers\": { \"meet-each-other\": { textKey: \"components.GameOverHistoryRecordAction.metEachOther\" } },\n  \"two-sisters\": { \"meet-each-other\": { textKey: \"components.GameOverHistoryRecordAction.metEachOther\" } },\n  \"werewolves\": { eat: { textKey: \"components.GameOverHistoryRecordAction.ate\" } },\n  \"white-werewolf\": { eat: { textKey: \"components.GameOverHistoryRecordAction.ate\" } },\n  \"wild-child\": { \"choose-model\": { textKey: \"components.GameOverHistoryRecordAction.choseAsModel\" } },\n  \"witch\": { \"use-potions\": { textKey: \"components.GameOverHistoryRecordAction.usedPotions\" } },\n  \"wolf-hound\": { \"choose-side\": { textKey: \"components.GameOverHistoryRecordAction.choseSide\" } },\n};\n\nexport { GAME_HISTORY_RECORD_PLAYS_TEXT };"
    },
    "components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionBuriedPlayers/GameOverHistoryRecordDecisionBuriedPlayer/GameOverHistoryRecordDecisionBuriedPlayer.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "225",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "538"
          ],
          "coveredBy": [
            "536",
            "537",
            "538",
            "539",
            "540",
            "541",
            "542"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 40
            },
            "start": {
              "column": 48,
              "line": 36
            }
          }
        },
        {
          "id": "226",
          "mutatorName": "OptionalChaining",
          "replacement": "props.gameHistoryRecord.play.targets[0]",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "536"
          ],
          "coveredBy": [
            "536",
            "537",
            "538",
            "539",
            "540",
            "541",
            "542"
          ],
          "location": {
            "end": {
              "column": 59,
              "line": 37
            },
            "start": {
              "column": 18,
              "line": 37
            }
          }
        },
        {
          "id": "227",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Game Over History Record Decision Buried Player Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "536"
          ],
          "coveredBy": [
            "536",
            "537",
            "538",
            "539",
            "540",
            "541",
            "542"
          ],
          "location": {
            "end": {
              "column": 66,
              "line": 39
            },
            "start": {
              "column": 10,
              "line": 39
            }
          }
        },
        {
          "id": "228",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "538"
          ],
          "coveredBy": [
            "536",
            "537",
            "538",
            "539",
            "540",
            "541",
            "542"
          ],
          "location": {
            "end": {
              "column": 66,
              "line": 39
            },
            "start": {
              "column": 10,
              "line": 39
            }
          }
        },
        {
          "id": "229",
          "mutatorName": "LogicalOperator",
          "replacement": "!!target || target.player._id === props.buriedPlayer._id",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "536"
          ],
          "coveredBy": [
            "536",
            "537",
            "538",
            "539",
            "540",
            "541",
            "542"
          ],
          "location": {
            "end": {
              "column": 66,
              "line": 39
            },
            "start": {
              "column": 10,
              "line": 39
            }
          }
        },
        {
          "id": "230",
          "mutatorName": "BooleanLiteral",
          "replacement": "!target",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "536"
          ],
          "coveredBy": [
            "536",
            "537",
            "538",
            "539",
            "540",
            "541",
            "542"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 39
            },
            "start": {
              "column": 10,
              "line": 39
            }
          }
        },
        {
          "id": "231",
          "mutatorName": "BooleanLiteral",
          "replacement": "target",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "536"
          ],
          "coveredBy": [
            "536",
            "537",
            "538",
            "539",
            "540",
            "541",
            "542"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 39
            },
            "start": {
              "column": 11,
              "line": 39
            }
          }
        },
        {
          "id": "232",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be falsy",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "540"
          ],
          "coveredBy": [
            "538",
            "540",
            "541",
            "542"
          ],
          "location": {
            "end": {
              "column": 66,
              "line": 39
            },
            "start": {
              "column": 22,
              "line": 39
            }
          }
        },
        {
          "id": "233",
          "mutatorName": "EqualityOperator",
          "replacement": "target.player._id !== props.buriedPlayer._id",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "538"
          ],
          "coveredBy": [
            "538",
            "540",
            "541",
            "542"
          ],
          "location": {
            "end": {
              "column": 66,
              "line": 39
            },
            "start": {
              "column": 22,
              "line": 39
            }
          }
        }
      ],
      "source": "<template>\n  <div class=\"flex flex-col gap-2 items-center justify-center\">\n    <PlayerCard\n      class=\"game-over-history-record-decision-buried-player-card\"\n      :player-name=\"buriedPlayer.name\"\n      :player-role=\"buriedPlayer.role.current\"\n    />\n\n    <VuePrimeTag\n      v-if=\"isTagDisplayed\"\n      id=\"devoted-servant-stolen-role-tag\"\n      class=\"flex gap-2 items-center justify-center\"\n      severity=\"warning\"\n    >\n      <NuxtImg\n        id=\"devoted-servant-stolen-role-tag-icon\"\n        :alt=\"$t('components.GameOverHistoryRecordDecisionBuriedPlayer.stolenRoleByDevotedServantIcon')\"\n        height=\"25\"\n        src=\"/svg/game/player/player-attribute/stolen-role.svg\"\n        width=\"25\"\n      />\n\n      <span id=\"devoted-servant-stolen-role-tag-text\">\n        {{ $t(\"components.GameOverHistoryRecordDecisionBuriedPlayer.stolenRoleByDevotedServant\") }}\n      </span>\n    </VuePrimeTag>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { GameOverHistoryRecordDecisionBuriedPlayerProps } from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionBuriedPlayers/GameOverHistoryRecordDecisionBuriedPlayer/game-over-history-record-decision-buried-player.types\";\nimport PlayerCard from \"~/components/shared/game/player/PlayerCard/PlayerCard.vue\";\n\nconst props = defineProps<GameOverHistoryRecordDecisionBuriedPlayerProps>();\n\nconst isTagDisplayed = computed<boolean>(() => {\n  const target = props.gameHistoryRecord.play.targets?.[0];\n\n  return !!target && target.player._id === props.buriedPlayer._id;\n});\n</script>"
    },
    "components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionBuriedPlayers/GameOverHistoryRecordDecisionBuriedPlayers.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "234",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "388"
          ],
          "coveredBy": [
            "388",
            "389",
            "390",
            "391",
            "392",
            "393"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 37
            },
            "start": {
              "column": 48,
              "line": 32
            }
          }
        },
        {
          "id": "235",
          "mutatorName": "OptionalChaining",
          "replacement": "interactions.find",
          "statusReason": "Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "391"
          ],
          "coveredBy": [
            "388",
            "389",
            "390",
            "391",
            "392",
            "393"
          ],
          "location": {
            "end": {
              "column": 55,
              "line": 34
            },
            "start": {
              "column": 37,
              "line": 34
            }
          }
        },
        {
          "id": "236",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Over History Record Decision Buried Players Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "388"
          ],
          "coveredBy": [
            "388",
            "389",
            "390",
            "391",
            "392",
            "393"
          ],
          "location": {
            "end": {
              "column": 85,
              "line": 34
            },
            "start": {
              "column": 56,
              "line": 34
            }
          }
        },
        {
          "id": "237",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Game Over History Record Decision Buried Players Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "388"
          ],
          "coveredBy": [
            "388",
            "389",
            "390",
            "391",
            "392",
            "393"
          ],
          "location": {
            "end": {
              "column": 85,
              "line": 34
            },
            "start": {
              "column": 70,
              "line": 34
            }
          }
        },
        {
          "id": "238",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Snapshot `Game Over History Record Decision Buried Players Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "388"
          ],
          "coveredBy": [
            "388",
            "389",
            "390",
            "391",
            "392",
            "393"
          ],
          "location": {
            "end": {
              "column": 85,
              "line": 34
            },
            "start": {
              "column": 70,
              "line": 34
            }
          }
        },
        {
          "id": "239",
          "mutatorName": "EqualityOperator",
          "replacement": "type !== \"bury\"",
          "statusReason": "Snapshot `Game Over History Record Decision Buried Players Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "388"
          ],
          "coveredBy": [
            "388",
            "389",
            "390",
            "391",
            "392",
            "393"
          ],
          "location": {
            "end": {
              "column": 85,
              "line": 34
            },
            "start": {
              "column": 70,
              "line": 34
            }
          }
        },
        {
          "id": "240",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Over History Record Decision Buried Players Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "388"
          ],
          "coveredBy": [
            "388",
            "389",
            "390",
            "391",
            "392",
            "393"
          ],
          "location": {
            "end": {
              "column": 85,
              "line": 34
            },
            "start": {
              "column": 79,
              "line": 34
            }
          }
        },
        {
          "id": "241",
          "mutatorName": "LogicalOperator",
          "replacement": "buryDeadBodiesInteraction?.eligibleTargets && []",
          "statusReason": "Snapshot `Game Over History Record Decision Buried Players Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "388"
          ],
          "coveredBy": [
            "388",
            "389",
            "390",
            "391",
            "392",
            "393"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 36
            },
            "start": {
              "column": 10,
              "line": 36
            }
          }
        },
        {
          "id": "242",
          "mutatorName": "OptionalChaining",
          "replacement": "buryDeadBodiesInteraction.eligibleTargets",
          "statusReason": "Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "391"
          ],
          "coveredBy": [
            "388",
            "389",
            "390",
            "391",
            "392",
            "393"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 36
            },
            "start": {
              "column": 10,
              "line": 36
            }
          }
        },
        {
          "id": "243",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "expected [ VueWrapper{ …(7) } ] to have a length of +0 but got 1",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "391"
          ],
          "coveredBy": [
            "391"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 36
            },
            "start": {
              "column": 56,
              "line": 36
            }
          }
        },
        {
          "id": "244",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Over History Record Decision Buried Players Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "388"
          ],
          "coveredBy": [
            "388",
            "389",
            "390",
            "391",
            "392",
            "393"
          ],
          "location": {
            "end": {
              "column": 116,
              "line": 39
            },
            "start": {
              "column": 51,
              "line": 39
            }
          }
        },
        {
          "id": "245",
          "mutatorName": "MethodExpression",
          "replacement": "buriedPlayers.value",
          "statusReason": "Snapshot `Game Over History Record Decision Buried Players Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "388"
          ],
          "coveredBy": [
            "388",
            "389",
            "390",
            "391",
            "392",
            "393"
          ],
          "location": {
            "end": {
              "column": 116,
              "line": 39
            },
            "start": {
              "column": 57,
              "line": 39
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-over-history-record-decision-buried-players\"\n    class=\"flex gap-4 items-center justify-center\"\n  >\n    <GameOverHistoryRecordDecisionBuriedPlayer\n      v-for=\"buriedPlayer in truncatedBuriedPlayers\"\n      :key=\"buriedPlayer._id\"\n      :buried-player=\"buriedPlayer\"\n      class=\"game-over-history-record-buried-player w-full\"\n      :game-history-record=\"props.gameHistoryRecord\"\n    />\n\n    <OverflowTag\n      id=\"buried-players-overflow-tag\"\n      :entities-count=\"buriedPlayers.length\"\n      :maximum-entities-displayed=\"maximumBuriedPlayersDisplayed\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { GameOverHistoryRecordDecisionBuriedPlayersProps } from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionBuriedPlayers/game-over-history-record-decision-buried-players.types\";\nimport GameOverHistoryRecordDecisionBuriedPlayer from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionBuriedPlayers/GameOverHistoryRecordDecisionBuriedPlayer/GameOverHistoryRecordDecisionBuriedPlayer.vue\";\nimport OverflowTag from \"~/components/shared/misc/OverflowTag/OverflowTag.vue\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\n\nconst props = defineProps<GameOverHistoryRecordDecisionBuriedPlayersProps>();\n\nconst maximumBuriedPlayersDisplayed = 3;\n\nconst buriedPlayers = computed<Player[]>(() => {\n  const { interactions } = props.gameHistoryRecord.play.source;\n  const buryDeadBodiesInteraction = interactions?.find(({ type }) => type === \"bury\");\n\n  return buryDeadBodiesInteraction?.eligibleTargets ?? [];\n});\n\nconst truncatedBuriedPlayers = computed<Player[]>(() => buriedPlayers.value.slice(0, maximumBuriedPlayersDisplayed));\n</script>"
    },
    "components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionChosenSide/GameOverHistoryRecordDecisionChosenSide.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "246",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Over History Record Decision Chosen Side Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "867"
          ],
          "coveredBy": [
            "867",
            "868",
            "869",
            "870"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 31
            },
            "start": {
              "column": 54,
              "line": 26
            }
          }
        },
        {
          "id": "247",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Game Over History Record Decision Chosen Side Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "867"
          ],
          "coveredBy": [
            "867",
            "868",
            "869",
            "870"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 27
            },
            "start": {
              "column": 7,
              "line": 27
            }
          }
        },
        {
          "id": "248",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected '/svg/role/werewolf.svg' to be '/svg/role/villager.svg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "870"
          ],
          "coveredBy": [
            "867",
            "868",
            "869",
            "870"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 27
            },
            "start": {
              "column": 7,
              "line": 27
            }
          }
        },
        {
          "id": "249",
          "mutatorName": "EqualityOperator",
          "replacement": "props.gameHistoryRecord.play.chosenSide !== \"villagers\"",
          "statusReason": "Snapshot `Game Over History Record Decision Chosen Side Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "867"
          ],
          "coveredBy": [
            "867",
            "868",
            "869",
            "870"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 27
            },
            "start": {
              "column": 7,
              "line": 27
            }
          }
        },
        {
          "id": "250",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '/svg/role/werewolf.svg' to be '/svg/role/villager.svg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "870"
          ],
          "coveredBy": [
            "867",
            "868",
            "869",
            "870"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 27
            },
            "start": {
              "column": 51,
              "line": 27
            }
          }
        },
        {
          "id": "251",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected '/svg/role/werewolf.svg' to be '/svg/role/villager.svg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "870"
          ],
          "coveredBy": [
            "870"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 29
            },
            "start": {
              "column": 64,
              "line": 27
            }
          }
        },
        {
          "id": "252",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be '/svg/role/villager.svg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "870"
          ],
          "coveredBy": [
            "870"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 28
            },
            "start": {
              "column": 12,
              "line": 28
            }
          }
        },
        {
          "id": "253",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Over History Record Decision Chosen Side Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "867"
          ],
          "coveredBy": [
            "867",
            "868",
            "869",
            "870"
          ],
          "location": {
            "end": {
              "column": 34,
              "line": 30
            },
            "start": {
              "column": 10,
              "line": 30
            }
          }
        },
        {
          "id": "254",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Over History Record Decision Chosen Side Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "867"
          ],
          "coveredBy": [
            "867",
            "868",
            "869",
            "870"
          ],
          "location": {
            "end": {
              "column": 119,
              "line": 33
            },
            "start": {
              "column": 41,
              "line": 33
            }
          }
        },
        {
          "id": "255",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Over History Record Decision Chosen Side Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "867"
          ],
          "coveredBy": [
            "867",
            "868",
            "869",
            "870"
          ],
          "location": {
            "end": {
              "column": 118,
              "line": 33
            },
            "start": {
              "column": 49,
              "line": 33
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-over-history-record-decision-chosen-side\"\n    class=\"flex flex-col gap-4 items-center justify-center\"\n  >\n    <h4 id=\"game-over-history-record-decision-chosen-side-text\">\n      {{ chosenSideText }}\n    </h4>\n\n    <NuxtImg\n      :alt=\"$t(`components.GameTeamSide.sideAltText.${props.gameHistoryRecord.play.chosenSide}`)\"\n      height=\"75\"\n      :src=\"chosenSideSvgIconPath\"\n      width=\"75\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { GameOverHistoryRecordDecisionChosenSideProps } from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionChosenSide/game-over-history-record-decision-chosen-side.types\";\n\nconst props = defineProps<GameOverHistoryRecordDecisionChosenSideProps>();\n\nconst { t } = useI18n();\n\nconst chosenSideSvgIconPath = computed<string>(() => {\n  if (props.gameHistoryRecord.play.chosenSide === \"villagers\") {\n    return \"/svg/role/villager.svg\";\n  }\n  return \"/svg/role/werewolf.svg\";\n});\n\nconst chosenSideText = computed<string>(() => t(`shared.role.definiteSide.${props.gameHistoryRecord.play.chosenSide}`));\n</script>"
    },
    "components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionNominatedPlayers/GameOverHistoryRecordDecisionNominatedPlayers.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "256",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "549"
          ],
          "coveredBy": [
            "549",
            "550",
            "551",
            "552",
            "553",
            "554"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 40
            },
            "start": {
              "column": 51,
              "line": 36
            }
          }
        },
        {
          "id": "257",
          "mutatorName": "LogicalOperator",
          "replacement": "voting?.nominatedPlayers && []",
          "statusReason": "Snapshot `Game Over History Record Decision Nominated Players Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "549"
          ],
          "coveredBy": [
            "549",
            "550",
            "551",
            "552",
            "553",
            "554"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 39
            },
            "start": {
              "column": 10,
              "line": 39
            }
          }
        },
        {
          "id": "258",
          "mutatorName": "OptionalChaining",
          "replacement": "voting.nominatedPlayers",
          "statusReason": "Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "552"
          ],
          "coveredBy": [
            "549",
            "550",
            "551",
            "552",
            "553",
            "554"
          ],
          "location": {
            "end": {
              "column": 34,
              "line": 39
            },
            "start": {
              "column": 10,
              "line": 39
            }
          }
        },
        {
          "id": "259",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "552"
          ],
          "coveredBy": [
            "552",
            "553"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 39
            },
            "start": {
              "column": 38,
              "line": 39
            }
          }
        },
        {
          "id": "260",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Over History Record Decision Nominated Players Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "549"
          ],
          "coveredBy": [
            "549",
            "550",
            "551",
            "552",
            "553",
            "554"
          ],
          "location": {
            "end": {
              "column": 125,
              "line": 42
            },
            "start": {
              "column": 54,
              "line": 42
            }
          }
        },
        {
          "id": "261",
          "mutatorName": "MethodExpression",
          "replacement": "nominatedPlayers.value",
          "statusReason": "Snapshot `Game Over History Record Decision Nominated Players Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "549"
          ],
          "coveredBy": [
            "549",
            "550",
            "551",
            "552",
            "553",
            "554"
          ],
          "location": {
            "end": {
              "column": 125,
              "line": 42
            },
            "start": {
              "column": 60,
              "line": 42
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-over-history-record-decision-nominated-players\"\n    class=\"flex gap-4 items-center justify-center\"\n  >\n    <div\n      v-for=\"nominatedPlayer in truncatedNominatedPlayers\"\n      :key=\"nominatedPlayer._id\"\n      class=\"game-over-history-record-source-player w-full\"\n    >\n      <PlayerCard\n        class=\"game-over-history-record-decision-nominated-player-card\"\n        :player-name=\"nominatedPlayer.name\"\n        :player-role=\"nominatedPlayer.role.current\"\n      />\n    </div>\n\n    <OverflowTag\n      id=\"nominated-players-overflow-tag\"\n      :entities-count=\"nominatedPlayers.length\"\n      :maximum-entities-displayed=\"maximumNominatedPlayersDisplayed\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { GameOverHistoryRecordDecisionNominatedPlayersProps } from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionNominatedPlayers/game-over-history-record-decision-nominated-players.types\";\nimport PlayerCard from \"~/components/shared/game/player/PlayerCard/PlayerCard.vue\";\nimport OverflowTag from \"~/components/shared/misc/OverflowTag/OverflowTag.vue\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\n\nconst props = defineProps<GameOverHistoryRecordDecisionNominatedPlayersProps>();\n\nconst maximumNominatedPlayersDisplayed = 3;\n\nconst nominatedPlayers = computed<Player[]>(() => {\n  const { voting } = props.gameHistoryRecord.play;\n\n  return voting?.nominatedPlayers ?? [];\n});\n\nconst truncatedNominatedPlayers = computed<Player[]>(() => nominatedPlayers.value.slice(0, maximumNominatedPlayersDisplayed));\n</script>"
    },
    "components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionTargets/GameOverHistoryRecordDecisionTarget/GameOverHistoryRecordDecisionTarget.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "262",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Cannot call props on an empty VueWrapper.",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "590"
          ],
          "coveredBy": [
            "587",
            "588",
            "589",
            "590",
            "591",
            "592",
            "593",
            "594",
            "595"
          ],
          "location": {
            "end": {
              "column": 74,
              "line": 37
            },
            "start": {
              "column": 42,
              "line": 37
            }
          }
        },
        {
          "id": "263",
          "mutatorName": "BooleanLiteral",
          "replacement": "!props.target.drankPotion",
          "statusReason": "Snapshot `Game Over History Record Decision Target Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "587"
          ],
          "coveredBy": [
            "587",
            "588",
            "589",
            "590",
            "591",
            "592",
            "593",
            "594",
            "595"
          ],
          "location": {
            "end": {
              "column": 74,
              "line": 37
            },
            "start": {
              "column": 48,
              "line": 37
            }
          }
        },
        {
          "id": "264",
          "mutatorName": "BooleanLiteral",
          "replacement": "props.target.drankPotion",
          "statusReason": "Snapshot `Game Over History Record Decision Target Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "587"
          ],
          "coveredBy": [
            "587",
            "588",
            "589",
            "590",
            "591",
            "592",
            "593",
            "594",
            "595"
          ],
          "location": {
            "end": {
              "column": 74,
              "line": 37
            },
            "start": {
              "column": 49,
              "line": 37
            }
          }
        },
        {
          "id": "265",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Cannot call attributes on an empty VueWrapper.",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "591"
          ],
          "coveredBy": [
            "587",
            "588",
            "589",
            "590",
            "591",
            "592",
            "593",
            "594",
            "595"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 44
            },
            "start": {
              "column": 40,
              "line": 39
            }
          }
        },
        {
          "id": "266",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Cannot call attributes on an empty VueWrapper.",
          "status": "Killed",
          "testsCompleted": 8,
          "static": false,
          "killedBy": [
            "594"
          ],
          "coveredBy": [
            "587",
            "588",
            "589",
            "590",
            "591",
            "592",
            "593",
            "594",
            "595"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 40
            },
            "start": {
              "column": 7,
              "line": 40
            }
          }
        },
        {
          "id": "267",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Cannot call attributes on an empty VueWrapper.",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "591"
          ],
          "coveredBy": [
            "587",
            "588",
            "589",
            "590",
            "591",
            "592",
            "593",
            "594",
            "595"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 40
            },
            "start": {
              "column": 7,
              "line": 40
            }
          }
        },
        {
          "id": "268",
          "mutatorName": "EqualityOperator",
          "replacement": "props.target.drankPotion !== \"life\"",
          "statusReason": "Cannot call attributes on an empty VueWrapper.",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "591"
          ],
          "coveredBy": [
            "587",
            "588",
            "589",
            "590",
            "591",
            "592",
            "593",
            "594",
            "595"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 40
            },
            "start": {
              "column": 7,
              "line": 40
            }
          }
        },
        {
          "id": "269",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Cannot call attributes on an empty VueWrapper.",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "591"
          ],
          "coveredBy": [
            "587",
            "588",
            "589",
            "590",
            "591",
            "592",
            "593",
            "594",
            "595"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 40
            },
            "start": {
              "column": 36,
              "line": 40
            }
          }
        },
        {
          "id": "270",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Cannot call attributes on an empty VueWrapper.",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "591"
          ],
          "coveredBy": [
            "590",
            "591",
            "592"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 42
            },
            "start": {
              "column": 44,
              "line": 40
            }
          }
        },
        {
          "id": "271",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Cannot call attributes on an empty VueWrapper.",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "591"
          ],
          "coveredBy": [
            "590",
            "591",
            "592"
          ],
          "location": {
            "end": {
              "column": 73,
              "line": 41
            },
            "start": {
              "column": 14,
              "line": 41
            }
          }
        },
        {
          "id": "272",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Cannot call attributes on an empty VueWrapper.",
          "status": "Killed",
          "testsCompleted": 8,
          "static": false,
          "killedBy": [
            "594"
          ],
          "coveredBy": [
            "587",
            "588",
            "589",
            "590",
            "591",
            "592",
            "593",
            "594",
            "595"
          ],
          "location": {
            "end": {
              "column": 72,
              "line": 43
            },
            "start": {
              "column": 12,
              "line": 43
            }
          }
        },
        {
          "id": "273",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected undefined to be '/svg/game/player/player-attribute/dra…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "591"
          ],
          "coveredBy": [
            "587",
            "588",
            "589",
            "590",
            "591",
            "592",
            "593",
            "594",
            "595"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 51
            },
            "start": {
              "column": 44,
              "line": 46
            }
          }
        },
        {
          "id": "274",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected '/svg/game/player/player-attribute/dra…' to be '/svg/game/player/player-attribute/dra…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 8,
          "static": false,
          "killedBy": [
            "594"
          ],
          "coveredBy": [
            "587",
            "588",
            "589",
            "590",
            "591",
            "592",
            "593",
            "594",
            "595"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 47
            },
            "start": {
              "column": 7,
              "line": 47
            }
          }
        },
        {
          "id": "275",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected '/svg/game/player/player-attribute/dra…' to be '/svg/game/player/player-attribute/dra…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "591"
          ],
          "coveredBy": [
            "587",
            "588",
            "589",
            "590",
            "591",
            "592",
            "593",
            "594",
            "595"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 47
            },
            "start": {
              "column": 7,
              "line": 47
            }
          }
        },
        {
          "id": "276",
          "mutatorName": "EqualityOperator",
          "replacement": "props.target.drankPotion !== \"life\"",
          "statusReason": "expected '/svg/game/player/player-attribute/dra…' to be '/svg/game/player/player-attribute/dra…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "591"
          ],
          "coveredBy": [
            "587",
            "588",
            "589",
            "590",
            "591",
            "592",
            "593",
            "594",
            "595"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 47
            },
            "start": {
              "column": 7,
              "line": 47
            }
          }
        },
        {
          "id": "277",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '/svg/game/player/player-attribute/dra…' to be '/svg/game/player/player-attribute/dra…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "591"
          ],
          "coveredBy": [
            "587",
            "588",
            "589",
            "590",
            "591",
            "592",
            "593",
            "594",
            "595"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 47
            },
            "start": {
              "column": 36,
              "line": 47
            }
          }
        },
        {
          "id": "278",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected '/svg/game/player/player-attribute/dra…' to be '/svg/game/player/player-attribute/dra…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "591"
          ],
          "coveredBy": [
            "590",
            "591",
            "592"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 49
            },
            "start": {
              "column": 44,
              "line": 47
            }
          }
        },
        {
          "id": "279",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be '/svg/game/player/player-attribute/dra…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "591"
          ],
          "coveredBy": [
            "590",
            "591",
            "592"
          ],
          "location": {
            "end": {
              "column": 69,
              "line": 48
            },
            "start": {
              "column": 12,
              "line": 48
            }
          }
        },
        {
          "id": "280",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be '/svg/game/player/player-attribute/dra…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 8,
          "static": false,
          "killedBy": [
            "594"
          ],
          "coveredBy": [
            "587",
            "588",
            "589",
            "590",
            "591",
            "592",
            "593",
            "594",
            "595"
          ],
          "location": {
            "end": {
              "column": 68,
              "line": 50
            },
            "start": {
              "column": 10,
              "line": 50
            }
          }
        },
        {
          "id": "281",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected undefined to be 'success' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "590"
          ],
          "coveredBy": [
            "587",
            "588",
            "589",
            "590",
            "591",
            "592",
            "593",
            "594",
            "595"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 58
            },
            "start": {
              "column": 58,
              "line": 53
            }
          }
        },
        {
          "id": "282",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'success' to be 'danger' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "593"
          ],
          "coveredBy": [
            "587",
            "588",
            "589",
            "590",
            "591",
            "592",
            "593",
            "594",
            "595"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 54
            },
            "start": {
              "column": 7,
              "line": 54
            }
          }
        },
        {
          "id": "283",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected 'danger' to be 'success' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "590"
          ],
          "coveredBy": [
            "587",
            "588",
            "589",
            "590",
            "591",
            "592",
            "593",
            "594",
            "595"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 54
            },
            "start": {
              "column": 7,
              "line": 54
            }
          }
        },
        {
          "id": "284",
          "mutatorName": "EqualityOperator",
          "replacement": "props.target.drankPotion !== \"life\"",
          "statusReason": "expected 'danger' to be 'success' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "590"
          ],
          "coveredBy": [
            "587",
            "588",
            "589",
            "590",
            "591",
            "592",
            "593",
            "594",
            "595"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 54
            },
            "start": {
              "column": 7,
              "line": 54
            }
          }
        },
        {
          "id": "285",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected 'danger' to be 'success' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "590"
          ],
          "coveredBy": [
            "587",
            "588",
            "589",
            "590",
            "591",
            "592",
            "593",
            "594",
            "595"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 54
            },
            "start": {
              "column": 36,
              "line": 54
            }
          }
        },
        {
          "id": "286",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected 'danger' to be 'success' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "590"
          ],
          "coveredBy": [
            "590",
            "591",
            "592"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 56
            },
            "start": {
              "column": 44,
              "line": 54
            }
          }
        },
        {
          "id": "287",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be 'success' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "590"
          ],
          "coveredBy": [
            "590",
            "591",
            "592"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 55
            },
            "start": {
              "column": 12,
              "line": 55
            }
          }
        },
        {
          "id": "288",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be 'danger' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "593"
          ],
          "coveredBy": [
            "587",
            "588",
            "589",
            "590",
            "591",
            "592",
            "593",
            "594",
            "595"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 57
            },
            "start": {
              "column": 10,
              "line": 57
            }
          }
        }
      ],
      "source": "<template>\n  <div class=\"flex flex-col gap-2 items-center justify-center\">\n    <PlayerCard\n      class=\"game-over-history-record-decision-target-player-card\"\n      :player-name=\"target.player.name\"\n      :player-role=\"target.player.role.current\"\n    />\n\n    <VuePrimeTag\n      v-if=\"isTagDisplayed\"\n      id=\"target-potion-tag\"\n      class=\"flex gap-2 items-center justify-center\"\n      :severity=\"tagSeverity\"\n    >\n      <NuxtImg\n        :alt=\"tagText\"\n        height=\"25\"\n        :src=\"tagIconPath\"\n        width=\"25\"\n      />\n\n      <span id=\"target-potion-tag-text\">\n        {{ tagText }}\n      </span>\n    </VuePrimeTag>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { GameOverHistoryRecordDecisionTargetProps } from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionTargets/GameOverHistoryRecordDecisionTarget/game-over-history-record-decision-target.types\";\nimport PlayerCard from \"~/components/shared/game/player/PlayerCard/PlayerCard.vue\";\n\nconst props = defineProps<GameOverHistoryRecordDecisionTargetProps>();\n\nconst { t } = useI18n();\n\nconst isTagDisplayed = computed<boolean>(() => !!props.target.drankPotion);\n\nconst tagText = computed<string>(() => {\n  if (props.target.drankPotion === \"life\") {\n    return t(\"components.GameOverHistoryRecordDecisionTarget.lifePotion\");\n  }\n  return t(\"components.GameOverHistoryRecordDecisionTarget.deathPotion\");\n});\n\nconst tagIconPath = computed<string>(() => {\n  if (props.target.drankPotion === \"life\") {\n    return \"/svg/game/player/player-attribute/drank-life-potion.svg\";\n  }\n  return \"/svg/game/player/player-attribute/drank-death-potion.svg\";\n});\n\nconst tagSeverity = computed<\"danger\" | \"success\">(() => {\n  if (props.target.drankPotion === \"life\") {\n    return \"success\";\n  }\n  return \"danger\";\n});\n</script>"
    },
    "components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionTargets/GameOverHistoryRecordDecisionTargets.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "289",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "573"
          ],
          "coveredBy": [
            "573",
            "574",
            "575",
            "576",
            "577"
          ],
          "location": {
            "end": {
              "column": 105,
              "line": 31
            },
            "start": {
              "column": 57,
              "line": 31
            }
          }
        },
        {
          "id": "290",
          "mutatorName": "LogicalOperator",
          "replacement": "props.gameHistoryRecord.play.targets && []",
          "statusReason": "Snapshot `Game Over History Record Decision Targets Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "573"
          ],
          "coveredBy": [
            "573",
            "574",
            "575",
            "576",
            "577"
          ],
          "location": {
            "end": {
              "column": 105,
              "line": 31
            },
            "start": {
              "column": 63,
              "line": 31
            }
          }
        },
        {
          "id": "291",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "576"
          ],
          "coveredBy": [
            "576"
          ],
          "location": {
            "end": {
              "column": 105,
              "line": 31
            },
            "start": {
              "column": 103,
              "line": 31
            }
          }
        },
        {
          "id": "292",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Over History Record Decision Targets Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "573"
          ],
          "coveredBy": [
            "573",
            "574",
            "575",
            "576",
            "577"
          ],
          "location": {
            "end": {
              "column": 119,
              "line": 33
            },
            "start": {
              "column": 66,
              "line": 33
            }
          }
        },
        {
          "id": "293",
          "mutatorName": "MethodExpression",
          "replacement": "targets.value",
          "statusReason": "Snapshot `Game Over History Record Decision Targets Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "573"
          ],
          "coveredBy": [
            "573",
            "574",
            "575",
            "576",
            "577"
          ],
          "location": {
            "end": {
              "column": 119,
              "line": 33
            },
            "start": {
              "column": 72,
              "line": 33
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-over-history-record-decision-targets\"\n    class=\"flex gap-4 items-center justify-center\"\n  >\n    <GameOverHistoryRecordDecisionTarget\n      v-for=\"gameHistoryRecordPlayTarget in truncatedTargets\"\n      :key=\"gameHistoryRecordPlayTarget.player._id\"\n      class=\"game-over-history-record-target-player w-full\"\n      :target=\"gameHistoryRecordPlayTarget\"\n    />\n\n    <OverflowTag\n      id=\"target-players-overflow-tag\"\n      :entities-count=\"targets.length\"\n      :maximum-entities-displayed=\"maximumTargetsDisplayed\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { GameOverHistoryRecordDecisionTargetsProps } from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionTargets/game-over-history-record-decision-targets.types\";\nimport GameOverHistoryRecordDecisionTarget from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionTargets/GameOverHistoryRecordDecisionTarget/GameOverHistoryRecordDecisionTarget.vue\";\nimport OverflowTag from \"~/components/shared/misc/OverflowTag/OverflowTag.vue\";\nimport type { GameHistoryRecordPlayTarget } from \"~/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-target/game-history-record-play-target.class\";\n\nconst props = defineProps<GameOverHistoryRecordDecisionTargetsProps>();\n\nconst maximumTargetsDisplayed = 3;\n\nconst targets = computed<GameHistoryRecordPlayTarget[]>(() => props.gameHistoryRecord.play.targets ?? []);\n\nconst truncatedTargets = computed<GameHistoryRecordPlayTarget[]>(() => targets.value.slice(0, maximumTargetsDisplayed));\n</script>"
    },
    "components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordSource/GameOverHistoryRecordSource.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "294",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Over History Record Source Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "683"
          ],
          "coveredBy": [
            "683",
            "684",
            "685",
            "686",
            "687"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 51
            },
            "start": {
              "column": 69,
              "line": 47
            }
          }
        },
        {
          "id": "295",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Over History Record Source Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "683"
          ],
          "coveredBy": [
            "683",
            "684",
            "685",
            "686",
            "687"
          ],
          "location": {
            "end": {
              "column": 157,
              "line": 55
            },
            "start": {
              "column": 59,
              "line": 55
            }
          }
        },
        {
          "id": "296",
          "mutatorName": "MethodExpression",
          "replacement": "shuffle(props.gameHistoryRecord.play.source.players)",
          "statusReason": "Snapshot `Game Over History Record Source Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "683"
          ],
          "coveredBy": [
            "683",
            "684",
            "685",
            "686",
            "687"
          ],
          "location": {
            "end": {
              "column": 157,
              "line": 55
            },
            "start": {
              "column": 65,
              "line": 55
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-over-history-record-source\"\n    class=\"flex flex-col gap-4 item-center justify-center text-center\"\n  >\n    <h4 id=\"game-over-history-record-source-name\">\n      {{ gameHistoryRecordPlaySourceNameLabel }}\n    </h4>\n\n    <div\n      id=\"game-over-history-record-source-players\"\n      class=\"flex gap-4 items-center justify-center\"\n    >\n      <div\n        v-for=\"playerSource in shuffledTruncatedSourcePlayers\"\n        :key=\"playerSource._id\"\n        class=\"game-over-history-record-source-player grow\"\n      >\n        <PlayerCard\n          class=\"game-over-history-record-source-player-card\"\n          :player-name=\"playerSource.name\"\n          :player-role=\"playerSource.role.current\"\n        />\n      </div>\n\n      <OverflowTag\n        id=\"source-player-overflow-tag\"\n        :entities-count=\"props.gameHistoryRecord.play.source.players.length\"\n        :maximum-entities-displayed=\"maximumSourcePlayersDisplayed\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { shuffle } from \"radash\";\nimport type { GameOverHistoryRecordSourceProps } from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordSource/game-over-history-record-source.types\";\nimport PlayerCard from \"~/components/shared/game/player/PlayerCard/PlayerCard.vue\";\nimport OverflowTag from \"~/components/shared/misc/OverflowTag/OverflowTag.vue\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { useGameSourceName } from \"~/composables/api/game/useGameSource\";\n\nconst props = defineProps<GameOverHistoryRecordSourceProps>();\n\nconst { getDefiniteGameSourceNameLabel } = useGameSourceName();\n\nconst gameHistoryRecordPlaySourceNameLabel = computed<string>(() => {\n  const { source } = props.gameHistoryRecord.play;\n\n  return getDefiniteGameSourceNameLabel(source.name, source.players.length);\n});\n\nconst maximumSourcePlayersDisplayed = 3;\n\nconst shuffledTruncatedSourcePlayers = computed<Player[]>(() => shuffle(props.gameHistoryRecord.play.source.players).slice(0, maximumSourcePlayersDisplayed));\n</script>"
    },
    "components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecordIcon/GameOverHistoryRecordIcon.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "297",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Over History Record Icon Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "882"
          ],
          "coveredBy": [
            "882",
            "883",
            "884"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 26
            },
            "start": {
              "column": 58,
              "line": 19
            }
          }
        },
        {
          "id": "298",
          "mutatorName": "OptionalChaining",
          "replacement": "GAME_PLAYS_TEXT_AND_SVG[source.name][action].svgPath",
          "statusReason": "Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "884"
          ],
          "coveredBy": [
            "882",
            "883",
            "884"
          ],
          "location": {
            "end": {
              "column": 72,
              "line": 23
            },
            "start": {
              "column": 19,
              "line": 23
            }
          }
        },
        {
          "id": "299",
          "mutatorName": "LogicalOperator",
          "replacement": "svgPath && \"/svg/misc/question-mark.svg\"",
          "statusReason": "Snapshot `Game Over History Record Icon Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "882"
          ],
          "coveredBy": [
            "882",
            "883",
            "884"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 25
            },
            "start": {
              "column": 10,
              "line": 25
            }
          }
        },
        {
          "id": "300",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be '/svg/misc/question-mark.svg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "884"
          ],
          "coveredBy": [
            "884"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 25
            },
            "start": {
              "column": 21,
              "line": 25
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-history-record-icon\"\n    class=\"align-items-center flex h-12 justify-content-center shadow-1 text-white w-12 z-1\"\n  >\n    <NuxtImg\n      :alt=\"$t(`components.GameOverHistoryRecordIcon.gameHistoryRecordIconAltText`)\"\n      :src=\"gameHistoryRecordIconPath\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { GameOverHistoryRecordProps } from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/game-over-history-record.types\";\nimport { GAME_PLAYS_TEXT_AND_SVG } from \"~/components/shared/game/game-play/game-play.constants\";\n\nconst props = defineProps<GameOverHistoryRecordProps>();\n\nconst gameHistoryRecordIconPath = computed<string>(() => {\n  const { gameHistoryRecord } = props;\n  const { source, action } = gameHistoryRecord.play;\n\n  const svgPath = GAME_PLAYS_TEXT_AND_SVG[source.name][action]?.svgPath;\n\n  return svgPath ?? \"/svg/misc/question-mark.svg\";\n});\n</script>"
    },
    "components/pages/game/GameOver/GameOverVictoryText/GameOverVictoryText.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "301",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "299"
          ],
          "coveredBy": [
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "310",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "319",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 69
            },
            "start": {
              "column": 60,
              "line": 52
            }
          }
        },
        {
          "id": "302",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Over Victory Text Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "299"
          ],
          "coveredBy": [
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "310",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "319",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 58
            },
            "start": {
              "column": 50,
              "line": 54
            }
          }
        },
        {
          "id": "303",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Over Victory Text Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "299"
          ],
          "coveredBy": [
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "310",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "319",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327"
          ],
          "location": {
            "end": {
              "column": 15,
              "line": 55
            },
            "start": {
              "column": 11,
              "line": 55
            }
          }
        },
        {
          "id": "304",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Over Victory Text Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "299"
          ],
          "coveredBy": [
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "310",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "319",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 56
            },
            "start": {
              "column": 14,
              "line": 56
            }
          }
        },
        {
          "id": "305",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Over Victory Text Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "299"
          ],
          "coveredBy": [
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "310",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "319",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 57
            },
            "start": {
              "column": 14,
              "line": 57
            }
          }
        },
        {
          "id": "306",
          "mutatorName": "BooleanLiteral",
          "replacement": "victory",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "299"
          ],
          "coveredBy": [
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "310",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "319",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327"
          ],
          "location": {
            "end": {
              "column": 15,
              "line": 59
            },
            "start": {
              "column": 7,
              "line": 59
            }
          }
        },
        {
          "id": "307",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'svg/misc/question-mark.svg' to be 'svg/role/werewolf.svg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "302"
          ],
          "coveredBy": [
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "310",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "319",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327"
          ],
          "location": {
            "end": {
              "column": 15,
              "line": 59
            },
            "start": {
              "column": 7,
              "line": 59
            }
          }
        },
        {
          "id": "308",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "299"
          ],
          "coveredBy": [
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "310",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "319",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327"
          ],
          "location": {
            "end": {
              "column": 15,
              "line": 59
            },
            "start": {
              "column": 7,
              "line": 59
            }
          }
        },
        {
          "id": "309",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "299"
          ],
          "coveredBy": [
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "310",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "319",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 61
            },
            "start": {
              "column": 17,
              "line": 59
            }
          }
        },
        {
          "id": "310",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected undefined to be 'svg/role/werewolf.svg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "302"
          ],
          "coveredBy": [
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 68
            },
            "start": {
              "column": 10,
              "line": 64
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-over-winners-text\"\n    class=\"text-center\"\n  >\n    <div class=\"flex gap-2 items-center justify-center\">\n      <NuxtImg\n        :alt=\"$t('components.GameOverVictoryText.trophyImageAlt')\"\n        height=\"125\"\n        src=\"svg/misc/trophy.svg\"\n        width=\"125\"\n      />\n\n      <NuxtImg\n        :alt=\"$t('components.GameOverVictoryText.victoryTypeImageAlt')\"\n        height=\"125\"\n        :src=\"victoryTypeTextsAndSvg.svgPath\"\n        width=\"125\"\n      />\n    </div>\n\n    <h1\n      id=\"victory-text\"\n      class=\"my-3\"\n    >\n      {{ victoryTypeTextsAndSvg.text }}\n    </h1>\n\n    <h3 id=\"victory-sub-text\">\n      {{ victoryTypeTextsAndSvg.subText }}\n    </h3>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\n\nimport { VICTORY_TYPES_TEXTS_AND_SVG } from \"~/components/pages/game/GameOver/GameOverVictoryText/game-over-victory-text.constants\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\n\ntype TextsAndSvg = {\n  text: string;\n  subText: string;\n  svgPath: string;\n};\n\nconst gameStore = useGameStore();\nconst { game } = storeToRefs(gameStore);\n\nconst { t } = useI18n();\n\nconst victoryTypeTextsAndSvg = computed<TextsAndSvg>(() => {\n  const { victory } = game.value;\n  const unknownVictoryTextsAndSvg: TextsAndSvg = {\n    text: \"??\",\n    subText: \"??\",\n    svgPath: \"svg/misc/question-mark.svg\",\n  };\n  if (!victory) {\n    return unknownVictoryTextsAndSvg;\n  }\n  const { textKey, subTextKey, svgPath } = VICTORY_TYPES_TEXTS_AND_SVG[victory.type];\n\n  return {\n    text: t(textKey),\n    subText: t(subTextKey),\n    svgPath,\n  };\n});\n</script>"
    },
    "components/pages/game/GameOver/GameOverWinners/GameOverWinners.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "311",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Over Winners Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "926"
          ],
          "coveredBy": [
            "926",
            "927",
            "928",
            "929"
          ],
          "location": {
            "end": {
              "column": 81,
              "line": 25
            },
            "start": {
              "column": 48,
              "line": 25
            }
          }
        },
        {
          "id": "312",
          "mutatorName": "OptionalChaining",
          "replacement": "game.value.victory.winners",
          "statusReason": "Cannot read properties of undefined (reading 'winners')",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "928"
          ],
          "coveredBy": [
            "926",
            "927",
            "928",
            "929"
          ],
          "location": {
            "end": {
              "column": 81,
              "line": 25
            },
            "start": {
              "column": 54,
              "line": 25
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-over-winners\"\n    class=\"w-full\"\n  >\n    <PlayersHorizontalList\n      v-if=\"!!winners\"\n      id=\"players-horizontal-list\"\n      data-testid=\"game-over-winners\"\n      :players=\"winners\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\n\nimport PlayersHorizontalList from \"~/components/shared/game/player/PlayersHorizontalList/PlayersHorizontalList.vue\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\n\nconst gameStore = useGameStore();\nconst { game } = storeToRefs(gameStore);\n\nconst winners = computed<Player[] | undefined>(() => game.value.victory?.winners);\n</script>"
    },
    "components/pages/game/GamePlaying/GamePlayground/CurrentPlayExpectedPlayersToAct/CurrentPlayExpectedPlayersToAct.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "313",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Current Play Expected Players To Act Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "845"
          ],
          "coveredBy": [
            "845",
            "846",
            "847",
            "848"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 23
            },
            "start": {
              "column": 49,
              "line": 23
            }
          }
        },
        {
          "id": "314",
          "mutatorName": "LogicalOperator",
          "replacement": "game.value.currentPlay?.source.players && []",
          "statusReason": "Snapshot `Current Play Expected Players To Act Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "845"
          ],
          "coveredBy": [
            "845",
            "846",
            "847",
            "848"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 23
            },
            "start": {
              "column": 55,
              "line": 23
            }
          }
        },
        {
          "id": "315",
          "mutatorName": "OptionalChaining",
          "replacement": "game.value.currentPlay.source",
          "statusReason": "Cannot read properties of null (reading 'source')",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "846"
          ],
          "coveredBy": [
            "845",
            "846",
            "847",
            "848"
          ],
          "location": {
            "end": {
              "column": 85,
              "line": 23
            },
            "start": {
              "column": 55,
              "line": 23
            }
          }
        },
        {
          "id": "316",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "expected [ 'Stryker was here' ] to strictly equal []",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "846"
          ],
          "coveredBy": [
            "846"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 23
            },
            "start": {
              "column": 97,
              "line": 23
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"current-play-expected-players-to-act\"\n    class=\"w-full\"\n  >\n    <PlayersHorizontalList\n      id=\"player-horizontal-list\"\n      :players=\"expectedPlayersToAct\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\n\nimport PlayersHorizontalList from \"~/components/shared/game/player/PlayersHorizontalList/PlayersHorizontalList.vue\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\n\nconst gameStore = useGameStore();\nconst { game } = storeToRefs(gameStore);\n\nconst expectedPlayersToAct = computed<Player[]>(() => game.value.currentPlay?.source.players ?? []);\n</script>"
    },
    "components/pages/game/GamePlaying/GamePlayground/CurrentPlayQuestion/CurrentPlayQuestion.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "317",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Current Play Question Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "185"
          ],
          "coveredBy": [
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 34
            },
            "start": {
              "column": 52,
              "line": 21
            }
          }
        },
        {
          "id": "318",
          "mutatorName": "BooleanLiteral",
          "replacement": "currentPlay",
          "statusReason": "Snapshot `Current Play Question Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "185"
          ],
          "coveredBy": [
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 23
            },
            "start": {
              "column": 7,
              "line": 23
            }
          }
        },
        {
          "id": "319",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Current Play Question Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "185"
          ],
          "coveredBy": [
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 23
            },
            "start": {
              "column": 7,
              "line": 23
            }
          }
        },
        {
          "id": "320",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Cannot destructure property 'source' of 'currentPlay' as it is null.",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "186"
          ],
          "coveredBy": [
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 23
            },
            "start": {
              "column": 7,
              "line": 23
            }
          }
        },
        {
          "id": "321",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Cannot destructure property 'source' of 'currentPlay' as it is null.",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "186"
          ],
          "coveredBy": [
            "186"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 25
            },
            "start": {
              "column": 21,
              "line": 23
            }
          }
        },
        {
          "id": "322",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be 'components.CurrentPlayQuestion.unknow…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "186"
          ],
          "coveredBy": [
            "186"
          ],
          "location": {
            "end": {
              "column": 76,
              "line": 24
            },
            "start": {
              "column": 14,
              "line": 24
            }
          }
        },
        {
          "id": "323",
          "mutatorName": "OptionalChaining",
          "replacement": "GAME_PLAYS_QUESTIONS[source.name][action][cause ?? \"default\"]",
          "statusReason": "Cannot read properties of undefined (reading 'default')",
          "status": "Killed",
          "testsCompleted": 35,
          "static": false,
          "killedBy": [
            "212"
          ],
          "coveredBy": [
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213"
          ],
          "location": {
            "end": {
              "column": 86,
              "line": 28
            },
            "start": {
              "column": 23,
              "line": 28
            }
          }
        },
        {
          "id": "324",
          "mutatorName": "LogicalOperator",
          "replacement": "cause && \"default\"",
          "statusReason": "Snapshot `Current Play Question Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "185"
          ],
          "coveredBy": [
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213"
          ],
          "location": {
            "end": {
              "column": 85,
              "line": 28
            },
            "start": {
              "column": 67,
              "line": 28
            }
          }
        },
        {
          "id": "325",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Current Play Question Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "185"
          ],
          "coveredBy": [
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213"
          ],
          "location": {
            "end": {
              "column": 85,
              "line": 28
            },
            "start": {
              "column": 76,
              "line": 28
            }
          }
        },
        {
          "id": "326",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Current Play Question Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "185"
          ],
          "coveredBy": [
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213"
          ],
          "location": {
            "end": {
              "column": 32,
              "line": 30
            },
            "start": {
              "column": 7,
              "line": 30
            }
          }
        },
        {
          "id": "327",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected '' to be 'components.CurrentPlayQuestion.unknow…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 35,
          "static": false,
          "killedBy": [
            "212"
          ],
          "coveredBy": [
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213"
          ],
          "location": {
            "end": {
              "column": 32,
              "line": 30
            },
            "start": {
              "column": 7,
              "line": 30
            }
          }
        },
        {
          "id": "328",
          "mutatorName": "EqualityOperator",
          "replacement": "questionKey !== undefined",
          "statusReason": "Snapshot `Current Play Question Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "185"
          ],
          "coveredBy": [
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213"
          ],
          "location": {
            "end": {
              "column": 32,
              "line": 30
            },
            "start": {
              "column": 7,
              "line": 30
            }
          }
        },
        {
          "id": "329",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected '' to be 'components.CurrentPlayQuestion.unknow…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "212"
          ],
          "coveredBy": [
            "212",
            "213"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 32
            },
            "start": {
              "column": 34,
              "line": 30
            }
          }
        },
        {
          "id": "330",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be 'components.CurrentPlayQuestion.unknow…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "212"
          ],
          "coveredBy": [
            "212",
            "213"
          ],
          "location": {
            "end": {
              "column": 76,
              "line": 31
            },
            "start": {
              "column": 14,
              "line": 31
            }
          }
        }
      ],
      "source": "<template>\n  <h3\n    id=\"current-play-question\"\n    class=\"text-center\"\n  >\n    {{ currentPlayQuestion }}\n  </h3>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\n\nimport { GAME_PLAYS_QUESTIONS } from \"~/components/pages/game/GamePlaying/GamePlayground/CurrentPlayQuestion/current-play-question.constants\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\n\nconst gameStore = useGameStore();\nconst { game } = storeToRefs(gameStore);\n\nconst { t } = useI18n();\n\nconst currentPlayQuestion = computed<string>(() => {\n  const { currentPlay } = game.value;\n  if (!currentPlay) {\n    return t(\"components.CurrentPlayQuestion.unknownQuestionForCurrentPlay\");\n  }\n\n  const { source, action, cause } = currentPlay;\n  const questionKey = GAME_PLAYS_QUESTIONS[source.name][action]?.[cause ?? \"default\"];\n\n  if (questionKey === undefined) {\n    return t(\"components.CurrentPlayQuestion.unknownQuestionForCurrentPlay\");\n  }\n  return t(questionKey);\n});\n</script>"
    },
    "components/pages/game/GamePlaying/GamePlayground/CurrentPlayQuestion/current-play-question.constants.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "331",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 2,
              "line": 49
            },
            "start": {
              "column": 118,
              "line": 8
            }
          }
        },
        {
          "id": "332",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 119,
              "line": 9
            },
            "start": {
              "column": 27,
              "line": 9
            }
          }
        },
        {
          "id": "333",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 117,
              "line": 9
            },
            "start": {
              "column": 37,
              "line": 9
            }
          }
        },
        {
          "id": "334",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 115,
              "line": 9
            },
            "start": {
              "column": 48,
              "line": 9
            }
          }
        },
        {
          "id": "335",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 102,
              "line": 10
            },
            "start": {
              "column": 12,
              "line": 10
            }
          }
        },
        {
          "id": "336",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 100,
              "line": 10
            },
            "start": {
              "column": 29,
              "line": 10
            }
          }
        },
        {
          "id": "337",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 98,
              "line": 10
            },
            "start": {
              "column": 40,
              "line": 10
            }
          }
        },
        {
          "id": "338",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 85,
              "line": 11
            },
            "start": {
              "column": 17,
              "line": 11
            }
          }
        },
        {
          "id": "339",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 83,
              "line": 11
            },
            "start": {
              "column": 26,
              "line": 11
            }
          }
        },
        {
          "id": "340",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 81,
              "line": 11
            },
            "start": {
              "column": 37,
              "line": 11
            }
          }
        },
        {
          "id": "341",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 102,
              "line": 12
            },
            "start": {
              "column": 19,
              "line": 12
            }
          }
        },
        {
          "id": "342",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 100,
              "line": 12
            },
            "start": {
              "column": 26,
              "line": 12
            }
          }
        },
        {
          "id": "343",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 98,
              "line": 12
            },
            "start": {
              "column": 37,
              "line": 12
            }
          }
        },
        {
          "id": "344",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 109,
              "line": 13
            },
            "start": {
              "column": 14,
              "line": 13
            }
          }
        },
        {
          "id": "345",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 107,
              "line": 13
            },
            "start": {
              "column": 35,
              "line": 13
            }
          }
        },
        {
          "id": "346",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 105,
              "line": 13
            },
            "start": {
              "column": 46,
              "line": 13
            }
          }
        },
        {
          "id": "347",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 95,
              "line": 14
            },
            "start": {
              "column": 12,
              "line": 14
            }
          }
        },
        {
          "id": "348",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 93,
              "line": 14
            },
            "start": {
              "column": 21,
              "line": 14
            }
          }
        },
        {
          "id": "349",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 91,
              "line": 14
            },
            "start": {
              "column": 32,
              "line": 14
            }
          }
        },
        {
          "id": "350",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 104,
              "line": 15
            },
            "start": {
              "column": 15,
              "line": 15
            }
          }
        },
        {
          "id": "351",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 102,
              "line": 15
            },
            "start": {
              "column": 26,
              "line": 15
            }
          }
        },
        {
          "id": "352",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 100,
              "line": 15
            },
            "start": {
              "column": 37,
              "line": 15
            }
          }
        },
        {
          "id": "353",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 85,
              "line": 16
            },
            "start": {
              "column": 10,
              "line": 16
            }
          }
        },
        {
          "id": "354",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 83,
              "line": 16
            },
            "start": {
              "column": 19,
              "line": 16
            }
          }
        },
        {
          "id": "355",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 81,
              "line": 16
            },
            "start": {
              "column": 30,
              "line": 16
            }
          }
        },
        {
          "id": "356",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 96,
              "line": 17
            },
            "start": {
              "column": 13,
              "line": 17
            }
          }
        },
        {
          "id": "357",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 94,
              "line": 17
            },
            "start": {
              "column": 22,
              "line": 17
            }
          }
        },
        {
          "id": "358",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 92,
              "line": 17
            },
            "start": {
              "column": 33,
              "line": 17
            }
          }
        },
        {
          "id": "359",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 101,
              "line": 18
            },
            "start": {
              "column": 13,
              "line": 18
            }
          }
        },
        {
          "id": "360",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 99,
              "line": 18
            },
            "start": {
              "column": 34,
              "line": 18
            }
          }
        },
        {
          "id": "361",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 97,
              "line": 18
            },
            "start": {
              "column": 45,
              "line": 18
            }
          }
        },
        {
          "id": "362",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 104,
              "line": 19
            },
            "start": {
              "column": 17,
              "line": 19
            }
          }
        },
        {
          "id": "363",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 102,
              "line": 19
            },
            "start": {
              "column": 26,
              "line": 19
            }
          }
        },
        {
          "id": "364",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 100,
              "line": 19
            },
            "start": {
              "column": 37,
              "line": 19
            }
          }
        },
        {
          "id": "365",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 103,
              "line": 20
            },
            "start": {
              "column": 20,
              "line": 20
            }
          }
        },
        {
          "id": "366",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 101,
              "line": 20
            },
            "start": {
              "column": 28,
              "line": 20
            }
          }
        },
        {
          "id": "367",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 99,
              "line": 20
            },
            "start": {
              "column": 39,
              "line": 20
            }
          }
        },
        {
          "id": "368",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 108,
              "line": 21
            },
            "start": {
              "column": 16,
              "line": 21
            }
          }
        },
        {
          "id": "369",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 106,
              "line": 21
            },
            "start": {
              "column": 32,
              "line": 21
            }
          }
        },
        {
          "id": "370",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 104,
              "line": 21
            },
            "start": {
              "column": 43,
              "line": 21
            }
          }
        },
        {
          "id": "371",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 90,
              "line": 22
            },
            "start": {
              "column": 11,
              "line": 22
            }
          }
        },
        {
          "id": "372",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 88,
              "line": 22
            },
            "start": {
              "column": 19,
              "line": 22
            }
          }
        },
        {
          "id": "373",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 86,
              "line": 22
            },
            "start": {
              "column": 30,
              "line": 22
            }
          }
        },
        {
          "id": "374",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 26
            },
            "start": {
              "column": 14,
              "line": 23
            }
          }
        },
        {
          "id": "375",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 93,
              "line": 24
            },
            "start": {
              "column": 17,
              "line": 24
            }
          }
        },
        {
          "id": "376",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 91,
              "line": 24
            },
            "start": {
              "column": 28,
              "line": 24
            }
          }
        },
        {
          "id": "377",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 100,
              "line": 25
            },
            "start": {
              "column": 21,
              "line": 25
            }
          }
        },
        {
          "id": "378",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 98,
              "line": 25
            },
            "start": {
              "column": 32,
              "line": 25
            }
          }
        },
        {
          "id": "379",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 124,
              "line": 27
            },
            "start": {
              "column": 23,
              "line": 27
            }
          }
        },
        {
          "id": "380",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 122,
              "line": 27
            },
            "start": {
              "column": 49,
              "line": 27
            }
          }
        },
        {
          "id": "381",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 120,
              "line": 27
            },
            "start": {
              "column": 60,
              "line": 27
            }
          }
        },
        {
          "id": "382",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 40
            },
            "start": {
              "column": 16,
              "line": 28
            }
          }
        },
        {
          "id": "383",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 40,
              "line": 29
            },
            "start": {
              "column": 25,
              "line": 29
            }
          }
        },
        {
          "id": "384",
          "mutatorName": "StringLiteral",
          "replacement": "\"Stryker was here!\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 38,
              "line": 29
            },
            "start": {
              "column": 36,
              "line": 29
            }
          }
        },
        {
          "id": "385",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 33
            },
            "start": {
              "column": 22,
              "line": 30
            }
          }
        },
        {
          "id": "386",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 89,
              "line": 31
            },
            "start": {
              "column": 18,
              "line": 31
            }
          }
        },
        {
          "id": "387",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 112,
              "line": 32
            },
            "start": {
              "column": 38,
              "line": 32
            }
          }
        },
        {
          "id": "388",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 39
            },
            "start": {
              "column": 13,
              "line": 34
            }
          }
        },
        {
          "id": "389",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 82,
              "line": 35
            },
            "start": {
              "column": 18,
              "line": 35
            }
          }
        },
        {
          "id": "390",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 89,
              "line": 36
            },
            "start": {
              "column": 25,
              "line": 36
            }
          }
        },
        {
          "id": "391",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 113,
              "line": 37
            },
            "start": {
              "column": 35,
              "line": 37
            }
          }
        },
        {
          "id": "392",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 107,
              "line": 38
            },
            "start": {
              "column": 38,
              "line": 38
            }
          }
        },
        {
          "id": "393",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 102,
              "line": 41
            },
            "start": {
              "column": 12,
              "line": 41
            }
          }
        },
        {
          "id": "394",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 100,
              "line": 41
            },
            "start": {
              "column": 29,
              "line": 41
            }
          }
        },
        {
          "id": "395",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 98,
              "line": 41
            },
            "start": {
              "column": 40,
              "line": 41
            }
          }
        },
        {
          "id": "396",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 116,
              "line": 42
            },
            "start": {
              "column": 21,
              "line": 42
            }
          }
        },
        {
          "id": "397",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 114,
              "line": 42
            },
            "start": {
              "column": 42,
              "line": 42
            }
          }
        },
        {
          "id": "398",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 112,
              "line": 42
            },
            "start": {
              "column": 53,
              "line": 42
            }
          }
        },
        {
          "id": "399",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 110,
              "line": 43
            },
            "start": {
              "column": 18,
              "line": 43
            }
          }
        },
        {
          "id": "400",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 108,
              "line": 43
            },
            "start": {
              "column": 39,
              "line": 43
            }
          }
        },
        {
          "id": "401",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 106,
              "line": 43
            },
            "start": {
              "column": 50,
              "line": 43
            }
          }
        },
        {
          "id": "402",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 100,
              "line": 44
            },
            "start": {
              "column": 17,
              "line": 44
            }
          }
        },
        {
          "id": "403",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 98,
              "line": 44
            },
            "start": {
              "column": 24,
              "line": 44
            }
          }
        },
        {
          "id": "404",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 96,
              "line": 44
            },
            "start": {
              "column": 35,
              "line": 44
            }
          }
        },
        {
          "id": "405",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 102,
              "line": 45
            },
            "start": {
              "column": 21,
              "line": 45
            }
          }
        },
        {
          "id": "406",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 100,
              "line": 45
            },
            "start": {
              "column": 28,
              "line": 45
            }
          }
        },
        {
          "id": "407",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 98,
              "line": 45
            },
            "start": {
              "column": 39,
              "line": 45
            }
          }
        },
        {
          "id": "408",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 113,
              "line": 46
            },
            "start": {
              "column": 17,
              "line": 46
            }
          }
        },
        {
          "id": "409",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 111,
              "line": 46
            },
            "start": {
              "column": 35,
              "line": 46
            }
          }
        },
        {
          "id": "410",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 109,
              "line": 46
            },
            "start": {
              "column": 46,
              "line": 46
            }
          }
        },
        {
          "id": "411",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 102,
              "line": 47
            },
            "start": {
              "column": 12,
              "line": 47
            }
          }
        },
        {
          "id": "412",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 100,
              "line": 47
            },
            "start": {
              "column": 29,
              "line": 47
            }
          }
        },
        {
          "id": "413",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 98,
              "line": 47
            },
            "start": {
              "column": 40,
              "line": 47
            }
          }
        },
        {
          "id": "414",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 110,
              "line": 48
            },
            "start": {
              "column": 17,
              "line": 48
            }
          }
        },
        {
          "id": "415",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 108,
              "line": 48
            },
            "start": {
              "column": 34,
              "line": 48
            }
          }
        },
        {
          "id": "416",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 106,
              "line": 48
            },
            "start": {
              "column": 45,
              "line": 48
            }
          }
        }
      ],
      "source": "import type { GamePlaySourceName } from \"~/composables/api/game/types/game-play/game-play-source/game-play-source.types\";\nimport type { GamePlayAction, GamePlayCause } from \"~/composables/api/game/types/game-play/game-play.types\";\n\ntype CurrentPlayCausesQuestion = {\n  [Key in GamePlayCause]?: string;\n} & { default: string };\n\nconst GAME_PLAYS_QUESTIONS: Record<GamePlaySourceName, Partial<Record<GamePlayAction, CurrentPlayCausesQuestion>>> = {\n  \"accursed-wolf-father\": { infect: { default: \"components.CurrentPlayQuestion.doesAccursedWolfFatherWantToInfect\" } },\n  \"actor\": { \"choose-card\": { default: \"components.CurrentPlayQuestion.doesActorWantToChooseCard\" } },\n  \"bear-tamer\": { growl: { default: \"components.CurrentPlayQuestion.bearGrowled\" } },\n  \"big-bad-wolf\": { eat: { default: \"components.CurrentPlayQuestion.whichPlayerDoesBigBadWolfEat\" } },\n  \"charmed\": { \"meet-each-other\": { default: \"components.CurrentPlayQuestion.charmedPeopleMeetEachOther\" } },\n  \"cupid\": { charm: { default: \"components.CurrentPlayQuestion.whichPlayersDoesCupidCharm\" } },\n  \"defender\": { protect: { default: \"components.CurrentPlayQuestion.whichPlayerDoesDefenderProtect\" } },\n  \"fox\": { sniff: { default: \"components.CurrentPlayQuestion.doesFoxWantToSniff\" } },\n  \"hunter\": { shoot: { default: \"components.CurrentPlayQuestion.whichPlayerDoesHunterShoot\" } },\n  \"lovers\": { \"meet-each-other\": { default: \"components.CurrentPlayQuestion.loversMeetEachOther\" } },\n  \"pied-piper\": { charm: { default: \"components.CurrentPlayQuestion.whichPlayersDoesPiedPiperCharm\" } },\n  \"scandalmonger\": { mark: { default: \"components.CurrentPlayQuestion.doesScandalmongerWantToMark\" } },\n  \"scapegoat\": { \"ban-voting\": { default: \"components.CurrentPlayQuestion.doesScapegoatWantToBanVoting\" } },\n  \"seer\": { look: { default: \"components.CurrentPlayQuestion.whichPlayerDoesSeerLook\" } },\n  \"sheriff\": {\n    \"delegate\": { default: \"components.CurrentPlayQuestion.whichPlayerDoesSheriffDelegate\" },\n    \"settle-votes\": { default: \"components.CurrentPlayQuestion.whichPlayerDoesSheriffSettleVotes\" },\n  },\n  \"stuttering-judge\": { \"request-another-vote\": { default: \"components.CurrentPlayQuestion.doesJudgeRequestAnotherVote\" } },\n  \"survivors\": {\n    \"bury-dead-bodies\": { default: \"\" },\n    \"elect-sheriff\": {\n      \"default\": \"components.CurrentPlayQuestion.whichPlayerDoesSurvivorsElectAsSheriff\",\n      \"previous-votes-were-in-ties\": \"components.CurrentPlayQuestion.whichPlayerDoesSurvivorsElectSheriffOnTie\",\n    },\n    \"vote\": {\n      \"default\": \"components.CurrentPlayQuestion.whichPlayerDoesSurvivorsVoteFor\",\n      \"angel-presence\": \"components.CurrentPlayQuestion.whichPlayerDoesSurvivorsVoteFor\",\n      \"stuttering-judge-request\": \"components.CurrentPlayQuestion.whichPlayerDoesSurvivorsVoteForOnJudgeRequest\",\n      \"previous-votes-were-in-ties\": \"components.CurrentPlayQuestion.whichPlayerDoesSurvivorsVoteForOnTie\",\n    },\n  },\n  \"thief\": { \"choose-card\": { default: \"components.CurrentPlayQuestion.doesThiefWantToChooseCard\" } },\n  \"three-brothers\": { \"meet-each-other\": { default: \"components.CurrentPlayQuestion.threeBrothersMeetEachOther\" } },\n  \"two-sisters\": { \"meet-each-other\": { default: \"components.CurrentPlayQuestion.twoSistersMeetEachOther\" } },\n  \"werewolves\": { eat: { default: \"components.CurrentPlayQuestion.whichPlayerDoesWerewolvesEat\" } },\n  \"white-werewolf\": { eat: { default: \"components.CurrentPlayQuestion.doesWhiteWerewolfWantToEat\" } },\n  \"wild-child\": { \"choose-model\": { default: \"components.CurrentPlayQuestion.whichPlayerDoesWildChildChoose\" } },\n  \"witch\": { \"use-potions\": { default: \"components.CurrentPlayQuestion.doesWitchWantToUsePotions\" } },\n  \"wolf-hound\": { \"choose-side\": { default: \"components.CurrentPlayQuestion.whichSideDoesWolfHoundChoose\" } },\n};\n\nexport { GAME_PLAYS_QUESTIONS };"
    },
    "components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameBuryDeadBodiesPlayground/GameBuryDeadBodiesPlayground.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "417",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "679"
          ],
          "coveredBy": [
            "678",
            "679",
            "680",
            "681",
            "682"
          ],
          "location": {
            "end": {
              "column": 152,
              "line": 32
            },
            "start": {
              "column": 82,
              "line": 32
            }
          }
        },
        {
          "id": "418",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "679"
          ],
          "coveredBy": [
            "678",
            "679",
            "680",
            "681",
            "682"
          ],
          "location": {
            "end": {
              "column": 151,
              "line": 32
            },
            "start": {
              "column": 139,
              "line": 32
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-bury-dead-bodies-playground\"\n    class=\"flex items-center justify-center\"\n  >\n    <GameDevotedServantStealsRolePlayground\n      v-if=\"eligibleStolenRoleByDevotedServantPlayers\"\n      id=\"game-devoted-servant-steals-role-playground\"\n    />\n\n    <NoActionNeeded\n      v-else\n      id=\"no-action-needed\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\n\nimport GameDevotedServantStealsRolePlayground from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameBuryDeadBodiesPlayground/GameDevotedServantStealsRolePlayground/GameDevotedServantStealsRolePlayground.vue\";\nimport NoActionNeeded from \"~/components/shared/game/game-play/NoNeededAction/NoActionNeeded.vue\";\nimport { useCurrentGamePlay } from \"~/composables/api/game/game-play/useCurrentGamePlay\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\n\nconst gameStore = useGameStore();\nconst { game } = storeToRefs(gameStore);\n\nconst { getEligibleTargetsWithInteractionInCurrentGamePlay } = useCurrentGamePlay(game);\n\nconst eligibleStolenRoleByDevotedServantPlayers = computed<Player[] | undefined>(() => getEligibleTargetsWithInteractionInCurrentGamePlay(\"steal-role\"));\n</script>"
    },
    "components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameBuryDeadBodiesPlayground/GameDevotedServantStealsRolePlayground/GameDevotedServantStealsRolePlayground.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "419",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Devoted Servant Steals Role Playground Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "543"
          ],
          "coveredBy": [
            "543",
            "544",
            "545",
            "546",
            "547",
            "548"
          ],
          "location": {
            "end": {
              "column": 128,
              "line": 55
            },
            "start": {
              "column": 58,
              "line": 55
            }
          }
        },
        {
          "id": "420",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Devoted Servant Steals Role Playground Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "543"
          ],
          "coveredBy": [
            "543",
            "544",
            "545",
            "546",
            "547",
            "548"
          ],
          "location": {
            "end": {
              "column": 127,
              "line": 55
            },
            "start": {
              "column": 115,
              "line": 55
            }
          }
        },
        {
          "id": "421",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Devoted Servant Steals Role Playground Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "543"
          ],
          "coveredBy": [
            "543",
            "544",
            "545",
            "546",
            "547",
            "548"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 61
            },
            "start": {
              "column": 68,
              "line": 57
            }
          }
        },
        {
          "id": "422",
          "mutatorName": "LogicalOperator",
          "replacement": "eliminatedPlayers.value?.length && 0",
          "statusReason": "Snapshot `Game Devoted Servant Steals Role Playground Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "543"
          ],
          "coveredBy": [
            "543",
            "544",
            "545",
            "546",
            "547",
            "548"
          ],
          "location": {
            "end": {
              "column": 70,
              "line": 58
            },
            "start": {
              "column": 34,
              "line": 58
            }
          }
        },
        {
          "id": "423",
          "mutatorName": "OptionalChaining",
          "replacement": "eliminatedPlayers.value.length",
          "statusReason": "Cannot read properties of undefined (reading 'length')",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "546"
          ],
          "coveredBy": [
            "543",
            "544",
            "545",
            "546",
            "547",
            "548"
          ],
          "location": {
            "end": {
              "column": 65,
              "line": 58
            },
            "start": {
              "column": 34,
              "line": 58
            }
          }
        },
        {
          "id": "424",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Devoted Servant Steals Role Playground Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "543"
          ],
          "coveredBy": [
            "543",
            "544",
            "545",
            "546",
            "547",
            "548"
          ],
          "location": {
            "end": {
              "column": 91,
              "line": 60
            },
            "start": {
              "column": 12,
              "line": 60
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-devoted-servant-steal-role-playground\"\n    class=\"flex flex-col items-center\"\n  >\n    <GlowCapture>\n      <GlowElement>\n        <RoleImage\n          class=\"glow:border-gray-400\"\n          definition=\"normal\"\n          role-name=\"devoted-servant\"\n          sizes=\"175\"\n        />\n      </GlowElement>\n    </GlowCapture>\n\n    <h3\n      id=\"devoted-servant-steals-role-question\"\n      class=\"my-4\"\n    >\n      {{ doesDevotedServantStealRoleQuestion }}\n    </h3>\n\n    <div\n      id=\"targets\"\n      class=\"flex items-center justify-center\"\n    >\n      <GamePlaygroundPlayerCard\n        v-for=\"target in eliminatedPlayers\"\n        :key=\"target._id\"\n        class=\"target\"\n        interaction=\"steal-role\"\n        :player=\"target\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\n\nimport GamePlaygroundPlayerCard from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.vue\";\nimport RoleImage from \"~/components/shared/role/RoleImage/RoleImage.vue\";\nimport { useCurrentGamePlay } from \"~/composables/api/game/game-play/useCurrentGamePlay\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\n\nconst gameStore = useGameStore();\nconst { game } = storeToRefs(gameStore);\n\nconst { t } = useI18n();\n\nconst { getEligibleTargetsWithInteractionInCurrentGamePlay } = useCurrentGamePlay(game);\n\nconst eliminatedPlayers = computed<Player[] | undefined>(() => getEligibleTargetsWithInteractionInCurrentGamePlay(\"steal-role\"));\n\nconst doesDevotedServantStealRoleQuestion = computed<string>(() => {\n  const eliminatedPlayersCount = eliminatedPlayers.value?.length ?? 0;\n\n  return t(\"components.GameDevotedServantStealsRolePlayground.doesDevotedServantStealRole\", eliminatedPlayersCount);\n});\n</script>"
    },
    "components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameChooseSidePlayground/GameChooseSidePlayground.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "425",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "643"
          ],
          "coveredBy": [
            "643"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 70
            },
            "start": {
              "column": 55,
              "line": 68
            }
          }
        },
        {
          "id": "426",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"villagers\",\n], but it was called with \"\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "643"
          ],
          "coveredBy": [
            "643"
          ],
          "location": {
            "end": {
              "column": 28,
              "line": 69
            },
            "start": {
              "column": 17,
              "line": 69
            }
          }
        },
        {
          "id": "427",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "647"
          ],
          "coveredBy": [
            "647"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 74
            },
            "start": {
              "column": 56,
              "line": 72
            }
          }
        },
        {
          "id": "428",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"werewolves\",\n], but it was called with \"\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "647"
          ],
          "coveredBy": [
            "647"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 73
            },
            "start": {
              "column": 17,
              "line": 73
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-choose-side-playground\"\n    class=\"flex flex-col items-center justify-center\"\n  >\n    <div>\n      <GlowCapture class=\"flex\">\n        <GlowElement>\n          <button\n            id=\"choose-villagers-side-button\"\n            class=\"border-4 border-transparent glow:border-green-500 me-2 p-2 rounded-lg\"\n            :class=\"{ '!border-green-500': makeGamePlayDto.chosenSide === 'villagers' }\"\n            type=\"button\"\n            @click.prevent=\"handleChooseVillagersSideButtonClick\"\n          >\n            <RoleImage\n              id=\"villagers-side-image\"\n              class=\"glow:border-green-500 mb-1\"\n              :class=\"{ 'border-green-500': makeGamePlayDto.chosenSide === 'villagers' }\"\n              definition=\"normal\"\n              role-name=\"villager\"\n              sizes=\"200\"\n            />\n\n            <span class=\"font-semibold\">\n              {{ $t(\"components.GameChooseSidePlayground.villagersSide\") }}\n            </span>\n          </button>\n        </GlowElement>\n\n        <GlowElement>\n          <button\n            id=\"choose-werewolves-side-button\"\n            class=\"border-4 border-transparent glow:border-red-500 ms-2 p-2 rounded-lg\"\n            :class=\"{ '!border-red-500': makeGamePlayDto.chosenSide === 'werewolves' }\"\n            type=\"button\"\n            @click=\"handleChooseWerewolvesSideButtonClick\"\n          >\n            <RoleImage\n              id=\"werewolves-side-image\"\n              class=\"glow:border-red-500 mb-1\"\n              :class=\"{ 'border-red-500': makeGamePlayDto.chosenSide === 'werewolves' }\"\n              definition=\"normal\"\n              role-name=\"werewolf\"\n              sizes=\"200\"\n            />\n\n            <span class=\"font-semibold\">\n              {{ $t(\"components.GameChooseSidePlayground.werewolvesSide\") }}\n            </span>\n          </button>\n        </GlowElement>\n      </glowcapture>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\n\nimport RoleImage from \"~/components/shared/role/RoleImage/RoleImage.vue\";\nimport { useMakeGamePlayDtoStore } from \"~/stores/game/make-game-play-dto/useMakeGamePlayDtoStore\";\n\nconst makeGamePlayDtoStore = useMakeGamePlayDtoStore();\nconst { makeGamePlayDto } = storeToRefs(makeGamePlayDtoStore);\nconst { setChosenSide } = makeGamePlayDtoStore;\n\nfunction handleChooseVillagersSideButtonClick(): void {\n  setChosenSide(\"villagers\");\n}\n\nfunction handleChooseWerewolvesSideButtonClick(): void {\n  setChosenSide(\"werewolves\");\n}\n</script>"
    },
    "components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundContent.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "429",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Playground Content Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "479"
          ],
          "coveredBy": [
            "479",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "488"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 54
            },
            "start": {
              "column": 101,
              "line": 38
            }
          }
        },
        {
          "id": "430",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Game Playground Content Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "479"
          ],
          "coveredBy": [
            "479",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "488"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 40
            },
            "start": {
              "column": 7,
              "line": 40
            }
          }
        },
        {
          "id": "431",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "480"
          ],
          "coveredBy": [
            "479",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "488"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 40
            },
            "start": {
              "column": 7,
              "line": 40
            }
          }
        },
        {
          "id": "432",
          "mutatorName": "EqualityOperator",
          "replacement": "currentPlay?.action !== \"use-potions\"",
          "statusReason": "Snapshot `Game Playground Content Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "479"
          ],
          "coveredBy": [
            "479",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "488"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 40
            },
            "start": {
              "column": 7,
              "line": 40
            }
          }
        },
        {
          "id": "433",
          "mutatorName": "OptionalChaining",
          "replacement": "currentPlay.action",
          "statusReason": "Cannot read properties of null (reading 'action')",
          "status": "Killed",
          "testsCompleted": 10,
          "static": false,
          "killedBy": [
            "488"
          ],
          "coveredBy": [
            "479",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "488"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 40
            },
            "start": {
              "column": 7,
              "line": 40
            }
          }
        },
        {
          "id": "434",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "480"
          ],
          "coveredBy": [
            "479",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "488"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 40
            },
            "start": {
              "column": 31,
              "line": 40
            }
          }
        },
        {
          "id": "435",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "480"
          ],
          "coveredBy": [
            "480"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 42
            },
            "start": {
              "column": 46,
              "line": 40
            }
          }
        },
        {
          "id": "436",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Playground Content Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "479"
          ],
          "coveredBy": [
            "479",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "488"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 51
            },
            "start": {
              "column": 92,
              "line": 43
            }
          }
        },
        {
          "id": "437",
          "mutatorName": "OptionalChaining",
          "replacement": "currentPlay.type",
          "statusReason": "Cannot read properties of null (reading 'type')",
          "status": "Killed",
          "testsCompleted": 10,
          "static": false,
          "killedBy": [
            "488"
          ],
          "coveredBy": [
            "479",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "488"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 53
            },
            "start": {
              "column": 10,
              "line": 53
            }
          }
        }
      ],
      "source": "<template>\n  <div id=\"game-playground-content\">\n    <Component\n      :is=\"gamePlaygroundTypeComponentToRender\"\n      id=\"game-playground-type\"\n      class=\"h-full w-full\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { storeToRefs } from \"pinia\";\n\nimport GameBuryDeadBodiesPlayground from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameBuryDeadBodiesPlayground/GameBuryDeadBodiesPlayground.vue\";\nimport GameChooseCardPlayground from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameChooseCardPlayground/GameChooseCardPlayground.vue\";\nimport GameChooseSidePlayground from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameChooseSidePlayground/GameChooseSidePlayground.vue\";\nimport GameNoActionPlayground from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameNoActionPlayground/GameNoActionPlayground.vue\";\nimport GameRequestAnotherVotePlayground from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameRequestAnotherVotePlayground/GameRequestAnotherVotePlayground.vue\";\nimport GameTargetPlayground from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameTargetPlayground/GameTargetPlayground.vue\";\nimport GameUsePotionsPlayground from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/GameUsePotionsPlayground.vue\";\nimport GameVotePlayground from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameVotePlayground/GameVotePlayground.vue\";\nimport type { GamePlayType } from \"~/composables/api/game/types/game-play/game-play.types\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\n\ntype GamePlaygroundTypeComponent =\n  | typeof GameBuryDeadBodiesPlayground\n  | typeof GameChooseCardPlayground\n  | typeof GameChooseSidePlayground\n  | typeof GameNoActionPlayground\n  | typeof GameRequestAnotherVotePlayground\n  | typeof GameTargetPlayground\n  | typeof GameUsePotionsPlayground\n  | typeof GameVotePlayground;\n\nconst gameStore = useGameStore();\nconst { game } = storeToRefs(gameStore);\n\nconst gamePlaygroundTypeComponentToRender = computed<GamePlaygroundTypeComponent | undefined>(() => {\n  const { currentPlay } = game.value;\n  if (currentPlay?.action === \"use-potions\") {\n    return GameUsePotionsPlayground;\n  }\n  const currentGamePlayTypeComponents: Record<GamePlayType, GamePlaygroundTypeComponent> = {\n    \"bury-dead-bodies\": GameBuryDeadBodiesPlayground,\n    \"choose-card\": GameChooseCardPlayground,\n    \"choose-side\": GameChooseSidePlayground,\n    \"no-action\": GameNoActionPlayground,\n    \"request-another-vote\": GameRequestAnotherVotePlayground,\n    \"target\": GameTargetPlayground,\n    \"vote\": GameVotePlayground,\n  };\n\n  return currentPlay?.type ? currentGamePlayTypeComponents[currentPlay.type] : undefined;\n});\n</script>"
    },
    "components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "438",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 10,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 51
            },
            "start": {
              "column": 53,
              "line": 47
            }
          }
        },
        {
          "id": "439",
          "mutatorName": "LogicalOperator",
          "replacement": "game.value.currentPlay && {}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 48
            },
            "start": {
              "column": 20,
              "line": 48
            }
          }
        },
        {
          "id": "440",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      Object {\n        \"playerId\": \"4db78558-9ba2-431e-97c9-58393898acf4\",\n      },\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "71"
          ],
          "coveredBy": [
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 50
            },
            "start": {
              "column": 10,
              "line": 50
            }
          }
        },
        {
          "id": "441",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 10,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 50
            },
            "start": {
              "column": 10,
              "line": 50
            }
          }
        },
        {
          "id": "442",
          "mutatorName": "LogicalOperator",
          "replacement": "type === \"target\" && type === \"bury-dead-bodies\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 10,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 50
            },
            "start": {
              "column": 10,
              "line": 50
            }
          }
        },
        {
          "id": "443",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 10,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 50
            },
            "start": {
              "column": 10,
              "line": 50
            }
          }
        },
        {
          "id": "444",
          "mutatorName": "EqualityOperator",
          "replacement": "type !== \"target\"",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      Object {\n        \"playerId\": \"68b77eb6-5162-43e8-b8a8-ed41659c313d\",\n      },\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "71"
          ],
          "coveredBy": [
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 50
            },
            "start": {
              "column": 10,
              "line": 50
            }
          }
        },
        {
          "id": "445",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 10,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 50
            },
            "start": {
              "column": 19,
              "line": 50
            }
          }
        },
        {
          "id": "446",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 16,
          "static": false,
          "killedBy": [
            "80"
          ],
          "coveredBy": [
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 50
            },
            "start": {
              "column": 31,
              "line": 50
            }
          }
        },
        {
          "id": "447",
          "mutatorName": "EqualityOperator",
          "replacement": "type !== \"bury-dead-bodies\"",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      Object {\n        \"playerId\": \"0581c0b9-935a-43bb-a711-f8b03d3751d5\",\n      },\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "71"
          ],
          "coveredBy": [
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 50
            },
            "start": {
              "column": 31,
              "line": 50
            }
          }
        },
        {
          "id": "448",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 16,
          "static": false,
          "killedBy": [
            "80"
          ],
          "coveredBy": [
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 50
            },
            "start": {
              "column": 40,
              "line": 50
            }
          }
        },
        {
          "id": "449",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "69"
          ],
          "coveredBy": [
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 58
            },
            "start": {
              "column": 50,
              "line": 53
            }
          }
        },
        {
          "id": "450",
          "mutatorName": "BooleanLiteral",
          "replacement": "makeGamePlayDto.value.targets",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 54
            },
            "start": {
              "column": 7,
              "line": 54
            }
          }
        },
        {
          "id": "451",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "69"
          ],
          "coveredBy": [
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 54
            },
            "start": {
              "column": 7,
              "line": 54
            }
          }
        },
        {
          "id": "452",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 54
            },
            "start": {
              "column": 7,
              "line": 54
            }
          }
        },
        {
          "id": "453",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 56
            },
            "start": {
              "column": 39,
              "line": 54
            }
          }
        },
        {
          "id": "454",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "Snapshot `Game Playground Player Card Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85"
          ],
          "location": {
            "end": {
              "column": 17,
              "line": 55
            },
            "start": {
              "column": 12,
              "line": 55
            }
          }
        },
        {
          "id": "455",
          "mutatorName": "MethodExpression",
          "replacement": "makeGamePlayDto.value.targets.every(({\n  playerId\n}) => playerId === props.player._id)",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "69"
          ],
          "coveredBy": [
            "69",
            "74",
            "75",
            "77",
            "78",
            "82",
            "83"
          ],
          "location": {
            "end": {
              "column": 93,
              "line": 57
            },
            "start": {
              "column": 10,
              "line": 57
            }
          }
        },
        {
          "id": "456",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "69"
          ],
          "coveredBy": [
            "69",
            "74",
            "75",
            "77",
            "78",
            "82",
            "83"
          ],
          "location": {
            "end": {
              "column": 92,
              "line": 57
            },
            "start": {
              "column": 45,
              "line": 57
            }
          }
        },
        {
          "id": "457",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "69",
            "74",
            "75",
            "77",
            "78",
            "82",
            "83"
          ],
          "location": {
            "end": {
              "column": 92,
              "line": 57
            },
            "start": {
              "column": 63,
              "line": 57
            }
          }
        },
        {
          "id": "458",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "69"
          ],
          "coveredBy": [
            "69",
            "74",
            "75",
            "77",
            "78",
            "82",
            "83"
          ],
          "location": {
            "end": {
              "column": 92,
              "line": 57
            },
            "start": {
              "column": 63,
              "line": 57
            }
          }
        },
        {
          "id": "459",
          "mutatorName": "EqualityOperator",
          "replacement": "playerId !== props.player._id",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "69",
            "74",
            "75",
            "77",
            "78",
            "82",
            "83"
          ],
          "location": {
            "end": {
              "column": 92,
              "line": 57
            },
            "start": {
              "column": 63,
              "line": 57
            }
          }
        },
        {
          "id": "460",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "75",
            "76",
            "77",
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 72
            },
            "start": {
              "column": 46,
              "line": 60
            }
          }
        },
        {
          "id": "461",
          "mutatorName": "MethodExpression",
          "replacement": "makeGamePlayDto.value.targets",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      \"life\",\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "75"
          ],
          "coveredBy": [
            "74",
            "75",
            "76",
            "77",
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 116,
              "line": 61
            },
            "start": {
              "column": 34,
              "line": 61
            }
          }
        },
        {
          "id": "462",
          "mutatorName": "OptionalChaining",
          "replacement": "makeGamePlayDto.value.targets.filter",
          "statusReason": "Cannot read properties of undefined (reading 'filter')",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "76"
          ],
          "coveredBy": [
            "74",
            "75",
            "76",
            "77",
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 71,
              "line": 61
            },
            "start": {
              "column": 34,
              "line": 61
            }
          }
        },
        {
          "id": "463",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "75",
            "77",
            "78"
          ],
          "location": {
            "end": {
              "column": 115,
              "line": 61
            },
            "start": {
              "column": 72,
              "line": 61
            }
          }
        },
        {
          "id": "464",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      \"life\",\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "75"
          ],
          "coveredBy": [
            "74",
            "75",
            "77",
            "78"
          ],
          "location": {
            "end": {
              "column": 115,
              "line": 61
            },
            "start": {
              "column": 93,
              "line": 61
            }
          }
        },
        {
          "id": "465",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "75",
            "77",
            "78"
          ],
          "location": {
            "end": {
              "column": 115,
              "line": 61
            },
            "start": {
              "column": 93,
              "line": 61
            }
          }
        },
        {
          "id": "466",
          "mutatorName": "EqualityOperator",
          "replacement": "drankPotion !== \"life\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "75",
            "77",
            "78"
          ],
          "location": {
            "end": {
              "column": 115,
              "line": 61
            },
            "start": {
              "column": 93,
              "line": 61
            }
          }
        },
        {
          "id": "467",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "75",
            "77",
            "78"
          ],
          "location": {
            "end": {
              "column": 115,
              "line": 61
            },
            "start": {
              "column": 109,
              "line": 61
            }
          }
        },
        {
          "id": "468",
          "mutatorName": "MethodExpression",
          "replacement": "makeGamePlayDto.value.targets",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      \"death\",\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "78"
          ],
          "coveredBy": [
            "74",
            "75",
            "76",
            "77",
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 118,
              "line": 62
            },
            "start": {
              "column": 35,
              "line": 62
            }
          }
        },
        {
          "id": "469",
          "mutatorName": "OptionalChaining",
          "replacement": "makeGamePlayDto.value.targets.filter",
          "statusReason": "Cannot read properties of undefined (reading 'filter')",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "76"
          ],
          "coveredBy": [
            "74",
            "75",
            "76",
            "77",
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 72,
              "line": 62
            },
            "start": {
              "column": 35,
              "line": 62
            }
          }
        },
        {
          "id": "470",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "74",
            "75",
            "77",
            "78"
          ],
          "location": {
            "end": {
              "column": 117,
              "line": 62
            },
            "start": {
              "column": 73,
              "line": 62
            }
          }
        },
        {
          "id": "471",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      \"death\",\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "78"
          ],
          "coveredBy": [
            "74",
            "75",
            "77",
            "78"
          ],
          "location": {
            "end": {
              "column": 117,
              "line": 62
            },
            "start": {
              "column": 94,
              "line": 62
            }
          }
        },
        {
          "id": "472",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "74",
            "75",
            "77",
            "78"
          ],
          "location": {
            "end": {
              "column": 117,
              "line": 62
            },
            "start": {
              "column": 94,
              "line": 62
            }
          }
        },
        {
          "id": "473",
          "mutatorName": "EqualityOperator",
          "replacement": "drankPotion !== \"death\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "74",
            "75",
            "77",
            "78"
          ],
          "location": {
            "end": {
              "column": 117,
              "line": 62
            },
            "start": {
              "column": 94,
              "line": 62
            }
          }
        },
        {
          "id": "474",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "74",
            "75",
            "77",
            "78"
          ],
          "location": {
            "end": {
              "column": 117,
              "line": 62
            },
            "start": {
              "column": 110,
              "line": 62
            }
          }
        },
        {
          "id": "475",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"death\",\n], but it was called with \"life\"",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "74",
            "75",
            "76",
            "77",
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 76,
              "line": 63
            },
            "start": {
              "column": 36,
              "line": 63
            }
          }
        },
        {
          "id": "476",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"life\",\n], but it was called with \"death\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "75",
            "76",
            "77",
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 76,
              "line": 63
            },
            "start": {
              "column": 36,
              "line": 63
            }
          }
        },
        {
          "id": "477",
          "mutatorName": "EqualityOperator",
          "replacement": "props.interaction !== \"give-life-potion\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"life\",\n], but it was called with \"death\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "75",
            "76",
            "77",
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 76,
              "line": 63
            },
            "start": {
              "column": 36,
              "line": 63
            }
          }
        },
        {
          "id": "478",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"life\",\n], but it was called with \"death\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "75",
            "76",
            "77",
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 76,
              "line": 63
            },
            "start": {
              "column": 58,
              "line": 63
            }
          }
        },
        {
          "id": "479",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"life\",\n], but it was called with \"\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "75",
            "76"
          ],
          "location": {
            "end": {
              "column": 85,
              "line": 63
            },
            "start": {
              "column": 79,
              "line": 63
            }
          }
        },
        {
          "id": "480",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"death\",\n], but it was called with \"\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 95,
              "line": 63
            },
            "start": {
              "column": 88,
              "line": 63
            }
          }
        },
        {
          "id": "481",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      \"life\",\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "75"
          ],
          "coveredBy": [
            "74",
            "75",
            "76",
            "77",
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 87,
              "line": 65
            },
            "start": {
              "column": 7,
              "line": 64
            }
          }
        },
        {
          "id": "482",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "75",
            "76",
            "77",
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 87,
              "line": 65
            },
            "start": {
              "column": 7,
              "line": 64
            }
          }
        },
        {
          "id": "483",
          "mutatorName": "LogicalOperator",
          "replacement": "props.interaction === \"give-life-potion\" && givenLifePotionTargets?.length === 1 && props.interaction === \"give-death-potion\" && givenDeathPotionTargets?.length === 1",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "75",
            "76",
            "77",
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 87,
              "line": 65
            },
            "start": {
              "column": 7,
              "line": 64
            }
          }
        },
        {
          "id": "484",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "75",
            "76",
            "77",
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 87,
              "line": 64
            },
            "start": {
              "column": 7,
              "line": 64
            }
          }
        },
        {
          "id": "485",
          "mutatorName": "LogicalOperator",
          "replacement": "props.interaction === \"give-life-potion\" || givenLifePotionTargets?.length === 1",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      \"life\",\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "75"
          ],
          "coveredBy": [
            "74",
            "75",
            "76",
            "77",
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 87,
              "line": 64
            },
            "start": {
              "column": 7,
              "line": 64
            }
          }
        },
        {
          "id": "486",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      \"death\",\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "78"
          ],
          "coveredBy": [
            "74",
            "75",
            "76",
            "77",
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 47,
              "line": 64
            },
            "start": {
              "column": 7,
              "line": 64
            }
          }
        },
        {
          "id": "487",
          "mutatorName": "EqualityOperator",
          "replacement": "props.interaction !== \"give-life-potion\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "75",
            "76",
            "77",
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 47,
              "line": 64
            },
            "start": {
              "column": 7,
              "line": 64
            }
          }
        },
        {
          "id": "488",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "75",
            "76",
            "77",
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 47,
              "line": 64
            },
            "start": {
              "column": 29,
              "line": 64
            }
          }
        },
        {
          "id": "489",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      \"life\",\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "75"
          ],
          "coveredBy": [
            "74",
            "75",
            "76"
          ],
          "location": {
            "end": {
              "column": 87,
              "line": 64
            },
            "start": {
              "column": 51,
              "line": 64
            }
          }
        },
        {
          "id": "490",
          "mutatorName": "EqualityOperator",
          "replacement": "givenLifePotionTargets?.length !== 1",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "75",
            "76"
          ],
          "location": {
            "end": {
              "column": 87,
              "line": 64
            },
            "start": {
              "column": 51,
              "line": 64
            }
          }
        },
        {
          "id": "491",
          "mutatorName": "OptionalChaining",
          "replacement": "givenLifePotionTargets.length",
          "statusReason": "Cannot read properties of undefined (reading 'length')",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "76"
          ],
          "coveredBy": [
            "74",
            "75",
            "76"
          ],
          "location": {
            "end": {
              "column": 81,
              "line": 64
            },
            "start": {
              "column": 51,
              "line": 64
            }
          }
        },
        {
          "id": "492",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "75",
            "76",
            "77",
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 87,
              "line": 65
            },
            "start": {
              "column": 5,
              "line": 65
            }
          }
        },
        {
          "id": "493",
          "mutatorName": "LogicalOperator",
          "replacement": "props.interaction === \"give-death-potion\" || givenDeathPotionTargets?.length === 1",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      \"life\",\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "75"
          ],
          "coveredBy": [
            "75",
            "76",
            "77",
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 87,
              "line": 65
            },
            "start": {
              "column": 5,
              "line": 65
            }
          }
        },
        {
          "id": "494",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      \"life\",\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "75"
          ],
          "coveredBy": [
            "75",
            "76",
            "77",
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 46,
              "line": 65
            },
            "start": {
              "column": 5,
              "line": 65
            }
          }
        },
        {
          "id": "495",
          "mutatorName": "EqualityOperator",
          "replacement": "props.interaction !== \"give-death-potion\"",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      \"life\",\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "75"
          ],
          "coveredBy": [
            "75",
            "76",
            "77",
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 46,
              "line": 65
            },
            "start": {
              "column": 5,
              "line": 65
            }
          }
        },
        {
          "id": "496",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "75",
            "76",
            "77",
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 46,
              "line": 65
            },
            "start": {
              "column": 27,
              "line": 65
            }
          }
        },
        {
          "id": "497",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      \"death\",\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "78"
          ],
          "coveredBy": [
            "77",
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 87,
              "line": 65
            },
            "start": {
              "column": 50,
              "line": 65
            }
          }
        },
        {
          "id": "498",
          "mutatorName": "EqualityOperator",
          "replacement": "givenDeathPotionTargets?.length !== 1",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 87,
              "line": 65
            },
            "start": {
              "column": 50,
              "line": 65
            }
          }
        },
        {
          "id": "499",
          "mutatorName": "OptionalChaining",
          "replacement": "givenDeathPotionTargets.length",
          "statusReason": "Cannot read properties of undefined (reading 'length')",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "79"
          ],
          "coveredBy": [
            "77",
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 81,
              "line": 65
            },
            "start": {
              "column": 50,
              "line": 65
            }
          }
        },
        {
          "id": "500",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "77"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 67
            },
            "start": {
              "column": 89,
              "line": 65
            }
          }
        },
        {
          "id": "501",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"drankPotion\": \"life\",\n    \"playerId\": \"a0eb8ca8-dba6-4b82-9b79-4d3603c97cd9\",\n  },\n], but it was called with Object {}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "75"
          ],
          "coveredBy": [
            "74",
            "75",
            "76",
            "77",
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 71
            },
            "start": {
              "column": 28,
              "line": 68
            }
          }
        },
        {
          "id": "502",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 93
            },
            "start": {
              "column": 48,
              "line": 74
            }
          }
        },
        {
          "id": "503",
          "mutatorName": "OptionalChaining",
          "replacement": "game.value.currentPlay?.source.interactions.find",
          "statusReason": "Cannot read properties of undefined (reading 'find')",
          "status": "Killed",
          "testsCompleted": 12,
          "static": false,
          "killedBy": [
            "81"
          ],
          "coveredBy": [
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83"
          ],
          "location": {
            "end": {
              "column": 83,
              "line": 75
            },
            "start": {
              "column": 34,
              "line": 75
            }
          }
        },
        {
          "id": "504",
          "mutatorName": "OptionalChaining",
          "replacement": "game.value.currentPlay.source",
          "statusReason": "Cannot read properties of null (reading 'source')",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "70"
          ],
          "coveredBy": [
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83"
          ],
          "location": {
            "end": {
              "column": 64,
              "line": 75
            },
            "start": {
              "column": 34,
              "line": 75
            }
          }
        },
        {
          "id": "505",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "71",
            "72",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "82",
            "83"
          ],
          "location": {
            "end": {
              "column": 124,
              "line": 75
            },
            "start": {
              "column": 84,
              "line": 75
            }
          }
        },
        {
          "id": "506",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      Object {\n        \"playerId\": \"361b18ee-8ad1-40a2-814b-391026cbf464\",\n      },\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "72"
          ],
          "coveredBy": [
            "71",
            "72",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "82",
            "83"
          ],
          "location": {
            "end": {
              "column": 124,
              "line": 75
            },
            "start": {
              "column": 98,
              "line": 75
            }
          }
        },
        {
          "id": "507",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "71",
            "72",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "82",
            "83"
          ],
          "location": {
            "end": {
              "column": 124,
              "line": 75
            },
            "start": {
              "column": 98,
              "line": 75
            }
          }
        },
        {
          "id": "508",
          "mutatorName": "EqualityOperator",
          "replacement": "type !== props.interaction",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      Object {\n        \"playerId\": \"e89a6672-cfde-488a-851b-4db91c7b9f4e\",\n      },\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "72"
          ],
          "coveredBy": [
            "71",
            "72",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "82",
            "83"
          ],
          "location": {
            "end": {
              "column": 124,
              "line": 75
            },
            "start": {
              "column": 98,
              "line": 75
            }
          }
        },
        {
          "id": "509",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83"
          ],
          "location": {
            "end": {
              "column": 60,
              "line": 76
            },
            "start": {
              "column": 7,
              "line": 76
            }
          }
        },
        {
          "id": "510",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Cannot read properties of undefined (reading 'type')",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "70"
          ],
          "coveredBy": [
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83"
          ],
          "location": {
            "end": {
              "column": 60,
              "line": 76
            },
            "start": {
              "column": 7,
              "line": 76
            }
          }
        },
        {
          "id": "511",
          "mutatorName": "LogicalOperator",
          "replacement": "!currentPlayInteraction && !canPlayerBeTargeted.value",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      Object {\n        \"playerId\": \"11f038ca-ec8b-45d7-bf48-e0c0c9cf3694\",\n      },\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "71"
          ],
          "coveredBy": [
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83"
          ],
          "location": {
            "end": {
              "column": 60,
              "line": 76
            },
            "start": {
              "column": 7,
              "line": 76
            }
          }
        },
        {
          "id": "512",
          "mutatorName": "BooleanLiteral",
          "replacement": "currentPlayInteraction",
          "statusReason": "Cannot read properties of undefined (reading 'type')",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "72"
          ],
          "coveredBy": [
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83"
          ],
          "location": {
            "end": {
              "column": 30,
              "line": 76
            },
            "start": {
              "column": 7,
              "line": 76
            }
          }
        },
        {
          "id": "513",
          "mutatorName": "BooleanLiteral",
          "replacement": "canPlayerBeTargeted.value",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      Object {\n        \"playerId\": \"869f9a2d-e156-4813-a86e-056f3f052df2\",\n      },\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "71"
          ],
          "coveredBy": [
            "71",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "82",
            "83"
          ],
          "location": {
            "end": {
              "column": 60,
              "line": 76
            },
            "start": {
              "column": 34,
              "line": 76
            }
          }
        },
        {
          "id": "514",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Cannot read properties of undefined (reading 'type')",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "70"
          ],
          "coveredBy": [
            "70",
            "71",
            "72",
            "73",
            "81"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 78
            },
            "start": {
              "column": 62,
              "line": 76
            }
          }
        },
        {
          "id": "515",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "82",
            "83"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 79
            },
            "start": {
              "column": 7,
              "line": 79
            }
          }
        },
        {
          "id": "516",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 8,
          "static": false,
          "killedBy": [
            "82"
          ],
          "coveredBy": [
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "82",
            "83"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 79
            },
            "start": {
              "column": 7,
              "line": 79
            }
          }
        },
        {
          "id": "517",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "82"
          ],
          "coveredBy": [
            "82"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 83
            },
            "start": {
              "column": 31,
              "line": 79
            }
          }
        },
        {
          "id": "518",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"playerId\": \"80346c2b-71a1-4f4f-a136-8427540c6f1c\",\n  },\n], but it was called with Object {\n  \"drankPotion\": \"death\",\n  \"playerId\": \"80346c2b-71a1-4f4f-a136-8427540c6f1c\",\n}",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "80"
          ],
          "coveredBy": [
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "83"
          ],
          "location": {
            "end": {
              "column": 112,
              "line": 84
            },
            "start": {
              "column": 7,
              "line": 84
            }
          }
        },
        {
          "id": "519",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "83"
          ],
          "location": {
            "end": {
              "column": 112,
              "line": 84
            },
            "start": {
              "column": 7,
              "line": 84
            }
          }
        },
        {
          "id": "520",
          "mutatorName": "LogicalOperator",
          "replacement": "currentPlayInteraction.type === \"give-life-potion\" && currentPlayInteraction.type === \"give-death-potion\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "83"
          ],
          "location": {
            "end": {
              "column": 112,
              "line": 84
            },
            "start": {
              "column": 7,
              "line": 84
            }
          }
        },
        {
          "id": "521",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "83"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 84
            },
            "start": {
              "column": 7,
              "line": 84
            }
          }
        },
        {
          "id": "522",
          "mutatorName": "EqualityOperator",
          "replacement": "currentPlayInteraction.type !== \"give-life-potion\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "83"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 84
            },
            "start": {
              "column": 7,
              "line": 84
            }
          }
        },
        {
          "id": "523",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "83"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 84
            },
            "start": {
              "column": 39,
              "line": 84
            }
          }
        },
        {
          "id": "524",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "78",
            "79",
            "80",
            "83"
          ],
          "location": {
            "end": {
              "column": 112,
              "line": 84
            },
            "start": {
              "column": 61,
              "line": 84
            }
          }
        },
        {
          "id": "525",
          "mutatorName": "EqualityOperator",
          "replacement": "currentPlayInteraction.type !== \"give-death-potion\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "78",
            "79",
            "80",
            "83"
          ],
          "location": {
            "end": {
              "column": 112,
              "line": 84
            },
            "start": {
              "column": 61,
              "line": 84
            }
          }
        },
        {
          "id": "526",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "77"
          ],
          "coveredBy": [
            "77",
            "78",
            "79",
            "80",
            "83"
          ],
          "location": {
            "end": {
              "column": 112,
              "line": 84
            },
            "start": {
              "column": 93,
              "line": 84
            }
          }
        },
        {
          "id": "527",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "75",
            "76",
            "77",
            "78",
            "79"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 88
            },
            "start": {
              "column": 114,
              "line": 84
            }
          }
        },
        {
          "id": "528",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array []\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "80"
          ],
          "coveredBy": [
            "80",
            "83"
          ],
          "location": {
            "end": {
              "column": 86,
              "line": 89
            },
            "start": {
              "column": 7,
              "line": 89
            }
          }
        },
        {
          "id": "529",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "83"
          ],
          "coveredBy": [
            "80",
            "83"
          ],
          "location": {
            "end": {
              "column": 86,
              "line": 89
            },
            "start": {
              "column": 7,
              "line": 89
            }
          }
        },
        {
          "id": "530",
          "mutatorName": "EqualityOperator",
          "replacement": "makeGamePlayDto.value.targets?.length !== currentPlayInteraction.boundaries.max",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array []\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "80"
          ],
          "coveredBy": [
            "80",
            "83"
          ],
          "location": {
            "end": {
              "column": 86,
              "line": 89
            },
            "start": {
              "column": 7,
              "line": 89
            }
          }
        },
        {
          "id": "531",
          "mutatorName": "OptionalChaining",
          "replacement": "makeGamePlayDto.value.targets.length",
          "statusReason": "Cannot read properties of undefined (reading 'length')",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "80"
          ],
          "coveredBy": [
            "80",
            "83"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 89
            },
            "start": {
              "column": 7,
              "line": 89
            }
          }
        },
        {
          "id": "532",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "83"
          ],
          "coveredBy": [
            "83"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 91
            },
            "start": {
              "column": 88,
              "line": 89
            }
          }
        },
        {
          "id": "533",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"playerId\": \"8131526e-e8a8-42f3-9a03-e92eceb86116\",\n  },\n], but it was called with Object {}",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "80"
          ],
          "coveredBy": [
            "80",
            "83"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 92
            },
            "start": {
              "column": 28,
              "line": 92
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-playground-player-card\"\n    class=\"m-3\"\n    :data-testid=\"`game-playground-player-card-${props.player.name}`\"\n  >\n    <PlayerCard\n      id=\"player-card\"\n      :is-selected=\"isPlayerTargeted\"\n      :player-name=\"player.name\"\n      :player-role=\"player.role.current\"\n      @player-card-selector-click=\"handlePlayerCardSelectorClick\"\n    />\n\n    <GamePlaygroundPlayerCardVoteInput\n      v-if=\"game.currentPlay?.type === 'vote'\"\n      id=\"game-playground-player-card-vote-input\"\n      :player=\"player\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\n\nimport type { GamePlaygroundPlayerCardProps } from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/game-playground-player-card.types\";\nimport GamePlaygroundPlayerCardVoteInput from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCardVoteInput/GamePlaygroundPlayerCardVoteInput.vue\";\nimport PlayerCard from \"~/components/shared/game/player/PlayerCard/PlayerCard.vue\";\nimport type { WitchPotion } from \"~/composables/api/game/types/game-play/game-play.types\";\nimport { useMakeGamePlayDtoStore } from \"~/stores/game/make-game-play-dto/useMakeGamePlayDtoStore\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\n\nconst props = defineProps<GamePlaygroundPlayerCardProps>();\n\nconst gameStore = useGameStore();\nconst { game } = storeToRefs(gameStore);\n\nconst makeGamePlayDtoStore = useMakeGamePlayDtoStore();\nconst { makeGamePlayDto } = storeToRefs(makeGamePlayDtoStore);\nconst {\n  addMakeGamePlayTargetDto,\n  removeMakeGamePlayTargetDto,\n  removeFirstMakeGamePlayTargetDto,\n  removeFirstMakeGamePlayTargetDtoWithPotion,\n} = makeGamePlayDtoStore;\n\nconst canPlayerBeTargeted = computed<boolean>(() => {\n  const { type } = game.value.currentPlay ?? {};\n\n  return type === \"target\" || type === \"bury-dead-bodies\";\n});\n\nconst isPlayerTargeted = computed<boolean>(() => {\n  if (!makeGamePlayDto.value.targets) {\n    return false;\n  }\n  return makeGamePlayDto.value.targets.some(({ playerId }) => playerId === props.player._id);\n});\n\nfunction handleWitchGivesPotionClick(): void {\n  const givenLifePotionTargets = makeGamePlayDto.value.targets?.filter(({ drankPotion }) => drankPotion === \"life\");\n  const givenDeathPotionTargets = makeGamePlayDto.value.targets?.filter(({ drankPotion }) => drankPotion === \"death\");\n  const drankPotion: WitchPotion = props.interaction === \"give-life-potion\" ? \"life\" : \"death\";\n  if (props.interaction === \"give-life-potion\" && givenLifePotionTargets?.length === 1 ||\n    props.interaction === \"give-death-potion\" && givenDeathPotionTargets?.length === 1) {\n    removeFirstMakeGamePlayTargetDtoWithPotion(drankPotion);\n  }\n  addMakeGamePlayTargetDto({\n    playerId: props.player._id,\n    drankPotion,\n  });\n}\n\nfunction handlePlayerCardSelectorClick(): void {\n  const currentPlayInteraction = game.value.currentPlay?.source.interactions?.find(({ type }) => type === props.interaction);\n  if (!currentPlayInteraction || !canPlayerBeTargeted.value) {\n    return;\n  }\n  if (isPlayerTargeted.value) {\n    removeMakeGamePlayTargetDto(props.player._id);\n\n    return;\n  }\n  if (currentPlayInteraction.type === \"give-life-potion\" || currentPlayInteraction.type === \"give-death-potion\") {\n    handleWitchGivesPotionClick();\n\n    return;\n  }\n  if (makeGamePlayDto.value.targets?.length === currentPlayInteraction.boundaries.max) {\n    removeFirstMakeGamePlayTargetDto();\n  }\n  addMakeGamePlayTargetDto({ playerId: props.player._id });\n}\n</script>"
    },
    "components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCardVoteInput/GamePlaygroundPlayerCardVoteInput.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "534",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "expected [ 'Stryker was here' ] to strictly equal []",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "230"
          ],
          "coveredBy": [
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242"
          ],
          "location": {
            "end": {
              "column": 45,
              "line": 70
            },
            "start": {
              "column": 43,
              "line": 70
            }
          }
        },
        {
          "id": "535",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected [] to strictly equal [ _Player{ …(6) }, …(2) ]",
          "status": "Killed",
          "testsCompleted": 9,
          "static": false,
          "killedBy": [
            "235"
          ],
          "coveredBy": [
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 80
            },
            "start": {
              "column": 58,
              "line": 74
            }
          }
        },
        {
          "id": "536",
          "mutatorName": "OptionalChaining",
          "replacement": "game.value.currentPlay?.source.interactions?.[0].eligibleTargets",
          "statusReason": "Cannot read properties of undefined (reading 'eligibleTargets')",
          "status": "Killed",
          "testsCompleted": 8,
          "static": false,
          "killedBy": [
            "234"
          ],
          "coveredBy": [
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242"
          ],
          "location": {
            "end": {
              "column": 92,
              "line": 75
            },
            "start": {
              "column": 27,
              "line": 75
            }
          }
        },
        {
          "id": "537",
          "mutatorName": "OptionalChaining",
          "replacement": "game.value.currentPlay?.source.interactions[0]",
          "statusReason": "Cannot read properties of undefined (reading '0')",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "232"
          ],
          "coveredBy": [
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242"
          ],
          "location": {
            "end": {
              "column": 75,
              "line": 75
            },
            "start": {
              "column": 27,
              "line": 75
            }
          }
        },
        {
          "id": "538",
          "mutatorName": "OptionalChaining",
          "replacement": "game.value.currentPlay.source",
          "statusReason": "Cannot read properties of null (reading 'source')",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "231"
          ],
          "coveredBy": [
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 75
            },
            "start": {
              "column": 27,
              "line": 75
            }
          }
        },
        {
          "id": "539",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected [] to strictly equal [ _Player{ …(6) }, …(2) ]",
          "status": "Killed",
          "testsCompleted": 9,
          "static": false,
          "killedBy": [
            "235"
          ],
          "coveredBy": [
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 76
            },
            "start": {
              "column": 7,
              "line": 76
            }
          }
        },
        {
          "id": "540",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Cannot read properties of undefined (reading 'filter')",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "231"
          ],
          "coveredBy": [
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 76
            },
            "start": {
              "column": 7,
              "line": 76
            }
          }
        },
        {
          "id": "541",
          "mutatorName": "EqualityOperator",
          "replacement": "eligibleTargets !== undefined",
          "statusReason": "Cannot read properties of undefined (reading 'filter')",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "231"
          ],
          "coveredBy": [
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 76
            },
            "start": {
              "column": 7,
              "line": 76
            }
          }
        },
        {
          "id": "542",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Cannot read properties of undefined (reading 'filter')",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "231"
          ],
          "coveredBy": [
            "231",
            "232",
            "233",
            "234"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 78
            },
            "start": {
              "column": 38,
              "line": 76
            }
          }
        },
        {
          "id": "543",
          "mutatorName": "MethodExpression",
          "replacement": "eligibleTargets",
          "statusReason": "expected [ _Player{ …(6) }, …(3) ] to strictly equal [ _Player{ …(6) }, …(2) ]",
          "status": "Killed",
          "testsCompleted": 9,
          "static": false,
          "killedBy": [
            "235"
          ],
          "coveredBy": [
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242"
          ],
          "location": {
            "end": {
              "column": 71,
              "line": 79
            },
            "start": {
              "column": 10,
              "line": 79
            }
          }
        },
        {
          "id": "544",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected [] to strictly equal [ _Player{ …(6) }, …(2) ]",
          "status": "Killed",
          "testsCompleted": 9,
          "static": false,
          "killedBy": [
            "235"
          ],
          "coveredBy": [
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242"
          ],
          "location": {
            "end": {
              "column": 70,
              "line": 79
            },
            "start": {
              "column": 33,
              "line": 79
            }
          }
        },
        {
          "id": "545",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected [ _Player{ …(6) }, …(3) ] to strictly equal [ _Player{ …(6) }, …(2) ]",
          "status": "Killed",
          "testsCompleted": 9,
          "static": false,
          "killedBy": [
            "235"
          ],
          "coveredBy": [
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242"
          ],
          "location": {
            "end": {
              "column": 70,
              "line": 79
            },
            "start": {
              "column": 46,
              "line": 79
            }
          }
        },
        {
          "id": "546",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected [] to strictly equal [ _Player{ …(6) }, …(2) ]",
          "status": "Killed",
          "testsCompleted": 9,
          "static": false,
          "killedBy": [
            "235"
          ],
          "coveredBy": [
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242"
          ],
          "location": {
            "end": {
              "column": 70,
              "line": 79
            },
            "start": {
              "column": 46,
              "line": 79
            }
          }
        },
        {
          "id": "547",
          "mutatorName": "EqualityOperator",
          "replacement": "_id === props.player._id",
          "statusReason": "expected [ _Player{ …(6) } ] to strictly equal [ _Player{ …(6) }, …(2) ]",
          "status": "Killed",
          "testsCompleted": 9,
          "static": false,
          "killedBy": [
            "235"
          ],
          "coveredBy": [
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242"
          ],
          "location": {
            "end": {
              "column": 70,
              "line": 79
            },
            "start": {
              "column": 46,
              "line": 79
            }
          }
        },
        {
          "id": "548",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "233"
          ],
          "coveredBy": [
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 91
            },
            "start": {
              "column": 72,
              "line": 82
            }
          }
        },
        {
          "id": "549",
          "mutatorName": "LogicalOperator",
          "replacement": "voteOptions.value && []",
          "statusReason": "Cannot read properties of undefined (reading '0')",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "231"
          ],
          "coveredBy": [
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 83
            },
            "start": {
              "column": 29,
              "line": 83
            }
          }
        },
        {
          "id": "550",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Array [],\n  undefined,\n], but it was called with Array [\n  \"Stryker was here\",\n]",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "233"
          ],
          "coveredBy": [
            "231",
            "232",
            "233",
            "234"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 83
            },
            "start": {
              "column": 50,
              "line": 83
            }
          }
        },
        {
          "id": "551",
          "mutatorName": "BooleanLiteral",
          "replacement": "query.trim()",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "233"
          ],
          "coveredBy": [
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237"
          ],
          "location": {
            "end": {
              "column": 20,
              "line": 84
            },
            "start": {
              "column": 7,
              "line": 84
            }
          }
        },
        {
          "id": "552",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "233"
          ],
          "coveredBy": [
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237"
          ],
          "location": {
            "end": {
              "column": 20,
              "line": 84
            },
            "start": {
              "column": 7,
              "line": 84
            }
          }
        },
        {
          "id": "553",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected [] to strictly equal [ _Player{ …(6) }, …(2) ]",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "235"
          ],
          "coveredBy": [
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237"
          ],
          "location": {
            "end": {
              "column": 20,
              "line": 84
            },
            "start": {
              "column": 7,
              "line": 84
            }
          }
        },
        {
          "id": "554",
          "mutatorName": "MethodExpression",
          "replacement": "query",
          "statusReason": "expected [] to strictly equal [ _Player{ …(6) }, …(2) ]",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "235"
          ],
          "coveredBy": [
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237"
          ],
          "location": {
            "end": {
              "column": 20,
              "line": 84
            },
            "start": {
              "column": 8,
              "line": 84
            }
          }
        },
        {
          "id": "555",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected [] to strictly equal [ _Player{ …(6) }, …(2) ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "235"
          ],
          "coveredBy": [
            "235"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 88
            },
            "start": {
              "column": 22,
              "line": 84
            }
          }
        },
        {
          "id": "556",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected [] to strictly equal [ _Player{ …(6) }, _Player{ …(6) } ]",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "236"
          ],
          "coveredBy": [
            "231",
            "232",
            "233",
            "234",
            "236",
            "237"
          ],
          "location": {
            "end": {
              "column": 66,
              "line": 89
            },
            "start": {
              "column": 48,
              "line": 89
            }
          }
        },
        {
          "id": "557",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "expected [] to strictly equal [ _Player{ …(6) }, _Player{ …(6) } ]",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "236"
          ],
          "coveredBy": [
            "231",
            "232",
            "233",
            "234",
            "236",
            "237"
          ],
          "location": {
            "end": {
              "column": 64,
              "line": 89
            },
            "start": {
              "column": 56,
              "line": 89
            }
          }
        },
        {
          "id": "558",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected [] to strictly equal [ _Player{ …(6) }, _Player{ …(6) } ]",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "236"
          ],
          "coveredBy": [
            "231",
            "232",
            "233",
            "234",
            "236",
            "237"
          ],
          "location": {
            "end": {
              "column": 63,
              "line": 89
            },
            "start": {
              "column": 57,
              "line": 89
            }
          }
        },
        {
          "id": "559",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected [ undefined, undefined ] to strictly equal [ _Player{ …(6) }, _Player{ …(6) } ]",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "236"
          ],
          "coveredBy": [
            "231",
            "232",
            "233",
            "234",
            "236",
            "237"
          ],
          "location": {
            "end": {
              "column": 72,
              "line": 90
            },
            "start": {
              "column": 54,
              "line": 90
            }
          }
        },
        {
          "id": "560",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected [ _Player{ …(6) }, _Player{ …(6) } ] to strictly equal []",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "237"
          ],
          "coveredBy": [
            "237"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 95
            },
            "start": {
              "column": 34,
              "line": 93
            }
          }
        },
        {
          "id": "561",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "expected [ 'Stryker was here' ] to strictly equal []",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "237"
          ],
          "coveredBy": [
            "237"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 94
            },
            "start": {
              "column": 31,
              "line": 94
            }
          }
        },
        {
          "id": "562",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "239"
          ],
          "coveredBy": [
            "238",
            "239",
            "240",
            "241",
            "242"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 112
            },
            "start": {
              "column": 80,
              "line": 97
            }
          }
        },
        {
          "id": "563",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "239"
          ],
          "coveredBy": [
            "238",
            "239",
            "240",
            "241",
            "242"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 99
            },
            "start": {
              "column": 7,
              "line": 99
            }
          }
        },
        {
          "id": "564",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      \"07fc7062-e650-44c7-b956-9c0be03f6828\",\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "238"
          ],
          "coveredBy": [
            "238",
            "239",
            "240",
            "241",
            "242"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 99
            },
            "start": {
              "column": 7,
              "line": 99
            }
          }
        },
        {
          "id": "565",
          "mutatorName": "EqualityOperator",
          "replacement": "typeof votedPlayer.value !== \"string\"",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      \"4387886d-8d8b-432b-84cd-868ed39a56d3\",\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "238"
          ],
          "coveredBy": [
            "238",
            "239",
            "240",
            "241",
            "242"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 99
            },
            "start": {
              "column": 7,
              "line": 99
            }
          }
        },
        {
          "id": "566",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      \"9dbbeb9a-528d-4bf4-b708-1b69e310e437\",\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "238"
          ],
          "coveredBy": [
            "238",
            "239",
            "240",
            "241",
            "242"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 99
            },
            "start": {
              "column": 36,
              "line": 99
            }
          }
        },
        {
          "id": "567",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      \"0d37f4c8-6f9b-4548-bde0-60e1624a5cd5\",\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "238"
          ],
          "coveredBy": [
            "238"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 101
            },
            "start": {
              "column": 46,
              "line": 99
            }
          }
        },
        {
          "id": "568",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "241"
          ],
          "coveredBy": [
            "239",
            "240",
            "241",
            "242"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 102
            },
            "start": {
              "column": 7,
              "line": 102
            }
          }
        },
        {
          "id": "569",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Cannot read properties of null (reading '_id')",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "239"
          ],
          "coveredBy": [
            "239",
            "240",
            "241",
            "242"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 102
            },
            "start": {
              "column": 7,
              "line": 102
            }
          }
        },
        {
          "id": "570",
          "mutatorName": "EqualityOperator",
          "replacement": "votedPlayer.value !== null",
          "statusReason": "Cannot read properties of null (reading '_id')",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "239"
          ],
          "coveredBy": [
            "239",
            "240",
            "241",
            "242"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 102
            },
            "start": {
              "column": 7,
              "line": 102
            }
          }
        },
        {
          "id": "571",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Cannot read properties of null (reading '_id')",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "239"
          ],
          "coveredBy": [
            "239"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 106
            },
            "start": {
              "column": 35,
              "line": 102
            }
          }
        },
        {
          "id": "572",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"sourceId\": \"0f10534c-17d7-48ef-a293-1fe521e3176c\",\n    \"targetId\": \"cc0e94e1-9c3f-48fd-a249-91d2df11d899\",\n  },\n], but it was called with Object {}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "241"
          ],
          "coveredBy": [
            "240",
            "241",
            "242"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 111
            },
            "start": {
              "column": 26,
              "line": 108
            }
          }
        }
      ],
      "source": "<template>\n  <div id=\"game-playground-player-card-vote-input\">\n    <VuePrimeFloatLabel class=\"mt-5\">\n      <VuePrimeAutoComplete\n        complete-on-focus\n        data-key=\"name\"\n        :delay=\"100\"\n        dropdown\n        force-selection\n        input-id=\"player-vote-input\"\n        :model-value=\"votedPlayer\"\n        option-label=\"name\"\n        :suggestions=\"filteredVoteOptions\"\n        @change=\"handleUpdateModelValueEvent\"\n        @complete=\"searchVoteOptions\"\n        @hide=\"handleHideEvent\"\n      >\n        <template #option=\"slotProps\">\n          <div class=\"align-options-center flex\">\n            <RoleImage\n              class=\"me-2\"\n              :role-name=\"slotProps.option.role.current\"\n              size=\"small\"\n              sizes=\"30\"\n            />\n\n            <div>{{ slotProps.option.name }}</div>\n          </div>\n        </template>\n\n        <template #empty>\n          <div class=\"p-2\">\n            <i class=\"fa fa-ban me-2 text-error\"/>\n\n            <span>\n              {{ $t(\"components.GamePlaygroundPlayerCardVoteInput.noAvailableOptions\") }}\n            </span>\n          </div>\n        </template>\n      </VuePrimeAutoComplete>\n\n      <label\n        id=\"player-vote-input-label\"\n        for=\"player-vote-input\"\n      >\n        {{ $t(\"components.GamePlaygroundPlayerCardVoteInput.voteFor\") }}\n      </label>\n    </VuePrimeFloatLabel>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport Fuse from \"fuse.js\";\nimport { storeToRefs } from \"pinia\";\nimport type { AutoCompleteChangeEvent, AutoCompleteCompleteEvent } from \"primevue/autocomplete\";\n\nimport type { GamePlaygroundPlayerCardVoteInputProps } from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCardVoteInput/game-playground-player-card-vote-input.types\";\nimport RoleImage from \"~/components/shared/role/RoleImage/RoleImage.vue\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { useMakeGamePlayDtoStore } from \"~/stores/game/make-game-play-dto/useMakeGamePlayDtoStore\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\n\nconst props = defineProps<GamePlaygroundPlayerCardVoteInputProps>();\n\nconst gameStore = useGameStore();\nconst { game } = storeToRefs(gameStore);\n\nconst { addMakeGamePlayVoteDto, removeMakeGamePlayVoteDto } = useMakeGamePlayDtoStore();\n\nconst filteredVoteOptions = ref<Player[]>([]);\n\nconst votedPlayer = ref<Player | string | null>(null);\n\nconst voteOptions = computed<Player[] | undefined>(() => {\n  const eligibleTargets = game.value.currentPlay?.source.interactions?.[0]?.eligibleTargets;\n  if (eligibleTargets === undefined) {\n    return undefined;\n  }\n  return eligibleTargets.filter(({ _id }) => _id !== props.player._id);\n});\n\nfunction searchVoteOptions({ query }: AutoCompleteCompleteEvent): void {\n  const options: Player[] = voteOptions.value ?? [];\n  if (!query.trim()) {\n    filteredVoteOptions.value = options;\n\n    return;\n  }\n  const fuse: Fuse<Player> = new Fuse(options, { keys: [\"name\"] });\n  filteredVoteOptions.value = fuse.search(query).map(({ item }) => item);\n}\n\nfunction handleHideEvent(): void {\n  filteredVoteOptions.value = [];\n}\n\nfunction handleUpdateModelValueEvent({ value }: AutoCompleteChangeEvent): void {\n  votedPlayer.value = value as Player | string | null;\n  if (typeof votedPlayer.value === \"string\") {\n    return;\n  }\n  if (votedPlayer.value === null) {\n    removeMakeGamePlayVoteDto(props.player._id);\n\n    return;\n  }\n  removeMakeGamePlayVoteDto(props.player._id);\n  addMakeGamePlayVoteDto({\n    sourceId: props.player._id,\n    targetId: votedPlayer.value._id,\n  });\n}\n</script>"
    },
    "components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameRequestAnotherVotePlayground/GameRequestAnotherVotePlayground.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "573",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "Snapshot `Game Request Another Vote Playground Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "832"
          ],
          "coveredBy": [
            "832",
            "833",
            "834",
            "835",
            "836"
          ],
          "location": {
            "end": {
              "column": 55,
              "line": 25
            },
            "start": {
              "column": 50,
              "line": 25
            }
          }
        },
        {
          "id": "574",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "835"
          ],
          "coveredBy": [
            "835",
            "836"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 29
            },
            "start": {
              "column": 58,
              "line": 27
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-request-another-vote-playground\"\n    class=\"flex flex-col items-center justify-center\"\n  >\n    <VuePrimeToggleButton\n      id=\"does-judge-request-another-vote-button\"\n      v-model=\"doesJudgeRequestAnotherVote\"\n      class=\"w-9rem\"\n      off-icon=\"fa fa-thumbs-down me-4\"\n      :off-label=\"$t('components.GameRequestAnotherVotePlayground.heDoesntRequestAnotherVote')\"\n      on-icon=\"fa fa-thumbs-up me-4 !text-white\"\n      :on-label=\"$t('components.GameRequestAnotherVotePlayground.heRequestsAnotherVote')\"\n      @change=\"handleDoesJudgeRequestAnotherVoteChange\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useMakeGamePlayDtoStore } from \"~/stores/game/make-game-play-dto/useMakeGamePlayDtoStore\";\n\nconst makeGamePlayDtoStore = useMakeGamePlayDtoStore();\nconst { setDoesJudgeRequestAnotherVote } = makeGamePlayDtoStore;\n\nconst doesJudgeRequestAnotherVote = ref<boolean>(false);\n\nfunction handleDoesJudgeRequestAnotherVoteChange(): void {\n  setDoesJudgeRequestAnotherVote(doesJudgeRequestAnotherVote.value);\n}\n</script>"
    },
    "components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameTargetPlayground/GameTargetPlaygroundTargets/GameTargetPlaygroundTargets.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "575",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected [] to have a length of 3 but got +0",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "602"
          ],
          "coveredBy": [
            "596",
            "597",
            "598",
            "599",
            "600",
            "601",
            "602"
          ],
          "location": {
            "end": {
              "column": 119,
              "line": 41
            },
            "start": {
              "column": 48,
              "line": 41
            }
          }
        },
        {
          "id": "576",
          "mutatorName": "OptionalChaining",
          "replacement": "game.value.currentPlay?.source.interactions?.[0].eligibleTargets",
          "statusReason": "Cannot read properties of undefined (reading 'eligibleTargets')",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "600"
          ],
          "coveredBy": [
            "596",
            "597",
            "598",
            "599",
            "600",
            "601",
            "602"
          ],
          "location": {
            "end": {
              "column": 119,
              "line": 41
            },
            "start": {
              "column": 54,
              "line": 41
            }
          }
        },
        {
          "id": "577",
          "mutatorName": "OptionalChaining",
          "replacement": "game.value.currentPlay?.source.interactions[0]",
          "statusReason": "Cannot read properties of undefined (reading '0')",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "598"
          ],
          "coveredBy": [
            "596",
            "597",
            "598",
            "599",
            "600",
            "601",
            "602"
          ],
          "location": {
            "end": {
              "column": 102,
              "line": 41
            },
            "start": {
              "column": 54,
              "line": 41
            }
          }
        },
        {
          "id": "578",
          "mutatorName": "OptionalChaining",
          "replacement": "game.value.currentPlay.source",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "596"
          ],
          "coveredBy": [
            "596",
            "597",
            "598",
            "599",
            "600",
            "601",
            "602"
          ],
          "location": {
            "end": {
              "column": 84,
              "line": 41
            },
            "start": {
              "column": 54,
              "line": 41
            }
          }
        }
      ],
      "source": "<template>\n  <div id=\"game-target-playground-targets\">\n    <div\n      v-if=\"!targets?.length\"\n      id=\"no-targets\"\n      class=\"flex flex-col h-full items-center justify-center\"\n    >\n      <i class=\"fa fa-3x fa-comment-slash mb-4 text-error\"/>\n\n      <h2>\n        {{ $t('components.GameTargetPlaygroundTargets.nobodyCanBeTargeted') }}\n      </h2>\n    </div>\n\n    <div\n      v-else\n      id=\"targets\"\n      class=\"grid grid-cols-4 h-full items-center justify-center place-content-center place-items-center\"\n    >\n      <GamePlaygroundPlayerCard\n        v-for=\"target in targets\"\n        :key=\"target._id\"\n        class=\"target\"\n        :interaction=\"game.currentPlay?.source.interactions?.[0].type\"\n        :player=\"target\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\n\nimport GamePlaygroundPlayerCard from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.vue\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\n\nconst gameStore = useGameStore();\nconst { game } = storeToRefs(gameStore);\n\nconst targets = computed<Player[] | undefined>(() => game.value.currentPlay?.source.interactions?.[0]?.eligibleTargets);\n</script>"
    },
    "components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/GameUsePotionsPlayground.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "579",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Use Potions Playground Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "665"
          ],
          "coveredBy": [
            "665",
            "666",
            "667",
            "668",
            "669"
          ],
          "location": {
            "end": {
              "column": 157,
              "line": 35
            },
            "start": {
              "column": 81,
              "line": 35
            }
          }
        },
        {
          "id": "580",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Use Potions Playground Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "665"
          ],
          "coveredBy": [
            "665",
            "666",
            "667",
            "668",
            "669"
          ],
          "location": {
            "end": {
              "column": 156,
              "line": 35
            },
            "start": {
              "column": 138,
              "line": 35
            }
          }
        },
        {
          "id": "581",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "669"
          ],
          "coveredBy": [
            "665",
            "666",
            "667",
            "668",
            "669"
          ],
          "location": {
            "end": {
              "column": 159,
              "line": 37
            },
            "start": {
              "column": 82,
              "line": 37
            }
          }
        },
        {
          "id": "582",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "669"
          ],
          "coveredBy": [
            "665",
            "666",
            "667",
            "668",
            "669"
          ],
          "location": {
            "end": {
              "column": 158,
              "line": 37
            },
            "start": {
              "column": 139,
              "line": 37
            }
          }
        },
        {
          "id": "583",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "666"
          ],
          "coveredBy": [
            "665",
            "666",
            "667",
            "668",
            "669"
          ],
          "location": {
            "end": {
              "column": 156,
              "line": 39
            },
            "start": {
              "column": 51,
              "line": 39
            }
          }
        },
        {
          "id": "584",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Game Use Potions Playground Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "665"
          ],
          "coveredBy": [
            "665",
            "666",
            "667",
            "668",
            "669"
          ],
          "location": {
            "end": {
              "column": 156,
              "line": 39
            },
            "start": {
              "column": 57,
              "line": 39
            }
          }
        },
        {
          "id": "585",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "666"
          ],
          "coveredBy": [
            "665",
            "666",
            "667",
            "668",
            "669"
          ],
          "location": {
            "end": {
              "column": 156,
              "line": 39
            },
            "start": {
              "column": 57,
              "line": 39
            }
          }
        },
        {
          "id": "586",
          "mutatorName": "LogicalOperator",
          "replacement": "!giveLifePotionInteractionEligibleTargets.value || !giveDeathPotionInteractionEligibleTargets.value",
          "statusReason": "Snapshot `Game Use Potions Playground Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "665"
          ],
          "coveredBy": [
            "665",
            "666",
            "667",
            "668",
            "669"
          ],
          "location": {
            "end": {
              "column": 156,
              "line": 39
            },
            "start": {
              "column": 57,
              "line": 39
            }
          }
        },
        {
          "id": "587",
          "mutatorName": "BooleanLiteral",
          "replacement": "giveLifePotionInteractionEligibleTargets.value",
          "statusReason": "Snapshot `Game Use Potions Playground Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "665"
          ],
          "coveredBy": [
            "665",
            "666",
            "667",
            "668",
            "669"
          ],
          "location": {
            "end": {
              "column": 104,
              "line": 39
            },
            "start": {
              "column": 57,
              "line": 39
            }
          }
        },
        {
          "id": "588",
          "mutatorName": "BooleanLiteral",
          "replacement": "giveDeathPotionInteractionEligibleTargets.value",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "666"
          ],
          "coveredBy": [
            "666",
            "667",
            "669"
          ],
          "location": {
            "end": {
              "column": 156,
              "line": 39
            },
            "start": {
              "column": 108,
              "line": 39
            }
          }
        }
      ],
      "source": "<template>\n  <div id=\"game-use-potions-playground\">\n    <h2\n      v-if=\"hasWitchUsedBothPotions\"\n      id=\"no-potion\"\n      class=\"flex flex-col h-full items-center justify-center\"\n    >\n      <i class=\"fa fa-2x fa-flask mb-2 text-info\"/>\n\n      <span>\n        {{ $t(\"components.GameUsePotionsPlayground.witchHasUsedBothPotions\") }}\n      </span>\n    </h2>\n\n    <WitchUsePotionsTabView\n      v-else\n      id=\"witch-use-potions-tab-view\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { storeToRefs } from \"pinia\";\n\nimport WitchUsePotionsTabView from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/WitchUsePotionsTabView/WitchUsePotionsTabView.vue\";\nimport { useCurrentGamePlay } from \"~/composables/api/game/game-play/useCurrentGamePlay\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\n\nconst gameStore = useGameStore();\nconst { game } = storeToRefs(gameStore);\n\nconst { getEligibleTargetsWithInteractionInCurrentGamePlay } = useCurrentGamePlay(game);\n\nconst giveLifePotionInteractionEligibleTargets = computed<Player[] | undefined>(() => getEligibleTargetsWithInteractionInCurrentGamePlay(\"give-life-potion\"));\n\nconst giveDeathPotionInteractionEligibleTargets = computed<Player[] | undefined>(() => getEligibleTargetsWithInteractionInCurrentGamePlay(\"give-death-potion\"));\n\nconst hasWitchUsedBothPotions = computed<boolean>(() => !giveLifePotionInteractionEligibleTargets.value && !giveDeathPotionInteractionEligibleTargets.value);\n</script>"
    },
    "components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/WitchUsePotionsTabView/WitchUsePotionsTabView.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "589",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Witch Use Potions Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "214"
          ],
          "coveredBy": [
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226"
          ],
          "location": {
            "end": {
              "column": 157,
              "line": 89
            },
            "start": {
              "column": 81,
              "line": 89
            }
          }
        },
        {
          "id": "590",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Witch Use Potions Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "214"
          ],
          "coveredBy": [
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226"
          ],
          "location": {
            "end": {
              "column": 156,
              "line": 89
            },
            "start": {
              "column": 138,
              "line": 89
            }
          }
        },
        {
          "id": "591",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected 'true' to be 'false' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 10,
          "static": false,
          "killedBy": [
            "223"
          ],
          "coveredBy": [
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226"
          ],
          "location": {
            "end": {
              "column": 159,
              "line": 91
            },
            "start": {
              "column": 82,
              "line": 91
            }
          }
        },
        {
          "id": "592",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected 'true' to be 'false' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 10,
          "static": false,
          "killedBy": [
            "223"
          ],
          "coveredBy": [
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226"
          ],
          "location": {
            "end": {
              "column": 158,
              "line": 91
            },
            "start": {
              "column": 139,
              "line": 91
            }
          }
        },
        {
          "id": "593",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Witch Use Potions Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "214"
          ],
          "coveredBy": [
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226"
          ],
          "location": {
            "end": {
              "column": 103,
              "line": 93
            },
            "start": {
              "column": 50,
              "line": 93
            }
          }
        },
        {
          "id": "594",
          "mutatorName": "BooleanLiteral",
          "replacement": "giveLifePotionInteractionEligibleTargets.value",
          "statusReason": "Snapshot `Witch Use Potions Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "214"
          ],
          "coveredBy": [
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226"
          ],
          "location": {
            "end": {
              "column": 103,
              "line": 93
            },
            "start": {
              "column": 56,
              "line": 93
            }
          }
        },
        {
          "id": "595",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Witch Use Potions Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "214"
          ],
          "coveredBy": [
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226"
          ],
          "location": {
            "end": {
              "column": 105,
              "line": 95
            },
            "start": {
              "column": 51,
              "line": 95
            }
          }
        },
        {
          "id": "596",
          "mutatorName": "BooleanLiteral",
          "replacement": "giveDeathPotionInteractionEligibleTargets.value",
          "statusReason": "Snapshot `Witch Use Potions Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "214"
          ],
          "coveredBy": [
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226"
          ],
          "location": {
            "end": {
              "column": 105,
              "line": 95
            },
            "start": {
              "column": 57,
              "line": 95
            }
          }
        },
        {
          "id": "597",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected undefined to be '0' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "215"
          ],
          "coveredBy": [
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226"
          ],
          "location": {
            "end": {
              "column": 89,
              "line": 97
            },
            "start": {
              "column": 45,
              "line": 97
            }
          }
        }
      ],
      "source": "<template>\n  <VuePrimeTabView\n    id=\"witch-use-potions-tab-view\"\n    :active-index=\"tabViewActiveIndex\"\n    class=\"tabview-custom\"\n    :pt=\"{ 'nav': 'gap-2' }\"\n  >\n    <VuePrimeTabPanel\n      :disabled=\"hasWitchUsedLifePotion\"\n      :pt=\"{ 'header': 'grow' }\"\n    >\n      <template #header>\n        <div class=\"flex gap-2 items-center\">\n          <NuxtImg\n            :alt=\"$t('components.WitchUsePotionsTabView.lifePotionImageAlt')\"\n            height=\"40\"\n            src=\"svg/game/player/player-attribute/drank-life-potion.svg\"\n            width=\"40\"\n          />\n\n          <h4>\n            {{ $t(\"components.WitchUsePotionsTabView.giveLifePotion\") }}\n          </h4>\n        </div>\n      </template>\n\n      <div\n        id=\"give-life-potion-panel\"\n        class=\"grid grid-cols-4 h-full items-center justify-center m-0 place-content-center place-items-center\"\n      >\n        <GamePlaygroundPlayerCard\n          v-for=\"target in giveLifePotionInteractionEligibleTargets\"\n          :key=\"target._id\"\n          class=\"life-potion-target\"\n          interaction=\"give-life-potion\"\n          :player=\"target\"\n        />\n      </div>\n    </VuePrimeTabPanel>\n\n    <VuePrimeTabPanel\n      :disabled=\"hasWitchUsedDeathPotion\"\n      :pt=\"{ 'header': 'grow' }\"\n    >\n      <template #header>\n        <div class=\"flex gap-2 items-center\">\n          <NuxtImg\n            :alt=\"$t('components.WitchUsePotionsTabView.deathPotionImageAlt')\"\n            height=\"40\"\n            src=\"svg/game/player/player-attribute/drank-death-potion.svg\"\n            width=\"40\"\n          />\n\n          <h4>\n            {{ $t(\"components.WitchUsePotionsTabView.giveDeathPotion\") }}\n          </h4>\n        </div>\n      </template>\n\n      <div\n        id=\"give-death-potion-panel\"\n        class=\"grid grid-cols-4 h-full items-center justify-center m-0 place-content-center place-items-center\"\n      >\n        <GamePlaygroundPlayerCard\n          v-for=\"target in giveDeathPotionInteractionEligibleTargets\"\n          :key=\"target._id\"\n          class=\"death-potion-target\"\n          interaction=\"give-death-potion\"\n          :player=\"target\"\n        />\n      </div>\n    </VuePrimeTabPanel>\n  </VuePrimeTabView>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\n\nimport GamePlaygroundPlayerCard from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.vue\";\nimport { useCurrentGamePlay } from \"~/composables/api/game/game-play/useCurrentGamePlay\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\n\nconst gameStore = useGameStore();\nconst { game } = storeToRefs(gameStore);\n\nconst { getEligibleTargetsWithInteractionInCurrentGamePlay } = useCurrentGamePlay(game);\n\nconst giveLifePotionInteractionEligibleTargets = computed<Player[] | undefined>(() => getEligibleTargetsWithInteractionInCurrentGamePlay(\"give-life-potion\"));\n\nconst giveDeathPotionInteractionEligibleTargets = computed<Player[] | undefined>(() => getEligibleTargetsWithInteractionInCurrentGamePlay(\"give-death-potion\"));\n\nconst hasWitchUsedLifePotion = computed<boolean>(() => !giveLifePotionInteractionEligibleTargets.value);\n\nconst hasWitchUsedDeathPotion = computed<boolean>(() => !giveDeathPotionInteractionEligibleTargets.value);\n\nconst tabViewActiveIndex = computed<number>(() => (hasWitchUsedLifePotion.value ? 1 : 0));\n</script>"
    },
    "components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameVotePlayground/GameVotePlaygroundVoters/GameVotePlaygroundVoters.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "598",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "726"
          ],
          "coveredBy": [
            "726",
            "727",
            "728",
            "729",
            "730"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 46
            },
            "start": {
              "column": 41,
              "line": 41
            }
          }
        },
        {
          "id": "599",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected [] to have a length of 3 but got +0",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "730"
          ],
          "coveredBy": [
            "726",
            "727",
            "728",
            "729",
            "730"
          ],
          "location": {
            "end": {
              "column": 113,
              "line": 42
            },
            "start": {
              "column": 7,
              "line": 42
            }
          }
        },
        {
          "id": "600",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "726"
          ],
          "coveredBy": [
            "726",
            "727",
            "728",
            "729",
            "730"
          ],
          "location": {
            "end": {
              "column": 113,
              "line": 42
            },
            "start": {
              "column": 7,
              "line": 42
            }
          }
        },
        {
          "id": "601",
          "mutatorName": "LogicalOperator",
          "replacement": "game.value.currentPlay?.source.players === undefined && game.value.currentPlay.source.players.length === 0",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "726"
          ],
          "coveredBy": [
            "726",
            "727",
            "728",
            "729",
            "730"
          ],
          "location": {
            "end": {
              "column": 113,
              "line": 42
            },
            "start": {
              "column": 7,
              "line": 42
            }
          }
        },
        {
          "id": "602",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "726"
          ],
          "coveredBy": [
            "726",
            "727",
            "728",
            "729",
            "730"
          ],
          "location": {
            "end": {
              "column": 59,
              "line": 42
            },
            "start": {
              "column": 7,
              "line": 42
            }
          }
        },
        {
          "id": "603",
          "mutatorName": "EqualityOperator",
          "replacement": "game.value.currentPlay?.source.players !== undefined",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "726"
          ],
          "coveredBy": [
            "726",
            "727",
            "728",
            "729",
            "730"
          ],
          "location": {
            "end": {
              "column": 59,
              "line": 42
            },
            "start": {
              "column": 7,
              "line": 42
            }
          }
        },
        {
          "id": "604",
          "mutatorName": "OptionalChaining",
          "replacement": "game.value.currentPlay.source",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "726"
          ],
          "coveredBy": [
            "726",
            "727",
            "728",
            "729",
            "730"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 42
            },
            "start": {
              "column": 7,
              "line": 42
            }
          }
        },
        {
          "id": "605",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Cannot read properties of undefined (reading 'length')",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "728"
          ],
          "coveredBy": [
            "728",
            "730"
          ],
          "location": {
            "end": {
              "column": 113,
              "line": 42
            },
            "start": {
              "column": 63,
              "line": 42
            }
          }
        },
        {
          "id": "606",
          "mutatorName": "EqualityOperator",
          "replacement": "game.value.currentPlay.source.players.length !== 0",
          "statusReason": "Cannot read properties of undefined (reading 'length')",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "728"
          ],
          "coveredBy": [
            "728",
            "730"
          ],
          "location": {
            "end": {
              "column": 113,
              "line": 42
            },
            "start": {
              "column": 63,
              "line": 42
            }
          }
        },
        {
          "id": "607",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "726"
          ],
          "coveredBy": [
            "726",
            "727",
            "728",
            "729",
            "730"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 44
            },
            "start": {
              "column": 115,
              "line": 42
            }
          }
        },
        {
          "id": "608",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "Snapshot `Game Vote Playground Voter Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "726"
          ],
          "coveredBy": [
            "726",
            "727",
            "728",
            "729",
            "730"
          ],
          "location": {
            "end": {
              "column": 14,
              "line": 43
            },
            "start": {
              "column": 12,
              "line": 43
            }
          }
        }
      ],
      "source": "<template>\n  <div id=\"game-vote-playground-voters\">\n    <div\n      v-if=\"!voters.length\"\n      id=\"no-voters\"\n      class=\"flex flex-col h-full items-center justify-center\"\n    >\n      <i class=\"fa fa-3x fa-comment-slash mb-4 text-error\"/>\n\n      <h2>\n        {{ $t('components.GameVotePlaygroundVoters.nobodyCanVote') }}\n      </h2>\n    </div>\n\n    <div\n      v-else\n      id=\"voters\"\n      class=\"grid grid-cols-4 items-center justify-center\"\n    >\n      <GamePlaygroundPlayerCard\n        v-for=\"voter in voters\"\n        :key=\"voter._id\"\n        class=\"voter\"\n        :player=\"voter\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\nimport { shuffle } from \"radash\";\n\nimport GamePlaygroundPlayerCard from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.vue\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\n\nconst gameStore = useGameStore();\nconst { game } = storeToRefs(gameStore);\n\nconst voters = computed<Player[]>(() => {\n  if (game.value.currentPlay?.source.players === undefined || game.value.currentPlay.source.players.length === 0) {\n    return [];\n  }\n  return shuffle(game.value.currentPlay.source.players);\n});\n</script>"
    },
    "components/pages/game/GamePlaying/GamePlayground/GamePlaygroundFooter/GamePlaygroundFooterMakePlayButton/GamePlaygroundFooterMakePlayButton.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "609",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "Snapshot `Game Playground Footer Make Play Button Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "627"
          ],
          "coveredBy": [
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 45,
              "line": 39
            },
            "start": {
              "column": 40,
              "line": 39
            }
          }
        },
        {
          "id": "610",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "631"
          ],
          "coveredBy": [
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 46
            },
            "start": {
              "column": 59,
              "line": 41
            }
          }
        },
        {
          "id": "611",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "expect(received).toBeTrue()\n\nExpected value to be true:\n  true\nReceived:\n  false",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "633"
          ],
          "coveredBy": [
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 42
            },
            "start": {
              "column": 29,
              "line": 42
            }
          }
        },
        {
          "id": "612",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "expected 'true' to be 'false' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "634"
          ],
          "coveredBy": [
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 34,
              "line": 45
            },
            "start": {
              "column": 29,
              "line": 45
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-playground-footer-make-play-button\"\n    class=\"flex justify-center\"\n  >\n    <VuePrimeButton\n      id=\"make-play-button\"\n      class=\"uppercase w-full\"\n      :disabled=\"!canMakeGamePlay\"\n      icon=\"fa fa-play\"\n      :label=\"$t('components.GamePlaygroundFooterMakePlayButton.makePlay')\"\n      :loading=\"isLoadingMakePlay\"\n      raised\n      severity=\"primary\"\n      type=\"button\"\n      @click=\"handleMakePlayButtonClick\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\n\nimport { useMakeGamePlayDtoValidation } from \"~/composables/api/game/useMakeGamePlayDtoValidation\";\nimport { useMakeGamePlayDtoStore } from \"~/stores/game/make-game-play-dto/useMakeGamePlayDtoStore\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\n\nconst gameStore = useGameStore();\nconst { game } = storeToRefs(gameStore);\nconst { makeGamePlay } = gameStore;\n\nconst { resetMakeGamePlayDto } = useMakeGamePlayDtoStore();\n\nconst makeGamePlayDtoStore = useMakeGamePlayDtoStore();\nconst { makeGamePlayDto } = storeToRefs(makeGamePlayDtoStore);\n\nconst { canMakeGamePlay } = useMakeGamePlayDtoValidation(makeGamePlayDto, game);\n\nconst isLoadingMakePlay = ref<boolean>(false);\n\nasync function handleMakePlayButtonClick(): Promise<void> {\n  isLoadingMakePlay.value = true;\n  await makeGamePlay(makeGamePlayDto.value);\n  resetMakeGamePlayDto();\n  isLoadingMakePlay.value = false;\n}\n</script>"
    },
    "components/pages/game/GamePlaying/GamePlayground/GamePlaygroundHeader/GamePlaygroundHeaderCard/GamePlaygroundHeaderCard.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "613",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Playground Header Card Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "707"
          ],
          "coveredBy": [
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 44
            },
            "start": {
              "column": 71,
              "line": 25
            }
          }
        },
        {
          "id": "614",
          "mutatorName": "BooleanLiteral",
          "replacement": "currentPlay",
          "statusReason": "Snapshot `Game Playground Header Card Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "707"
          ],
          "coveredBy": [
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 27
            },
            "start": {
              "column": 7,
              "line": 27
            }
          }
        },
        {
          "id": "615",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Game Playground Header Card Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "707"
          ],
          "coveredBy": [
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 27
            },
            "start": {
              "column": 7,
              "line": 27
            }
          }
        },
        {
          "id": "616",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Cannot read properties of null (reading 'source')",
          "status": "Killed",
          "testsCompleted": 10,
          "static": false,
          "killedBy": [
            "713"
          ],
          "coveredBy": [
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 27
            },
            "start": {
              "column": 7,
              "line": 27
            }
          }
        },
        {
          "id": "617",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Cannot read properties of null (reading 'source')",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "713"
          ],
          "coveredBy": [
            "713"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 29
            },
            "start": {
              "column": 21,
              "line": 27
            }
          }
        },
        {
          "id": "618",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "Snapshot `Game Playground Header Card Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "707"
          ],
          "coveredBy": [
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 36
            },
            "start": {
              "column": 74,
              "line": 31
            }
          }
        },
        {
          "id": "619",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Playground Header Card Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "707"
          ],
          "coveredBy": [
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713"
          ],
          "location": {
            "end": {
              "column": 14,
              "line": 32
            },
            "start": {
              "column": 5,
              "line": 32
            }
          }
        },
        {
          "id": "620",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected 'survivors' to be 'villager' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "708"
          ],
          "coveredBy": [
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713"
          ],
          "location": {
            "end": {
              "column": 16,
              "line": 33
            },
            "start": {
              "column": 5,
              "line": 33
            }
          }
        },
        {
          "id": "621",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected 'charmed' to be 'villager' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "708"
          ],
          "coveredBy": [
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713"
          ],
          "location": {
            "end": {
              "column": 14,
              "line": 34
            },
            "start": {
              "column": 5,
              "line": 34
            }
          }
        },
        {
          "id": "622",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected 'lovers' to be 'villager' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "708"
          ],
          "coveredBy": [
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713"
          ],
          "location": {
            "end": {
              "column": 13,
              "line": 35
            },
            "start": {
              "column": 5,
              "line": 35
            }
          }
        },
        {
          "id": "623",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'villager' to be 'werewolf' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "709"
          ],
          "coveredBy": [
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713"
          ],
          "location": {
            "end": {
              "column": 68,
              "line": 37
            },
            "start": {
              "column": 7,
              "line": 37
            }
          }
        },
        {
          "id": "624",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Snapshot `Game Playground Header Card Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "707"
          ],
          "coveredBy": [
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713"
          ],
          "location": {
            "end": {
              "column": 68,
              "line": 37
            },
            "start": {
              "column": 7,
              "line": 37
            }
          }
        },
        {
          "id": "625",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Playground Header Card Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "707"
          ],
          "coveredBy": [
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 39
            },
            "start": {
              "column": 70,
              "line": 37
            }
          }
        },
        {
          "id": "626",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Playground Header Card Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "707"
          ],
          "coveredBy": [
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 38
            },
            "start": {
              "column": 12,
              "line": 38
            }
          }
        },
        {
          "id": "627",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'werewolf' to be 'witch' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "710"
          ],
          "coveredBy": [
            "709",
            "710",
            "711",
            "712"
          ],
          "location": {
            "end": {
              "column": 34,
              "line": 40
            },
            "start": {
              "column": 7,
              "line": 40
            }
          }
        },
        {
          "id": "628",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected 'werewolves' to be 'werewolf' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "709"
          ],
          "coveredBy": [
            "709",
            "710",
            "711",
            "712"
          ],
          "location": {
            "end": {
              "column": 34,
              "line": 40
            },
            "start": {
              "column": 7,
              "line": 40
            }
          }
        },
        {
          "id": "629",
          "mutatorName": "EqualityOperator",
          "replacement": "sourceName !== \"werewolves\"",
          "statusReason": "expected 'werewolves' to be 'werewolf' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "709"
          ],
          "coveredBy": [
            "709",
            "710",
            "711",
            "712"
          ],
          "location": {
            "end": {
              "column": 34,
              "line": 40
            },
            "start": {
              "column": 7,
              "line": 40
            }
          }
        },
        {
          "id": "630",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected 'werewolves' to be 'werewolf' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "709"
          ],
          "coveredBy": [
            "709",
            "710",
            "711",
            "712"
          ],
          "location": {
            "end": {
              "column": 34,
              "line": 40
            },
            "start": {
              "column": 22,
              "line": 40
            }
          }
        },
        {
          "id": "631",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected 'werewolves' to be 'werewolf' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "709"
          ],
          "coveredBy": [
            "709"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 42
            },
            "start": {
              "column": 36,
              "line": 40
            }
          }
        },
        {
          "id": "632",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be 'werewolf' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "709"
          ],
          "coveredBy": [
            "709"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 41
            },
            "start": {
              "column": 12,
              "line": 41
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-current-play-expected-player-role-image\"\n    class=\"flex justify-end\"\n  >\n    <RoleImage\n      :alt=\"$t('components.gamePlaygroundHeaderCard.roleImageAlt')\"\n      definition=\"small\"\n      :role-name=\"currentPlayRoleImageName\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\n\nimport RoleImage from \"~/components/shared/role/RoleImage/RoleImage.vue\";\nimport type { RoleName } from \"~/composables/api/role/types/role.types\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\nimport type { GamePlaySourceName } from \"~/composables/api/game/types/game-play/game-play-source/game-play-source.types\";\n\nconst gameStore = useGameStore();\nconst { game } = storeToRefs(gameStore);\n\nconst currentPlayRoleImageName = computed<RoleName | undefined>(() => {\n  const { currentPlay } = game.value;\n  if (!currentPlay) {\n    return undefined;\n  }\n  const { name: sourceName } = currentPlay.source;\n  const villagerImageSpecificGamePlaySourceNames: GamePlaySourceName[] = [\n    \"sheriff\",\n    \"survivors\",\n    \"charmed\",\n    \"lovers\",\n  ];\n  if (villagerImageSpecificGamePlaySourceNames.includes(sourceName)) {\n    return \"villager\";\n  }\n  if (sourceName === \"werewolves\") {\n    return \"werewolf\";\n  }\n  return sourceName as RoleName;\n});\n</script>"
    },
    "components/pages/game/GamePlaying/GamePlayground/GamePlaygroundHeader/GamePlaygroundHeaderCurrentPlay/GamePlaygroundHeaderCurrentPlay.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "633",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Playground Header Current Play Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "86"
          ],
          "coveredBy": [
            "86",
            "87",
            "88",
            "89"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 49
            },
            "start": {
              "column": 84,
              "line": 36
            }
          }
        },
        {
          "id": "634",
          "mutatorName": "BooleanLiteral",
          "replacement": "currentPlay",
          "statusReason": "Snapshot `Game Playground Header Current Play Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "86"
          ],
          "coveredBy": [
            "86",
            "87",
            "88",
            "89"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 38
            },
            "start": {
              "column": 7,
              "line": 38
            }
          }
        },
        {
          "id": "635",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Game Playground Header Current Play Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "86"
          ],
          "coveredBy": [
            "86",
            "87",
            "88",
            "89"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 38
            },
            "start": {
              "column": 7,
              "line": 38
            }
          }
        },
        {
          "id": "636",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Cannot read properties of null (reading 'source')",
          "status": "Killed",
          "testsCompleted": 31,
          "static": false,
          "killedBy": [
            "89"
          ],
          "coveredBy": [
            "86",
            "87",
            "88",
            "89"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 38
            },
            "start": {
              "column": 7,
              "line": 38
            }
          }
        },
        {
          "id": "637",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Cannot read properties of null (reading 'source')",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "89"
          ],
          "coveredBy": [
            "89"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 40
            },
            "start": {
              "column": 21,
              "line": 38
            }
          }
        },
        {
          "id": "638",
          "mutatorName": "BooleanLiteral",
          "replacement": "svgAndText",
          "statusReason": "Snapshot `Game Playground Header Current Play Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "86"
          ],
          "coveredBy": [
            "86",
            "87",
            "88",
            "89"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 42
            },
            "start": {
              "column": 7,
              "line": 42
            }
          }
        },
        {
          "id": "639",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Game Playground Header Current Play Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "86"
          ],
          "coveredBy": [
            "86",
            "87",
            "88",
            "89"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 42
            },
            "start": {
              "column": 7,
              "line": 42
            }
          }
        },
        {
          "id": "640",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Cannot read properties of undefined (reading 'svgPath')",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "87"
          ],
          "coveredBy": [
            "86",
            "87",
            "88",
            "89"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 42
            },
            "start": {
              "column": 7,
              "line": 42
            }
          }
        },
        {
          "id": "641",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Cannot read properties of undefined (reading 'svgPath')",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "87"
          ],
          "coveredBy": [
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 44
            },
            "start": {
              "column": 20,
              "line": 42
            }
          }
        },
        {
          "id": "642",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Playground Header Current Play Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "86"
          ],
          "coveredBy": [
            "86",
            "87",
            "88",
            "89"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 48
            },
            "start": {
              "column": 10,
              "line": 45
            }
          }
        },
        {
          "id": "643",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Playground Header Current Play Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "86"
          ],
          "coveredBy": [
            "86",
            "87",
            "88",
            "89"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 56
            },
            "start": {
              "column": 48,
              "line": 51
            }
          }
        },
        {
          "id": "644",
          "mutatorName": "BooleanLiteral",
          "replacement": "currentPlaySvgAndTextKey.value",
          "statusReason": "Snapshot `Game Playground Header Current Play Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "86"
          ],
          "coveredBy": [
            "86",
            "87",
            "88",
            "89"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 52
            },
            "start": {
              "column": 7,
              "line": 52
            }
          }
        },
        {
          "id": "645",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Game Playground Header Current Play Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "86"
          ],
          "coveredBy": [
            "86",
            "87",
            "88",
            "89"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 52
            },
            "start": {
              "column": 7,
              "line": 52
            }
          }
        },
        {
          "id": "646",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Cannot read properties of undefined (reading 'text')",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "87"
          ],
          "coveredBy": [
            "86",
            "87",
            "88",
            "89"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 52
            },
            "start": {
              "column": 7,
              "line": 52
            }
          }
        },
        {
          "id": "647",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Cannot read properties of undefined (reading 'text')",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "87"
          ],
          "coveredBy": [
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 54
            },
            "start": {
              "column": 40,
              "line": 52
            }
          }
        },
        {
          "id": "648",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be 'components.GamePlaygroundHeaderCurren…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "89"
          ],
          "coveredBy": [
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 74,
              "line": 53
            },
            "start": {
              "column": 14,
              "line": 53
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-playground-header-current-play\"\n    class=\"flex items-center justify-center\"\n  >\n    <NuxtImg\n      v-if=\"currentPlaySvgAndTextKey\"\n      :alt=\"$t(`components.GamePlaygroundHeaderCurrentPlay.currentPlayAltText`)\"\n      class=\"me-3\"\n      height=\"50\"\n      :src=\"currentPlaySvgAndTextKey.svgPath\"\n      width=\"50\"\n    />\n\n    <h2 id=\"current-play-text\">\n      {{ currentPlayText }}\n    </h2>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\n\nimport { GAME_PLAYS_TEXT_AND_SVG } from \"~/components/shared/game/game-play/game-play.constants\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\n\ntype CurrentPlaySvgAndText = {\n  svgPath: string;\n  text: string;\n};\n\nconst gameStore = useGameStore();\nconst { game } = storeToRefs(gameStore);\nconst { t } = useI18n();\n\nconst currentPlaySvgAndTextKey = computed<CurrentPlaySvgAndText | undefined>(() => {\n  const { currentPlay } = game.value;\n  if (!currentPlay) {\n    return undefined;\n  }\n  const svgAndText = GAME_PLAYS_TEXT_AND_SVG[currentPlay.source.name][currentPlay.action];\n  if (!svgAndText) {\n    return undefined;\n  }\n  return {\n    svgPath: svgAndText.svgPath,\n    text: svgAndText.textKey,\n  };\n});\n\nconst currentPlayText = computed<string>(() => {\n  if (!currentPlaySvgAndTextKey.value) {\n    return t(\"components.GamePlaygroundHeaderCurrentPlay.unknownGamePlay\");\n  }\n  return t(currentPlaySvgAndTextKey.value.text);\n});\n</script>"
    },
    "components/pages/game/GamePlaying/GameTeamSide/GameTeamSide.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "649",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "460"
          ],
          "coveredBy": [
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468"
          ],
          "location": {
            "end": {
              "column": 117,
              "line": 64
            },
            "start": {
              "column": 40,
              "line": 64
            }
          }
        },
        {
          "id": "650",
          "mutatorName": "MethodExpression",
          "replacement": "game.value.players",
          "statusReason": "expected 'components.GameTeamSide.aliveTeamPlay…' to be 'components.GameTeamSide.aliveTeamPlay…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "465"
          ],
          "coveredBy": [
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468"
          ],
          "location": {
            "end": {
              "column": 117,
              "line": 64
            },
            "start": {
              "column": 46,
              "line": 64
            }
          }
        },
        {
          "id": "651",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected 'components.GameTeamSide.aliveTeamPlay…' to be 'components.GameTeamSide.aliveTeamPlay…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "465"
          ],
          "coveredBy": [
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468"
          ],
          "location": {
            "end": {
              "column": 116,
              "line": 64
            },
            "start": {
              "column": 72,
              "line": 64
            }
          }
        },
        {
          "id": "652",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'components.GameTeamSide.aliveTeamPlay…' to be 'components.GameTeamSide.aliveTeamPlay…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "465"
          ],
          "coveredBy": [
            "465",
            "466",
            "467",
            "468"
          ],
          "location": {
            "end": {
              "column": 116,
              "line": 64
            },
            "start": {
              "column": 82,
              "line": 64
            }
          }
        },
        {
          "id": "653",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected 'components.GameTeamSide.aliveTeamPlay…' to be 'components.GameTeamSide.aliveTeamPlay…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "465"
          ],
          "coveredBy": [
            "465",
            "466",
            "467",
            "468"
          ],
          "location": {
            "end": {
              "column": 116,
              "line": 64
            },
            "start": {
              "column": 82,
              "line": 64
            }
          }
        },
        {
          "id": "654",
          "mutatorName": "EqualityOperator",
          "replacement": "player.side.current !== props.side",
          "statusReason": "expected 'components.GameTeamSide.aliveTeamPlay…' to be 'components.GameTeamSide.aliveTeamPlay…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "465"
          ],
          "coveredBy": [
            "465",
            "466",
            "467",
            "468"
          ],
          "location": {
            "end": {
              "column": 116,
              "line": 64
            },
            "start": {
              "column": 82,
              "line": 64
            }
          }
        },
        {
          "id": "655",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected [] to have a length of 4 but got +0",
          "status": "Killed",
          "testsCompleted": 8,
          "static": false,
          "killedBy": [
            "467"
          ],
          "coveredBy": [
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468"
          ],
          "location": {
            "end": {
              "column": 3,
              "line": 71
            },
            "start": {
              "column": 50,
              "line": 66
            }
          }
        },
        {
          "id": "656",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected _Player{ …(6) } to strictly equal _Player{ …(6) }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "467"
          ],
          "coveredBy": [
            "465",
            "466",
            "467",
            "468"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 71
            },
            "start": {
              "column": 105,
              "line": 66
            }
          }
        },
        {
          "id": "657",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected _Player{ …(6) } to strictly equal _Player{ …(6) }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "467"
          ],
          "coveredBy": [
            "465",
            "466",
            "467",
            "468"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 67
            },
            "start": {
              "column": 7,
              "line": 67
            }
          }
        },
        {
          "id": "658",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected _Player{ …(6) } to strictly equal _Player{ …(6) }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "467"
          ],
          "coveredBy": [
            "465",
            "466",
            "467",
            "468"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 67
            },
            "start": {
              "column": 7,
              "line": 67
            }
          }
        },
        {
          "id": "659",
          "mutatorName": "LogicalOperator",
          "replacement": "playerA.isAlive || !playerB.isAlive",
          "statusReason": "expected _Player{ …(6) } to strictly equal _Player{ …(6) }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "467"
          ],
          "coveredBy": [
            "465",
            "466",
            "467",
            "468"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 67
            },
            "start": {
              "column": 7,
              "line": 67
            }
          }
        },
        {
          "id": "660",
          "mutatorName": "BooleanLiteral",
          "replacement": "playerB.isAlive",
          "statusReason": "expected _Player{ …(6) } to strictly equal _Player{ …(6) }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "467"
          ],
          "coveredBy": [
            "465",
            "466",
            "467",
            "468"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 67
            },
            "start": {
              "column": 26,
              "line": 67
            }
          }
        },
        {
          "id": "661",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected _Player{ …(6) } to strictly equal _Player{ …(6) }",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "467"
          ],
          "coveredBy": [
            "465",
            "467",
            "468"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 69
            },
            "start": {
              "column": 44,
              "line": 67
            }
          }
        },
        {
          "id": "662",
          "mutatorName": "UnaryOperator",
          "replacement": "+1",
          "statusReason": "expected _Player{ …(6) } to strictly equal _Player{ …(6) }",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "467"
          ],
          "coveredBy": [
            "465",
            "467",
            "468"
          ],
          "location": {
            "end": {
              "column": 14,
              "line": 68
            },
            "start": {
              "column": 12,
              "line": 68
            }
          }
        },
        {
          "id": "663",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Team Side Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "460"
          ],
          "coveredBy": [
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 80
            },
            "start": {
              "column": 49,
              "line": 73
            }
          }
        },
        {
          "id": "664",
          "mutatorName": "MethodExpression",
          "replacement": "teamPlayers.value",
          "statusReason": "expected 'components.GameTeamSide.aliveTeamPlay…' to be 'components.GameTeamSide.aliveTeamPlay…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "465"
          ],
          "coveredBy": [
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468"
          ],
          "location": {
            "end": {
              "column": 74,
              "line": 74
            },
            "start": {
              "column": 24,
              "line": 74
            }
          }
        },
        {
          "id": "665",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected 'components.GameTeamSide.aliveTeamPlay…' to be 'components.GameTeamSide.aliveTeamPlay…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "465"
          ],
          "coveredBy": [
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468"
          ],
          "location": {
            "end": {
              "column": 73,
              "line": 74
            },
            "start": {
              "column": 49,
              "line": 74
            }
          }
        },
        {
          "id": "666",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Team Side Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "460"
          ],
          "coveredBy": [
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468"
          ],
          "location": {
            "end": {
              "column": 54,
              "line": 76
            },
            "start": {
              "column": 12,
              "line": 76
            }
          }
        },
        {
          "id": "667",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Team Side Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "460"
          ],
          "coveredBy": [
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 79
            },
            "start": {
              "column": 56,
              "line": 76
            }
          }
        },
        {
          "id": "668",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Team Side Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "460"
          ],
          "coveredBy": [
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 87
            },
            "start": {
              "column": 48,
              "line": 82
            }
          }
        },
        {
          "id": "669",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected '/svg/role/villager.svg' to be '/svg/role/werewolf.svg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "461"
          ],
          "coveredBy": [
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 83
            },
            "start": {
              "column": 7,
              "line": 83
            }
          }
        },
        {
          "id": "670",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Snapshot `Game Team Side Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "460"
          ],
          "coveredBy": [
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 83
            },
            "start": {
              "column": 7,
              "line": 83
            }
          }
        },
        {
          "id": "671",
          "mutatorName": "EqualityOperator",
          "replacement": "props.side !== \"villagers\"",
          "statusReason": "Snapshot `Game Team Side Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "460"
          ],
          "coveredBy": [
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 83
            },
            "start": {
              "column": 7,
              "line": 83
            }
          }
        },
        {
          "id": "672",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Team Side Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "460"
          ],
          "coveredBy": [
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 83
            },
            "start": {
              "column": 22,
              "line": 83
            }
          }
        },
        {
          "id": "673",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Team Side Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "460"
          ],
          "coveredBy": [
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 85
            },
            "start": {
              "column": 35,
              "line": 83
            }
          }
        },
        {
          "id": "674",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Team Side Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "460"
          ],
          "coveredBy": [
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 84
            },
            "start": {
              "column": 12,
              "line": 84
            }
          }
        },
        {
          "id": "675",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be '/svg/role/werewolf.svg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "461"
          ],
          "coveredBy": [
            "461",
            "463",
            "465",
            "467"
          ],
          "location": {
            "end": {
              "column": 34,
              "line": 86
            },
            "start": {
              "column": 10,
              "line": 86
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-playground-team-side\"\n    class=\"flex flex-col h-full\"\n  >\n    <div class=\"flex items-center justify-evenly\">\n      <NuxtImg\n        :alt=\"$t(`components.GameTeamSide.sideAltText.${props.side}`)\"\n        height=\"50\"\n        :src=\"sideSvgIconPath\"\n        width=\"50\"\n      />\n\n      <div>\n        <h2\n          id=\"side-title\"\n          class=\"my-1 text-center\"\n        >\n          {{ $t(`shared.role.side.${side}`) }}\n        </h2>\n\n        <h4\n          id=\"alive-team-players\"\n          class=\"my-1 text-center\"\n        >\n          {{ alivePlayersText }}\n        </h4>\n      </div>\n\n      <div/>\n    </div>\n\n    <VuePrimeDivider/>\n\n    <div\n      id=\"team-players\"\n      class=\"flex flex-col grow overflow-y-auto\"\n    >\n      <GameTeamSidePlayer\n        v-for=\"player in aliveFirstTeamPlayers\"\n        :key=\"player._id\"\n        class=\"my-1\"\n        :player=\"player\"\n      />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { storeToRefs } from \"pinia\";\n\nimport type { GameTeamSideProps } from \"~/components/pages/game/GamePlaying/GameTeamSide/game-team-side.types\";\nimport GameTeamSidePlayer from \"~/components/pages/game/GamePlaying/GameTeamSide/GameTeamSidePlayer/GameTeamSidePlayer.vue\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\n\nconst props = defineProps<GameTeamSideProps>();\n\nconst { t } = useI18n();\n\nconst gameStore = useGameStore();\nconst { game } = storeToRefs(gameStore);\n\nconst teamPlayers = computed<Player[]>(() => game.value.players.filter(player => player.side.current === props.side));\n\nconst aliveFirstTeamPlayers = computed<Player[]>(() => teamPlayers.value.toSorted((playerA, playerB) => {\n  if (playerA.isAlive && !playerB.isAlive) {\n    return -1;\n  }\n  return 1;\n}));\n\nconst alivePlayersText = computed<string>(() => {\n  const alivePlayers = teamPlayers.value.filter(player => player.isAlive);\n\n  return t(`components.GameTeamSide.aliveTeamPlayers`, {\n    alivePlayers: alivePlayers.length,\n    totalPlayers: teamPlayers.value.length,\n  });\n});\n\nconst sideSvgIconPath = computed<string>(() => {\n  if (props.side === \"villagers\") {\n    return \"/svg/role/villager.svg\";\n  }\n  return \"/svg/role/werewolf.svg\";\n});\n</script>"
    },
    "components/pages/game/GamePlaying/GameTeamSide/GameTeamSidePlayer/GameTeamSidePlayer.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "676",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Team Side Player Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "282"
          ],
          "coveredBy": [
            "282",
            "283",
            "284",
            "285",
            "286",
            "287",
            "288",
            "289",
            "290",
            "291",
            "292",
            "293",
            "294",
            "295",
            "296",
            "297",
            "298"
          ],
          "location": {
            "end": {
              "column": 127,
              "line": 87
            },
            "start": {
              "column": 39,
              "line": 87
            }
          }
        },
        {
          "id": "677",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Team Side Player Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "282"
          ],
          "coveredBy": [
            "282",
            "283",
            "284",
            "285",
            "286",
            "287",
            "288",
            "289",
            "290",
            "291",
            "292",
            "293",
            "294",
            "295",
            "296",
            "297",
            "298"
          ],
          "location": {
            "end": {
              "column": 91,
              "line": 87
            },
            "start": {
              "column": 47,
              "line": 87
            }
          }
        },
        {
          "id": "678",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Team Side Player Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "282"
          ],
          "coveredBy": [
            "282",
            "283",
            "284",
            "285",
            "286",
            "287",
            "288",
            "289",
            "290",
            "291",
            "292",
            "293",
            "294",
            "295",
            "296",
            "297",
            "298"
          ],
          "location": {
            "end": {
              "column": 126,
              "line": 87
            },
            "start": {
              "column": 93,
              "line": 87
            }
          }
        },
        {
          "id": "679",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Team Side Player Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "282"
          ],
          "coveredBy": [
            "282",
            "283",
            "284",
            "285",
            "286",
            "287",
            "288",
            "289",
            "290",
            "291",
            "292",
            "293",
            "294",
            "295",
            "296",
            "297",
            "298"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 95
            },
            "start": {
              "column": 52,
              "line": 89
            }
          }
        },
        {
          "id": "680",
          "mutatorName": "BooleanLiteral",
          "replacement": "player.isAlive",
          "statusReason": "Snapshot `Game Team Side Player Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "282"
          ],
          "coveredBy": [
            "282",
            "283",
            "284",
            "285",
            "286",
            "287",
            "288",
            "289",
            "290",
            "291",
            "292",
            "293",
            "294",
            "295",
            "296",
            "297",
            "298"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 91
            },
            "start": {
              "column": 7,
              "line": 91
            }
          }
        },
        {
          "id": "681",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Game Team Side Player Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "282"
          ],
          "coveredBy": [
            "282",
            "283",
            "284",
            "285",
            "286",
            "287",
            "288",
            "289",
            "290",
            "291",
            "292",
            "293",
            "294",
            "295",
            "296",
            "297",
            "298"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 91
            },
            "start": {
              "column": 7,
              "line": 91
            }
          }
        },
        {
          "id": "682",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected [ 'border-2', 'border-gray-700', …(4) ] to strictly equal [ 'border-2', 'border-gray-700', …(3) ]",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "285"
          ],
          "coveredBy": [
            "282",
            "283",
            "284",
            "285",
            "286",
            "287",
            "288",
            "289",
            "290",
            "291",
            "292",
            "293",
            "294",
            "295",
            "296",
            "297",
            "298"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 91
            },
            "start": {
              "column": 7,
              "line": 91
            }
          }
        },
        {
          "id": "683",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected [ 'border-2', 'border-gray-700', …(4) ] to strictly equal [ 'border-2', 'border-gray-700', …(3) ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "285"
          ],
          "coveredBy": [
            "285",
            "286",
            "288",
            "290",
            "296",
            "297"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 93
            },
            "start": {
              "column": 24,
              "line": 91
            }
          }
        },
        {
          "id": "684",
          "mutatorName": "StringLiteral",
          "replacement": "\"Stryker was here!\"",
          "statusReason": "expected [ 'border-2', 'border-gray-700', …(6) ] to strictly equal [ 'border-2', 'border-gray-700', …(3) ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "285"
          ],
          "coveredBy": [
            "285",
            "286",
            "288",
            "290",
            "296",
            "297"
          ],
          "location": {
            "end": {
              "column": 14,
              "line": 92
            },
            "start": {
              "column": 12,
              "line": 92
            }
          }
        },
        {
          "id": "685",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "283"
          ],
          "coveredBy": [
            "282",
            "283",
            "284",
            "285",
            "286",
            "287",
            "288",
            "289",
            "290",
            "291",
            "292",
            "293",
            "294",
            "295",
            "296",
            "297",
            "298"
          ],
          "location": {
            "end": {
              "column": 46,
              "line": 94
            },
            "start": {
              "column": 10,
              "line": 94
            }
          }
        },
        {
          "id": "686",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Snapshot `Game Team Side Player Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "282"
          ],
          "coveredBy": [
            "282",
            "283",
            "284",
            "285",
            "286",
            "287",
            "288",
            "289",
            "290",
            "291",
            "292",
            "293",
            "294",
            "295",
            "296",
            "297",
            "298"
          ],
          "location": {
            "end": {
              "column": 46,
              "line": 94
            },
            "start": {
              "column": 10,
              "line": 94
            }
          }
        },
        {
          "id": "687",
          "mutatorName": "EqualityOperator",
          "replacement": "player.side.current !== \"werewolves\"",
          "statusReason": "Snapshot `Game Team Side Player Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "282"
          ],
          "coveredBy": [
            "282",
            "283",
            "284",
            "285",
            "286",
            "287",
            "288",
            "289",
            "290",
            "291",
            "292",
            "293",
            "294",
            "295",
            "296",
            "297",
            "298"
          ],
          "location": {
            "end": {
              "column": 46,
              "line": 94
            },
            "start": {
              "column": 10,
              "line": 94
            }
          }
        },
        {
          "id": "688",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Team Side Player Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "282"
          ],
          "coveredBy": [
            "282",
            "283",
            "284",
            "285",
            "286",
            "287",
            "288",
            "289",
            "290",
            "291",
            "292",
            "293",
            "294",
            "295",
            "296",
            "297",
            "298"
          ],
          "location": {
            "end": {
              "column": 46,
              "line": 94
            },
            "start": {
              "column": 34,
              "line": 94
            }
          }
        },
        {
          "id": "689",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Team Side Player Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "282"
          ],
          "coveredBy": [
            "282",
            "283",
            "284",
            "285",
            "286",
            "287",
            "288",
            "289",
            "290",
            "291",
            "292",
            "293",
            "294",
            "295",
            "296",
            "297",
            "298"
          ],
          "location": {
            "end": {
              "column": 70,
              "line": 94
            },
            "start": {
              "column": 49,
              "line": 94
            }
          }
        },
        {
          "id": "690",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "283"
          ],
          "coveredBy": [
            "283",
            "292",
            "294"
          ],
          "location": {
            "end": {
              "column": 96,
              "line": 94
            },
            "start": {
              "column": 73,
              "line": 94
            }
          }
        },
        {
          "id": "691",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Team Side Player Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "282"
          ],
          "coveredBy": [
            "282",
            "283",
            "284",
            "285",
            "286",
            "287",
            "288",
            "289",
            "290",
            "291",
            "292",
            "293",
            "294",
            "295",
            "296",
            "297",
            "298"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 104
            },
            "start": {
              "column": 49,
              "line": 97
            }
          }
        },
        {
          "id": "692",
          "mutatorName": "BooleanLiteral",
          "replacement": "player.isAlive",
          "statusReason": "Snapshot `Game Team Side Player Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "282"
          ],
          "coveredBy": [
            "282",
            "283",
            "284",
            "285",
            "286",
            "287",
            "288",
            "289",
            "290",
            "291",
            "292",
            "293",
            "294",
            "295",
            "296",
            "297",
            "298"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 100
            },
            "start": {
              "column": 7,
              "line": 100
            }
          }
        },
        {
          "id": "693",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Game Team Side Player Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "282"
          ],
          "coveredBy": [
            "282",
            "283",
            "284",
            "285",
            "286",
            "287",
            "288",
            "289",
            "290",
            "291",
            "292",
            "293",
            "294",
            "295",
            "296",
            "297",
            "298"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 100
            },
            "start": {
              "column": 7,
              "line": 100
            }
          }
        },
        {
          "id": "694",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 16,
          "static": false,
          "killedBy": [
            "297"
          ],
          "coveredBy": [
            "282",
            "283",
            "284",
            "285",
            "286",
            "287",
            "288",
            "289",
            "290",
            "291",
            "292",
            "293",
            "294",
            "295",
            "296",
            "297",
            "298"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 100
            },
            "start": {
              "column": 7,
              "line": 100
            }
          }
        },
        {
          "id": "695",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "297"
          ],
          "coveredBy": [
            "285",
            "286",
            "288",
            "290",
            "296",
            "297"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 102
            },
            "start": {
              "column": 24,
              "line": 100
            }
          }
        },
        {
          "id": "696",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "297"
          ],
          "coveredBy": [
            "285",
            "286",
            "288",
            "290",
            "296",
            "297"
          ],
          "location": {
            "end": {
              "column": 28,
              "line": 101
            },
            "start": {
              "column": 16,
              "line": 101
            }
          }
        }
      ],
      "source": "<template>\n  <GlowCapture>\n    <GlowElement>\n      <div\n        id=\"game-team-side-player\"\n        class=\"border-2 border-gray-700 p-2 rounded-md w-full\"\n        :class=\"playerSideGlowClass\"\n      >\n        <div class=\"flex justify-center\">\n          <NuxtImg\n            v-if=\"!player.isAlive\"\n            v-p-tooltip=\"$t('components.GameTeamSidePlayer.thisPlayerIsDead')\"\n            :alt=\"$t('components.GameTeamSidePlayer.thisPlayerIsDead')\"\n            class=\"me-2\"\n            height=\"20\"\n            src=\"/svg/game/player/dead.svg\"\n            width=\"20\"\n          />\n\n          <div\n            id=\"player-name\"\n            class=\"text-center truncate\"\n            :class=\"{ 'line-through decoration-1': !player.isAlive }\"\n          >\n            {{ player.name }}\n          </div>\n        </div>\n\n        <VuePrimeDivider class=\"!my-1\"/>\n\n        <small\n          id=\"player-role-name\"\n          class=\"flex justify-center\"\n        >\n          {{ $t(`shared.role.name.${player.role.current}`) }}\n        </small>\n\n        <div class=\"flex items-center mt-2\">\n          <RoleImage\n            v-if=\"player.side.current === 'werewolves'\"\n            id=\"player-werewolf-role-image\"\n            :alt=\"roleImageAlt\"\n            class=\"!border-2\"\n            :class=\"roleImageClasses\"\n            definition=\"small\"\n            :role-name=\"player.role.current\"\n            sizes=\"50\"\n          />\n\n          <div\n            id=\"player-attributes\"\n            class=\"grid grid-cols-3 grow mx-2\"\n          >\n            <GameTeamSidePlayerAttribute\n              v-for=\"attribute in player.attributes\"\n              :key=\"attribute.name\"\n              :attribute=\"attribute\"\n              class=\"p-1\"\n              :player=\"player\"\n            />\n          </div>\n\n          <RoleImage\n            v-if=\"player.side.current === 'villagers'\"\n            id=\"player-villager-role-image\"\n            :alt=\"roleImageAlt\"\n            class=\"!border-2\"\n            :class=\"roleImageClasses\"\n            definition=\"small\"\n            :role-name=\"player.role.current\"\n          />\n        </div>\n      </div>\n    </GlowElement>\n  </GlowCapture>\n</template>\n\n<script lang=\"ts\" setup>\nimport type { GameTeamSidePlayerProps } from \"~/components/pages/game/GamePlaying/GameTeamSide/GameTeamSidePlayer/game-team-side-player.types\";\nimport GameTeamSidePlayerAttribute from \"~/components/pages/game/GamePlaying/GameTeamSide/GameTeamSidePlayer/GameTeamSidePlayerAttribute/GameTeamSidePlayerAttribute.vue\";\nimport RoleImage from \"~/components/shared/role/RoleImage/RoleImage.vue\";\n\nconst props = defineProps<GameTeamSidePlayerProps>();\n\nconst { t } = useI18n();\n\nconst roleImageAlt = computed<string>(() => t(\"components.GameTeamSidePlayer.roleImageAlt\", { playerName: props.player.name }));\n\nconst playerSideGlowClass = computed<string>(() => {\n  const { player } = props;\n  if (!player.isAlive) {\n    return \"\";\n  }\n  return player.side.current === \"werewolves\" ? \"glow:border-red-500\" : \"glow:border-green-500\";\n});\n\nconst roleImageClasses = computed<string>(() => {\n  const { player } = props;\n  let classes = playerSideGlowClass.value;\n  if (!player.isAlive) {\n    classes += \" grayscale\";\n  }\n  return classes;\n});\n</script>"
    },
    "components/pages/game/GamePlaying/GameTeamSide/GameTeamSidePlayer/GameTeamSidePlayerAttribute/GameTeamSidePlayerAttribute.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "697",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Team Side Player Attribute Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "133"
          ],
          "coveredBy": [
            "133",
            "134",
            "135",
            "136",
            "137",
            "138",
            "139",
            "140",
            "141",
            "142",
            "143",
            "144",
            "145",
            "146",
            "147",
            "148",
            "149",
            "150",
            "151",
            "152",
            "153",
            "154",
            "155",
            "156",
            "157",
            "158",
            "159"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 39
            },
            "start": {
              "column": 109,
              "line": 28
            }
          }
        },
        {
          "id": "698",
          "mutatorName": "BooleanLiteral",
          "replacement": "sourceSvgAndDescription",
          "statusReason": "Snapshot `Game Team Side Player Attribute Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "133"
          ],
          "coveredBy": [
            "133",
            "134",
            "135",
            "136",
            "137",
            "138",
            "139",
            "140",
            "141",
            "142",
            "143",
            "144",
            "145",
            "146",
            "147",
            "148",
            "149",
            "150",
            "151",
            "152",
            "153",
            "154",
            "155",
            "156",
            "157",
            "158",
            "159"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 32
            },
            "start": {
              "column": 7,
              "line": 32
            }
          }
        },
        {
          "id": "699",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Game Team Side Player Attribute Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "133"
          ],
          "coveredBy": [
            "133",
            "134",
            "135",
            "136",
            "137",
            "138",
            "139",
            "140",
            "141",
            "142",
            "143",
            "144",
            "145",
            "146",
            "147",
            "148",
            "149",
            "150",
            "151",
            "152",
            "153",
            "154",
            "155",
            "156",
            "157",
            "158",
            "159"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 32
            },
            "start": {
              "column": 7,
              "line": 32
            }
          }
        },
        {
          "id": "700",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".",
          "status": "Killed",
          "testsCompleted": 25,
          "static": false,
          "killedBy": [
            "157"
          ],
          "coveredBy": [
            "133",
            "134",
            "135",
            "136",
            "137",
            "138",
            "139",
            "140",
            "141",
            "142",
            "143",
            "144",
            "145",
            "146",
            "147",
            "148",
            "149",
            "150",
            "151",
            "152",
            "153",
            "154",
            "155",
            "156",
            "157",
            "158",
            "159"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 32
            },
            "start": {
              "column": 7,
              "line": 32
            }
          }
        },
        {
          "id": "701",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "157"
          ],
          "coveredBy": [
            "157"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 34
            },
            "start": {
              "column": 33,
              "line": 32
            }
          }
        },
        {
          "id": "702",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Team Side Player Attribute Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "133"
          ],
          "coveredBy": [
            "133",
            "134",
            "135",
            "136",
            "137",
            "138",
            "139",
            "140",
            "141",
            "142",
            "143",
            "144",
            "145",
            "146",
            "147",
            "148",
            "149",
            "150",
            "151",
            "152",
            "153",
            "154",
            "155",
            "156",
            "157",
            "158",
            "159"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 38
            },
            "start": {
              "column": 10,
              "line": 35
            }
          }
        },
        {
          "id": "703",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Team Side Player Attribute Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "133"
          ],
          "coveredBy": [
            "133",
            "134",
            "135",
            "136",
            "137",
            "138",
            "139",
            "140",
            "141",
            "142",
            "143",
            "144",
            "145",
            "146",
            "147",
            "148",
            "149",
            "150",
            "151",
            "152",
            "153",
            "154",
            "155",
            "156",
            "157",
            "158",
            "159"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 46
            },
            "start": {
              "column": 59,
              "line": 41
            }
          }
        },
        {
          "id": "704",
          "mutatorName": "BooleanLiteral",
          "replacement": "playerAttributeSourceSvgAndDescription.value",
          "statusReason": "Snapshot `Game Team Side Player Attribute Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "133"
          ],
          "coveredBy": [
            "133",
            "134",
            "135",
            "136",
            "137",
            "138",
            "139",
            "140",
            "141",
            "142",
            "143",
            "144",
            "145",
            "146",
            "147",
            "148",
            "149",
            "150",
            "151",
            "152",
            "153",
            "154",
            "155",
            "156",
            "157",
            "158",
            "159"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 42
            },
            "start": {
              "column": 7,
              "line": 42
            }
          }
        },
        {
          "id": "705",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Game Team Side Player Attribute Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "133"
          ],
          "coveredBy": [
            "133",
            "134",
            "135",
            "136",
            "137",
            "138",
            "139",
            "140",
            "141",
            "142",
            "143",
            "144",
            "145",
            "146",
            "147",
            "148",
            "149",
            "150",
            "151",
            "152",
            "153",
            "154",
            "155",
            "156",
            "157",
            "158",
            "159"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 42
            },
            "start": {
              "column": 7,
              "line": 42
            }
          }
        },
        {
          "id": "706",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".",
          "status": "Killed",
          "testsCompleted": 25,
          "static": false,
          "killedBy": [
            "157"
          ],
          "coveredBy": [
            "133",
            "134",
            "135",
            "136",
            "137",
            "138",
            "139",
            "140",
            "141",
            "142",
            "143",
            "144",
            "145",
            "146",
            "147",
            "148",
            "149",
            "150",
            "151",
            "152",
            "153",
            "154",
            "155",
            "156",
            "157",
            "158",
            "159"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 42
            },
            "start": {
              "column": 7,
              "line": 42
            }
          }
        },
        {
          "id": "707",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "157"
          ],
          "coveredBy": [
            "157"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 44
            },
            "start": {
              "column": 54,
              "line": 42
            }
          }
        },
        {
          "id": "708",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected '' to be 'components.GameTeamSidePlayerAttribut…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "157"
          ],
          "coveredBy": [
            "157"
          ],
          "location": {
            "end": {
              "column": 77,
              "line": 43
            },
            "start": {
              "column": 14,
              "line": 43
            }
          }
        },
        {
          "id": "709",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Team Side Player Attribute Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "133"
          ],
          "coveredBy": [
            "133",
            "134",
            "135",
            "136",
            "137",
            "138",
            "139",
            "140",
            "141",
            "142",
            "143",
            "144",
            "145",
            "146",
            "147",
            "148",
            "149",
            "150",
            "151",
            "152",
            "153",
            "154",
            "155",
            "156",
            "157",
            "158",
            "159"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 53
            },
            "start": {
              "column": 55,
              "line": 48
            }
          }
        },
        {
          "id": "710",
          "mutatorName": "BooleanLiteral",
          "replacement": "playerAttributeSourceSvgAndDescription.value",
          "statusReason": "Snapshot `Game Team Side Player Attribute Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "133"
          ],
          "coveredBy": [
            "133",
            "134",
            "135",
            "136",
            "137",
            "138",
            "139",
            "140",
            "141",
            "142",
            "143",
            "144",
            "145",
            "146",
            "147",
            "148",
            "149",
            "150",
            "151",
            "152",
            "153",
            "154",
            "155",
            "156",
            "157",
            "158",
            "159"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 49
            },
            "start": {
              "column": 7,
              "line": 49
            }
          }
        },
        {
          "id": "711",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Game Team Side Player Attribute Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "133"
          ],
          "coveredBy": [
            "133",
            "134",
            "135",
            "136",
            "137",
            "138",
            "139",
            "140",
            "141",
            "142",
            "143",
            "144",
            "145",
            "146",
            "147",
            "148",
            "149",
            "150",
            "151",
            "152",
            "153",
            "154",
            "155",
            "156",
            "157",
            "158",
            "159"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 49
            },
            "start": {
              "column": 7,
              "line": 49
            }
          }
        },
        {
          "id": "712",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".",
          "status": "Killed",
          "testsCompleted": 25,
          "static": false,
          "killedBy": [
            "157"
          ],
          "coveredBy": [
            "133",
            "134",
            "135",
            "136",
            "137",
            "138",
            "139",
            "140",
            "141",
            "142",
            "143",
            "144",
            "145",
            "146",
            "147",
            "148",
            "149",
            "150",
            "151",
            "152",
            "153",
            "154",
            "155",
            "156",
            "157",
            "158",
            "159"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 49
            },
            "start": {
              "column": 7,
              "line": 49
            }
          }
        },
        {
          "id": "713",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "157"
          ],
          "coveredBy": [
            "157"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 51
            },
            "start": {
              "column": 54,
              "line": 49
            }
          }
        },
        {
          "id": "714",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be 'svg/misc/question-mark.svg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "157"
          ],
          "coveredBy": [
            "157"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 50
            },
            "start": {
              "column": 12,
              "line": 50
            }
          }
        },
        {
          "id": "715",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected { position: undefined } to strictly equal { position: 'right' }",
          "status": "Killed",
          "testsCompleted": 26,
          "static": false,
          "killedBy": [
            "158"
          ],
          "coveredBy": [
            "133",
            "134",
            "135",
            "136",
            "137",
            "138",
            "139",
            "140",
            "141",
            "142",
            "143",
            "144",
            "145",
            "146",
            "147",
            "148",
            "149",
            "150",
            "151",
            "152",
            "153",
            "154",
            "155",
            "156",
            "157",
            "158",
            "159"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 59
            },
            "start": {
              "column": 58,
              "line": 55
            }
          }
        },
        {
          "id": "716",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected { position: 'left' } to strictly equal { position: 'right' }",
          "status": "Killed",
          "testsCompleted": 26,
          "static": false,
          "killedBy": [
            "158"
          ],
          "coveredBy": [
            "133",
            "134",
            "135",
            "136",
            "137",
            "138",
            "139",
            "140",
            "141",
            "142",
            "143",
            "144",
            "145",
            "146",
            "147",
            "148",
            "149",
            "150",
            "151",
            "152",
            "153",
            "154",
            "155",
            "156",
            "157",
            "158",
            "159"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 58
            },
            "start": {
              "column": 10,
              "line": 58
            }
          }
        },
        {
          "id": "717",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected { position: 'right' } to strictly equal { position: 'left' }",
          "status": "Killed",
          "testsCompleted": 27,
          "static": false,
          "killedBy": [
            "159"
          ],
          "coveredBy": [
            "133",
            "134",
            "135",
            "136",
            "137",
            "138",
            "139",
            "140",
            "141",
            "142",
            "143",
            "144",
            "145",
            "146",
            "147",
            "148",
            "149",
            "150",
            "151",
            "152",
            "153",
            "154",
            "155",
            "156",
            "157",
            "158",
            "159"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 58
            },
            "start": {
              "column": 10,
              "line": 58
            }
          }
        },
        {
          "id": "718",
          "mutatorName": "EqualityOperator",
          "replacement": "side.current !== \"werewolves\"",
          "statusReason": "expected { position: 'left' } to strictly equal { position: 'right' }",
          "status": "Killed",
          "testsCompleted": 26,
          "static": false,
          "killedBy": [
            "158"
          ],
          "coveredBy": [
            "133",
            "134",
            "135",
            "136",
            "137",
            "138",
            "139",
            "140",
            "141",
            "142",
            "143",
            "144",
            "145",
            "146",
            "147",
            "148",
            "149",
            "150",
            "151",
            "152",
            "153",
            "154",
            "155",
            "156",
            "157",
            "158",
            "159"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 58
            },
            "start": {
              "column": 10,
              "line": 58
            }
          }
        },
        {
          "id": "719",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { position: 'right' } to strictly equal { position: 'left' }",
          "status": "Killed",
          "testsCompleted": 27,
          "static": false,
          "killedBy": [
            "159"
          ],
          "coveredBy": [
            "133",
            "134",
            "135",
            "136",
            "137",
            "138",
            "139",
            "140",
            "141",
            "142",
            "143",
            "144",
            "145",
            "146",
            "147",
            "148",
            "149",
            "150",
            "151",
            "152",
            "153",
            "154",
            "155",
            "156",
            "157",
            "158",
            "159"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 58
            },
            "start": {
              "column": 27,
              "line": 58
            }
          }
        },
        {
          "id": "720",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { position: '' } to strictly equal { position: 'left' }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "159"
          ],
          "coveredBy": [
            "159"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 58
            },
            "start": {
              "column": 42,
              "line": 58
            }
          }
        },
        {
          "id": "721",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { position: '' } to strictly equal { position: 'right' }",
          "status": "Killed",
          "testsCompleted": 26,
          "static": false,
          "killedBy": [
            "158"
          ],
          "coveredBy": [
            "133",
            "134",
            "135",
            "136",
            "137",
            "138",
            "139",
            "140",
            "141",
            "142",
            "143",
            "144",
            "145",
            "146",
            "147",
            "148",
            "149",
            "150",
            "151",
            "152",
            "153",
            "154",
            "155",
            "156",
            "157",
            "158",
            "159"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 58
            },
            "start": {
              "column": 51,
              "line": 58
            }
          }
        },
        {
          "id": "722",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Team Side Player Attribute Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "133"
          ],
          "coveredBy": [
            "133",
            "134",
            "135",
            "136",
            "137",
            "138",
            "139",
            "140",
            "141",
            "142",
            "143",
            "144",
            "145",
            "146",
            "147",
            "148",
            "149",
            "150",
            "151",
            "152",
            "153",
            "154",
            "155",
            "156",
            "157",
            "158",
            "159"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 72
            },
            "start": {
              "column": 70,
              "line": 61
            }
          }
        },
        {
          "id": "723",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Team Side Player Attribute Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "133"
          ],
          "coveredBy": [
            "133",
            "134",
            "135",
            "136",
            "137",
            "138",
            "139",
            "140",
            "141",
            "142",
            "143",
            "144",
            "145",
            "146",
            "147",
            "148",
            "149",
            "150",
            "151",
            "152",
            "153",
            "154",
            "155",
            "156",
            "157",
            "158",
            "159"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 71
            },
            "start": {
              "column": 10,
              "line": 64
            }
          }
        },
        {
          "id": "724",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Team Side Player Attribute Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "133"
          ],
          "coveredBy": [
            "133",
            "134",
            "135",
            "136",
            "137",
            "138",
            "139",
            "140",
            "141",
            "142",
            "143",
            "144",
            "145",
            "146",
            "147",
            "148",
            "149",
            "150",
            "151",
            "152",
            "153",
            "154",
            "155",
            "156",
            "157",
            "158",
            "159"
          ],
          "location": {
            "end": {
              "column": 20,
              "line": 68
            },
            "start": {
              "column": 12,
              "line": 65
            }
          }
        },
        {
          "id": "725",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 26,
          "static": false,
          "killedBy": [
            "158"
          ],
          "coveredBy": [
            "133",
            "134",
            "135",
            "136",
            "137",
            "138",
            "139",
            "140",
            "141",
            "142",
            "143",
            "144",
            "145",
            "146",
            "147",
            "148",
            "149",
            "150",
            "151",
            "152",
            "153",
            "154",
            "155",
            "156",
            "157",
            "158",
            "159"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 69
            },
            "start": {
              "column": 17,
              "line": 69
            }
          }
        },
        {
          "id": "726",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 26,
          "static": false,
          "killedBy": [
            "158"
          ],
          "coveredBy": [
            "133",
            "134",
            "135",
            "136",
            "137",
            "138",
            "139",
            "140",
            "141",
            "142",
            "143",
            "144",
            "145",
            "146",
            "147",
            "148",
            "149",
            "150",
            "151",
            "152",
            "153",
            "154",
            "155",
            "156",
            "157",
            "158",
            "159"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 70
            },
            "start": {
              "column": 13,
              "line": 70
            }
          }
        }
      ],
      "source": "<template>\n  <div id=\"game-team-side-player-attribute\">\n    <NuxtImg\n      id=\"game-team-side-player-attribute-icon\"\n      v-p-tooltip:[{position:tooltipPosition}]=\"playerAttributeTooltipOptions\"\n      :alt=\"playerAttributeDescription\"\n      height=\"50\"\n      :src=\"playerAttributeSvgPath\"\n      width=\"50\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { TooltipOptions } from \"primevue/tooltip\";\n\nimport { PLAYER_ATTRIBUTES_SOURCES_SVG_AND_DESCRIPTION } from \"~/components/pages/game/GamePlaying/GameTeamSide/GameTeamSidePlayer/GameTeamSidePlayerAttribute/game-team-side-player-attribute.constants\";\nimport type { GameTeamSidePlayerAttributeProps } from \"~/components/pages/game/GamePlaying/GameTeamSide/GameTeamSidePlayer/GameTeamSidePlayerAttribute/game-team-side-player-attribute.types\";\n\ntype PlayerAttributeSvgAndDescription = { svgPath: string; description: string };\n\nconst props = defineProps<GameTeamSidePlayerAttributeProps>();\n\nconst { t } = useI18n();\n\nconst img = useImage();\n\nconst playerAttributeSourceSvgAndDescription = computed<PlayerAttributeSvgAndDescription | undefined>(() => {\n  const { attribute } = props;\n\n  const sourceSvgAndDescription = PLAYER_ATTRIBUTES_SOURCES_SVG_AND_DESCRIPTION[attribute.name][attribute.source];\n  if (!sourceSvgAndDescription) {\n    return undefined;\n  }\n  return {\n    svgPath: sourceSvgAndDescription.svgPath,\n    description: t(sourceSvgAndDescription.descriptionKey),\n  };\n});\n\nconst playerAttributeDescription = computed<string>(() => {\n  if (!playerAttributeSourceSvgAndDescription.value) {\n    return t(`components.GameTeamSidePlayerAttribute.unknownPlayerAttribute`);\n  }\n  return playerAttributeSourceSvgAndDescription.value.description;\n});\n\nconst playerAttributeSvgPath = computed<string>(() => {\n  if (!playerAttributeSourceSvgAndDescription.value) {\n    return \"svg/misc/question-mark.svg\";\n  }\n  return playerAttributeSourceSvgAndDescription.value.svgPath;\n});\n\nconst tooltipPosition = computed<\"left\" | \"right\">(() => {\n  const { side } = props.player;\n\n  return side.current === \"werewolves\" ? \"left\" : \"right\";\n});\n\nconst playerAttributeTooltipOptions = computed<TooltipOptions>(() => {\n  const imgUrl = img(playerAttributeSvgPath.value);\n\n  return {\n    value: `<div class=\"flex flex-col items-center\">\n                <img width=\"75\" src=\"${imgUrl}\" alt=\"${playerAttributeDescription.value}\" class=\"mb-3\"/>\n                <div class=\"text-center\">${playerAttributeDescription.value}</div>\n            </div>`,\n    fitContent: false,\n    escape: false,\n  };\n});\n</script>"
    },
    "components/pages/game/GamePlaying/GameTeamSide/GameTeamSidePlayer/GameTeamSidePlayerAttribute/game-team-side-player-attribute.constants.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "727",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 2,
              "line": 132
            },
            "start": {
              "column": 157,
              "line": 9
            }
          }
        },
        {
          "id": "728",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 15
            },
            "start": {
              "column": 13,
              "line": 10
            }
          }
        },
        {
          "id": "729",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 14
            },
            "start": {
              "column": 12,
              "line": 11
            }
          }
        },
        {
          "id": "730",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 36,
              "line": 12
            },
            "start": {
              "column": 16,
              "line": 12
            }
          }
        },
        {
          "id": "731",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 77,
              "line": 13
            },
            "start": {
              "column": 23,
              "line": 13
            }
          }
        },
        {
          "id": "732",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 25
            },
            "start": {
              "column": 16,
              "line": 16
            }
          }
        },
        {
          "id": "733",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 20
            },
            "start": {
              "column": 16,
              "line": 17
            }
          }
        },
        {
          "id": "734",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 64,
              "line": 18
            },
            "start": {
              "column": 16,
              "line": 18
            }
          }
        },
        {
          "id": "735",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 83,
              "line": 19
            },
            "start": {
              "column": 23,
              "line": 19
            }
          }
        },
        {
          "id": "736",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 24
            },
            "start": {
              "column": 16,
              "line": 21
            }
          }
        },
        {
          "id": "737",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 64,
              "line": 22
            },
            "start": {
              "column": 16,
              "line": 22
            }
          }
        },
        {
          "id": "738",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 83,
              "line": 23
            },
            "start": {
              "column": 23,
              "line": 23
            }
          }
        },
        {
          "id": "739",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 31
            },
            "start": {
              "column": 14,
              "line": 26
            }
          }
        },
        {
          "id": "740",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 30
            },
            "start": {
              "column": 19,
              "line": 27
            }
          }
        },
        {
          "id": "741",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 62,
              "line": 28
            },
            "start": {
              "column": 16,
              "line": 28
            }
          }
        },
        {
          "id": "742",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 82,
              "line": 29
            },
            "start": {
              "column": 23,
              "line": 29
            }
          }
        },
        {
          "id": "743",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 37
            },
            "start": {
              "column": 19,
              "line": 32
            }
          }
        },
        {
          "id": "744",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 36
            },
            "start": {
              "column": 27,
              "line": 33
            }
          }
        },
        {
          "id": "745",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 67,
              "line": 34
            },
            "start": {
              "column": 16,
              "line": 34
            }
          }
        },
        {
          "id": "746",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 94,
              "line": 35
            },
            "start": {
              "column": 23,
              "line": 35
            }
          }
        },
        {
          "id": "747",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 43
            },
            "start": {
              "column": 25,
              "line": 38
            }
          }
        },
        {
          "id": "748",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 42
            },
            "start": {
              "column": 12,
              "line": 39
            }
          }
        },
        {
          "id": "749",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 73,
              "line": 40
            },
            "start": {
              "column": 16,
              "line": 40
            }
          }
        },
        {
          "id": "750",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 87,
              "line": 41
            },
            "start": {
              "column": 23,
              "line": 41
            }
          }
        },
        {
          "id": "751",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 49
            },
            "start": {
              "column": 24,
              "line": 44
            }
          }
        },
        {
          "id": "752",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 48
            },
            "start": {
              "column": 12,
              "line": 45
            }
          }
        },
        {
          "id": "753",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 72,
              "line": 46
            },
            "start": {
              "column": 16,
              "line": 46
            }
          }
        },
        {
          "id": "754",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 86,
              "line": 47
            },
            "start": {
              "column": 23,
              "line": 47
            }
          }
        },
        {
          "id": "755",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 63
            },
            "start": {
              "column": 12,
              "line": 50
            }
          }
        },
        {
          "id": "756",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 54
            },
            "start": {
              "column": 19,
              "line": 51
            }
          }
        },
        {
          "id": "757",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 39,
              "line": 52
            },
            "start": {
              "column": 16,
              "line": 52
            }
          }
        },
        {
          "id": "758",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 81,
              "line": 53
            },
            "start": {
              "column": 23,
              "line": 53
            }
          }
        },
        {
          "id": "759",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 58
            },
            "start": {
              "column": 23,
              "line": 55
            }
          }
        },
        {
          "id": "760",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 45,
              "line": 56
            },
            "start": {
              "column": 16,
              "line": 56
            }
          }
        },
        {
          "id": "761",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 84,
              "line": 57
            },
            "start": {
              "column": 23,
              "line": 57
            }
          }
        },
        {
          "id": "762",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 62
            },
            "start": {
              "column": 21,
              "line": 59
            }
          }
        },
        {
          "id": "763",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 43,
              "line": 60
            },
            "start": {
              "column": 16,
              "line": 60
            }
          }
        },
        {
          "id": "764",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 81,
              "line": 61
            },
            "start": {
              "column": 23,
              "line": 61
            }
          }
        },
        {
          "id": "765",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 69
            },
            "start": {
              "column": 14,
              "line": 64
            }
          }
        },
        {
          "id": "766",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 68
            },
            "start": {
              "column": 12,
              "line": 65
            }
          }
        },
        {
          "id": "767",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 62,
              "line": 66
            },
            "start": {
              "column": 16,
              "line": 66
            }
          }
        },
        {
          "id": "768",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 77,
              "line": 67
            },
            "start": {
              "column": 23,
              "line": 67
            }
          }
        },
        {
          "id": "769",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 91
            },
            "start": {
              "column": 16,
              "line": 70
            }
          }
        },
        {
          "id": "770",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 74
            },
            "start": {
              "column": 14,
              "line": 71
            }
          }
        },
        {
          "id": "771",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 64,
              "line": 72
            },
            "start": {
              "column": 16,
              "line": 72
            }
          }
        },
        {
          "id": "772",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 80,
              "line": 73
            },
            "start": {
              "column": 23,
              "line": 73
            }
          }
        },
        {
          "id": "773",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 78
            },
            "start": {
              "column": 19,
              "line": 75
            }
          }
        },
        {
          "id": "774",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 64,
              "line": 76
            },
            "start": {
              "column": 16,
              "line": 76
            }
          }
        },
        {
          "id": "775",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 85,
              "line": 77
            },
            "start": {
              "column": 23,
              "line": 77
            }
          }
        },
        {
          "id": "776",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 82
            },
            "start": {
              "column": 29,
              "line": 79
            }
          }
        },
        {
          "id": "777",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 64,
              "line": 80
            },
            "start": {
              "column": 16,
              "line": 80
            }
          }
        },
        {
          "id": "778",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 93,
              "line": 81
            },
            "start": {
              "column": 23,
              "line": 81
            }
          }
        },
        {
          "id": "779",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 86
            },
            "start": {
              "column": 12,
              "line": 83
            }
          }
        },
        {
          "id": "780",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 64,
              "line": 84
            },
            "start": {
              "column": 16,
              "line": 84
            }
          }
        },
        {
          "id": "781",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 78,
              "line": 85
            },
            "start": {
              "column": 23,
              "line": 85
            }
          }
        },
        {
          "id": "782",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 90
            },
            "start": {
              "column": 14,
              "line": 87
            }
          }
        },
        {
          "id": "783",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 64,
              "line": 88
            },
            "start": {
              "column": 16,
              "line": 88
            }
          }
        },
        {
          "id": "784",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 80,
              "line": 89
            },
            "start": {
              "column": 23,
              "line": 89
            }
          }
        },
        {
          "id": "785",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 97
            },
            "start": {
              "column": 16,
              "line": 92
            }
          }
        },
        {
          "id": "786",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 96
            },
            "start": {
              "column": 15,
              "line": 93
            }
          }
        },
        {
          "id": "787",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 64,
              "line": 94
            },
            "start": {
              "column": 16,
              "line": 94
            }
          }
        },
        {
          "id": "788",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 83,
              "line": 95
            },
            "start": {
              "column": 23,
              "line": 95
            }
          }
        },
        {
          "id": "789",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 103
            },
            "start": {
              "column": 27,
              "line": 98
            }
          }
        },
        {
          "id": "790",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 102
            },
            "start": {
              "column": 20,
              "line": 99
            }
          }
        },
        {
          "id": "791",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 75,
              "line": 100
            },
            "start": {
              "column": 16,
              "line": 100
            }
          }
        },
        {
          "id": "792",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 98,
              "line": 101
            },
            "start": {
              "column": 23,
              "line": 101
            }
          }
        },
        {
          "id": "793",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 109
            },
            "start": {
              "column": 11,
              "line": 104
            }
          }
        },
        {
          "id": "794",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 108
            },
            "start": {
              "column": 11,
              "line": 105
            }
          }
        },
        {
          "id": "795",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 59,
              "line": 106
            },
            "start": {
              "column": 16,
              "line": 106
            }
          }
        },
        {
          "id": "796",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 74,
              "line": 107
            },
            "start": {
              "column": 23,
              "line": 107
            }
          }
        },
        {
          "id": "797",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 119
            },
            "start": {
              "column": 14,
              "line": 110
            }
          }
        },
        {
          "id": "798",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 114
            },
            "start": {
              "column": 14,
              "line": 111
            }
          }
        },
        {
          "id": "799",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 62,
              "line": 112
            },
            "start": {
              "column": 16,
              "line": 112
            }
          }
        },
        {
          "id": "800",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 80,
              "line": 113
            },
            "start": {
              "column": 23,
              "line": 113
            }
          }
        },
        {
          "id": "801",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 118
            },
            "start": {
              "column": 16,
              "line": 115
            }
          }
        },
        {
          "id": "802",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 62,
              "line": 116
            },
            "start": {
              "column": 16,
              "line": 116
            }
          }
        },
        {
          "id": "803",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 82,
              "line": 117
            },
            "start": {
              "column": 23,
              "line": 117
            }
          }
        },
        {
          "id": "804",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 125
            },
            "start": {
              "column": 18,
              "line": 120
            }
          }
        },
        {
          "id": "805",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 124
            },
            "start": {
              "column": 24,
              "line": 121
            }
          }
        },
        {
          "id": "806",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 66,
              "line": 122
            },
            "start": {
              "column": 16,
              "line": 122
            }
          }
        },
        {
          "id": "807",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 90,
              "line": 123
            },
            "start": {
              "column": 23,
              "line": 123
            }
          }
        },
        {
          "id": "808",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 131
            },
            "start": {
              "column": 16,
              "line": 126
            }
          }
        },
        {
          "id": "809",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 130
            },
            "start": {
              "column": 19,
              "line": 127
            }
          }
        },
        {
          "id": "810",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 41,
              "line": 128
            },
            "start": {
              "column": 16,
              "line": 128
            }
          }
        },
        {
          "id": "811",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 84,
              "line": 129
            },
            "start": {
              "column": 23,
              "line": 129
            }
          }
        }
      ],
      "source": "import type { GameSource } from \"~/composables/api/game/types/game.types\";\nimport type { PlayerAttributeName } from \"~/composables/api/game/types/players/player-attribute/player-attribute.types\";\n\ntype PlayerAttributesSourceSvgAndDescriptionKey = {\n  svgPath: string;\n  descriptionKey: string;\n};\n\nconst PLAYER_ATTRIBUTES_SOURCES_SVG_AND_DESCRIPTION: Record<PlayerAttributeName, Partial<Record<GameSource, PlayerAttributesSourceSvgAndDescriptionKey>>> = {\n  \"acting\": {\n    actor: {\n      svgPath: \"svg/role/actor.svg\",\n      descriptionKey: \"components.GameTeamSidePlayerAttribute.actingByActor\",\n    },\n  },\n  \"cant-vote\": {\n    survivors: {\n      svgPath: \"svg/game/player/player-attribute/cant-vote.svg\",\n      descriptionKey: \"components.GameTeamSidePlayerAttribute.cantVoteBySurvivors\",\n    },\n    scapegoat: {\n      svgPath: \"svg/game/player/player-attribute/cant-vote.svg\",\n      descriptionKey: \"components.GameTeamSidePlayerAttribute.cantVoteByScapegoat\",\n    },\n  },\n  \"charmed\": {\n    \"pied-piper\": {\n      svgPath: \"svg/game/player/player-attribute/charmed.svg\",\n      descriptionKey: \"components.GameTeamSidePlayerAttribute.charmedByPiedPiper\",\n    },\n  },\n  \"contaminated\": {\n    \"rusty-sword-knight\": {\n      svgPath: \"svg/game/player/player-attribute/contaminated.svg\",\n      descriptionKey: \"components.GameTeamSidePlayerAttribute.contaminatedByRustySwordKnight\",\n    },\n  },\n  \"drank-death-potion\": {\n    witch: {\n      svgPath: \"svg/game/player/player-attribute/drank-death-potion.svg\",\n      descriptionKey: \"components.GameTeamSidePlayerAttribute.drankDeathPotionByWitch\",\n    },\n  },\n  \"drank-life-potion\": {\n    witch: {\n      svgPath: \"svg/game/player/player-attribute/drank-life-potion.svg\",\n      descriptionKey: \"components.GameTeamSidePlayerAttribute.drankLifePotionByWitch\",\n    },\n  },\n  \"eaten\": {\n    \"werewolves\": {\n      svgPath: \"svg/role/werewolf.svg\",\n      descriptionKey: \"components.GameTeamSidePlayerAttribute.eatenByWerewolves\",\n    },\n    \"white-werewolf\": {\n      svgPath: \"svg/role/white-werewolf.svg\",\n      descriptionKey: \"components.GameTeamSidePlayerAttribute.eatenByWhiteWerewolf\",\n    },\n    \"big-bad-wolf\": {\n      svgPath: \"svg/role/big-bad-wolf.svg\",\n      descriptionKey: \"components.GameTeamSidePlayerAttribute.eatenByBigBadWolf\",\n    },\n  },\n  \"in-love\": {\n    cupid: {\n      svgPath: \"svg/game/player/player-attribute/in-love.svg\",\n      descriptionKey: \"components.GameTeamSidePlayerAttribute.inLoveByCupid\",\n    },\n  },\n  \"powerless\": {\n    \"actor\": {\n      svgPath: \"svg/game/player/player-attribute/powerless.svg\",\n      descriptionKey: \"components.GameTeamSidePlayerAttribute.powerlessByActor\",\n    },\n    \"werewolves\": {\n      svgPath: \"svg/game/player/player-attribute/powerless.svg\",\n      descriptionKey: \"components.GameTeamSidePlayerAttribute.powerlessByWerewolves\",\n    },\n    \"accursed-wolf-father\": {\n      svgPath: \"svg/game/player/player-attribute/powerless.svg\",\n      descriptionKey: \"components.GameTeamSidePlayerAttribute.powerlessByAccursedWolfFather\",\n    },\n    \"fox\": {\n      svgPath: \"svg/game/player/player-attribute/powerless.svg\",\n      descriptionKey: \"components.GameTeamSidePlayerAttribute.powerlessByFox\",\n    },\n    \"elder\": {\n      svgPath: \"svg/game/player/player-attribute/powerless.svg\",\n      descriptionKey: \"components.GameTeamSidePlayerAttribute.powerlessByElder\",\n    },\n  },\n  \"protected\": {\n    defender: {\n      svgPath: \"svg/game/player/player-attribute/protected.svg\",\n      descriptionKey: \"components.GameTeamSidePlayerAttribute.protectedByDefender\",\n    },\n  },\n  \"scandalmonger-marked\": {\n    scandalmonger: {\n      svgPath: \"svg/game/player/player-attribute/scandalmonger-marked.svg\",\n      descriptionKey: \"components.GameTeamSidePlayerAttribute.scandalmongerMarkedByScandalmonger\",\n    },\n  },\n  \"seen\": {\n    seer: {\n      svgPath: \"svg/game/player/player-attribute/seen.svg\",\n      descriptionKey: \"components.GameTeamSidePlayerAttribute.seenBySeer\",\n    },\n  },\n  \"sheriff\": {\n    sheriff: {\n      svgPath: \"svg/game/player/player-attribute/sheriff.svg\",\n      descriptionKey: \"components.GameTeamSidePlayerAttribute.sheriffBySheriff\",\n    },\n    survivors: {\n      svgPath: \"svg/game/player/player-attribute/sheriff.svg\",\n      descriptionKey: \"components.GameTeamSidePlayerAttribute.sheriffBySurvivors\",\n    },\n  },\n  \"stolen-role\": {\n    \"devoted-servant\": {\n      svgPath: \"svg/game/player/player-attribute/stolen-role.svg\",\n      descriptionKey: \"components.GameTeamSidePlayerAttribute.stolenRoleByDevotedServant\",\n    },\n  },\n  \"worshiped\": {\n    \"wild-child\": {\n      svgPath: \"svg/role/wild-child.svg\",\n      descriptionKey: \"components.GameTeamSidePlayerAttribute.worshipedByWildChild\",\n    },\n  },\n};\n\nexport { PLAYER_ATTRIBUTES_SOURCES_SVG_AND_DESCRIPTION };"
    },
    "components/pages/game-lobby/GameLobbyFooter/GameLobbyRandomCompositionButton/GameLobbyRandomCompositionButton.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "812",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "Snapshot `Game Lobby Random Composition Button Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "357"
          ],
          "coveredBy": [
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366"
          ],
          "location": {
            "end": {
              "column": 61,
              "line": 37
            },
            "start": {
              "column": 56,
              "line": 37
            }
          }
        },
        {
          "id": "813",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Random Composition Button Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "357"
          ],
          "coveredBy": [
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 44
            },
            "start": {
              "column": 61,
              "line": 39
            }
          }
        },
        {
          "id": "814",
          "mutatorName": "BooleanLiteral",
          "replacement": "isMinimumPlayersReached.value",
          "statusReason": "Snapshot `Game Lobby Random Composition Button Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "357"
          ],
          "coveredBy": [
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 40
            },
            "start": {
              "column": 7,
              "line": 40
            }
          }
        },
        {
          "id": "815",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'components.GameLobbyRandomComposition…' to be undefined",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "359"
          ],
          "coveredBy": [
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 40
            },
            "start": {
              "column": 7,
              "line": 40
            }
          }
        },
        {
          "id": "816",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Snapshot `Game Lobby Random Composition Button Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "357"
          ],
          "coveredBy": [
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 40
            },
            "start": {
              "column": 7,
              "line": 40
            }
          }
        },
        {
          "id": "817",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Random Composition Button Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "357"
          ],
          "coveredBy": [
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 42
            },
            "start": {
              "column": 39,
              "line": 40
            }
          }
        },
        {
          "id": "818",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Lobby Random Composition Button Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "357"
          ],
          "coveredBy": [
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366"
          ],
          "location": {
            "end": {
              "column": 80,
              "line": 41
            },
            "start": {
              "column": 14,
              "line": 41
            }
          }
        },
        {
          "id": "819",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "362"
          ],
          "coveredBy": [
            "362",
            "363",
            "364",
            "365",
            "366"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 60
            },
            "start": {
              "column": 68,
              "line": 46
            }
          }
        },
        {
          "id": "820",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "expect(received).toBeTrue()\n\nExpected value to be true:\n  true\nReceived:\n  false",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "365"
          ],
          "coveredBy": [
            "362",
            "363",
            "364",
            "365",
            "366"
          ],
          "location": {
            "end": {
              "column": 49,
              "line": 47
            },
            "start": {
              "column": 45,
              "line": 47
            }
          }
        },
        {
          "id": "821",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"excludedRoles\": Array [\n      \"thief\",\n      \"actor\",\n      \"prejudiced-manipulator\",\n    ],\n    \"players\": Array [\n      _CreateGamePlayerDto {\n        \"group\": undefined,\n        \"name\": \"Player 1\",\n        \"role\": _CreateGamePlayerRoleDto {\n          \"name\": undefined,\n        },\n        \"side\": _CreateGamePlayerSideDto {\n          \"current\": undefined,\n          \"original\": undefined,\n        },\n      },\n      _CreateGamePlayerDto {\n        \"group\": undefined,\n        \"name\": \"Player 2\",\n        \"role\": _CreateGamePlayerRoleDto {\n          \"name\": undefined,\n        },\n        \"side\": _CreateGamePlayerSideDto {\n          \"current\": undefined,\n          \"original\": undefined,\n        },\n      },\n      _CreateGamePlayerDto {\n        \"group\": undefined,\n        \"name\": \"Player 3\",\n        \"role\": _CreateGamePlayerRoleDto {\n          \"name\": undefined,\n        },\n        \"side\": _CreateGamePlayerSideDto {\n          \"current\": undefined,\n          \"original\": undefined,\n        },\n      },\n      _CreateGamePlayerDto {\n        \"group\": undefined,\n        \"name\": \"Player 4\",\n        \"role\": _CreateGamePlayerRoleDto {\n          \"name\": undefined,\n        },\n        \"side\": _CreateGamePlayerSideDto {\n          \"current\": undefined,\n          \"original\": undefined,\n        },\n      },\n    ],\n  },\n], but it was called with Object {}",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "362"
          ],
          "coveredBy": [
            "362",
            "363",
            "364",
            "365",
            "366"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 55
            },
            "start": {
              "column": 66,
              "line": 48
            }
          }
        },
        {
          "id": "822",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"excludedRoles\": Array [\n      \"thief\",\n      \"actor\",\n      \"prejudiced-manipulator\",\n    ],\n    \"players\": Array [\n      _CreateGamePlayerDto {\n        \"group\": undefined,\n        \"name\": \"Player 1\",\n        \"role\": _CreateGamePlayerRoleDto {\n          \"name\": undefined,\n        },\n        \"side\": _CreateGamePlayerSideDto {\n          \"current\": undefined,\n          \"original\": undefined,\n        },\n      },\n      _CreateGamePlayerDto {\n        \"group\": undefined,\n        \"name\": \"Player 2\",\n        \"role\": _CreateGamePlayerRoleDto {\n          \"name\": undefined,\n        },\n        \"side\": _CreateGamePlayerSideDto {\n          \"current\": undefined,\n          \"original\": undefined,\n        },\n      },\n      _CreateGamePlayerDto {\n        \"group\": undefined,\n        \"name\": \"Player 3\",\n        \"role\": _CreateGamePlayerRoleDto {\n          \"name\": undefined,\n        },\n        \"side\": _CreateGamePlayerSideDto {\n          \"current\": undefined,\n          \"original\": undefined,\n        },\n      },\n      _CreateGamePlayerDto {\n        \"group\": undefined,\n        \"name\": \"Player 4\",\n        \"role\": _CreateGamePlayerRoleDto {\n          \"name\": undefined,\n        },\n        \"side\": _CreateGamePlayerSideDto {\n          \"current\": undefined,\n          \"original\": undefined,\n        },\n      },\n    ],\n  },\n], but it was called with Object {\n  \"excludedRoles\": Array [],\n  \"players\": Array [\n    _CreateGamePlayerDto {\n      \"group\": undefined,\n      \"name\": \"Player 1\",\n      \"role\": _CreateGamePlayerRoleDto {\n        \"name\": undefined,\n      },\n      \"side\": _CreateGamePlayerSideDto {\n        \"current\": undefined,\n        \"original\": undefined,\n      },\n    },\n    _CreateGamePlayerDto {\n      \"group\": undefined,\n      \"name\": \"Player 2\",\n      \"role\": _CreateGamePlayerRoleDto {\n        \"name\": undefined,\n      },\n      \"side\": _CreateGamePlayerSideDto {\n        \"current\": undefined,\n        \"original\": undefined,\n      },\n    },\n    _CreateGamePlayerDto {\n      \"group\": undefined,\n      \"name\": \"Player 3\",\n      \"role\": _CreateGamePlayerRoleDto {\n        \"name\": undefined,\n      },\n      \"side\": _CreateGamePlayerSideDto {\n        \"current\": undefined,\n        \"original\": undefined,\n      },\n    },\n    _CreateGamePlayerDto {\n      \"group\": undefined,\n      \"name\": \"Player 4\",\n      \"role\": _CreateGamePlayerRoleDto {\n        \"name\": undefined,\n      },\n      \"side\": _CreateGamePlayerSideDto {\n        \"current\": undefined,\n        \"original\": undefined,\n      },\n    },\n  ],\n}",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "362"
          ],
          "coveredBy": [
            "362",
            "363",
            "364",
            "365",
            "366"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 54
            },
            "start": {
              "column": 20,
              "line": 50
            }
          }
        },
        {
          "id": "823",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"excludedRoles\": Array [\n      \"thief\",\n      \"actor\",\n      \"prejudiced-manipulator\",\n    ],\n    \"players\": Array [\n      _CreateGamePlayerDto {\n        \"group\": undefined,\n        \"name\": \"Player 1\",\n        \"role\": _CreateGamePlayerRoleDto {\n          \"name\": undefined,\n        },\n        \"side\": _CreateGamePlayerSideDto {\n          \"current\": undefined,\n          \"original\": undefined,\n        },\n      },\n      _CreateGamePlayerDto {\n        \"group\": undefined,\n        \"name\": \"Player 2\",\n        \"role\": _CreateGamePlayerRoleDto {\n          \"name\": undefined,\n        },\n        \"side\": _CreateGamePlayerSideDto {\n          \"current\": undefined,\n          \"original\": undefined,\n        },\n      },\n      _CreateGamePlayerDto {\n        \"group\": undefined,\n        \"name\": \"Player 3\",\n        \"role\": _CreateGamePlayerRoleDto {\n          \"name\": undefined,\n        },\n        \"side\": _CreateGamePlayerSideDto {\n          \"current\": undefined,\n          \"original\": undefined,\n        },\n      },\n      _CreateGamePlayerDto {\n        \"group\": undefined,\n        \"name\": \"Player 4\",\n        \"role\": _CreateGamePlayerRoleDto {\n          \"name\": undefined,\n        },\n        \"side\": _CreateGamePlayerSideDto {\n          \"current\": undefined,\n          \"original\": undefined,\n        },\n      },\n    ],\n  },\n], but it was called with Object {\n  \"excludedRoles\": Array [\n    \"\",\n    \"actor\",\n    \"prejudiced-manipulator\",\n  ],\n  \"players\": Array [\n    _CreateGamePlayerDto {\n      \"group\": undefined,\n      \"name\": \"Player 1\",\n      \"role\": _CreateGamePlayerRoleDto {\n        \"name\": undefined,\n      },\n      \"side\": _CreateGamePlayerSideDto {\n        \"current\": undefined,\n        \"original\": undefined,\n      },\n    },\n    _CreateGamePlayerDto {\n      \"group\": undefined,\n      \"name\": \"Player 2\",\n      \"role\": _CreateGamePlayerRoleDto {\n        \"name\": undefined,\n      },\n      \"side\": _CreateGamePlayerSideDto {\n        \"current\": undefined,\n        \"original\": undefined,\n      },\n    },\n    _CreateGamePlayerDto {\n      \"group\": undefined,\n      \"name\": \"Player 3\",\n      \"role\": _CreateGamePlayerRoleDto {\n        \"name\": undefined,\n      },\n      \"side\": _CreateGamePlayerSideDto {\n        \"current\": undefined,\n        \"original\": undefined,\n      },\n    },\n    _CreateGamePlayerDto {\n      \"group\": undefined,\n      \"name\": \"Player 4\",\n      \"role\": _CreateGamePlayerRoleDto {\n        \"name\": undefined,\n      },\n      \"side\": _CreateGamePlayerSideDto {\n        \"current\": undefined,\n        \"original\": undefined,\n      },\n    },\n  ],\n}",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "362"
          ],
          "coveredBy": [
            "362",
            "363",
            "364",
            "365",
            "366"
          ],
          "location": {
            "end": {
              "column": 14,
              "line": 51
            },
            "start": {
              "column": 7,
              "line": 51
            }
          }
        },
        {
          "id": "824",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"excludedRoles\": Array [\n      \"thief\",\n      \"actor\",\n      \"prejudiced-manipulator\",\n    ],\n    \"players\": Array [\n      _CreateGamePlayerDto {\n        \"group\": undefined,\n        \"name\": \"Player 1\",\n        \"role\": _CreateGamePlayerRoleDto {\n          \"name\": undefined,\n        },\n        \"side\": _CreateGamePlayerSideDto {\n          \"current\": undefined,\n          \"original\": undefined,\n        },\n      },\n      _CreateGamePlayerDto {\n        \"group\": undefined,\n        \"name\": \"Player 2\",\n        \"role\": _CreateGamePlayerRoleDto {\n          \"name\": undefined,\n        },\n        \"side\": _CreateGamePlayerSideDto {\n          \"current\": undefined,\n          \"original\": undefined,\n        },\n      },\n      _CreateGamePlayerDto {\n        \"group\": undefined,\n        \"name\": \"Player 3\",\n        \"role\": _CreateGamePlayerRoleDto {\n          \"name\": undefined,\n        },\n        \"side\": _CreateGamePlayerSideDto {\n          \"current\": undefined,\n          \"original\": undefined,\n        },\n      },\n      _CreateGamePlayerDto {\n        \"group\": undefined,\n        \"name\": \"Player 4\",\n        \"role\": _CreateGamePlayerRoleDto {\n          \"name\": undefined,\n        },\n        \"side\": _CreateGamePlayerSideDto {\n          \"current\": undefined,\n          \"original\": undefined,\n        },\n      },\n    ],\n  },\n], but it was called with Object {\n  \"excludedRoles\": Array [\n    \"thief\",\n    \"\",\n    \"prejudiced-manipulator\",\n  ],\n  \"players\": Array [\n    _CreateGamePlayerDto {\n      \"group\": undefined,\n      \"name\": \"Player 1\",\n      \"role\": _CreateGamePlayerRoleDto {\n        \"name\": undefined,\n      },\n      \"side\": _CreateGamePlayerSideDto {\n        \"current\": undefined,\n        \"original\": undefined,\n      },\n    },\n    _CreateGamePlayerDto {\n      \"group\": undefined,\n      \"name\": \"Player 2\",\n      \"role\": _CreateGamePlayerRoleDto {\n        \"name\": undefined,\n      },\n      \"side\": _CreateGamePlayerSideDto {\n        \"current\": undefined,\n        \"original\": undefined,\n      },\n    },\n    _CreateGamePlayerDto {\n      \"group\": undefined,\n      \"name\": \"Player 3\",\n      \"role\": _CreateGamePlayerRoleDto {\n        \"name\": undefined,\n      },\n      \"side\": _CreateGamePlayerSideDto {\n        \"current\": undefined,\n        \"original\": undefined,\n      },\n    },\n    _CreateGamePlayerDto {\n      \"group\": undefined,\n      \"name\": \"Player 4\",\n      \"role\": _CreateGamePlayerRoleDto {\n        \"name\": undefined,\n      },\n      \"side\": _CreateGamePlayerSideDto {\n        \"current\": undefined,\n        \"original\": undefined,\n      },\n    },\n  ],\n}",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "362"
          ],
          "coveredBy": [
            "362",
            "363",
            "364",
            "365",
            "366"
          ],
          "location": {
            "end": {
              "column": 14,
              "line": 52
            },
            "start": {
              "column": 7,
              "line": 52
            }
          }
        },
        {
          "id": "825",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"excludedRoles\": Array [\n      \"thief\",\n      \"actor\",\n      \"prejudiced-manipulator\",\n    ],\n    \"players\": Array [\n      _CreateGamePlayerDto {\n        \"group\": undefined,\n        \"name\": \"Player 1\",\n        \"role\": _CreateGamePlayerRoleDto {\n          \"name\": undefined,\n        },\n        \"side\": _CreateGamePlayerSideDto {\n          \"current\": undefined,\n          \"original\": undefined,\n        },\n      },\n      _CreateGamePlayerDto {\n        \"group\": undefined,\n        \"name\": \"Player 2\",\n        \"role\": _CreateGamePlayerRoleDto {\n          \"name\": undefined,\n        },\n        \"side\": _CreateGamePlayerSideDto {\n          \"current\": undefined,\n          \"original\": undefined,\n        },\n      },\n      _CreateGamePlayerDto {\n        \"group\": undefined,\n        \"name\": \"Player 3\",\n        \"role\": _CreateGamePlayerRoleDto {\n          \"name\": undefined,\n        },\n        \"side\": _CreateGamePlayerSideDto {\n          \"current\": undefined,\n          \"original\": undefined,\n        },\n      },\n      _CreateGamePlayerDto {\n        \"group\": undefined,\n        \"name\": \"Player 4\",\n        \"role\": _CreateGamePlayerRoleDto {\n          \"name\": undefined,\n        },\n        \"side\": _CreateGamePlayerSideDto {\n          \"current\": undefined,\n          \"original\": undefined,\n        },\n      },\n    ],\n  },\n], but it was called with Object {\n  \"excludedRoles\": Array [\n    \"thief\",\n    \"actor\",\n    \"\",\n  ],\n  \"players\": Array [\n    _CreateGamePlayerDto {\n      \"group\": undefined,\n      \"name\": \"Player 1\",\n      \"role\": _CreateGamePlayerRoleDto {\n        \"name\": undefined,\n      },\n      \"side\": _CreateGamePlayerSideDto {\n        \"current\": undefined,\n        \"original\": undefined,\n      },\n    },\n    _CreateGamePlayerDto {\n      \"group\": undefined,\n      \"name\": \"Player 2\",\n      \"role\": _CreateGamePlayerRoleDto {\n        \"name\": undefined,\n      },\n      \"side\": _CreateGamePlayerSideDto {\n        \"current\": undefined,\n        \"original\": undefined,\n      },\n    },\n    _CreateGamePlayerDto {\n      \"group\": undefined,\n      \"name\": \"Player 3\",\n      \"role\": _CreateGamePlayerRoleDto {\n        \"name\": undefined,\n      },\n      \"side\": _CreateGamePlayerSideDto {\n        \"current\": undefined,\n        \"original\": undefined,\n      },\n    },\n    _CreateGamePlayerDto {\n      \"group\": undefined,\n      \"name\": \"Player 4\",\n      \"role\": _CreateGamePlayerRoleDto {\n        \"name\": undefined,\n      },\n      \"side\": _CreateGamePlayerSideDto {\n        \"current\": undefined,\n        \"original\": undefined,\n      },\n    },\n  ],\n}",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "362"
          ],
          "coveredBy": [
            "362",
            "363",
            "364",
            "365",
            "366"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 53
            },
            "start": {
              "column": 7,
              "line": 53
            }
          }
        },
        {
          "id": "826",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      null,\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "364"
          ],
          "coveredBy": [
            "362",
            "363",
            "364",
            "365",
            "366"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 56
            },
            "start": {
              "column": 7,
              "line": 56
            }
          }
        },
        {
          "id": "827",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "363"
          ],
          "coveredBy": [
            "362",
            "363",
            "364",
            "365",
            "366"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 56
            },
            "start": {
              "column": 7,
              "line": 56
            }
          }
        },
        {
          "id": "828",
          "mutatorName": "EqualityOperator",
          "replacement": "randomGameComposition === null",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "363"
          ],
          "coveredBy": [
            "362",
            "363",
            "364",
            "365",
            "366"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 56
            },
            "start": {
              "column": 7,
              "line": 56
            }
          }
        },
        {
          "id": "829",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "363"
          ],
          "coveredBy": [
            "362",
            "363",
            "365",
            "366"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 58
            },
            "start": {
              "column": 39,
              "line": 56
            }
          }
        },
        {
          "id": "830",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "expected 'true' to be 'false' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "366"
          ],
          "coveredBy": [
            "362",
            "363",
            "364",
            "365",
            "366"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 59
            },
            "start": {
              "column": 45,
              "line": 59
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-lobby-random-composition-button-container\"\n    v-p-tooltip.top=\"containerTooltip\"\n  >\n    <VuePrimeButton\n      class=\"random-composition-button\"\n      :disabled=\"!isMinimumPlayersReached\"\n      icon=\"fa-random fa\"\n      :label=\"$t('components.GameLobbyRandomCompositionButton.randomComposition')\"\n      :loading=\"isLoadingGetRandomGameComposition\"\n      raised\n      severity=\"secondary\"\n      size=\"large\"\n      type=\"button\"\n      @click=\"handleRandomCompositionButtonClick\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\n\nimport { useCreateGameDtoValidation } from \"~/composables/api/game/useCreateGameDtoValidation\";\nimport { useFetchRandomGameComposition } from \"~/composables/api/game/useFetchRandomGameComposition\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst { fetchRandomGameComposition } = useFetchRandomGameComposition();\n\nconst { t } = useI18n();\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst { createGameDto } = storeToRefs(createGameDtoStore);\nconst { setPlayersToCreateGameDto } = createGameDtoStore;\nconst { isMinimumPlayersReached } = useCreateGameDtoValidation(createGameDto);\n\nconst isLoadingGetRandomGameComposition = ref<boolean>(false);\n\nconst containerTooltip = computed<string | undefined>(() => {\n  if (!isMinimumPlayersReached.value) {\n    return t(\"components.GameLobbyRandomCompositionButton.minPlayersNotReached\");\n  }\n  return undefined;\n});\n\nasync function handleRandomCompositionButtonClick(): Promise<void> {\n  isLoadingGetRandomGameComposition.value = true;\n  const randomGameComposition = await fetchRandomGameComposition({\n    players: createGameDto.value.players,\n    excludedRoles: [\n      \"thief\",\n      \"actor\",\n      \"prejudiced-manipulator\",\n    ],\n  });\n  if (randomGameComposition !== null) {\n    setPlayersToCreateGameDto(randomGameComposition);\n  }\n  isLoadingGetRandomGameComposition.value = false;\n}\n</script>"
    },
    "components/pages/game-lobby/GameLobbyFooter/GameLobbyStartGameButton/GameLobbyStartGameButton.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "831",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "Snapshot `Game Lobby Start Game Button Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "367"
          ],
          "coveredBy": [
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 47,
              "line": 38
            },
            "start": {
              "column": 42,
              "line": 38
            }
          }
        },
        {
          "id": "832",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Start Game Button Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "367"
          ],
          "coveredBy": [
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 98,
              "line": 40
            },
            "start": {
              "column": 55,
              "line": 40
            }
          }
        },
        {
          "id": "833",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "372"
          ],
          "coveredBy": [
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 50
            },
            "start": {
              "column": 60,
              "line": 42
            }
          }
        },
        {
          "id": "834",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "expect(received).toBeTrue()\n\nExpected value to be true:\n  true\nReceived:\n  false",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "376"
          ],
          "coveredBy": [
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 43
            },
            "start": {
              "column": 31,
              "line": 43
            }
          }
        },
        {
          "id": "835",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'true' to be 'false' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "377"
          ],
          "coveredBy": [
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 45
            },
            "start": {
              "column": 7,
              "line": 45
            }
          }
        },
        {
          "id": "836",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "373"
          ],
          "coveredBy": [
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 45
            },
            "start": {
              "column": 7,
              "line": 45
            }
          }
        },
        {
          "id": "837",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "373"
          ],
          "coveredBy": [
            "373",
            "374"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 48
            },
            "start": {
              "column": 20,
              "line": 45
            }
          }
        },
        {
          "id": "838",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/game/5ec7d3b2-520b-40ed-a22a-656e2ebde1bf\",\n], but it was called with \"\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "373"
          ],
          "coveredBy": [
            "373",
            "374"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 46
            },
            "start": {
              "column": 22,
              "line": 46
            }
          }
        },
        {
          "id": "839",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"summary\": \"components.GameLobbyStartGameButton.gameCreated\",\n  },\n], but it was called with Object {}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "374"
          ],
          "coveredBy": [
            "373",
            "374"
          ],
          "location": {
            "end": {
              "column": 86,
              "line": 47
            },
            "start": {
              "column": 21,
              "line": 47
            }
          }
        },
        {
          "id": "840",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"summary\": \"components.GameLobbyStartGameButton.gameCreated\",\n  },\n], but it was called with Object {\n  \"summary\": \"\",\n}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "374"
          ],
          "coveredBy": [
            "373",
            "374"
          ],
          "location": {
            "end": {
              "column": 83,
              "line": 47
            },
            "start": {
              "column": 34,
              "line": 47
            }
          }
        },
        {
          "id": "841",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "expected 'true' to be 'false' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "377"
          ],
          "coveredBy": [
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 49
            },
            "start": {
              "column": 31,
              "line": 49
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-lobby-start-game-button-container\"\n    v-p-tooltip.top=\"containerTooltip\"\n  >\n    <VuePrimeButton\n      class=\"start-game-button\"\n      :disabled=\"!canCreateGame\"\n      icon=\"fa-play fa\"\n      :label=\"$t('components.GameLobbyStartGameButton.startGame')\"\n      :loading=\"isLoadingCreateGame\"\n      raised\n      size=\"large\"\n      type=\"button\"\n      @click=\"handleStartGameButtonClick\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { storeToRefs } from \"pinia\";\n\nimport { useCreateGameDtoValidation } from \"~/composables/api/game/useCreateGameDtoValidation\";\nimport { useFetchGames } from \"~/composables/api/game/useFetchGames\";\nimport { useVuePrimeToasts } from \"~/composables/vue-prime/useVuePrimeToasts\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst { t } = useI18n();\n\nconst { addSuccessToast } = useVuePrimeToasts();\n\nconst { createGame } = useFetchGames();\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst { createGameDto } = storeToRefs(createGameDtoStore);\nconst { canCreateGame, gameCreationValidationErrors } = useCreateGameDtoValidation(createGameDto);\n\nconst isLoadingCreateGame = ref<boolean>(false);\n\nconst containerTooltip = computed<string | undefined>(() => gameCreationValidationErrors.value[0]);\n\nasync function handleStartGameButtonClick(): Promise<void> {\n  isLoadingCreateGame.value = true;\n  const createdGame = await createGame(createGameDto.value);\n  if (createdGame) {\n    await navigateTo(`/game/${createdGame._id}`);\n    addSuccessToast({ summary: t(\"components.GameLobbyStartGameButton.gameCreated\") });\n  }\n  isLoadingCreateGame.value = false;\n}\n</script>"
    },
    "components/pages/game-lobby/GameLobbyHeader/GameLobbyHeader.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "842",
          "mutatorName": "StringLiteral",
          "replacement": "\"Stryker was here!\"",
          "statusReason": "Snapshot `Game Lobby Header Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "506"
          ],
          "coveredBy": [
            "506",
            "507",
            "508",
            "509",
            "510",
            "511",
            "512",
            "513",
            "514",
            "515",
            "516"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 46
            },
            "start": {
              "column": 38,
              "line": 46
            }
          }
        },
        {
          "id": "843",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "510"
          ],
          "coveredBy": [
            "510",
            "511",
            "512",
            "513",
            "514",
            "515"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 68
            },
            "start": {
              "column": 43,
              "line": 50
            }
          }
        },
        {
          "id": "844",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "514"
          ],
          "coveredBy": [
            "510",
            "511",
            "512",
            "513",
            "514",
            "515"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 51
            },
            "start": {
              "column": 7,
              "line": 51
            }
          }
        },
        {
          "id": "845",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "510"
          ],
          "coveredBy": [
            "510",
            "511",
            "512",
            "513",
            "514",
            "515"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 51
            },
            "start": {
              "column": 7,
              "line": 51
            }
          }
        },
        {
          "id": "846",
          "mutatorName": "EqualityOperator",
          "replacement": "gameLobbyPlayerInput.value !== null",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "510"
          ],
          "coveredBy": [
            "510",
            "511",
            "512",
            "513",
            "514",
            "515"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 51
            },
            "start": {
              "column": 7,
              "line": 51
            }
          }
        },
        {
          "id": "847",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "510"
          ],
          "coveredBy": [
            "510"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 53
            },
            "start": {
              "column": 44,
              "line": 51
            }
          }
        },
        {
          "id": "848",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"Game Lobby Player Input is not initialized\",\n], but it was called with \"\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "510"
          ],
          "coveredBy": [
            "510"
          ],
          "location": {
            "end": {
              "column": 67,
              "line": 52
            },
            "start": {
              "column": 23,
              "line": 52
            }
          }
        },
        {
          "id": "849",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "514"
          ],
          "coveredBy": [
            "511",
            "512",
            "513",
            "514",
            "515"
          ],
          "location": {
            "end": {
              "column": 53,
              "line": 54
            },
            "start": {
              "column": 7,
              "line": 54
            }
          }
        },
        {
          "id": "850",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected '' to be 'Player 1' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "511"
          ],
          "coveredBy": [
            "511",
            "512",
            "513",
            "514",
            "515"
          ],
          "location": {
            "end": {
              "column": 53,
              "line": 54
            },
            "start": {
              "column": 7,
              "line": 54
            }
          }
        },
        {
          "id": "851",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected '' to be 'Player 1' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "511"
          ],
          "coveredBy": [
            "511",
            "512"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 56
            },
            "start": {
              "column": 55,
              "line": 54
            }
          }
        },
        {
          "id": "852",
          "mutatorName": "MethodExpression",
          "replacement": "playerInputValue.value",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      _CreateGamePlayerDto {\n        \"group\": undefined,\n        \"name\": \"   \",\n        \"role\": _CreateGamePlayerRoleDto {\n          \"name\": undefined,\n        },\n        \"side\": _CreateGamePlayerSideDto {\n          \"current\": undefined,\n          \"original\": undefined,\n        },\n      },\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "513"
          ],
          "coveredBy": [
            "513",
            "514",
            "515"
          ],
          "location": {
            "end": {
              "column": 64,
              "line": 57
            },
            "start": {
              "column": 35,
              "line": 57
            }
          }
        },
        {
          "id": "853",
          "mutatorName": "StringLiteral",
          "replacement": "\"Stryker was here!\"",
          "statusReason": "expected 'Stryker was here!' to be '' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "515"
          ],
          "coveredBy": [
            "513",
            "514",
            "515"
          ],
          "location": {
            "end": {
              "column": 30,
              "line": 58
            },
            "start": {
              "column": 28,
              "line": 58
            }
          }
        },
        {
          "id": "854",
          "mutatorName": "BooleanLiteral",
          "replacement": "trimmedPlayerInputValue",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      _CreateGamePlayerDto {\n        \"group\": undefined,\n        \"name\": \"\",\n        \"role\": _CreateGamePlayerRoleDto {\n          \"name\": undefined,\n        },\n        \"side\": _CreateGamePlayerSideDto {\n          \"current\": undefined,\n          \"original\": undefined,\n        },\n      },\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "513"
          ],
          "coveredBy": [
            "513",
            "514",
            "515"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 59
            },
            "start": {
              "column": 7,
              "line": 59
            }
          }
        },
        {
          "id": "855",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "514"
          ],
          "coveredBy": [
            "513",
            "514",
            "515"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 59
            },
            "start": {
              "column": 7,
              "line": 59
            }
          }
        },
        {
          "id": "856",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      _CreateGamePlayerDto {\n        \"group\": undefined,\n        \"name\": \"\",\n        \"role\": _CreateGamePlayerRoleDto {\n          \"name\": undefined,\n        },\n        \"side\": _CreateGamePlayerSideDto {\n          \"current\": undefined,\n          \"original\": undefined,\n        },\n      },\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "513"
          ],
          "coveredBy": [
            "513",
            "514",
            "515"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 59
            },
            "start": {
              "column": 7,
              "line": 59
            }
          }
        },
        {
          "id": "857",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      _CreateGamePlayerDto {\n        \"group\": undefined,\n        \"name\": \"\",\n        \"role\": _CreateGamePlayerRoleDto {\n          \"name\": undefined,\n        },\n        \"side\": _CreateGamePlayerSideDto {\n          \"current\": undefined,\n          \"original\": undefined,\n        },\n      },\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "513"
          ],
          "coveredBy": [
            "513"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 61
            },
            "start": {
              "column": 33,
              "line": 59
            }
          }
        },
        {
          "id": "858",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  _CreateGamePlayerDto {\n    \"group\": undefined,\n    \"name\": \"Player 1\",\n    \"role\": _CreateGamePlayerRoleDto {\n      \"name\": undefined,\n    },\n    \"side\": _CreateGamePlayerSideDto {\n      \"current\": undefined,\n      \"original\": undefined,\n    },\n  },\n], but it was called with _CreateGamePlayerDto {\n  \"group\": undefined,\n  \"name\": undefined,\n  \"role\": undefined,\n  \"side\": undefined,\n}",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "514"
          ],
          "coveredBy": [
            "514",
            "515"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 66
            },
            "start": {
              "column": 71,
              "line": 62
            }
          }
        },
        {
          "id": "859",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected undefined to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "516"
          ],
          "coveredBy": [
            "516"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 72
            },
            "start": {
              "column": 47,
              "line": 70
            }
          }
        },
        {
          "id": "860",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected undefined to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "516"
          ],
          "coveredBy": [
            "516"
          ],
          "location": {
            "end": {
              "column": 32,
              "line": 71
            },
            "start": {
              "column": 8,
              "line": 71
            }
          }
        }
      ],
      "source": "<template>\n  <div id=\"game-lobby-header\">\n    <h1\n      id=\"game-lobby-header-title\"\n      class=\"flex justify-center my-1\"\n    >\n      {{ $t(\"components.GameLobbyHeader.gameLobby\") }}\n    </h1>\n\n    <div class=\"flex justify-center row\">\n      <div class=\"w-6/12\">\n        <form\n          id=\"game-lobby-header-form\"\n          @submit.prevent=\"addPlayerToCreateGameDto\"\n        >\n          <GameLobbyPlayerInput\n            id=\"game-lobby-player-input\"\n            ref=\"gameLobbyPlayerInput\"\n            v-model=\"playerInputValue\"\n          />\n        </form>\n      </div>\n    </div>\n\n    <div class=\"flex item-center justify-center\">\n      <GameLobbyHeaderSetupButtons\n        id=\"game-lobby-header-setup-buttons\"\n        @game-options-button-click=\"handleGameOptionsButtonClick\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { GameLobbyHeaderEmits } from \"~/components/pages/game-lobby/GameLobbyHeader/game-lobby-header.types\";\nimport GameLobbyHeaderSetupButtons from \"~/components/pages/game-lobby/GameLobbyHeader/GameLobbyHeaderSetupButtons/GameLobbyHeaderSetupButtons.vue\";\nimport type { GameLobbyPlayerInputExposed } from \"~/components/pages/game-lobby/GameLobbyHeader/GameLobbyPlayerInput/game-lobby-player-input.types\";\nimport GameLobbyPlayerInput from \"~/components/pages/game-lobby/GameLobbyHeader/GameLobbyPlayerInput/GameLobbyPlayerInput.vue\";\nimport { CreateGamePlayerDto } from \"~/composables/api/game/dto/create-game/create-game-player/create-game-player.dto\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst emit = defineEmits<GameLobbyHeaderEmits>();\n\nconst createGameDtoStore = useCreateGameDtoStore();\n\nconst playerInputValue = ref<string>(\"\");\n\nconst gameLobbyPlayerInput = ref<GameLobbyPlayerInputExposed | null>(null);\n\nfunction addPlayerToCreateGameDto(): void {\n  if (gameLobbyPlayerInput.value === null) {\n    throw createError(\"Game Lobby Player Input is not initialized\");\n  }\n  if (gameLobbyPlayerInput.value.isAddButtonDisabled) {\n    return;\n  }\n  const trimmedPlayerInputValue = playerInputValue.value.trim();\n  playerInputValue.value = \"\";\n  if (!trimmedPlayerInputValue) {\n    return;\n  }\n  const playerToAdd: CreateGamePlayerDto = CreateGamePlayerDto.create({\n    name: trimmedPlayerInputValue,\n    role: {},\n    side: {},\n  });\n  createGameDtoStore.addPlayerToCreateGameDto(playerToAdd);\n}\n\nfunction handleGameOptionsButtonClick(): void {\n  emit(\"gameOptionsButtonClick\");\n}\n</script>"
    },
    "components/pages/game-lobby/GameLobbyHeader/GameLobbyHeaderSetupButtons/GameLobbyHeaderOptionsButton/GameLobbyHeaderOptionsButton.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "861",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected undefined to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "989"
          ],
          "coveredBy": [
            "989"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 19
            },
            "start": {
              "column": 31,
              "line": 17
            }
          }
        },
        {
          "id": "862",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected undefined to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "989"
          ],
          "coveredBy": [
            "989"
          ],
          "location": {
            "end": {
              "column": 32,
              "line": 18
            },
            "start": {
              "column": 8,
              "line": 18
            }
          }
        }
      ],
      "source": "<template>\n  <VuePrimeButton\n    id=\"game-lobby-header-options-button\"\n    icon=\"fa fa-sliders\"\n    :label=\"$t('components.GameLobbyHeaderOptionButton.gameOptions')\"\n    severity=\"info\"\n    size=\"small\"\n    @click.prevent=\"clickHandler\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport type { GameLobbyHeaderOptionsButtonEmits } from \"~/components/pages/game-lobby/GameLobbyHeader/GameLobbyHeaderSetupButtons/GameLobbyHeaderOptionsButton/game-lobby-header-options-button.types\";\n\nconst emit = defineEmits<GameLobbyHeaderOptionsButtonEmits>();\n\nfunction clickHandler(): void {\n  emit(\"gameOptionsButtonClick\");\n}\n</script>"
    },
    "components/pages/game-lobby/GameLobbyHeader/GameLobbyHeaderSetupButtons/GameLobbyHeaderSetupButtons.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "863",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected undefined to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "986"
          ],
          "coveredBy": [
            "986"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 18
            },
            "start": {
              "column": 47,
              "line": 16
            }
          }
        },
        {
          "id": "864",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected undefined to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "986"
          ],
          "coveredBy": [
            "986"
          ],
          "location": {
            "end": {
              "column": 32,
              "line": 17
            },
            "start": {
              "column": 8,
              "line": 17
            }
          }
        }
      ],
      "source": "<template>\n  <VuePrimeButtonGroup>\n    <GameLobbyHeaderOptionButton\n      id=\"game-lobby-header-options-button\"\n      @game-options-button-click=\"handleGameOptionsButtonClick\"\n    />\n  </VuePrimeButtonGroup>\n</template>\n\n<script setup lang=\"ts\">\nimport type { GameLobbyHeaderSetupButtonsEmits } from \"~/components/pages/game-lobby/GameLobbyHeader/GameLobbyHeaderSetupButtons/game-lobby-header-setup-buttons.types\";\nimport GameLobbyHeaderOptionButton from \"~/components/pages/game-lobby/GameLobbyHeader/GameLobbyHeaderSetupButtons/GameLobbyHeaderOptionsButton/GameLobbyHeaderOptionsButton.vue\";\n\nconst emit = defineEmits<GameLobbyHeaderSetupButtonsEmits>();\n\nfunction handleGameOptionsButtonClick(): void {\n  emit(\"gameOptionsButtonClick\");\n}\n</script>"
    },
    "components/pages/game-lobby/GameLobbyHeader/GameLobbyPlayerInput/GameLobbyPlayerInput.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "865",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "We can't mutate defineModel macro as it is stated here: https://github.com/stryker-mutator/stryker-js/issues/3305.",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 58,
              "line": 66
            },
            "start": {
              "column": 40,
              "line": 66
            }
          }
        },
        {
          "id": "866",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "We can't mutate defineModel macro as it is stated here: https://github.com/stryker-mutator/stryker-js/issues/3305.",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 56,
              "line": 66
            },
            "start": {
              "column": 52,
              "line": 66
            }
          }
        },
        {
          "id": "867",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expect(received).toBeTrue()\n\nExpected value to be true:\n  true\nReceived:\n  false",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "345"
          ],
          "coveredBy": [
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356"
          ],
          "location": {
            "end": {
              "column": 139,
              "line": 68
            },
            "start": {
              "column": 53,
              "line": 68
            }
          }
        },
        {
          "id": "868",
          "mutatorName": "MethodExpression",
          "replacement": "createGameDto.value.players.every(({\n  name\n}) => name === inputValue.value.trim())",
          "statusReason": "Snapshot `Game Lobby Player Input Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "342"
          ],
          "coveredBy": [
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356"
          ],
          "location": {
            "end": {
              "column": 139,
              "line": 68
            },
            "start": {
              "column": 59,
              "line": 68
            }
          }
        },
        {
          "id": "869",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expect(received).toBeTrue()\n\nExpected value to be true:\n  true\nReceived:\n  false",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "345"
          ],
          "coveredBy": [
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356"
          ],
          "location": {
            "end": {
              "column": 138,
              "line": 68
            },
            "start": {
              "column": 92,
              "line": 68
            }
          }
        },
        {
          "id": "870",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'true' to be 'false' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "351"
          ],
          "coveredBy": [
            "344",
            "345",
            "346",
            "348",
            "349",
            "350",
            "351",
            "353",
            "354"
          ],
          "location": {
            "end": {
              "column": 138,
              "line": 68
            },
            "start": {
              "column": 106,
              "line": 68
            }
          }
        },
        {
          "id": "871",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toBeTrue()\n\nExpected value to be true:\n  true\nReceived:\n  false",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "345"
          ],
          "coveredBy": [
            "344",
            "345",
            "346",
            "348",
            "349",
            "350",
            "351",
            "353",
            "354"
          ],
          "location": {
            "end": {
              "column": 138,
              "line": 68
            },
            "start": {
              "column": 106,
              "line": 68
            }
          }
        },
        {
          "id": "872",
          "mutatorName": "EqualityOperator",
          "replacement": "name !== inputValue.value.trim()",
          "statusReason": "expected 'true' to be 'false' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "351"
          ],
          "coveredBy": [
            "344",
            "345",
            "346",
            "348",
            "349",
            "350",
            "351",
            "353",
            "354"
          ],
          "location": {
            "end": {
              "column": 138,
              "line": 68
            },
            "start": {
              "column": 106,
              "line": 68
            }
          }
        },
        {
          "id": "873",
          "mutatorName": "MethodExpression",
          "replacement": "inputValue.value",
          "statusReason": "expect(received).toBeTrue()\n\nExpected value to be true:\n  true\nReceived:\n  false",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "345"
          ],
          "coveredBy": [
            "344",
            "345",
            "346",
            "348",
            "349",
            "350",
            "351",
            "353",
            "354"
          ],
          "location": {
            "end": {
              "column": 138,
              "line": 68
            },
            "start": {
              "column": 115,
              "line": 68
            }
          }
        },
        {
          "id": "874",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected 'components.GameLobbyPlayerInput.pleas…' to be 'components.GameLobbyPlayerInput.playe…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 14,
          "static": false,
          "killedBy": [
            "355"
          ],
          "coveredBy": [
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356"
          ],
          "location": {
            "end": {
              "column": 119,
              "line": 70
            },
            "start": {
              "column": 57,
              "line": 70
            }
          }
        },
        {
          "id": "875",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Game Lobby Player Input Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "342"
          ],
          "coveredBy": [
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356"
          ],
          "location": {
            "end": {
              "column": 119,
              "line": 70
            },
            "start": {
              "column": 63,
              "line": 70
            }
          }
        },
        {
          "id": "876",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected 'components.GameLobbyPlayerInput.pleas…' to be 'components.GameLobbyPlayerInput.playe…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 14,
          "static": false,
          "killedBy": [
            "355"
          ],
          "coveredBy": [
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356"
          ],
          "location": {
            "end": {
              "column": 119,
              "line": 70
            },
            "start": {
              "column": 63,
              "line": 70
            }
          }
        },
        {
          "id": "877",
          "mutatorName": "EqualityOperator",
          "replacement": "inputValue.value.trim().length > MAX_PLAYER_NAME_LENGTH",
          "statusReason": "expected 'components.GameLobbyPlayerInput.pleas…' to be 'components.GameLobbyPlayerInput.playe…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 14,
          "static": false,
          "killedBy": [
            "355"
          ],
          "coveredBy": [
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356"
          ],
          "location": {
            "end": {
              "column": 119,
              "line": 70
            },
            "start": {
              "column": 63,
              "line": 70
            }
          }
        },
        {
          "id": "878",
          "mutatorName": "EqualityOperator",
          "replacement": "inputValue.value.trim().length < MAX_PLAYER_NAME_LENGTH",
          "statusReason": "Snapshot `Game Lobby Player Input Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "342"
          ],
          "coveredBy": [
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356"
          ],
          "location": {
            "end": {
              "column": 119,
              "line": 70
            },
            "start": {
              "column": 63,
              "line": 70
            }
          }
        },
        {
          "id": "879",
          "mutatorName": "MethodExpression",
          "replacement": "inputValue.value",
          "statusReason": "expected 'components.GameLobbyPlayerInput.playe…' to be 'components.GameLobbyPlayerInput.pleas…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 15,
          "static": false,
          "killedBy": [
            "356"
          ],
          "coveredBy": [
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356"
          ],
          "location": {
            "end": {
              "column": 86,
              "line": 70
            },
            "start": {
              "column": 63,
              "line": 70
            }
          }
        },
        {
          "id": "880",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Player Input Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "342"
          ],
          "coveredBy": [
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356"
          ],
          "location": {
            "end": {
              "column": 113,
              "line": 72
            },
            "start": {
              "column": 50,
              "line": 72
            }
          }
        },
        {
          "id": "881",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Game Lobby Player Input Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "342"
          ],
          "coveredBy": [
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356"
          ],
          "location": {
            "end": {
              "column": 113,
              "line": 72
            },
            "start": {
              "column": 56,
              "line": 72
            }
          }
        },
        {
          "id": "882",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected 'false' to be 'true' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "344"
          ],
          "coveredBy": [
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356"
          ],
          "location": {
            "end": {
              "column": 113,
              "line": 72
            },
            "start": {
              "column": 56,
              "line": 72
            }
          }
        },
        {
          "id": "883",
          "mutatorName": "EqualityOperator",
          "replacement": "createGameDto.value.players.length > MAX_PLAYERS_IN_GAME",
          "statusReason": "expected 'false' to be 'true' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "344"
          ],
          "coveredBy": [
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356"
          ],
          "location": {
            "end": {
              "column": 113,
              "line": 72
            },
            "start": {
              "column": 56,
              "line": 72
            }
          }
        },
        {
          "id": "884",
          "mutatorName": "EqualityOperator",
          "replacement": "createGameDto.value.players.length < MAX_PLAYERS_IN_GAME",
          "statusReason": "Snapshot `Game Lobby Player Input Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "342"
          ],
          "coveredBy": [
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356"
          ],
          "location": {
            "end": {
              "column": 113,
              "line": 72
            },
            "start": {
              "column": 56,
              "line": 72
            }
          }
        },
        {
          "id": "885",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Player Input Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "342"
          ],
          "coveredBy": [
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356"
          ],
          "location": {
            "end": {
              "column": 77,
              "line": 74
            },
            "start": {
              "column": 43,
              "line": 74
            }
          }
        },
        {
          "id": "886",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Player Input Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "342"
          ],
          "coveredBy": [
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356"
          ],
          "location": {
            "end": {
              "column": 109,
              "line": 76
            },
            "start": {
              "column": 47,
              "line": 76
            }
          }
        },
        {
          "id": "887",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Game Lobby Player Input Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "342"
          ],
          "coveredBy": [
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356"
          ],
          "location": {
            "end": {
              "column": 109,
              "line": 76
            },
            "start": {
              "column": 53,
              "line": 76
            }
          }
        },
        {
          "id": "888",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected 'false' to be 'true' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "348"
          ],
          "coveredBy": [
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356"
          ],
          "location": {
            "end": {
              "column": 109,
              "line": 76
            },
            "start": {
              "column": 53,
              "line": 76
            }
          }
        },
        {
          "id": "889",
          "mutatorName": "LogicalOperator",
          "replacement": "doesPlayerNameExistInGame.value && isInputDisabled.value",
          "statusReason": "expected 'false' to be 'true' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "348"
          ],
          "coveredBy": [
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356"
          ],
          "location": {
            "end": {
              "column": 109,
              "line": 76
            },
            "start": {
              "column": 53,
              "line": 76
            }
          }
        },
        {
          "id": "890",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Player Input Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "342"
          ],
          "coveredBy": [
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 89
            },
            "start": {
              "column": 56,
              "line": 78
            }
          }
        },
        {
          "id": "891",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Game Lobby Player Input Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "342"
          ],
          "coveredBy": [
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 79
            },
            "start": {
              "column": 7,
              "line": 79
            }
          }
        },
        {
          "id": "892",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected 'components.GameLobbyPlayerInput.pleas…' to be 'components.GameLobbyPlayerInput.maxPl…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 12,
          "static": false,
          "killedBy": [
            "353"
          ],
          "coveredBy": [
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 79
            },
            "start": {
              "column": 7,
              "line": 79
            }
          }
        },
        {
          "id": "893",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected 'components.GameLobbyPlayerInput.pleas…' to be 'components.GameLobbyPlayerInput.maxPl…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "353"
          ],
          "coveredBy": [
            "344",
            "348",
            "353"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 81
            },
            "start": {
              "column": 37,
              "line": 79
            }
          }
        },
        {
          "id": "894",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be 'components.GameLobbyPlayerInput.maxPl…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "353"
          ],
          "coveredBy": [
            "344",
            "348",
            "353"
          ],
          "location": {
            "end": {
              "column": 65,
              "line": 80
            },
            "start": {
              "column": 14,
              "line": 80
            }
          }
        },
        {
          "id": "895",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Game Lobby Player Input Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "342"
          ],
          "coveredBy": [
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 82
            },
            "start": {
              "column": 7,
              "line": 82
            }
          }
        },
        {
          "id": "896",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected 'components.GameLobbyPlayerInput.pleas…' to be 'components.GameLobbyPlayerInput.playe…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 13,
          "static": false,
          "killedBy": [
            "354"
          ],
          "coveredBy": [
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 82
            },
            "start": {
              "column": 7,
              "line": 82
            }
          }
        },
        {
          "id": "897",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected 'components.GameLobbyPlayerInput.pleas…' to be 'components.GameLobbyPlayerInput.playe…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "354"
          ],
          "coveredBy": [
            "345",
            "349",
            "350",
            "354"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 84
            },
            "start": {
              "column": 40,
              "line": 82
            }
          }
        },
        {
          "id": "898",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be 'components.GameLobbyPlayerInput.playe…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "354"
          ],
          "coveredBy": [
            "345",
            "349",
            "350",
            "354"
          ],
          "location": {
            "end": {
              "column": 72,
              "line": 83
            },
            "start": {
              "column": 14,
              "line": 83
            }
          }
        },
        {
          "id": "899",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Game Lobby Player Input Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "342"
          ],
          "coveredBy": [
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 85
            },
            "start": {
              "column": 7,
              "line": 85
            }
          }
        },
        {
          "id": "900",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected 'components.GameLobbyPlayerInput.pleas…' to be 'components.GameLobbyPlayerInput.playe…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 14,
          "static": false,
          "killedBy": [
            "355"
          ],
          "coveredBy": [
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 85
            },
            "start": {
              "column": 7,
              "line": 85
            }
          }
        },
        {
          "id": "901",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected 'components.GameLobbyPlayerInput.pleas…' to be 'components.GameLobbyPlayerInput.playe…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "355"
          ],
          "coveredBy": [
            "355"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 87
            },
            "start": {
              "column": 44,
              "line": 85
            }
          }
        },
        {
          "id": "902",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be 'components.GameLobbyPlayerInput.playe…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "355"
          ],
          "coveredBy": [
            "355"
          ],
          "location": {
            "end": {
              "column": 74,
              "line": 86
            },
            "start": {
              "column": 14,
              "line": 86
            }
          }
        },
        {
          "id": "903",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Lobby Player Input Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "342"
          ],
          "coveredBy": [
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356"
          ],
          "location": {
            "end": {
              "column": 67,
              "line": 88
            },
            "start": {
              "column": 12,
              "line": 88
            }
          }
        },
        {
          "id": "904",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "The macro defineExpose from Nuxt is breaking Stryker, so we ignore it.",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 37,
              "line": 91
            },
            "start": {
              "column": 14,
              "line": 91
            }
          }
        }
      ],
      "source": "<template>\n  <div id=\"game-lobby-player-input\">\n    <VuePrimeInputGroup\n      id=\"game-lobby-player-input-group\"\n      class=\"mt-3\"\n    >\n      <span class=\"p-float-label\">\n        <VuePrimeInputText\n          id=\"player-name-input\"\n          v-model=\"inputValue\"\n          aria-labelledby=\"player-name-input-help\"\n          :class=\"{ 'p-invalid': doesPlayerNameExistInGame }\"\n          :disabled=\"isInputDisabled\"\n          :maxlength=\"MAX_PLAYER_NAME_LENGTH\"\n          size=\"large\"\n          type=\"text\"\n        />\n\n        <label for=\"player-name-input\">\n          {{ $t(\"components.GameLobbyPlayerInput.playerName\") }}\n        </label>\n      </span>\n\n      <VuePrimeButton\n        id=\"add-player-button\"\n        :disabled=\"isAddButtonDisabled\"\n        severity=\"primary\"\n        type=\"submit\"\n      >\n        <i class=\"fa fa-plus me-2\"/>\n\n        <span>\n          {{ $t(\"shared.actions.add\") }}\n        </span>\n      </VuePrimeButton>\n    </VuePrimeInputGroup>\n\n    <transition\n      mode=\"out-in\"\n      name=\"fade\"\n    >\n      <small\n        id=\"player-name-input-help\"\n        :key=\"playerNameInputHelpText\"\n      >\n        {{ playerNameInputHelpText }}\n      </small>\n    </transition>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { storeToRefs } from \"pinia\";\nimport { computed, defineModel } from \"vue\";\n\nimport { MAX_PLAYERS_IN_GAME } from \"~/composables/api/game/constants/game.constants\";\nimport { MAX_PLAYER_NAME_LENGTH } from \"~/composables/api/game/constants/player/player.constants\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst { t } = useI18n();\n\nconst createGameDtoStore = useCreateGameDtoStore();\n\nconst { createGameDto } = storeToRefs(createGameDtoStore);\n\nconst inputValue = defineModel<string>({ required: true });\n\nconst doesPlayerNameExistInGame = computed<boolean>(() => createGameDto.value.players.some(({ name }) => name === inputValue.value.trim()));\n\nconst hasPlayerNameReachedMaxLength = computed<boolean>(() => inputValue.value.trim().length >= MAX_PLAYER_NAME_LENGTH);\n\nconst doesGameHaveMaxPlayers = computed<boolean>(() => createGameDto.value.players.length >= MAX_PLAYERS_IN_GAME);\n\nconst isInputDisabled = computed<boolean>(() => doesGameHaveMaxPlayers.value);\n\nconst isAddButtonDisabled = computed<boolean>(() => doesPlayerNameExistInGame.value || isInputDisabled.value);\n\nconst playerNameInputHelpText = computed<string>(() => {\n  if (doesGameHaveMaxPlayers.value) {\n    return t(\"components.GameLobbyPlayerInput.maxPlayersReached\");\n  }\n  if (doesPlayerNameExistInGame.value) {\n    return t(\"components.GameLobbyPlayerInput.playerNameIsAlreadyTaken\");\n  }\n  if (hasPlayerNameReachedMaxLength.value) {\n    return t(\"components.GameLobbyPlayerInput.playerNameMaxLengthReached\");\n  }\n  return t(\"components.GameLobbyPlayerInput.pleaseEnterPlayerName\");\n});\n\ndefineExpose({ isAddButtonDisabled });\n</script>"
    },
    "components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHub.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "905",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "expected true to be falsy",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "618"
          ],
          "coveredBy": [
            "617",
            "618",
            "619",
            "620",
            "621",
            "622",
            "623",
            "624",
            "625",
            "626"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 40
            },
            "start": {
              "column": 32,
              "line": 40
            }
          }
        },
        {
          "id": "906",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "622"
          ],
          "coveredBy": [
            "622",
            "623",
            "624",
            "625",
            "626"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 44
            },
            "start": {
              "column": 23,
              "line": 42
            }
          }
        },
        {
          "id": "907",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "622"
          ],
          "coveredBy": [
            "622",
            "623",
            "624",
            "625",
            "626"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 43
            },
            "start": {
              "column": 21,
              "line": 43
            }
          }
        },
        {
          "id": "908",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected true to be falsy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "626"
          ],
          "coveredBy": [
            "626"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 48
            },
            "start": {
              "column": 24,
              "line": 46
            }
          }
        },
        {
          "id": "909",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "expected true to be falsy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "626"
          ],
          "coveredBy": [
            "626"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 47
            },
            "start": {
              "column": 21,
              "line": 47
            }
          }
        },
        {
          "id": "910",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "The macro defineExpose from Nuxt is breaking Stryker, so we ignore it.",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 22,
              "line": 50
            },
            "start": {
              "column": 14,
              "line": 50
            }
          }
        }
      ],
      "source": "<template>\n  <VuePrimeDialog\n    id=\"game-lobby-options-hub\"\n    block-scroll\n    dismissable-mask\n    :draggable=\"false\"\n    modal\n    :pt=\"{\n      'root': 'h-9/10',\n      'icons': 'pb-2',\n      'header': '!py-2',\n      'content': 'w-x-screen-9/10 max-w-x-screen-9/10 h-full !py-0',\n      'footer': '!py-2'\n    }\"\n    :visible=\"isVisible\"\n    @update:visible=\"close\"\n  >\n    <template #header>\n      <GameLobbyOptionsHubHeader id=\"game-lobby-options-hub-header\"/>\n    </template>\n\n    <template #default>\n      <GameLobbyOptionsHubContent id=\"game-lobby-options-hub-content\"/>\n    </template>\n\n    <template #footer>\n      <DialogFooterCloseButtonOnly\n        id=\"close-button-only-dialog-footer\"\n        @close-dialog=\"close\"\n      />\n    </template>\n  </VuePrimeDialog>\n</template>\n\n<script setup lang=\"ts\">\nimport GameLobbyOptionsHubContent from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubTabView.vue\";\nimport GameLobbyOptionsHubHeader from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubHeader/GameLobbyOptionsHubHeader.vue\";\nimport DialogFooterCloseButtonOnly from \"~/components/shared/dialogs/DialogFooterCloseButtonOnly/DialogFooterCloseButtonOnly.vue\";\n\nconst isVisible = ref<boolean>(false);\n\nfunction open(): void {\n  isVisible.value = true;\n}\n\nfunction close(): void {\n  isVisible.value = false;\n}\n\ndefineExpose({ open });\n</script>"
    },
    "components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubCompositionTab/GameLobbyOptionsHubCompositionTab.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "911",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "791"
          ],
          "coveredBy": [
            "791",
            "792",
            "793",
            "794",
            "795",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 41
            },
            "start": {
              "column": 52,
              "line": 34
            }
          }
        },
        {
          "id": "912",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "973"
          ],
          "coveredBy": [
            "791",
            "792",
            "793",
            "794",
            "795",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 35
            },
            "start": {
              "column": 8,
              "line": 35
            }
          }
        },
        {
          "id": "913",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "795"
          ],
          "coveredBy": [
            "795"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 40
            },
            "start": {
              "column": 17,
              "line": 36
            }
          }
        },
        {
          "id": "914",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Composition Tab Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "791"
          ],
          "coveredBy": [
            "791",
            "792",
            "793",
            "794",
            "795",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 47
            },
            "start": {
              "column": 63,
              "line": 43
            }
          }
        },
        {
          "id": "915",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Lobby Options Hub Composition Tab Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "791"
          ],
          "coveredBy": [
            "791",
            "792",
            "793",
            "794",
            "795",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 112,
              "line": 46
            },
            "start": {
              "column": 12,
              "line": 46
            }
          }
        }
      ],
      "source": "<template>\n  <div id=\"game-lobby-options-composition-tab\">\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-composition-tab-is-hidden-input-group\"\n      :option-description=\"isCompositionHiddenDescription\"\n      option-icon-class=\"fa fa-eye-slash text-green-400\"\n      :option-label=\"$t('components.GameLobbyOptionsHubCompositionTab.options.isHidden.label')\"\n    >\n      <AffirmativeToggleButton\n        id=\"game-lobby-options-hub-composition-tab-is-hidden-input\"\n        v-model=\"isCompositionHiddenValue\"\n        class=\"w-full\"\n      />\n    </GameOptionInputGroup>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\nimport AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport { useStrings } from \"~/composables/misc/useStrings\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst { setCreateGameDto } = createGameDtoStore;\nconst { createGameDto } = storeToRefs(createGameDtoStore);\n\nconst { t } = useI18n();\n\nconst { convertBooleanAsAffirmativeString } = useStrings();\n\nconst isCompositionHiddenValue = computed<boolean>({\n  get: () => createGameDto.value.options.composition.isHidden,\n  set: value => {\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.composition.isHidden = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst isCompositionHiddenDescription = computed<string>(() => {\n  const booleanAsAffirmative = convertBooleanAsAffirmativeString(isCompositionHiddenValue.value);\n\n  return t(`components.GameLobbyOptionsHubCompositionTab.options.isHidden.descriptions.${booleanAsAffirmative}`);\n});\n</script>"
    },
    "components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabActor/GameLobbyOptionsHubRolesTabActor.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "916",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "781"
          ],
          "coveredBy": [
            "781",
            "782",
            "783",
            "784",
            "785",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 49
            },
            "start": {
              "column": 65,
              "line": 42
            }
          }
        },
        {
          "id": "917",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Actor Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "781"
          ],
          "coveredBy": [
            "781",
            "782",
            "783",
            "784",
            "785",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 81,
              "line": 43
            },
            "start": {
              "column": 8,
              "line": 43
            }
          }
        },
        {
          "id": "918",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "785"
          ],
          "coveredBy": [
            "785"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 48
            },
            "start": {
              "column": 28,
              "line": 44
            }
          }
        },
        {
          "id": "919",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Actor Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "781"
          ],
          "coveredBy": [
            "781",
            "782",
            "783",
            "784",
            "785",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 55
            },
            "start": {
              "column": 76,
              "line": 51
            }
          }
        },
        {
          "id": "920",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Actor Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "781"
          ],
          "coveredBy": [
            "781",
            "782",
            "783",
            "784",
            "785",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 130,
              "line": 54
            },
            "start": {
              "column": 12,
              "line": 54
            }
          }
        }
      ],
      "source": "<template>\n  <VuePrimeFieldset\n    id=\"game-lobby-options-hub-roles-tab-actor\"\n    :pt=\"{ 'legend': 'ml-4 !p-3 !px-6' }\"\n  >\n    <template #legend>\n      <GameOptionRoleLegend role-name=\"actor\"/>\n    </template>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-actor-is-powerless-on-werewolves-side-input-group\"\n      :option-description=\"isActorPowerlessOnWerewolvesSideDescription\"\n      option-icon-class=\"fa fa-ban text-red-500\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabActor.options.isPowerlessOnWerewolvesSide.label')\"\n    >\n      <AffirmativeToggleButton\n        id=\"game-lobby-options-hub-roles-tab-actor-is-powerless-on-werewolves-side-input\"\n        v-model=\"isActorPowerlessOnWerewolvesSideValue\"\n        class=\"w-full\"\n      />\n    </GameOptionInputGroup>\n  </VuePrimeFieldset>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\nimport AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport GameOptionRoleLegend from \"~/components/shared/game/game-options/GameOptionRoleLegend/GameOptionRoleLegend.vue\";\nimport { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport { useStrings } from \"~/composables/misc/useStrings\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst { setCreateGameDto } = createGameDtoStore;\nconst { createGameDto } = storeToRefs(createGameDtoStore);\n\nconst { t } = useI18n();\n\nconst { convertBooleanAsAffirmativeString } = useStrings();\n\nconst isActorPowerlessOnWerewolvesSideValue = computed<boolean>({\n  get: () => createGameDto.value.options.roles.actor.isPowerlessOnWerewolvesSide,\n  set: (value: boolean) => {\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.actor.isPowerlessOnWerewolvesSide = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst isActorPowerlessOnWerewolvesSideDescription = computed<string>(() => {\n  const booleanAsAffirmative = convertBooleanAsAffirmativeString(isActorPowerlessOnWerewolvesSideValue.value);\n\n  return t(`components.GameLobbyOptionsHubRolesTabActor.options.isPowerlessOnWerewolvesSide.descriptions.${booleanAsAffirmative}`);\n});\n</script>"
    },
    "components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabBearTamer/GameLobbyOptionsHubRolesTabBearTamer.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "921",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "766"
          ],
          "coveredBy": [
            "766",
            "767",
            "768",
            "769",
            "770",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 49
            },
            "start": {
              "column": 67,
              "line": 42
            }
          }
        },
        {
          "id": "922",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Tab Bear Tamer Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "766"
          ],
          "coveredBy": [
            "766",
            "767",
            "768",
            "769",
            "770",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 83,
              "line": 43
            },
            "start": {
              "column": 8,
              "line": 43
            }
          }
        },
        {
          "id": "923",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "770"
          ],
          "coveredBy": [
            "770"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 48
            },
            "start": {
              "column": 28,
              "line": 44
            }
          }
        },
        {
          "id": "924",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Tab Bear Tamer Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "766"
          ],
          "coveredBy": [
            "766",
            "767",
            "768",
            "769",
            "770",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 55
            },
            "start": {
              "column": 78,
              "line": 51
            }
          }
        },
        {
          "id": "925",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Lobby Options Hub Tab Bear Tamer Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "766"
          ],
          "coveredBy": [
            "766",
            "767",
            "768",
            "769",
            "770",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 132,
              "line": 54
            },
            "start": {
              "column": 12,
              "line": 54
            }
          }
        }
      ],
      "source": "<template>\n  <VuePrimeFieldset\n    id=\"game-lobby-options-hub-roles-tab-bear-tamer\"\n    :pt=\"{ 'legend': 'ml-4 !p-3 !px-6' }\"\n  >\n    <template #legend>\n      <GameOptionRoleLegend role-name=\"bear-tamer\"/>\n    </template>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-bear-tamer-does-growl-on-werewolves-side-input-group\"\n      :option-description=\"doesBearTamerGrowlOnWerewolvesSideDescription\"\n      option-icon-class=\"fa fa-paw text-amber-700\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabBearTamer.options.doesGrowlOnWerewolvesSide.label')\"\n    >\n      <AffirmativeToggleButton\n        id=\"game-lobby-options-hub-roles-tab-bear-tamer-does-growl-on-werewolves-side-input\"\n        v-model=\"doesBearTamerGrowlOnWerewolvesSideValue\"\n        class=\"w-full\"\n      />\n    </GameOptionInputGroup>\n  </VuePrimeFieldset>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\nimport AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport GameOptionRoleLegend from \"~/components/shared/game/game-options/GameOptionRoleLegend/GameOptionRoleLegend.vue\";\nimport { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport { useStrings } from \"~/composables/misc/useStrings\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst { setCreateGameDto } = createGameDtoStore;\nconst { createGameDto } = storeToRefs(createGameDtoStore);\n\nconst { t } = useI18n();\n\nconst { convertBooleanAsAffirmativeString } = useStrings();\n\nconst doesBearTamerGrowlOnWerewolvesSideValue = computed<boolean>({\n  get: () => createGameDto.value.options.roles.bearTamer.doesGrowlOnWerewolvesSide,\n  set: (value: boolean) => {\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.bearTamer.doesGrowlOnWerewolvesSide = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst doesBearTamerGrowlOnWerewolvesSideDescription = computed<string>(() => {\n  const booleanAsAffirmative = convertBooleanAsAffirmativeString(doesBearTamerGrowlOnWerewolvesSideValue.value);\n\n  return t(`components.GameLobbyOptionsHubRolesTabBearTamer.options.doesGrowlOnWerewolvesSide.descriptions.${booleanAsAffirmative}`);\n});\n</script>"
    },
    "components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabBigBadWolf/GameLobbyOptionsHubRolesTabBigBadWolf.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "926",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "771"
          ],
          "coveredBy": [
            "771",
            "772",
            "773",
            "774",
            "775",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 49
            },
            "start": {
              "column": 68,
              "line": 42
            }
          }
        },
        {
          "id": "927",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "973"
          ],
          "coveredBy": [
            "771",
            "772",
            "773",
            "774",
            "775",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 84,
              "line": 43
            },
            "start": {
              "column": 8,
              "line": 43
            }
          }
        },
        {
          "id": "928",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "775"
          ],
          "coveredBy": [
            "775"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 48
            },
            "start": {
              "column": 28,
              "line": 44
            }
          }
        },
        {
          "id": "929",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Big Bad Wolf Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "771"
          ],
          "coveredBy": [
            "771",
            "772",
            "773",
            "774",
            "775",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 55
            },
            "start": {
              "column": 79,
              "line": 51
            }
          }
        },
        {
          "id": "930",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Lobby Options Hub Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "973"
          ],
          "coveredBy": [
            "771",
            "772",
            "773",
            "774",
            "775",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 133,
              "line": 54
            },
            "start": {
              "column": 12,
              "line": 54
            }
          }
        }
      ],
      "source": "<template>\n  <VuePrimeFieldset\n    id=\"game-lobby-options-hub-roles-tab-big-bad-wolf\"\n    :pt=\"{ 'legend': 'ml-4 !p-3 !px-6' }\"\n  >\n    <template #legend>\n      <GameOptionRoleLegend role-name=\"big-bad-wolf\"/>\n    </template>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-big-bad-wolf-is-powerless-if-werewolf-dies-input-group\"\n      :option-description=\"isBigBadWolfPowerlessIfWerewolfDiesDescription\"\n      option-icon-class=\"fa fa-ban text-red-700\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabBigBadWolf.options.isPowerlessIfWerewolfDies.label')\"\n    >\n      <AffirmativeToggleButton\n        id=\"game-lobby-options-hub-roles-tab-big-bad-wolf-is-powerless-if-werewolf-dies-input\"\n        v-model=\"isBigBadWolfPowerlessIfWerewolfDiesValue\"\n        class=\"w-full\"\n      />\n    </GameOptionInputGroup>\n  </VuePrimeFieldset>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\nimport AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport GameOptionRoleLegend from \"~/components/shared/game/game-options/GameOptionRoleLegend/GameOptionRoleLegend.vue\";\nimport { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport { useStrings } from \"~/composables/misc/useStrings\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst { setCreateGameDto } = createGameDtoStore;\nconst { createGameDto } = storeToRefs(createGameDtoStore);\n\nconst { t } = useI18n();\n\nconst { convertBooleanAsAffirmativeString } = useStrings();\n\nconst isBigBadWolfPowerlessIfWerewolfDiesValue = computed<boolean>({\n  get: () => createGameDto.value.options.roles.bigBadWolf.isPowerlessIfWerewolfDies,\n  set: (value: boolean) => {\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.bigBadWolf.isPowerlessIfWerewolfDies = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst isBigBadWolfPowerlessIfWerewolfDiesDescription = computed<string>(() => {\n  const booleanAsAffirmative = convertBooleanAsAffirmativeString(isBigBadWolfPowerlessIfWerewolfDiesValue.value);\n\n  return t(`components.GameLobbyOptionsHubRolesTabBigBadWolf.options.isPowerlessIfWerewolfDies.descriptions.${booleanAsAffirmative}`);\n});\n</script>"
    },
    "components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabCupid/GameLobbyOptionsHubRolesTabCupid.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "931",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "555"
          ],
          "coveredBy": [
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 62
            },
            "start": {
              "column": 55,
              "line": 55
            }
          }
        },
        {
          "id": "932",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Cupid Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "555"
          ],
          "coveredBy": [
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 71,
              "line": 56
            },
            "start": {
              "column": 8,
              "line": 56
            }
          }
        },
        {
          "id": "933",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "559"
          ],
          "coveredBy": [
            "559"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 61
            },
            "start": {
              "column": 28,
              "line": 57
            }
          }
        },
        {
          "id": "934",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "555"
          ],
          "coveredBy": [
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 71
            },
            "start": {
              "column": 62,
              "line": 64
            }
          }
        },
        {
          "id": "935",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "973"
          ],
          "coveredBy": [
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 84,
              "line": 65
            },
            "start": {
              "column": 8,
              "line": 65
            }
          }
        },
        {
          "id": "936",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "563"
          ],
          "coveredBy": [
            "563"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 70
            },
            "start": {
              "column": 28,
              "line": 66
            }
          }
        },
        {
          "id": "937",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "973"
          ],
          "coveredBy": [
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 77
            },
            "start": {
              "column": 66,
              "line": 73
            }
          }
        },
        {
          "id": "938",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Lobby Options Hub Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "973"
          ],
          "coveredBy": [
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 120,
              "line": 76
            },
            "start": {
              "column": 12,
              "line": 76
            }
          }
        },
        {
          "id": "939",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "973"
          ],
          "coveredBy": [
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 83
            },
            "start": {
              "column": 73,
              "line": 79
            }
          }
        },
        {
          "id": "940",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Lobby Options Hub Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "973"
          ],
          "coveredBy": [
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 133,
              "line": 82
            },
            "start": {
              "column": 12,
              "line": 82
            }
          }
        }
      ],
      "source": "<template>\n  <VuePrimeFieldset\n    id=\"game-lobby-options-hub-roles-tab-cupid\"\n    :pt=\"{ 'legend': 'ml-4 !p-3 !px-6' }\"\n  >\n    <template #legend>\n      <GameOptionRoleLegend role-name=\"cupid\"/>\n    </template>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-cupid-must-win-with-lovers-input-group\"\n      does-have-bottom-divider\n      :option-description=\"mustCupidWinWithLoversDescription\"\n      option-icon-class=\"fa fa-heart text-red-500\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabCupid.options.mustWinWithLovers.label')\"\n    >\n      <AffirmativeToggleButton\n        id=\"game-lobby-options-hub-roles-tab-cupid-must-win-with-lovers-input\"\n        v-model=\"mustCupidWinWithLoversValue\"\n        class=\"w-full\"\n      />\n    </GameOptionInputGroup>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-cupid-do-lovers-reveal-role-to-each-other-input-group\"\n      :option-description=\"doLoversRevealRoleToEachOtherDescription\"\n      option-icon-class=\"fa fa-hand-holding-heart text-red-500\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabCupid.options.lovers.doRevealRoleToEachOther.label')\"\n    >\n      <AffirmativeToggleButton\n        id=\"game-lobby-options-hub-roles-tab-cupid-do-lovers-reveal-role-to-each-other-input\"\n        v-model=\"doLoversRevealRoleToEachOtherValue\"\n        class=\"w-full\"\n      />\n    </GameOptionInputGroup>\n  </VuePrimeFieldset>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\nimport AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport GameOptionRoleLegend from \"~/components/shared/game/game-options/GameOptionRoleLegend/GameOptionRoleLegend.vue\";\nimport { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport { useStrings } from \"~/composables/misc/useStrings\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst { setCreateGameDto } = createGameDtoStore;\nconst { createGameDto } = storeToRefs(createGameDtoStore);\n\nconst { t } = useI18n();\nconst { convertBooleanAsAffirmativeString } = useStrings();\n\nconst mustCupidWinWithLoversValue = computed<boolean>({\n  get: () => createGameDto.value.options.roles.cupid.mustWinWithLovers,\n  set: (value: boolean) => {\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.cupid.mustWinWithLovers = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst doLoversRevealRoleToEachOtherValue = computed<boolean>({\n  get: () => createGameDto.value.options.roles.cupid.lovers.doRevealRoleToEachOther,\n  set: (value: boolean) => {\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.cupid.lovers.doRevealRoleToEachOther = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst mustCupidWinWithLoversDescription = computed<string>(() => {\n  const booleanAsAffirmative = convertBooleanAsAffirmativeString(mustCupidWinWithLoversValue.value);\n\n  return t(`components.GameLobbyOptionsHubRolesTabCupid.options.mustWinWithLovers.descriptions.${booleanAsAffirmative}`);\n});\n\nconst doLoversRevealRoleToEachOtherDescription = computed<string>(() => {\n  const booleanAsAffirmative = convertBooleanAsAffirmativeString(doLoversRevealRoleToEachOtherValue.value);\n\n  return t(`components.GameLobbyOptionsHubRolesTabCupid.options.lovers.doRevealRoleToEachOther.descriptions.${booleanAsAffirmative}`);\n});\n</script>"
    },
    "components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabDefender/GameLobbyOptionsHubRolesTabDefender.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "941",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "973"
          ],
          "coveredBy": [
            "811",
            "812",
            "813",
            "814",
            "815",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 48
            },
            "start": {
              "column": 56,
              "line": 41
            }
          }
        },
        {
          "id": "942",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Defender Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "811"
          ],
          "coveredBy": [
            "811",
            "812",
            "813",
            "814",
            "815",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 72,
              "line": 42
            },
            "start": {
              "column": 8,
              "line": 42
            }
          }
        },
        {
          "id": "943",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "815"
          ],
          "coveredBy": [
            "815"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 47
            },
            "start": {
              "column": 28,
              "line": 43
            }
          }
        },
        {
          "id": "944",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Defender Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "811"
          ],
          "coveredBy": [
            "811",
            "812",
            "813",
            "814",
            "815",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 54
            },
            "start": {
              "column": 67,
              "line": 50
            }
          }
        },
        {
          "id": "945",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Defender Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "811"
          ],
          "coveredBy": [
            "811",
            "812",
            "813",
            "814",
            "815",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 121,
              "line": 53
            },
            "start": {
              "column": 12,
              "line": 53
            }
          }
        }
      ],
      "source": "<template>\n  <VuePrimeFieldset\n    id=\"game-lobby-options-hub-roles-tab-defender\"\n    :pt=\"{ 'legend': 'ml-4 !p-3 !px-6' }\"\n  >\n    <template #legend>\n      <GameOptionRoleLegend role-name=\"defender\"/>\n    </template>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-defender-can-protect-twice-input-group\"\n      :option-description=\"canDefenderProtectTwiceDescription\"\n      option-icon-class=\"fa fa-shield-heart text-amber-400\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabDefender.options.canProtectTwice.label')\"\n    >\n      <AffirmativeToggleButton\n        id=\"game-lobby-options-hub-roles-tab-defender-can-protect-twice-input\"\n        v-model=\"canDefenderProtectTwiceValue\"\n        class=\"w-full\"\n      />\n    </GameOptionInputGroup>\n  </VuePrimeFieldset>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\nimport AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport GameOptionRoleLegend from \"~/components/shared/game/game-options/GameOptionRoleLegend/GameOptionRoleLegend.vue\";\nimport { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport { useStrings } from \"~/composables/misc/useStrings\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst { setCreateGameDto } = createGameDtoStore;\nconst { createGameDto } = storeToRefs(createGameDtoStore);\n\nconst { t } = useI18n();\nconst { convertBooleanAsAffirmativeString } = useStrings();\n\nconst canDefenderProtectTwiceValue = computed<boolean>({\n  get: () => createGameDto.value.options.roles.defender.canProtectTwice,\n  set: (value: boolean) => {\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.defender.canProtectTwice = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst canDefenderProtectTwiceDescription = computed<string>(() => {\n  const booleanAsAffirmative = convertBooleanAsAffirmativeString(canDefenderProtectTwiceValue.value);\n\n  return t(`components.GameLobbyOptionsHubRolesTabDefender.options.canProtectTwice.descriptions.${booleanAsAffirmative}`);\n});\n</script>"
    },
    "components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabElder/GameLobbyOptionsHubRolesTabElder.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "946",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "449"
          ],
          "coveredBy": [
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 85
            },
            "start": {
              "column": 64,
              "line": 75
            }
          }
        },
        {
          "id": "947",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Elder Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "449"
          ],
          "coveredBy": [
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 81,
              "line": 76
            },
            "start": {
              "column": 8,
              "line": 76
            }
          }
        },
        {
          "id": "948",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "453"
          ],
          "coveredBy": [
            "453",
            "454",
            "455"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 84
            },
            "start": {
              "column": 34,
              "line": 77
            }
          }
        },
        {
          "id": "949",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "453"
          ],
          "coveredBy": [
            "453",
            "454",
            "455"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 78
            },
            "start": {
              "column": 9,
              "line": 78
            }
          }
        },
        {
          "id": "950",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      _CreateGameDto {\n        \"additionalCards\": undefined,\n        \"options\": _GameOptions {\n          \"composition\": _CompositionGameOptions {\n            \"isHidden\": false,\n          },\n          \"roles\": _RolesGameOptions {\n            \"actor\": _ActorGameOptions {\n              \"additionalCardsCount\": 3,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"areRevealedOnDeath\": true,\n            \"bearTamer\": _BearTamerGameOptions {\n              \"doesGrowlOnWerewolvesSide\": true,\n            },\n            \"bigBadWolf\": _BigBadWolfGameOptions {\n              \"isPowerlessIfWerewolfDies\": true,\n            },\n            \"cupid\": _CupidGameOptions {\n              \"lovers\": _CupidLoversGameOptions {\n                \"doRevealRoleToEachOther\": false,\n              },\n              \"mustWinWithLovers\": false,\n            },\n            \"defender\": _DefenderGameOptions {\n              \"canProtectTwice\": false,\n            },\n            \"doSkipCallIfNoTarget\": false,\n            \"elder\": _ElderGameOptions {\n              \"doesTakeHisRevenge\": true,\n              \"livesCountAgainstWerewolves\": null,\n            },\n            \"fox\": _FoxGameOptions {\n              \"isPowerlessIfMissesWerewolf\": true,\n            },\n            \"idiot\": _IdiotGameOptions {\n              \"doesDieOnElderDeath\": true,\n            },\n            \"littleGirl\": _LittleGirlGameOptions {\n              \"isProtectedByDefender\": false,\n            },\n            \"piedPiper\": _PiedPiperGameOptions {\n              \"charmedPeopleCountPerNight\": 2,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"prejudicedManipulator\": _PrejudicedManipulatorGameOptions {\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"scandalmonger\": _ScandalmongerGameOptions {\n              \"markPenalty\": 2,\n            },\n            \"seer\": _SeerGameOptions {\n              \"canSeeRoles\": true,\n              \"isTalkative\": true,\n            },\n            \"sheriff\": _SheriffGameOptions {\n              \"electedAt\": _SheriffElectionGameOptions {\n                \"phaseName\": \"night\",\n                \"turn\": 1,\n              },\n              \"hasDoubledVote\": true,\n              \"isEnabled\": true,\n              \"mustSettleTieInVotes\": true,\n            },\n            \"stutteringJudge\": _StutteringJudgeGameOptions {\n              \"voteRequestsCount\": 1,\n            },\n            \"thief\": _ThiefGameOptions {\n              \"additionalCardsCount\": 2,\n              \"isChosenCardRevealed\": false,\n              \"mustChooseBetweenWerewolves\": true,\n            },\n            \"threeBrothers\": _ThreeBrothersGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"twoSisters\": _TwoSistersGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"whiteWerewolf\": _WhiteWerewolfGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"wildChild\": _WildChildGameOptions {\n              \"isTransformationRevealed\": false,\n            },\n            \"witch\": _WitchGameOptions {\n              \"doesKnowWerewolvesTargets\": true,\n            },\n            \"wolfHound\": _WolfHoundGameOptions {\n              \"isChosenSideRevealed\": false,\n              \"isSideRandomlyChosen\": false,\n            },\n          },\n          \"votes\": _VotesGameOptions {\n            \"canBeSkipped\": true,\n          },\n        },\n        \"players\": Array [],\n      },\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "455"
          ],
          "coveredBy": [
            "453",
            "454",
            "455"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 78
            },
            "start": {
              "column": 9,
              "line": 78
            }
          }
        },
        {
          "id": "951",
          "mutatorName": "EqualityOperator",
          "replacement": "value !== null",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "453"
          ],
          "coveredBy": [
            "453",
            "454",
            "455"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 78
            },
            "start": {
              "column": 9,
              "line": 78
            }
          }
        },
        {
          "id": "952",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      _CreateGameDto {\n        \"additionalCards\": undefined,\n        \"options\": _GameOptions {\n          \"composition\": _CompositionGameOptions {\n            \"isHidden\": false,\n          },\n          \"roles\": _RolesGameOptions {\n            \"actor\": _ActorGameOptions {\n              \"additionalCardsCount\": 3,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"areRevealedOnDeath\": true,\n            \"bearTamer\": _BearTamerGameOptions {\n              \"doesGrowlOnWerewolvesSide\": true,\n            },\n            \"bigBadWolf\": _BigBadWolfGameOptions {\n              \"isPowerlessIfWerewolfDies\": true,\n            },\n            \"cupid\": _CupidGameOptions {\n              \"lovers\": _CupidLoversGameOptions {\n                \"doRevealRoleToEachOther\": false,\n              },\n              \"mustWinWithLovers\": false,\n            },\n            \"defender\": _DefenderGameOptions {\n              \"canProtectTwice\": false,\n            },\n            \"doSkipCallIfNoTarget\": false,\n            \"elder\": _ElderGameOptions {\n              \"doesTakeHisRevenge\": true,\n              \"livesCountAgainstWerewolves\": null,\n            },\n            \"fox\": _FoxGameOptions {\n              \"isPowerlessIfMissesWerewolf\": true,\n            },\n            \"idiot\": _IdiotGameOptions {\n              \"doesDieOnElderDeath\": true,\n            },\n            \"littleGirl\": _LittleGirlGameOptions {\n              \"isProtectedByDefender\": false,\n            },\n            \"piedPiper\": _PiedPiperGameOptions {\n              \"charmedPeopleCountPerNight\": 2,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"prejudicedManipulator\": _PrejudicedManipulatorGameOptions {\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"scandalmonger\": _ScandalmongerGameOptions {\n              \"markPenalty\": 2,\n            },\n            \"seer\": _SeerGameOptions {\n              \"canSeeRoles\": true,\n              \"isTalkative\": true,\n            },\n            \"sheriff\": _SheriffGameOptions {\n              \"electedAt\": _SheriffElectionGameOptions {\n                \"phaseName\": \"night\",\n                \"turn\": 1,\n              },\n              \"hasDoubledVote\": true,\n              \"isEnabled\": true,\n              \"mustSettleTieInVotes\": true,\n            },\n            \"stutteringJudge\": _StutteringJudgeGameOptions {\n              \"voteRequestsCount\": 1,\n            },\n            \"thief\": _ThiefGameOptions {\n              \"additionalCardsCount\": 2,\n              \"isChosenCardRevealed\": false,\n              \"mustChooseBetweenWerewolves\": true,\n            },\n            \"threeBrothers\": _ThreeBrothersGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"twoSisters\": _TwoSistersGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"whiteWerewolf\": _WhiteWerewolfGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"wildChild\": _WildChildGameOptions {\n              \"isTransformationRevealed\": false,\n            },\n            \"witch\": _WitchGameOptions {\n              \"doesKnowWerewolvesTargets\": true,\n            },\n            \"wolfHound\": _WolfHoundGameOptions {\n              \"isChosenSideRevealed\": false,\n              \"isSideRandomlyChosen\": false,\n            },\n          },\n          \"votes\": _VotesGameOptions {\n            \"canBeSkipped\": true,\n          },\n        },\n        \"players\": Array [],\n      },\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "455"
          ],
          "coveredBy": [
            "455"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 80
            },
            "start": {
              "column": 25,
              "line": 78
            }
          }
        },
        {
          "id": "953",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "449"
          ],
          "coveredBy": [
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 94
            },
            "start": {
              "column": 56,
              "line": 87
            }
          }
        },
        {
          "id": "954",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Elder Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "449"
          ],
          "coveredBy": [
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 72,
              "line": 88
            },
            "start": {
              "column": 8,
              "line": 88
            }
          }
        },
        {
          "id": "955",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "459"
          ],
          "coveredBy": [
            "459"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 93
            },
            "start": {
              "column": 28,
              "line": 89
            }
          }
        },
        {
          "id": "956",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Elder Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "449"
          ],
          "coveredBy": [
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 100
            },
            "start": {
              "column": 76,
              "line": 96
            }
          }
        },
        {
          "id": "957",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Elder Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "449"
          ],
          "coveredBy": [
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 109,
              "line": 97
            },
            "start": {
              "column": 16,
              "line": 97
            }
          }
        },
        {
          "id": "958",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Elder Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "449"
          ],
          "coveredBy": [
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 77,
              "line": 99
            },
            "start": {
              "column": 18,
              "line": 99
            }
          }
        },
        {
          "id": "959",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Elder Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "449"
          ],
          "coveredBy": [
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 106
            },
            "start": {
              "column": 67,
              "line": 102
            }
          }
        },
        {
          "id": "960",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Elder Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "449"
          ],
          "coveredBy": [
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 121,
              "line": 105
            },
            "start": {
              "column": 12,
              "line": 105
            }
          }
        }
      ],
      "source": "<template>\n  <VuePrimeFieldset\n    id=\"game-lobby-options-hub-roles-tab-elder\"\n    :pt=\"{ 'legend': 'ml-4 !p-3 !px-6' }\"\n  >\n    <template #legend>\n      <GameOptionRoleLegend role-name=\"elder\"/>\n    </template>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-elder-lives-count-against-werewolves-input-group\"\n      does-have-bottom-divider\n      :option-description=\"elderLivesCountAgainstWerewolvesDescription\"\n      option-icon-class=\"fa fa-heart text-red-500\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabElder.options.livesCountAgainstWerewolves.label')\"\n    >\n      <VuePrimeFloatLabel>\n        <label\n          id=\"game-lobby-options-hub-roles-tab-elder-lives-count-against-werewolves-label\"\n          for=\"game-lobby-options-hub-roles-tab-elder-lives-count-against-werewolves-input\"\n        >\n          {{ $t(\"components.GameLobbyOptionsHubRolesTabElder.options.livesCountAgainstWerewolves.label\") }}\n        </label>\n\n        <VuePrimeInputNumber\n          id=\"game-lobby-options-hub-roles-tab-elder-lives-count-against-werewolves-input\"\n          v-model=\"elderLivesCountAgainstWerewolvesValue\"\n          class=\"w-full\"\n          :max=\"5\"\n          :min=\"1\"\n        />\n      </VuePrimeFloatLabel>\n\n      <VuePrimeSlider\n        id=\"game-lobby-options-hub-roles-tab-elder-lives-count-against-werewolves-slider\"\n        v-model=\"elderLivesCountAgainstWerewolvesValue\"\n        class=\"mt-4 w-full\"\n        :max=\"5\"\n        :min=\"1\"\n        :step=\"1\"\n      />\n    </GameOptionInputGroup>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-elder-does-take-his-revenge-input-group\"\n      :option-description=\"doesElderTakeHisRevengeDescription\"\n      option-icon-class=\"fa fa-bolt text-yellow-500\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabElder.options.doesTakeHisRevenge.label')\"\n    >\n      <AffirmativeToggleButton\n        id=\"game-lobby-options-hub-roles-tab-elder-does-take-his-revenge-input\"\n        v-model=\"doesElderTakeHisRevengeValue\"\n        class=\"w-full\"\n      />\n    </GameOptionInputGroup>\n  </VuePrimeFieldset>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\nimport AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport GameOptionRoleLegend from \"~/components/shared/game/game-options/GameOptionRoleLegend/GameOptionRoleLegend.vue\";\nimport { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport { useStrings } from \"~/composables/misc/useStrings\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst { setCreateGameDto } = createGameDtoStore;\nconst { createGameDto } = storeToRefs(createGameDtoStore);\n\nconst { t } = useI18n();\nconst { convertBooleanAsAffirmativeString } = useStrings();\n\nconst elderLivesCountAgainstWerewolvesValue = computed<number>({\n  get: () => createGameDto.value.options.roles.elder.livesCountAgainstWerewolves,\n  set: (value: number | null) => {\n    if (value === null) {\n      return;\n    }\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.elder.livesCountAgainstWerewolves = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst doesElderTakeHisRevengeValue = computed<boolean>({\n  get: () => createGameDto.value.options.roles.elder.doesTakeHisRevenge,\n  set: (value: boolean) => {\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.elder.doesTakeHisRevenge = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst elderLivesCountAgainstWerewolvesDescription = computed<string>(() => {\n  const tKey = \"components.GameLobbyOptionsHubRolesTabElder.options.livesCountAgainstWerewolves.description\";\n\n  return t(tKey, { livesCount: elderLivesCountAgainstWerewolvesValue.value }, elderLivesCountAgainstWerewolvesValue.value);\n});\n\nconst doesElderTakeHisRevengeDescription = computed<string>(() => {\n  const booleanAsAffirmative = convertBooleanAsAffirmativeString(doesElderTakeHisRevengeValue.value);\n\n  return t(`components.GameLobbyOptionsHubRolesTabElder.options.doesTakeHisRevenge.descriptions.${booleanAsAffirmative}`);\n});\n</script>"
    },
    "components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabFox/GameLobbyOptionsHubRolesTabFox.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "961",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "801"
          ],
          "coveredBy": [
            "801",
            "802",
            "803",
            "804",
            "805",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 48
            },
            "start": {
              "column": 63,
              "line": 41
            }
          }
        },
        {
          "id": "962",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Fox Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "801"
          ],
          "coveredBy": [
            "801",
            "802",
            "803",
            "804",
            "805",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 79,
              "line": 42
            },
            "start": {
              "column": 8,
              "line": 42
            }
          }
        },
        {
          "id": "963",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "805"
          ],
          "coveredBy": [
            "805"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 47
            },
            "start": {
              "column": 28,
              "line": 43
            }
          }
        },
        {
          "id": "964",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Fox Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "801"
          ],
          "coveredBy": [
            "801",
            "802",
            "803",
            "804",
            "805",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 54
            },
            "start": {
              "column": 74,
              "line": 50
            }
          }
        },
        {
          "id": "965",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Fox Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "801"
          ],
          "coveredBy": [
            "801",
            "802",
            "803",
            "804",
            "805",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 128,
              "line": 53
            },
            "start": {
              "column": 12,
              "line": 53
            }
          }
        }
      ],
      "source": "<template>\n  <VuePrimeFieldset\n    id=\"game-lobby-options-hub-roles-tab-fox\"\n    :pt=\"{ 'legend': 'ml-4 !p-3 !px-6' }\"\n  >\n    <template #legend>\n      <GameOptionRoleLegend role-name=\"fox\"/>\n    </template>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-fox-is-powerless-if-misses-werewolf-input-group\"\n      :option-description=\"isFoxPowerlessIfMissesWerewolfDescription\"\n      option-icon-class=\"fa fa-ban text-red-500\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabFox.options.isPowerlessIfMissesWerewolf.label')\"\n    >\n      <AffirmativeToggleButton\n        id=\"game-lobby-options-hub-roles-tab-fox-is-powerless-if-misses-werewolf-input\"\n        v-model=\"isFoxPowerlessIfMissesWerewolfValue\"\n        class=\"w-full\"\n      />\n    </GameOptionInputGroup>\n  </VuePrimeFieldset>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\nimport AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport GameOptionRoleLegend from \"~/components/shared/game/game-options/GameOptionRoleLegend/GameOptionRoleLegend.vue\";\nimport { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport { useStrings } from \"~/composables/misc/useStrings\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst { setCreateGameDto } = createGameDtoStore;\nconst { createGameDto } = storeToRefs(createGameDtoStore);\n\nconst { t } = useI18n();\nconst { convertBooleanAsAffirmativeString } = useStrings();\n\nconst isFoxPowerlessIfMissesWerewolfValue = computed<boolean>({\n  get: () => createGameDto.value.options.roles.fox.isPowerlessIfMissesWerewolf,\n  set: (value: boolean) => {\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.fox.isPowerlessIfMissesWerewolf = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst isFoxPowerlessIfMissesWerewolfDescription = computed<string>(() => {\n  const booleanAsAffirmative = convertBooleanAsAffirmativeString(isFoxPowerlessIfMissesWerewolfValue.value);\n\n  return t(`components.GameLobbyOptionsHubRolesTabFox.options.isPowerlessIfMissesWerewolf.descriptions.${booleanAsAffirmative}`);\n});\n</script>"
    },
    "components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabGeneral/GameLobbyOptionsHubRolesTabGeneral.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "966",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "517"
          ],
          "coveredBy": [
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 69
            },
            "start": {
              "column": 53,
              "line": 62
            }
          }
        },
        {
          "id": "967",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab General Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "517"
          ],
          "coveredBy": [
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 68,
              "line": 63
            },
            "start": {
              "column": 8,
              "line": 63
            }
          }
        },
        {
          "id": "968",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "522"
          ],
          "coveredBy": [
            "522"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 68
            },
            "start": {
              "column": 17,
              "line": 64
            }
          }
        },
        {
          "id": "969",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "517"
          ],
          "coveredBy": [
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 78
            },
            "start": {
              "column": 51,
              "line": 71
            }
          }
        },
        {
          "id": "970",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab General Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "517"
          ],
          "coveredBy": [
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 66,
              "line": 72
            },
            "start": {
              "column": 8,
              "line": 72
            }
          }
        },
        {
          "id": "971",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "526"
          ],
          "coveredBy": [
            "526"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 77
            },
            "start": {
              "column": 17,
              "line": 73
            }
          }
        },
        {
          "id": "972",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab General Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "517"
          ],
          "coveredBy": [
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 84
            },
            "start": {
              "column": 64,
              "line": 80
            }
          }
        },
        {
          "id": "973",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Lobby Options Hub Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "973"
          ],
          "coveredBy": [
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 125,
              "line": 83
            },
            "start": {
              "column": 12,
              "line": 83
            }
          }
        },
        {
          "id": "974",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab General Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "517"
          ],
          "coveredBy": [
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 90
            },
            "start": {
              "column": 62,
              "line": 86
            }
          }
        },
        {
          "id": "975",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Lobby Options Hub Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "973"
          ],
          "coveredBy": [
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 123,
              "line": 89
            },
            "start": {
              "column": 12,
              "line": 89
            }
          }
        }
      ],
      "source": "<template>\n  <VuePrimeFieldset\n    id=\"game-lobby-options-hub-roles-tab-general\"\n    :pt=\"{ 'legend': 'ml-4 !p-3 !px-6' }\"\n  >\n    <template #legend>\n      <div class=\"flex gap-4 items-center\">\n        <RoleImage class=\"!border-0\"/>\n\n        <h2 id=\"game-lobby-options-hub-roles-tab-general-title\">\n          {{ $t('components.GameLobbyOptionsHubRolesTabGeneral.general') }}\n        </h2>\n      </div>\n    </template>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-general-do-skip-call-if-no-target-input-group\"\n      does-have-bottom-divider\n      :option-description=\"doSkipCallIfNoTargetDescription\"\n      option-icon-class=\"fa fa-forward text-yellow-200\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabGeneral.options.doSkipCallIfNoTarget.label')\"\n    >\n      <AffirmativeToggleButton\n        id=\"game-lobby-options-hub-roles-tab-general-do-skip-call-if-no-target-input\"\n        v-model=\"doSkipCallIfNoTargetValue\"\n        class=\"w-full\"\n      />\n    </GameOptionInputGroup>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-general-are-revealed-on-death-input-group\"\n      :option-description=\"areRevealedOnDeathDescription\"\n      option-icon-class=\"fa fa-skull text-gray-200\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabGeneral.options.areRevealedOnDeath.label')\"\n    >\n      <AffirmativeToggleButton\n        id=\"game-lobby-options-hub-roles-tab-general-are-revealed-on-death-input\"\n        v-model=\"areRevealedOnDeathValue\"\n        class=\"w-full\"\n      />\n    </GameOptionInputGroup>\n  </VuePrimeFieldset>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\nimport AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport RoleImage from \"~/components/shared/role/RoleImage/RoleImage.vue\";\nimport { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport { useStrings } from \"~/composables/misc/useStrings\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst { setCreateGameDto } = createGameDtoStore;\nconst { createGameDto } = storeToRefs(createGameDtoStore);\n\nconst { t } = useI18n();\n\nconst { convertBooleanAsAffirmativeString } = useStrings();\n\nconst doSkipCallIfNoTargetValue = computed<boolean>({\n  get: () => createGameDto.value.options.roles.doSkipCallIfNoTarget,\n  set: value => {\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.doSkipCallIfNoTarget = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst areRevealedOnDeathValue = computed<boolean>({\n  get: () => createGameDto.value.options.roles.areRevealedOnDeath,\n  set: value => {\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.areRevealedOnDeath = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst doSkipCallIfNoTargetDescription = computed<string>(() => {\n  const booleanAsAffirmative = convertBooleanAsAffirmativeString(doSkipCallIfNoTargetValue.value);\n\n  return t(`components.GameLobbyOptionsHubRolesTabGeneral.options.doSkipCallIfNoTarget.descriptions.${booleanAsAffirmative}`);\n});\n\nconst areRevealedOnDeathDescription = computed<string>(() => {\n  const booleanAsAffirmative = convertBooleanAsAffirmativeString(areRevealedOnDeathValue.value);\n\n  return t(`components.GameLobbyOptionsHubRolesTabGeneral.options.areRevealedOnDeath.descriptions.${booleanAsAffirmative}`);\n});\n</script>"
    },
    "components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabIdiot/GameLobbyOptionsHubRolesTabIdiot.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "976",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "786"
          ],
          "coveredBy": [
            "786",
            "787",
            "788",
            "789",
            "790",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 48
            },
            "start": {
              "column": 57,
              "line": 41
            }
          }
        },
        {
          "id": "977",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "973"
          ],
          "coveredBy": [
            "786",
            "787",
            "788",
            "789",
            "790",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 73,
              "line": 42
            },
            "start": {
              "column": 8,
              "line": 42
            }
          }
        },
        {
          "id": "978",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "790"
          ],
          "coveredBy": [
            "790"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 47
            },
            "start": {
              "column": 28,
              "line": 43
            }
          }
        },
        {
          "id": "979",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "973"
          ],
          "coveredBy": [
            "786",
            "787",
            "788",
            "789",
            "790",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 54
            },
            "start": {
              "column": 68,
              "line": 50
            }
          }
        },
        {
          "id": "980",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Idiot Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "786"
          ],
          "coveredBy": [
            "786",
            "787",
            "788",
            "789",
            "790",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 122,
              "line": 53
            },
            "start": {
              "column": 12,
              "line": 53
            }
          }
        }
      ],
      "source": "<template>\n  <VuePrimeFieldset\n    id=\"game-lobby-options-hub-roles-tab-idiot\"\n    :pt=\"{ 'legend': 'ml-4 !p-3 !px-6' }\"\n  >\n    <template #legend>\n      <GameOptionRoleLegend role-name=\"idiot\"/>\n    </template>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-idiot-does-die-on-elder-death-input-group\"\n      :option-description=\"doesIdiotDieOnElderDeathDescription\"\n      option-icon-class=\"fa fa-skull-crossbones text-red-500\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabIdiot.options.doesDieOnElderDeath.label')\"\n    >\n      <AffirmativeToggleButton\n        id=\"game-lobby-options-hub-roles-tab-idiot-does-die-on-elder-death-input\"\n        v-model=\"doesIdiotDieOnElderDeathValue\"\n        class=\"w-full\"\n      />\n    </GameOptionInputGroup>\n  </VuePrimeFieldset>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\nimport AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport GameOptionRoleLegend from \"~/components/shared/game/game-options/GameOptionRoleLegend/GameOptionRoleLegend.vue\";\nimport { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport { useStrings } from \"~/composables/misc/useStrings\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst { setCreateGameDto } = createGameDtoStore;\nconst { createGameDto } = storeToRefs(createGameDtoStore);\n\nconst { t } = useI18n();\nconst { convertBooleanAsAffirmativeString } = useStrings();\n\nconst doesIdiotDieOnElderDeathValue = computed<boolean>({\n  get: () => createGameDto.value.options.roles.idiot.doesDieOnElderDeath,\n  set: (value: boolean) => {\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.idiot.doesDieOnElderDeath = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst doesIdiotDieOnElderDeathDescription = computed<string>(() => {\n  const booleanAsAffirmative = convertBooleanAsAffirmativeString(doesIdiotDieOnElderDeathValue.value);\n\n  return t(`components.GameLobbyOptionsHubRolesTabIdiot.options.doesDieOnElderDeath.descriptions.${booleanAsAffirmative}`);\n});\n</script>"
    },
    "components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabLittleGirl/GameLobbyOptionsHubRolesTabLittleGirl.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "981",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "973"
          ],
          "coveredBy": [
            "796",
            "797",
            "798",
            "799",
            "800",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 48
            },
            "start": {
              "column": 64,
              "line": 41
            }
          }
        },
        {
          "id": "984",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "973"
          ],
          "coveredBy": [
            "796",
            "797",
            "798",
            "799",
            "800",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 54
            },
            "start": {
              "column": 75,
              "line": 50
            }
          }
        },
        {
          "id": "985",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Lobby Options Hub Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "973"
          ],
          "coveredBy": [
            "796",
            "797",
            "798",
            "799",
            "800",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 129,
              "line": 53
            },
            "start": {
              "column": 12,
              "line": 53
            }
          }
        },
        {
          "id": "983",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "800"
          ],
          "coveredBy": [
            "800"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 47
            },
            "start": {
              "column": 28,
              "line": 43
            }
          }
        },
        {
          "id": "982",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Little Girl Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "796"
          ],
          "coveredBy": [
            "796",
            "797",
            "798",
            "799",
            "800",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 80,
              "line": 42
            },
            "start": {
              "column": 8,
              "line": 42
            }
          }
        }
      ],
      "source": "<template>\n  <VuePrimeFieldset\n    id=\"game-lobby-options-hub-roles-tab-little-girl\"\n    :pt=\"{ 'legend': 'ml-4 !p-3 !px-6' }\"\n  >\n    <template #legend>\n      <GameOptionRoleLegend role-name=\"little-girl\"/>\n    </template>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-little-girl-is-protected-by-defender-input-group\"\n      :option-description=\"isLittleGirlProtectedByDefenderDescription\"\n      option-icon-class=\"fa fa-shield-alt text-blue-500\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabLittleGirl.options.isProtectedByDefender.label')\"\n    >\n      <AffirmativeToggleButton\n        id=\"game-lobby-options-hub-roles-tab-little-girl-is-protected-by-defender-input\"\n        v-model=\"isLittleGirlProtectedByDefenderValue\"\n        class=\"w-full\"\n      />\n    </GameOptionInputGroup>\n  </VuePrimeFieldset>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\nimport AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport GameOptionRoleLegend from \"~/components/shared/game/game-options/GameOptionRoleLegend/GameOptionRoleLegend.vue\";\nimport { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport { useStrings } from \"~/composables/misc/useStrings\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst { setCreateGameDto } = createGameDtoStore;\nconst { createGameDto } = storeToRefs(createGameDtoStore);\n\nconst { t } = useI18n();\nconst { convertBooleanAsAffirmativeString } = useStrings();\n\nconst isLittleGirlProtectedByDefenderValue = computed<boolean>({\n  get: () => createGameDto.value.options.roles.littleGirl.isProtectedByDefender,\n  set: (value: boolean) => {\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.littleGirl.isProtectedByDefender = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst isLittleGirlProtectedByDefenderDescription = computed<string>(() => {\n  const booleanAsAffirmative = convertBooleanAsAffirmativeString(isLittleGirlProtectedByDefenderValue.value);\n\n  return t(`components.GameLobbyOptionsHubRolesTabLittleGirl.options.isProtectedByDefender.descriptions.${booleanAsAffirmative}`);\n});\n</script>"
    },
    "components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabPiedPiper/GameLobbyOptionsHubRolesTabPiedPiper.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "986",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "429"
          ],
          "coveredBy": [
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 86
            },
            "start": {
              "column": 67,
              "line": 76
            }
          }
        },
        {
          "id": "987",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Pied Piper Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "429"
          ],
          "coveredBy": [
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 84,
              "line": 77
            },
            "start": {
              "column": 8,
              "line": 77
            }
          }
        },
        {
          "id": "988",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "433"
          ],
          "coveredBy": [
            "433",
            "434",
            "435"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 85
            },
            "start": {
              "column": 34,
              "line": 78
            }
          }
        },
        {
          "id": "989",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "433"
          ],
          "coveredBy": [
            "433",
            "434",
            "435"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 79
            },
            "start": {
              "column": 9,
              "line": 79
            }
          }
        },
        {
          "id": "990",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      _CreateGameDto {\n        \"additionalCards\": undefined,\n        \"options\": _GameOptions {\n          \"composition\": _CompositionGameOptions {\n            \"isHidden\": false,\n          },\n          \"roles\": _RolesGameOptions {\n            \"actor\": _ActorGameOptions {\n              \"additionalCardsCount\": 3,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"areRevealedOnDeath\": true,\n            \"bearTamer\": _BearTamerGameOptions {\n              \"doesGrowlOnWerewolvesSide\": true,\n            },\n            \"bigBadWolf\": _BigBadWolfGameOptions {\n              \"isPowerlessIfWerewolfDies\": true,\n            },\n            \"cupid\": _CupidGameOptions {\n              \"lovers\": _CupidLoversGameOptions {\n                \"doRevealRoleToEachOther\": false,\n              },\n              \"mustWinWithLovers\": false,\n            },\n            \"defender\": _DefenderGameOptions {\n              \"canProtectTwice\": false,\n            },\n            \"doSkipCallIfNoTarget\": false,\n            \"elder\": _ElderGameOptions {\n              \"doesTakeHisRevenge\": true,\n              \"livesCountAgainstWerewolves\": 2,\n            },\n            \"fox\": _FoxGameOptions {\n              \"isPowerlessIfMissesWerewolf\": true,\n            },\n            \"idiot\": _IdiotGameOptions {\n              \"doesDieOnElderDeath\": true,\n            },\n            \"littleGirl\": _LittleGirlGameOptions {\n              \"isProtectedByDefender\": false,\n            },\n            \"piedPiper\": _PiedPiperGameOptions {\n              \"charmedPeopleCountPerNight\": null,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"prejudicedManipulator\": _PrejudicedManipulatorGameOptions {\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"scandalmonger\": _ScandalmongerGameOptions {\n              \"markPenalty\": 2,\n            },\n            \"seer\": _SeerGameOptions {\n              \"canSeeRoles\": true,\n              \"isTalkative\": true,\n            },\n            \"sheriff\": _SheriffGameOptions {\n              \"electedAt\": _SheriffElectionGameOptions {\n                \"phaseName\": \"night\",\n                \"turn\": 1,\n              },\n              \"hasDoubledVote\": true,\n              \"isEnabled\": true,\n              \"mustSettleTieInVotes\": true,\n            },\n            \"stutteringJudge\": _StutteringJudgeGameOptions {\n              \"voteRequestsCount\": 1,\n            },\n            \"thief\": _ThiefGameOptions {\n              \"additionalCardsCount\": 2,\n              \"isChosenCardRevealed\": false,\n              \"mustChooseBetweenWerewolves\": true,\n            },\n            \"threeBrothers\": _ThreeBrothersGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"twoSisters\": _TwoSistersGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"whiteWerewolf\": _WhiteWerewolfGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"wildChild\": _WildChildGameOptions {\n              \"isTransformationRevealed\": false,\n            },\n            \"witch\": _WitchGameOptions {\n              \"doesKnowWerewolvesTargets\": true,\n            },\n            \"wolfHound\": _WolfHoundGameOptions {\n              \"isChosenSideRevealed\": false,\n              \"isSideRandomlyChosen\": false,\n            },\n          },\n          \"votes\": _VotesGameOptions {\n            \"canBeSkipped\": true,\n          },\n        },\n        \"players\": Array [],\n      },\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "435"
          ],
          "coveredBy": [
            "433",
            "434",
            "435"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 79
            },
            "start": {
              "column": 9,
              "line": 79
            }
          }
        },
        {
          "id": "991",
          "mutatorName": "EqualityOperator",
          "replacement": "value !== null",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "433"
          ],
          "coveredBy": [
            "433",
            "434",
            "435"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 79
            },
            "start": {
              "column": 9,
              "line": 79
            }
          }
        },
        {
          "id": "992",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      _CreateGameDto {\n        \"additionalCards\": undefined,\n        \"options\": _GameOptions {\n          \"composition\": _CompositionGameOptions {\n            \"isHidden\": false,\n          },\n          \"roles\": _RolesGameOptions {\n            \"actor\": _ActorGameOptions {\n              \"additionalCardsCount\": 3,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"areRevealedOnDeath\": true,\n            \"bearTamer\": _BearTamerGameOptions {\n              \"doesGrowlOnWerewolvesSide\": true,\n            },\n            \"bigBadWolf\": _BigBadWolfGameOptions {\n              \"isPowerlessIfWerewolfDies\": true,\n            },\n            \"cupid\": _CupidGameOptions {\n              \"lovers\": _CupidLoversGameOptions {\n                \"doRevealRoleToEachOther\": false,\n              },\n              \"mustWinWithLovers\": false,\n            },\n            \"defender\": _DefenderGameOptions {\n              \"canProtectTwice\": false,\n            },\n            \"doSkipCallIfNoTarget\": false,\n            \"elder\": _ElderGameOptions {\n              \"doesTakeHisRevenge\": true,\n              \"livesCountAgainstWerewolves\": 2,\n            },\n            \"fox\": _FoxGameOptions {\n              \"isPowerlessIfMissesWerewolf\": true,\n            },\n            \"idiot\": _IdiotGameOptions {\n              \"doesDieOnElderDeath\": true,\n            },\n            \"littleGirl\": _LittleGirlGameOptions {\n              \"isProtectedByDefender\": false,\n            },\n            \"piedPiper\": _PiedPiperGameOptions {\n              \"charmedPeopleCountPerNight\": null,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"prejudicedManipulator\": _PrejudicedManipulatorGameOptions {\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"scandalmonger\": _ScandalmongerGameOptions {\n              \"markPenalty\": 2,\n            },\n            \"seer\": _SeerGameOptions {\n              \"canSeeRoles\": true,\n              \"isTalkative\": true,\n            },\n            \"sheriff\": _SheriffGameOptions {\n              \"electedAt\": _SheriffElectionGameOptions {\n                \"phaseName\": \"night\",\n                \"turn\": 1,\n              },\n              \"hasDoubledVote\": true,\n              \"isEnabled\": true,\n              \"mustSettleTieInVotes\": true,\n            },\n            \"stutteringJudge\": _StutteringJudgeGameOptions {\n              \"voteRequestsCount\": 1,\n            },\n            \"thief\": _ThiefGameOptions {\n              \"additionalCardsCount\": 2,\n              \"isChosenCardRevealed\": false,\n              \"mustChooseBetweenWerewolves\": true,\n            },\n            \"threeBrothers\": _ThreeBrothersGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"twoSisters\": _TwoSistersGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"whiteWerewolf\": _WhiteWerewolfGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"wildChild\": _WildChildGameOptions {\n              \"isTransformationRevealed\": false,\n            },\n            \"witch\": _WitchGameOptions {\n              \"doesKnowWerewolvesTargets\": true,\n            },\n            \"wolfHound\": _WolfHoundGameOptions {\n              \"isChosenSideRevealed\": false,\n              \"isSideRandomlyChosen\": false,\n            },\n          },\n          \"votes\": _VotesGameOptions {\n            \"canBeSkipped\": true,\n          },\n        },\n        \"players\": Array [],\n      },\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "435"
          ],
          "coveredBy": [
            "435"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 81
            },
            "start": {
              "column": 25,
              "line": 79
            }
          }
        },
        {
          "id": "993",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "429"
          ],
          "coveredBy": [
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 95
            },
            "start": {
              "column": 69,
              "line": 88
            }
          }
        },
        {
          "id": "994",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Pied Piper Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "429"
          ],
          "coveredBy": [
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 85,
              "line": 89
            },
            "start": {
              "column": 8,
              "line": 89
            }
          }
        },
        {
          "id": "995",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "439"
          ],
          "coveredBy": [
            "439"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 94
            },
            "start": {
              "column": 28,
              "line": 90
            }
          }
        },
        {
          "id": "996",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Pied Piper Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "429"
          ],
          "coveredBy": [
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 101
            },
            "start": {
              "column": 79,
              "line": 97
            }
          }
        },
        {
          "id": "997",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Pied Piper Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "429"
          ],
          "coveredBy": [
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 112,
              "line": 98
            },
            "start": {
              "column": 16,
              "line": 98
            }
          }
        },
        {
          "id": "998",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Pied Piper Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "429"
          ],
          "coveredBy": [
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 75,
              "line": 100
            },
            "start": {
              "column": 18,
              "line": 100
            }
          }
        },
        {
          "id": "999",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Pied Piper Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "429"
          ],
          "coveredBy": [
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 107
            },
            "start": {
              "column": 80,
              "line": 103
            }
          }
        },
        {
          "id": "1000",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Pied Piper Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "429"
          ],
          "coveredBy": [
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 134,
              "line": 106
            },
            "start": {
              "column": 12,
              "line": 106
            }
          }
        }
      ],
      "source": "<template>\n  <VuePrimeFieldset\n    id=\"game-lobby-options-hub-roles-tab-pied-piper\"\n    :pt=\"{ 'legend': 'ml-4 !p-3 !px-6' }\"\n  >\n    <template #legend>\n      <GameOptionRoleLegend role-name=\"pied-piper\"/>\n    </template>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-pied-piper-charmed-people-count-per-night-input-group\"\n      does-have-bottom-divider\n      :option-description=\"piedPiperCharmedPeopleCountPerNightDescription\"\n      option-icon-class=\"fa fa-people-line text-pink-500\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabPiedPiper.options.charmedPeopleCountPerNight.label')\"\n    >\n      <VuePrimeFloatLabel>\n        <label\n          id=\"game-lobby-options-hub-roles-tab-pied-piper-charmed-people-count-per-night-label\"\n          for=\"game-lobby-options-hub-roles-tab-pied-piper-charmed-people-count-per-night-input\"\n        >\n          {{ $t(\"components.GameLobbyOptionsHubRolesTabPiedPiper.options.charmedPeopleCountPerNight.label\") }}\n        </label>\n\n        <VuePrimeInputNumber\n          id=\"game-lobby-options-hub-roles-tab-pied-piper-charmed-people-count-per-night-input\"\n          v-model=\"piedPiperCharmedPeopleCountPerNightValue\"\n          class=\"w-full\"\n          :max=\"5\"\n          :min=\"1\"\n        />\n\n        <VuePrimeSlider\n          id=\"game-lobby-options-hub-roles-tab-pied-piper-charmed-people-count-per-night-slider\"\n          v-model=\"piedPiperCharmedPeopleCountPerNightValue\"\n          class=\"mt-4 w-full\"\n          :max=\"5\"\n          :min=\"1\"\n          :step=\"1\"\n        />\n      </VuePrimeFloatLabel>\n    </GameOptionInputGroup>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-pied-piper-is-powerless-on-werewolves-side-input-group\"\n      :option-description=\"isPiedPiperPowerlessOnWerewolvesSideDescription\"\n      option-icon-class=\"fa fa-ban text-red-500\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabPiedPiper.options.isPowerlessOnWerewolvesSide.label')\"\n    >\n      <AffirmativeToggleButton\n        id=\"game-lobby-options-hub-roles-tab-pied-piper-is-powerless-on-werewolves-side-input\"\n        v-model=\"isPiedPiperPowerlessOnWerewolvesSideValue\"\n        class=\"w-full\"\n      />\n    </GameOptionInputGroup>\n  </VuePrimeFieldset>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\nimport AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport GameOptionRoleLegend from \"~/components/shared/game/game-options/GameOptionRoleLegend/GameOptionRoleLegend.vue\";\nimport { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport { useStrings } from \"~/composables/misc/useStrings\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst { setCreateGameDto } = createGameDtoStore;\nconst { createGameDto } = storeToRefs(createGameDtoStore);\n\nconst { t } = useI18n();\n\nconst { convertBooleanAsAffirmativeString } = useStrings();\n\nconst piedPiperCharmedPeopleCountPerNightValue = computed<number>({\n  get: () => createGameDto.value.options.roles.piedPiper.charmedPeopleCountPerNight,\n  set: (value: number | null) => {\n    if (value === null) {\n      return;\n    }\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.piedPiper.charmedPeopleCountPerNight = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst isPiedPiperPowerlessOnWerewolvesSideValue = computed<boolean>({\n  get: () => createGameDto.value.options.roles.piedPiper.isPowerlessOnWerewolvesSide,\n  set: (value: boolean) => {\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.piedPiper.isPowerlessOnWerewolvesSide = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst piedPiperCharmedPeopleCountPerNightDescription = computed<string>(() => {\n  const tKey = \"components.GameLobbyOptionsHubRolesTabPiedPiper.options.charmedPeopleCountPerNight.description\";\n\n  return t(tKey, { count: piedPiperCharmedPeopleCountPerNightValue.value });\n});\n\nconst isPiedPiperPowerlessOnWerewolvesSideDescription = computed<string>(() => {\n  const booleanAsAffirmative = convertBooleanAsAffirmativeString(isPiedPiperPowerlessOnWerewolvesSideValue.value);\n\n  return t(`components.GameLobbyOptionsHubRolesTabPiedPiper.options.isPowerlessOnWerewolvesSide.descriptions.${booleanAsAffirmative}`);\n});\n</script>"
    },
    "components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabPrejudicedManipulator/GameLobbyOptionsHubRolesTabPrejudicedManipulator.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1001",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "721"
          ],
          "coveredBy": [
            "721",
            "722",
            "723",
            "724",
            "725",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 49
            },
            "start": {
              "column": 81,
              "line": 42
            }
          }
        },
        {
          "id": "1002",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Prejudiced Manipulator Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "721"
          ],
          "coveredBy": [
            "721",
            "722",
            "723",
            "724",
            "725",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 97,
              "line": 43
            },
            "start": {
              "column": 8,
              "line": 43
            }
          }
        },
        {
          "id": "1003",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "725"
          ],
          "coveredBy": [
            "725"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 48
            },
            "start": {
              "column": 28,
              "line": 44
            }
          }
        },
        {
          "id": "1004",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Prejudiced Manipulator Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "721"
          ],
          "coveredBy": [
            "721",
            "722",
            "723",
            "724",
            "725",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 55
            },
            "start": {
              "column": 92,
              "line": 51
            }
          }
        },
        {
          "id": "1005",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Prejudiced Manipulator Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "721"
          ],
          "coveredBy": [
            "721",
            "722",
            "723",
            "724",
            "725",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 146,
              "line": 54
            },
            "start": {
              "column": 12,
              "line": 54
            }
          }
        }
      ],
      "source": "<template>\n  <VuePrimeFieldset\n    id=\"game-lobby-options-hub-roles-tab-prejudiced-manipulator\"\n    :pt=\"{ 'legend': 'ml-4 !p-3 !px-6' }\"\n  >\n    <template #legend>\n      <GameOptionRoleLegend role-name=\"prejudiced-manipulator\"/>\n    </template>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-prejudiced-manipulator-is-powerless-on-werewolves-side-input-group\"\n      :option-description=\"isPrejudicedManipulatorPowerlessOnWerewolvesSideDescription\"\n      option-icon-class=\"fa fa-ban text-red-500\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabPrejudicedManipulator.options.isPowerlessOnWerewolvesSide.label')\"\n    >\n      <AffirmativeToggleButton\n        id=\"game-lobby-options-hub-roles-tab-prejudiced-manipulator-is-powerless-on-werewolves-side-input\"\n        v-model=\"isPrejudicedManipulatorPowerlessOnWerewolvesSideValue\"\n        class=\"w-full\"\n      />\n    </GameOptionInputGroup>\n  </VuePrimeFieldset>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\nimport AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport GameOptionRoleLegend from \"~/components/shared/game/game-options/GameOptionRoleLegend/GameOptionRoleLegend.vue\";\nimport { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport { useStrings } from \"~/composables/misc/useStrings\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst { setCreateGameDto } = createGameDtoStore;\nconst { createGameDto } = storeToRefs(createGameDtoStore);\n\nconst { t } = useI18n();\n\nconst { convertBooleanAsAffirmativeString } = useStrings();\n\nconst isPrejudicedManipulatorPowerlessOnWerewolvesSideValue = computed<boolean>({\n  get: () => createGameDto.value.options.roles.prejudicedManipulator.isPowerlessOnWerewolvesSide,\n  set: (value: boolean) => {\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.prejudicedManipulator.isPowerlessOnWerewolvesSide = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst isPrejudicedManipulatorPowerlessOnWerewolvesSideDescription = computed<string>(() => {\n  const booleanAsAffirmative = convertBooleanAsAffirmativeString(isPrejudicedManipulatorPowerlessOnWerewolvesSideValue.value);\n\n  return t(`components.GameLobbyOptionsHubRolesTabPrejudicedManipulator.options.isPowerlessOnWerewolvesSide.descriptions.${booleanAsAffirmative}`);\n});\n</script>"
    },
    "components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabScandalmonger/GameLobbyOptionsHubRolesTabScandalmonger.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1006",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "658"
          ],
          "coveredBy": [
            "658",
            "659",
            "660",
            "661",
            "662",
            "663",
            "664",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 68
            },
            "start": {
              "column": 56,
              "line": 58
            }
          }
        },
        {
          "id": "1007",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Scandalmonger Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "658"
          ],
          "coveredBy": [
            "658",
            "659",
            "660",
            "661",
            "662",
            "663",
            "664",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 73,
              "line": 59
            },
            "start": {
              "column": 8,
              "line": 59
            }
          }
        },
        {
          "id": "1008",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "662"
          ],
          "coveredBy": [
            "662",
            "663",
            "664"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 67
            },
            "start": {
              "column": 34,
              "line": 60
            }
          }
        },
        {
          "id": "1009",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "662"
          ],
          "coveredBy": [
            "662",
            "663",
            "664"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 61
            },
            "start": {
              "column": 9,
              "line": 61
            }
          }
        },
        {
          "id": "1010",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      _CreateGameDto {\n        \"additionalCards\": undefined,\n        \"options\": _GameOptions {\n          \"composition\": _CompositionGameOptions {\n            \"isHidden\": false,\n          },\n          \"roles\": _RolesGameOptions {\n            \"actor\": _ActorGameOptions {\n              \"additionalCardsCount\": 3,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"areRevealedOnDeath\": true,\n            \"bearTamer\": _BearTamerGameOptions {\n              \"doesGrowlOnWerewolvesSide\": true,\n            },\n            \"bigBadWolf\": _BigBadWolfGameOptions {\n              \"isPowerlessIfWerewolfDies\": true,\n            },\n            \"cupid\": _CupidGameOptions {\n              \"lovers\": _CupidLoversGameOptions {\n                \"doRevealRoleToEachOther\": false,\n              },\n              \"mustWinWithLovers\": false,\n            },\n            \"defender\": _DefenderGameOptions {\n              \"canProtectTwice\": false,\n            },\n            \"doSkipCallIfNoTarget\": false,\n            \"elder\": _ElderGameOptions {\n              \"doesTakeHisRevenge\": true,\n              \"livesCountAgainstWerewolves\": 2,\n            },\n            \"fox\": _FoxGameOptions {\n              \"isPowerlessIfMissesWerewolf\": true,\n            },\n            \"idiot\": _IdiotGameOptions {\n              \"doesDieOnElderDeath\": true,\n            },\n            \"littleGirl\": _LittleGirlGameOptions {\n              \"isProtectedByDefender\": false,\n            },\n            \"piedPiper\": _PiedPiperGameOptions {\n              \"charmedPeopleCountPerNight\": 2,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"prejudicedManipulator\": _PrejudicedManipulatorGameOptions {\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"scandalmonger\": _ScandalmongerGameOptions {\n              \"markPenalty\": null,\n            },\n            \"seer\": _SeerGameOptions {\n              \"canSeeRoles\": true,\n              \"isTalkative\": true,\n            },\n            \"sheriff\": _SheriffGameOptions {\n              \"electedAt\": _SheriffElectionGameOptions {\n                \"phaseName\": \"night\",\n                \"turn\": 1,\n              },\n              \"hasDoubledVote\": true,\n              \"isEnabled\": true,\n              \"mustSettleTieInVotes\": true,\n            },\n            \"stutteringJudge\": _StutteringJudgeGameOptions {\n              \"voteRequestsCount\": 1,\n            },\n            \"thief\": _ThiefGameOptions {\n              \"additionalCardsCount\": 2,\n              \"isChosenCardRevealed\": false,\n              \"mustChooseBetweenWerewolves\": true,\n            },\n            \"threeBrothers\": _ThreeBrothersGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"twoSisters\": _TwoSistersGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"whiteWerewolf\": _WhiteWerewolfGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"wildChild\": _WildChildGameOptions {\n              \"isTransformationRevealed\": false,\n            },\n            \"witch\": _WitchGameOptions {\n              \"doesKnowWerewolvesTargets\": true,\n            },\n            \"wolfHound\": _WolfHoundGameOptions {\n              \"isChosenSideRevealed\": false,\n              \"isSideRandomlyChosen\": false,\n            },\n          },\n          \"votes\": _VotesGameOptions {\n            \"canBeSkipped\": true,\n          },\n        },\n        \"players\": Array [],\n      },\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "664"
          ],
          "coveredBy": [
            "662",
            "663",
            "664"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 61
            },
            "start": {
              "column": 9,
              "line": 61
            }
          }
        },
        {
          "id": "1011",
          "mutatorName": "EqualityOperator",
          "replacement": "value !== null",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "662"
          ],
          "coveredBy": [
            "662",
            "663",
            "664"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 61
            },
            "start": {
              "column": 9,
              "line": 61
            }
          }
        },
        {
          "id": "1012",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      _CreateGameDto {\n        \"additionalCards\": undefined,\n        \"options\": _GameOptions {\n          \"composition\": _CompositionGameOptions {\n            \"isHidden\": false,\n          },\n          \"roles\": _RolesGameOptions {\n            \"actor\": _ActorGameOptions {\n              \"additionalCardsCount\": 3,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"areRevealedOnDeath\": true,\n            \"bearTamer\": _BearTamerGameOptions {\n              \"doesGrowlOnWerewolvesSide\": true,\n            },\n            \"bigBadWolf\": _BigBadWolfGameOptions {\n              \"isPowerlessIfWerewolfDies\": true,\n            },\n            \"cupid\": _CupidGameOptions {\n              \"lovers\": _CupidLoversGameOptions {\n                \"doRevealRoleToEachOther\": false,\n              },\n              \"mustWinWithLovers\": false,\n            },\n            \"defender\": _DefenderGameOptions {\n              \"canProtectTwice\": false,\n            },\n            \"doSkipCallIfNoTarget\": false,\n            \"elder\": _ElderGameOptions {\n              \"doesTakeHisRevenge\": true,\n              \"livesCountAgainstWerewolves\": 2,\n            },\n            \"fox\": _FoxGameOptions {\n              \"isPowerlessIfMissesWerewolf\": true,\n            },\n            \"idiot\": _IdiotGameOptions {\n              \"doesDieOnElderDeath\": true,\n            },\n            \"littleGirl\": _LittleGirlGameOptions {\n              \"isProtectedByDefender\": false,\n            },\n            \"piedPiper\": _PiedPiperGameOptions {\n              \"charmedPeopleCountPerNight\": 2,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"prejudicedManipulator\": _PrejudicedManipulatorGameOptions {\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"scandalmonger\": _ScandalmongerGameOptions {\n              \"markPenalty\": null,\n            },\n            \"seer\": _SeerGameOptions {\n              \"canSeeRoles\": true,\n              \"isTalkative\": true,\n            },\n            \"sheriff\": _SheriffGameOptions {\n              \"electedAt\": _SheriffElectionGameOptions {\n                \"phaseName\": \"night\",\n                \"turn\": 1,\n              },\n              \"hasDoubledVote\": true,\n              \"isEnabled\": true,\n              \"mustSettleTieInVotes\": true,\n            },\n            \"stutteringJudge\": _StutteringJudgeGameOptions {\n              \"voteRequestsCount\": 1,\n            },\n            \"thief\": _ThiefGameOptions {\n              \"additionalCardsCount\": 2,\n              \"isChosenCardRevealed\": false,\n              \"mustChooseBetweenWerewolves\": true,\n            },\n            \"threeBrothers\": _ThreeBrothersGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"twoSisters\": _TwoSistersGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"whiteWerewolf\": _WhiteWerewolfGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"wildChild\": _WildChildGameOptions {\n              \"isTransformationRevealed\": false,\n            },\n            \"witch\": _WitchGameOptions {\n              \"doesKnowWerewolvesTargets\": true,\n            },\n            \"wolfHound\": _WolfHoundGameOptions {\n              \"isChosenSideRevealed\": false,\n              \"isSideRandomlyChosen\": false,\n            },\n          },\n          \"votes\": _VotesGameOptions {\n            \"canBeSkipped\": true,\n          },\n        },\n        \"players\": Array [],\n      },\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "664"
          ],
          "coveredBy": [
            "664"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 63
            },
            "start": {
              "column": 25,
              "line": 61
            }
          }
        },
        {
          "id": "1013",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Scandalmonger Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "658"
          ],
          "coveredBy": [
            "658",
            "659",
            "660",
            "661",
            "662",
            "663",
            "664",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 74
            },
            "start": {
              "column": 68,
              "line": 70
            }
          }
        },
        {
          "id": "1014",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Scandalmonger Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "658"
          ],
          "coveredBy": [
            "658",
            "659",
            "660",
            "661",
            "662",
            "663",
            "664",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 101,
              "line": 71
            },
            "start": {
              "column": 16,
              "line": 71
            }
          }
        },
        {
          "id": "1015",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Scandalmonger Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "658"
          ],
          "coveredBy": [
            "658",
            "659",
            "660",
            "661",
            "662",
            "663",
            "664",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 70,
              "line": 73
            },
            "start": {
              "column": 18,
              "line": 73
            }
          }
        }
      ],
      "source": "<template>\n  <VuePrimeFieldset\n    id=\"game-lobby-options-hub-roles-tab-scandalmonger\"\n    :pt=\"{ 'legend': 'ml-4 !p-3 !px-6' }\"\n  >\n    <template #legend>\n      <GameOptionRoleLegend role-name=\"scandalmonger\"/>\n    </template>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-scandalmonger-mark-penalty-input-group\"\n      :option-description=\"scandalmongerMarkPenaltyDescription\"\n      option-icon-class=\"fa fa-feather text-cyan-700\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabScandalmonger.options.markPenalty.label')\"\n    >\n      <VuePrimeFloatLabel>\n        <label\n          id=\"game-lobby-options-hub-roles-tab-scandalmonger-mark-penalty-label\"\n          for=\"game-lobby-options-hub-roles-tab-scandalmonger-mark-penalty-input\"\n        >\n          {{ $t(\"components.GameLobbyOptionsHubRolesTabScandalmonger.options.markPenalty.label\") }}\n        </label>\n\n        <VuePrimeInputNumber\n          id=\"game-lobby-options-hub-roles-tab-scandalmonger-mark-penalty-input\"\n          v-model=\"scandalmongerMarkPenaltyValue\"\n          class=\"w-full\"\n          :max=\"5\"\n          :min=\"1\"\n        />\n\n        <VuePrimeSlider\n          id=\"game-lobby-options-hub-roles-tab-scandalmonger-mark-penalty-slider\"\n          v-model=\"scandalmongerMarkPenaltyValue\"\n          class=\"mt-4 w-full\"\n          :max=\"5\"\n          :min=\"1\"\n          :step=\"1\"\n        />\n      </VuePrimeFloatLabel>\n    </GameOptionInputGroup>\n  </VuePrimeFieldset>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\nimport GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport GameOptionRoleLegend from \"~/components/shared/game/game-options/GameOptionRoleLegend/GameOptionRoleLegend.vue\";\nimport { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst { setCreateGameDto } = createGameDtoStore;\nconst { createGameDto } = storeToRefs(createGameDtoStore);\n\nconst { t } = useI18n();\n\nconst scandalmongerMarkPenaltyValue = computed<number>({\n  get: () => createGameDto.value.options.roles.scandalmonger.markPenalty,\n  set: (value: number | null) => {\n    if (value === null) {\n      return;\n    }\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.scandalmonger.markPenalty = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst scandalmongerMarkPenaltyDescription = computed<string>(() => {\n  const tKey = \"components.GameLobbyOptionsHubRolesTabScandalmonger.options.markPenalty.description\";\n\n  return t(tKey, { markPenalty: scandalmongerMarkPenaltyValue.value }, scandalmongerMarkPenaltyValue.value);\n});\n</script>"
    },
    "components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSeer/GameLobbyOptionsHubRolesTabSeer.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1016",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "973"
          ],
          "coveredBy": [
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 62
            },
            "start": {
              "column": 48,
              "line": 55
            }
          }
        },
        {
          "id": "1017",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "973"
          ],
          "coveredBy": [
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 64,
              "line": 56
            },
            "start": {
              "column": 8,
              "line": 56
            }
          }
        },
        {
          "id": "1018",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "568"
          ],
          "coveredBy": [
            "568"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 61
            },
            "start": {
              "column": 28,
              "line": 57
            }
          }
        },
        {
          "id": "1020",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "973"
          ],
          "coveredBy": [
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 64,
              "line": 65
            },
            "start": {
              "column": 8,
              "line": 65
            }
          }
        },
        {
          "id": "1021",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "572"
          ],
          "coveredBy": [
            "572"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 70
            },
            "start": {
              "column": 28,
              "line": 66
            }
          }
        },
        {
          "id": "1022",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "973"
          ],
          "coveredBy": [
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 77
            },
            "start": {
              "column": 59,
              "line": 73
            }
          }
        },
        {
          "id": "1023",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Seer Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "564"
          ],
          "coveredBy": [
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 113,
              "line": 76
            },
            "start": {
              "column": 12,
              "line": 76
            }
          }
        },
        {
          "id": "1024",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "973"
          ],
          "coveredBy": [
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 83
            },
            "start": {
              "column": 59,
              "line": 79
            }
          }
        },
        {
          "id": "1025",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Seer Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "564"
          ],
          "coveredBy": [
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 113,
              "line": 82
            },
            "start": {
              "column": 12,
              "line": 82
            }
          }
        },
        {
          "id": "1019",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "564"
          ],
          "coveredBy": [
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 71
            },
            "start": {
              "column": 48,
              "line": 64
            }
          }
        }
      ],
      "source": "<template>\n  <VuePrimeFieldset\n    id=\"game-lobby-options-hub-roles-tab-seer\"\n    :pt=\"{ 'legend': 'ml-4 !p-3 !px-6' }\"\n  >\n    <template #legend>\n      <GameOptionRoleLegend role-name=\"seer\"/>\n    </template>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-seer-is-talkative-input-group\"\n      does-have-bottom-divider\n      :option-description=\"isSeerTalkativeDescription\"\n      option-icon-class=\"fa fa-comments text-purple-400\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabSeer.options.isTalkative.label')\"\n    >\n      <AffirmativeToggleButton\n        id=\"game-lobby-options-hub-roles-tab-seer-is-talkative-input\"\n        v-model=\"isSeerTalkativeValue\"\n        class=\"w-full\"\n      />\n    </GameOptionInputGroup>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-seer-can-see-roles-input-group\"\n      :option-description=\"canSeerSeeRolesDescription\"\n      option-icon-class=\"fa fa-eye text-purple-400\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabSeer.options.canSeeRoles.label')\"\n    >\n      <AffirmativeToggleButton\n        id=\"game-lobby-options-hub-roles-tab-seer-can-see-roles-input\"\n        v-model=\"canSeerSeeRolesValue\"\n        class=\"w-full\"\n      />\n    </GameOptionInputGroup>\n  </VuePrimeFieldset>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\nimport AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport GameOptionRoleLegend from \"~/components/shared/game/game-options/GameOptionRoleLegend/GameOptionRoleLegend.vue\";\nimport { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport { useStrings } from \"~/composables/misc/useStrings\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst { setCreateGameDto } = createGameDtoStore;\nconst { createGameDto } = storeToRefs(createGameDtoStore);\n\nconst { t } = useI18n();\nconst { convertBooleanAsAffirmativeString } = useStrings();\n\nconst isSeerTalkativeValue = computed<boolean>({\n  get: () => createGameDto.value.options.roles.seer.isTalkative,\n  set: (value: boolean) => {\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.seer.isTalkative = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst canSeerSeeRolesValue = computed<boolean>({\n  get: () => createGameDto.value.options.roles.seer.canSeeRoles,\n  set: (value: boolean) => {\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.seer.canSeeRoles = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst isSeerTalkativeDescription = computed<string>(() => {\n  const booleanAsAffirmative = convertBooleanAsAffirmativeString(isSeerTalkativeValue.value);\n\n  return t(`components.GameLobbyOptionsHubRolesTabSeer.options.isTalkative.descriptions.${booleanAsAffirmative}`);\n});\n\nconst canSeerSeeRolesDescription = computed<string>(() => {\n  const booleanAsAffirmative = convertBooleanAsAffirmativeString(canSeerSeeRolesValue.value);\n\n  return t(`components.GameLobbyOptionsHubRolesTabSeer.options.canSeeRoles.descriptions.${booleanAsAffirmative}`);\n});\n</script>"
    },
    "components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriff.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1026",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "266"
          ],
          "coveredBy": [
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 93
            },
            "start": {
              "column": 49,
              "line": 86
            }
          }
        },
        {
          "id": "1027",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Sheriff Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "266"
          ],
          "coveredBy": [
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 65,
              "line": 87
            },
            "start": {
              "column": 8,
              "line": 87
            }
          }
        },
        {
          "id": "1028",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "273"
          ],
          "coveredBy": [
            "273"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 92
            },
            "start": {
              "column": 28,
              "line": 88
            }
          }
        },
        {
          "id": "1029",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "266"
          ],
          "coveredBy": [
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 102
            },
            "start": {
              "column": 55,
              "line": 95
            }
          }
        },
        {
          "id": "1030",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Sheriff Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "266"
          ],
          "coveredBy": [
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 76,
              "line": 96
            },
            "start": {
              "column": 8,
              "line": 96
            }
          }
        },
        {
          "id": "1031",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "277"
          ],
          "coveredBy": [
            "277"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 101
            },
            "start": {
              "column": 28,
              "line": 97
            }
          }
        },
        {
          "id": "1032",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "266"
          ],
          "coveredBy": [
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 111
            },
            "start": {
              "column": 59,
              "line": 104
            }
          }
        },
        {
          "id": "1033",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Sheriff Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "266"
          ],
          "coveredBy": [
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 70,
              "line": 105
            },
            "start": {
              "column": 8,
              "line": 105
            }
          }
        },
        {
          "id": "1034",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "281"
          ],
          "coveredBy": [
            "281"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 110
            },
            "start": {
              "column": 28,
              "line": 106
            }
          }
        },
        {
          "id": "1035",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Sheriff Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "266"
          ],
          "coveredBy": [
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 117
            },
            "start": {
              "column": 60,
              "line": 113
            }
          }
        },
        {
          "id": "1036",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Sheriff Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "266"
          ],
          "coveredBy": [
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 114,
              "line": 116
            },
            "start": {
              "column": 12,
              "line": 116
            }
          }
        },
        {
          "id": "1037",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Sheriff Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "266"
          ],
          "coveredBy": [
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 123
            },
            "start": {
              "column": 66,
              "line": 119
            }
          }
        },
        {
          "id": "1038",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Sheriff Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "266"
          ],
          "coveredBy": [
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 125,
              "line": 122
            },
            "start": {
              "column": 12,
              "line": 122
            }
          }
        },
        {
          "id": "1039",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Sheriff Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "266"
          ],
          "coveredBy": [
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 129
            },
            "start": {
              "column": 70,
              "line": 125
            }
          }
        },
        {
          "id": "1040",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Sheriff Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "266"
          ],
          "coveredBy": [
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 119,
              "line": 128
            },
            "start": {
              "column": 12,
              "line": 128
            }
          }
        }
      ],
      "source": "<template>\n  <VuePrimeFieldset\n    id=\"game-lobby-options-hub-roles-tab-sheriff\"\n    :pt=\"{ 'legend': 'ml-4 !p-3 !px-6' }\"\n  >\n    <template #legend>\n      <div class=\"flex gap-4 items-center\">\n        <NuxtImg\n          :alt=\"$t('components.GameLobbyOptionsHubRolesTabSheriff.sheriffAlt')\"\n          class=\"duration-300 ease-in-out transition-all\"\n          :class=\"{ 'grayscale': !isSheriffEnabledValue }\"\n          height=\"50px\"\n          src=\"/svg/game/player/player-attribute/sheriff.svg\"\n          width=\"50px\"\n        />\n\n        <h2 id=\"game-lobby-options-hub-roles-tab-sheriff-title\">\n          {{ $t('components.GameLobbyOptionsHubRolesTabSheriff.sheriff') }}\n        </h2>\n      </div>\n    </template>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-sheriff-is-enabled-input-group\"\n      does-have-bottom-divider\n      :option-description=\"isSheriffEnabledDescription\"\n      option-icon-class=\"fa fa-crown text-amber-300\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabSheriff.options.isEnabled.label')\"\n    >\n      <AffirmativeToggleButton\n        id=\"game-lobby-options-hub-roles-tab-sheriff-is-sheriff-enabled-input\"\n        v-model=\"isSheriffEnabledValue\"\n        class=\"w-full\"\n      />\n    </GameOptionInputGroup>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-sheriff-must-settle-votes-input-group\"\n      does-have-bottom-divider\n      :option-description=\"mustSheriffSettleVotesDescription\"\n      option-icon-class=\"fa fa-gavel text-amber-800\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabSheriff.options.mustSettleTieInVotes.label')\"\n    >\n      <AffirmativeToggleButton\n        id=\"game-lobby-options-hub-roles-tab-sheriff-must-settle-votes-input\"\n        v-model=\"mustSheriffSettleVotesValue\"\n        class=\"w-full\"\n      />\n    </GameOptionInputGroup>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-sheriff-has-doubled-vote-input-group\"\n      does-have-bottom-divider\n      :option-description=\"doesSheriffHaveDoubledVoteDescription\"\n      option-icon-class=\"fa fa-balance-scale text-amber-500\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabSheriff.options.hasDoubledVote.label')\"\n    >\n      <AffirmativeToggleButton\n        id=\"game-lobby-options-hub-roles-tab-sheriff-has-doubled-vote-input\"\n        v-model=\"doesSheriffHaveDoubledVoteValue\"\n        class=\"w-full\"\n      />\n    </GameOptionInputGroup>\n\n    <GameLobbyOptionsHubRolesTabSheriffElection/>\n  </VuePrimeFieldset>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\nimport GameLobbyOptionsHubRolesTabSheriffElection from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.vue\";\nimport AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport { useStrings } from \"~/composables/misc/useStrings\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst { setCreateGameDto } = createGameDtoStore;\nconst { createGameDto } = storeToRefs(createGameDtoStore);\n\nconst { t } = useI18n();\n\nconst { convertBooleanAsAffirmativeString } = useStrings();\n\nconst isSheriffEnabledValue = computed<boolean>({\n  get: () => createGameDto.value.options.roles.sheriff.isEnabled,\n  set: (value: boolean) => {\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.sheriff.isEnabled = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst mustSheriffSettleVotesValue = computed<boolean>({\n  get: () => createGameDto.value.options.roles.sheriff.mustSettleTieInVotes,\n  set: (value: boolean) => {\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.sheriff.mustSettleTieInVotes = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst doesSheriffHaveDoubledVoteValue = computed<boolean>({\n  get: () => createGameDto.value.options.roles.sheriff.hasDoubledVote,\n  set: (value: boolean) => {\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.sheriff.hasDoubledVote = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst isSheriffEnabledDescription = computed<string>(() => {\n  const booleanAsAffirmative = convertBooleanAsAffirmativeString(isSheriffEnabledValue.value);\n\n  return t(`components.GameLobbyOptionsHubRolesTabSheriff.options.isEnabled.descriptions.${booleanAsAffirmative}`);\n});\n\nconst mustSheriffSettleVotesDescription = computed<string>(() => {\n  const booleanAsAffirmative = convertBooleanAsAffirmativeString(mustSheriffSettleVotesValue.value);\n\n  return t(`components.GameLobbyOptionsHubRolesTabSheriff.options.mustSettleTieInVotes.descriptions.${booleanAsAffirmative}`);\n});\n\nconst doesSheriffHaveDoubledVoteDescription = computed<string>(() => {\n  const booleanAsAffirmative = convertBooleanAsAffirmativeString(doesSheriffHaveDoubledVoteValue.value);\n\n  return t(`components.GameLobbyOptionsHubRolesTabSheriff.options.hasDoubledVote.descriptions.${booleanAsAffirmative}`);\n});\n</script>"
    },
    "components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1049",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "973"
          ],
          "coveredBy": [
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 85,
              "line": 71
            },
            "start": {
              "column": 8,
              "line": 71
            }
          }
        },
        {
          "id": "1060",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "973"
          ],
          "coveredBy": [
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 85
            },
            "start": {
              "column": 99,
              "line": 82
            }
          }
        },
        {
          "id": "1042",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Sheriff Election Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "394"
          ],
          "coveredBy": [
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 70,
              "line": 59
            },
            "start": {
              "column": 8,
              "line": 59
            }
          }
        },
        {
          "id": "1043",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "403"
          ],
          "coveredBy": [
            "403",
            "404",
            "405"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 67
            },
            "start": {
              "column": 34,
              "line": 60
            }
          }
        },
        {
          "id": "1044",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "403"
          ],
          "coveredBy": [
            "403",
            "404",
            "405"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 61
            },
            "start": {
              "column": 9,
              "line": 61
            }
          }
        },
        {
          "id": "1045",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      _CreateGameDto {\n        \"additionalCards\": undefined,\n        \"options\": _GameOptions {\n          \"composition\": _CompositionGameOptions {\n            \"isHidden\": false,\n          },\n          \"roles\": _RolesGameOptions {\n            \"actor\": _ActorGameOptions {\n              \"additionalCardsCount\": 3,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"areRevealedOnDeath\": true,\n            \"bearTamer\": _BearTamerGameOptions {\n              \"doesGrowlOnWerewolvesSide\": true,\n            },\n            \"bigBadWolf\": _BigBadWolfGameOptions {\n              \"isPowerlessIfWerewolfDies\": true,\n            },\n            \"cupid\": _CupidGameOptions {\n              \"lovers\": _CupidLoversGameOptions {\n                \"doRevealRoleToEachOther\": false,\n              },\n              \"mustWinWithLovers\": false,\n            },\n            \"defender\": _DefenderGameOptions {\n              \"canProtectTwice\": false,\n            },\n            \"doSkipCallIfNoTarget\": false,\n            \"elder\": _ElderGameOptions {\n              \"doesTakeHisRevenge\": true,\n              \"livesCountAgainstWerewolves\": 2,\n            },\n            \"fox\": _FoxGameOptions {\n              \"isPowerlessIfMissesWerewolf\": true,\n            },\n            \"idiot\": _IdiotGameOptions {\n              \"doesDieOnElderDeath\": true,\n            },\n            \"littleGirl\": _LittleGirlGameOptions {\n              \"isProtectedByDefender\": false,\n            },\n            \"piedPiper\": _PiedPiperGameOptions {\n              \"charmedPeopleCountPerNight\": 2,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"prejudicedManipulator\": _PrejudicedManipulatorGameOptions {\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"scandalmonger\": _ScandalmongerGameOptions {\n              \"markPenalty\": 2,\n            },\n            \"seer\": _SeerGameOptions {\n              \"canSeeRoles\": true,\n              \"isTalkative\": true,\n            },\n            \"sheriff\": _SheriffGameOptions {\n              \"electedAt\": _SheriffElectionGameOptions {\n                \"phaseName\": \"night\",\n                \"turn\": null,\n              },\n              \"hasDoubledVote\": true,\n              \"isEnabled\": true,\n              \"mustSettleTieInVotes\": true,\n            },\n            \"stutteringJudge\": _StutteringJudgeGameOptions {\n              \"voteRequestsCount\": 1,\n            },\n            \"thief\": _ThiefGameOptions {\n              \"additionalCardsCount\": 2,\n              \"isChosenCardRevealed\": false,\n              \"mustChooseBetweenWerewolves\": true,\n            },\n            \"threeBrothers\": _ThreeBrothersGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"twoSisters\": _TwoSistersGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"whiteWerewolf\": _WhiteWerewolfGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"wildChild\": _WildChildGameOptions {\n              \"isTransformationRevealed\": false,\n            },\n            \"witch\": _WitchGameOptions {\n              \"doesKnowWerewolvesTargets\": true,\n            },\n            \"wolfHound\": _WolfHoundGameOptions {\n              \"isChosenSideRevealed\": false,\n              \"isSideRandomlyChosen\": false,\n            },\n          },\n          \"votes\": _VotesGameOptions {\n            \"canBeSkipped\": true,\n          },\n        },\n        \"players\": Array [],\n      },\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "static": false,
          "testsCompleted": 3,
          "killedBy": [
            "405"
          ],
          "coveredBy": [
            "403",
            "404",
            "405"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 61
            },
            "start": {
              "column": 9,
              "line": 61
            }
          }
        },
        {
          "id": "1041",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "973"
          ],
          "coveredBy": [
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 68
            },
            "start": {
              "column": 51,
              "line": 58
            }
          }
        },
        {
          "id": "1046",
          "mutatorName": "EqualityOperator",
          "replacement": "value !== null",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "403"
          ],
          "coveredBy": [
            "403",
            "404",
            "405"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 61
            },
            "start": {
              "column": 9,
              "line": 61
            }
          }
        },
        {
          "id": "1047",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      _CreateGameDto {\n        \"additionalCards\": undefined,\n        \"options\": _GameOptions {\n          \"composition\": _CompositionGameOptions {\n            \"isHidden\": false,\n          },\n          \"roles\": _RolesGameOptions {\n            \"actor\": _ActorGameOptions {\n              \"additionalCardsCount\": 3,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"areRevealedOnDeath\": true,\n            \"bearTamer\": _BearTamerGameOptions {\n              \"doesGrowlOnWerewolvesSide\": true,\n            },\n            \"bigBadWolf\": _BigBadWolfGameOptions {\n              \"isPowerlessIfWerewolfDies\": true,\n            },\n            \"cupid\": _CupidGameOptions {\n              \"lovers\": _CupidLoversGameOptions {\n                \"doRevealRoleToEachOther\": false,\n              },\n              \"mustWinWithLovers\": false,\n            },\n            \"defender\": _DefenderGameOptions {\n              \"canProtectTwice\": false,\n            },\n            \"doSkipCallIfNoTarget\": false,\n            \"elder\": _ElderGameOptions {\n              \"doesTakeHisRevenge\": true,\n              \"livesCountAgainstWerewolves\": 2,\n            },\n            \"fox\": _FoxGameOptions {\n              \"isPowerlessIfMissesWerewolf\": true,\n            },\n            \"idiot\": _IdiotGameOptions {\n              \"doesDieOnElderDeath\": true,\n            },\n            \"littleGirl\": _LittleGirlGameOptions {\n              \"isProtectedByDefender\": false,\n            },\n            \"piedPiper\": _PiedPiperGameOptions {\n              \"charmedPeopleCountPerNight\": 2,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"prejudicedManipulator\": _PrejudicedManipulatorGameOptions {\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"scandalmonger\": _ScandalmongerGameOptions {\n              \"markPenalty\": 2,\n            },\n            \"seer\": _SeerGameOptions {\n              \"canSeeRoles\": true,\n              \"isTalkative\": true,\n            },\n            \"sheriff\": _SheriffGameOptions {\n              \"electedAt\": _SheriffElectionGameOptions {\n                \"phaseName\": \"night\",\n                \"turn\": null,\n              },\n              \"hasDoubledVote\": true,\n              \"isEnabled\": true,\n              \"mustSettleTieInVotes\": true,\n            },\n            \"stutteringJudge\": _StutteringJudgeGameOptions {\n              \"voteRequestsCount\": 1,\n            },\n            \"thief\": _ThiefGameOptions {\n              \"additionalCardsCount\": 2,\n              \"isChosenCardRevealed\": false,\n              \"mustChooseBetweenWerewolves\": true,\n            },\n            \"threeBrothers\": _ThreeBrothersGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"twoSisters\": _TwoSistersGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"whiteWerewolf\": _WhiteWerewolfGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"wildChild\": _WildChildGameOptions {\n              \"isTransformationRevealed\": false,\n            },\n            \"witch\": _WitchGameOptions {\n              \"doesKnowWerewolvesTargets\": true,\n            },\n            \"wolfHound\": _WolfHoundGameOptions {\n              \"isChosenSideRevealed\": false,\n              \"isSideRandomlyChosen\": false,\n            },\n          },\n          \"votes\": _VotesGameOptions {\n            \"canBeSkipped\": true,\n          },\n        },\n        \"players\": Array [],\n      },\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "405"
          ],
          "coveredBy": [
            "405"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 63
            },
            "start": {
              "column": 25,
              "line": 61
            }
          }
        },
        {
          "id": "1050",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Sheriff Election Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "394"
          ],
          "coveredBy": [
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 85,
              "line": 71
            },
            "start": {
              "column": 14,
              "line": 71
            }
          }
        },
        {
          "id": "1051",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected 'false' to be 'true' // Object.is equality",
          "status": "Killed",
          "static": false,
          "testsCompleted": 5,
          "killedBy": [
            "398"
          ],
          "coveredBy": [
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 85,
              "line": 71
            },
            "start": {
              "column": 14,
              "line": 71
            }
          }
        },
        {
          "id": "1052",
          "mutatorName": "EqualityOperator",
          "replacement": "createGameDto.value.options.roles.sheriff.electedAt.phaseName !== \"day\"",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Sheriff Election Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "394"
          ],
          "coveredBy": [
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 85,
              "line": 71
            },
            "start": {
              "column": 14,
              "line": 71
            }
          }
        },
        {
          "id": "1053",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected 'false' to be 'true' // Object.is equality",
          "status": "Killed",
          "static": false,
          "testsCompleted": 5,
          "killedBy": [
            "398"
          ],
          "coveredBy": [
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 85,
              "line": 71
            },
            "start": {
              "column": 80,
              "line": 71
            }
          }
        },
        {
          "id": "1054",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "400"
          ],
          "coveredBy": [
            "400",
            "401"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 76
            },
            "start": {
              "column": 28,
              "line": 72
            }
          }
        },
        {
          "id": "1055",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  _CreateGameDto {\n    \"additionalCards\": undefined,\n    \"options\": _GameOptions {\n      \"composition\": _CompositionGameOptions {\n        \"isHidden\": false,\n      },\n      \"roles\": _RolesGameOptions {\n        \"actor\": _ActorGameOptions {\n          \"additionalCardsCount\": 3,\n          \"isPowerlessOnWerewolvesSide\": true,\n        },\n        \"areRevealedOnDeath\": true,\n        \"bearTamer\": _BearTamerGameOptions {\n          \"doesGrowlOnWerewolvesSide\": true,\n        },\n        \"bigBadWolf\": _BigBadWolfGameOptions {\n          \"isPowerlessIfWerewolfDies\": true,\n        },\n        \"cupid\": _CupidGameOptions {\n          \"lovers\": _CupidLoversGameOptions {\n            \"doRevealRoleToEachOther\": false,\n          },\n          \"mustWinWithLovers\": false,\n        },\n        \"defender\": _DefenderGameOptions {\n          \"canProtectTwice\": false,\n        },\n        \"doSkipCallIfNoTarget\": false,\n        \"elder\": _ElderGameOptions {\n          \"doesTakeHisRevenge\": true,\n          \"livesCountAgainstWerewolves\": 2,\n        },\n        \"fox\": _FoxGameOptions {\n          \"isPowerlessIfMissesWerewolf\": true,\n        },\n        \"idiot\": _IdiotGameOptions {\n          \"doesDieOnElderDeath\": true,\n        },\n        \"littleGirl\": _LittleGirlGameOptions {\n          \"isProtectedByDefender\": false,\n        },\n        \"piedPiper\": _PiedPiperGameOptions {\n          \"charmedPeopleCountPerNight\": 2,\n          \"isPowerlessOnWerewolvesSide\": true,\n        },\n        \"prejudicedManipulator\": _PrejudicedManipulatorGameOptions {\n          \"isPowerlessOnWerewolvesSide\": true,\n        },\n        \"scandalmonger\": _ScandalmongerGameOptions {\n          \"markPenalty\": 2,\n        },\n        \"seer\": _SeerGameOptions {\n          \"canSeeRoles\": true,\n          \"isTalkative\": true,\n        },\n        \"sheriff\": _SheriffGameOptions {\n          \"electedAt\": _SheriffElectionGameOptions {\n            \"phaseName\": \"day\",\n            \"turn\": 1,\n          },\n          \"hasDoubledVote\": true,\n          \"isEnabled\": true,\n          \"mustSettleTieInVotes\": true,\n        },\n        \"stutteringJudge\": _StutteringJudgeGameOptions {\n          \"voteRequestsCount\": 1,\n        },\n        \"thief\": _ThiefGameOptions {\n          \"additionalCardsCount\": 2,\n          \"isChosenCardRevealed\": false,\n          \"mustChooseBetweenWerewolves\": true,\n        },\n        \"threeBrothers\": _ThreeBrothersGameOptions {\n          \"wakingUpInterval\": 2,\n        },\n        \"twoSisters\": _TwoSistersGameOptions {\n          \"wakingUpInterval\": 2,\n        },\n        \"whiteWerewolf\": _WhiteWerewolfGameOptions {\n          \"wakingUpInterval\": 2,\n        },\n        \"wildChild\": _WildChildGameOptions {\n          \"isTransformationRevealed\": false,\n        },\n        \"witch\": _WitchGameOptions {\n          \"doesKnowWerewolvesTargets\": true,\n        },\n        \"wolfHound\": _WolfHoundGameOptions {\n          \"isChosenSideRevealed\": false,\n          \"isSideRandomlyChosen\": false,\n        },\n      },\n      \"votes\": _VotesGameOptions {\n        \"canBeSkipped\": true,\n      },\n    },\n    \"players\": Array [],\n  },\n], but it was called with _CreateGameDto {\n  \"additionalCards\": undefined,\n  \"options\": _GameOptions {\n    \"composition\": _CompositionGameOptions {\n      \"isHidden\": false,\n    },\n    \"roles\": _RolesGameOptions {\n      \"actor\": _ActorGameOptions {\n        \"additionalCardsCount\": 3,\n        \"isPowerlessOnWerewolvesSide\": true,\n      },\n      \"areRevealedOnDeath\": true,\n      \"bearTamer\": _BearTamerGameOptions {\n        \"doesGrowlOnWerewolvesSide\": true,\n      },\n      \"bigBadWolf\": _BigBadWolfGameOptions {\n        \"isPowerlessIfWerewolfDies\": true,\n      },\n      \"cupid\": _CupidGameOptions {\n        \"lovers\": _CupidLoversGameOptions {\n          \"doRevealRoleToEachOther\": false,\n        },\n        \"mustWinWithLovers\": false,\n      },\n      \"defender\": _DefenderGameOptions {\n        \"canProtectTwice\": false,\n      },\n      \"doSkipCallIfNoTarget\": false,\n      \"elder\": _ElderGameOptions {\n        \"doesTakeHisRevenge\": true,\n        \"livesCountAgainstWerewolves\": 2,\n      },\n      \"fox\": _FoxGameOptions {\n        \"isPowerlessIfMissesWerewolf\": true,\n      },\n      \"idiot\": _IdiotGameOptions {\n        \"doesDieOnElderDeath\": true,\n      },\n      \"littleGirl\": _LittleGirlGameOptions {\n        \"isProtectedByDefender\": false,\n      },\n      \"piedPiper\": _PiedPiperGameOptions {\n        \"charmedPeopleCountPerNight\": 2,\n        \"isPowerlessOnWerewolvesSide\": true,\n      },\n      \"prejudicedManipulator\": _PrejudicedManipulatorGameOptions {\n        \"isPowerlessOnWerewolvesSide\": true,\n      },\n      \"scandalmonger\": _ScandalmongerGameOptions {\n        \"markPenalty\": 2,\n      },\n      \"seer\": _SeerGameOptions {\n        \"canSeeRoles\": true,\n        \"isTalkative\": true,\n      },\n      \"sheriff\": _SheriffGameOptions {\n        \"electedAt\": _SheriffElectionGameOptions {\n          \"phaseName\": \"\",\n          \"turn\": 1,\n        },\n        \"hasDoubledVote\": true,\n        \"isEnabled\": true,\n        \"mustSettleTieInVotes\": true,\n      },\n      \"stutteringJudge\": _StutteringJudgeGameOptions {\n        \"voteRequestsCount\": 1,\n      },\n      \"thief\": _ThiefGameOptions {\n        \"additionalCardsCount\": 2,\n        \"isChosenCardRevealed\": false,\n        \"mustChooseBetweenWerewolves\": true,\n      },\n      \"threeBrothers\": _ThreeBrothersGameOptions {\n        \"wakingUpInterval\": 2,\n      },\n      \"twoSisters\": _TwoSistersGameOptions {\n        \"wakingUpInterval\": 2,\n      },\n      \"whiteWerewolf\": _WhiteWerewolfGameOptions {\n        \"wakingUpInterval\": 2,\n      },\n      \"wildChild\": _WildChildGameOptions {\n        \"isTransformationRevealed\": false,\n      },\n      \"witch\": _WitchGameOptions {\n        \"doesKnowWerewolvesTargets\": true,\n      },\n      \"wolfHound\": _WolfHoundGameOptions {\n        \"isChosenSideRevealed\": false,\n        \"isSideRandomlyChosen\": false,\n      },\n    },\n    \"votes\": _VotesGameOptions {\n      \"canBeSkipped\": true,\n    },\n  },\n  \"players\": Array [],\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "400"
          ],
          "coveredBy": [
            "400"
          ],
          "location": {
            "end": {
              "column": 81,
              "line": 74
            },
            "start": {
              "column": 76,
              "line": 74
            }
          }
        },
        {
          "id": "1056",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  _CreateGameDto {\n    \"additionalCards\": undefined,\n    \"options\": _GameOptions {\n      \"composition\": _CompositionGameOptions {\n        \"isHidden\": false,\n      },\n      \"roles\": _RolesGameOptions {\n        \"actor\": _ActorGameOptions {\n          \"additionalCardsCount\": 3,\n          \"isPowerlessOnWerewolvesSide\": true,\n        },\n        \"areRevealedOnDeath\": true,\n        \"bearTamer\": _BearTamerGameOptions {\n          \"doesGrowlOnWerewolvesSide\": true,\n        },\n        \"bigBadWolf\": _BigBadWolfGameOptions {\n          \"isPowerlessIfWerewolfDies\": true,\n        },\n        \"cupid\": _CupidGameOptions {\n          \"lovers\": _CupidLoversGameOptions {\n            \"doRevealRoleToEachOther\": false,\n          },\n          \"mustWinWithLovers\": false,\n        },\n        \"defender\": _DefenderGameOptions {\n          \"canProtectTwice\": false,\n        },\n        \"doSkipCallIfNoTarget\": false,\n        \"elder\": _ElderGameOptions {\n          \"doesTakeHisRevenge\": true,\n          \"livesCountAgainstWerewolves\": 2,\n        },\n        \"fox\": _FoxGameOptions {\n          \"isPowerlessIfMissesWerewolf\": true,\n        },\n        \"idiot\": _IdiotGameOptions {\n          \"doesDieOnElderDeath\": true,\n        },\n        \"littleGirl\": _LittleGirlGameOptions {\n          \"isProtectedByDefender\": false,\n        },\n        \"piedPiper\": _PiedPiperGameOptions {\n          \"charmedPeopleCountPerNight\": 2,\n          \"isPowerlessOnWerewolvesSide\": true,\n        },\n        \"prejudicedManipulator\": _PrejudicedManipulatorGameOptions {\n          \"isPowerlessOnWerewolvesSide\": true,\n        },\n        \"scandalmonger\": _ScandalmongerGameOptions {\n          \"markPenalty\": 2,\n        },\n        \"seer\": _SeerGameOptions {\n          \"canSeeRoles\": true,\n          \"isTalkative\": true,\n        },\n        \"sheriff\": _SheriffGameOptions {\n          \"electedAt\": _SheriffElectionGameOptions {\n            \"phaseName\": \"night\",\n            \"turn\": 1,\n          },\n          \"hasDoubledVote\": true,\n          \"isEnabled\": true,\n          \"mustSettleTieInVotes\": true,\n        },\n        \"stutteringJudge\": _StutteringJudgeGameOptions {\n          \"voteRequestsCount\": 1,\n        },\n        \"thief\": _ThiefGameOptions {\n          \"additionalCardsCount\": 2,\n          \"isChosenCardRevealed\": false,\n          \"mustChooseBetweenWerewolves\": true,\n        },\n        \"threeBrothers\": _ThreeBrothersGameOptions {\n          \"wakingUpInterval\": 2,\n        },\n        \"twoSisters\": _TwoSistersGameOptions {\n          \"wakingUpInterval\": 2,\n        },\n        \"whiteWerewolf\": _WhiteWerewolfGameOptions {\n          \"wakingUpInterval\": 2,\n        },\n        \"wildChild\": _WildChildGameOptions {\n          \"isTransformationRevealed\": false,\n        },\n        \"witch\": _WitchGameOptions {\n          \"doesKnowWerewolvesTargets\": true,\n        },\n        \"wolfHound\": _WolfHoundGameOptions {\n          \"isChosenSideRevealed\": false,\n          \"isSideRandomlyChosen\": false,\n        },\n      },\n      \"votes\": _VotesGameOptions {\n        \"canBeSkipped\": true,\n      },\n    },\n    \"players\": Array [],\n  },\n], but it was called with _CreateGameDto {\n  \"additionalCards\": undefined,\n  \"options\": _GameOptions {\n    \"composition\": _CompositionGameOptions {\n      \"isHidden\": false,\n    },\n    \"roles\": _RolesGameOptions {\n      \"actor\": _ActorGameOptions {\n        \"additionalCardsCount\": 3,\n        \"isPowerlessOnWerewolvesSide\": true,\n      },\n      \"areRevealedOnDeath\": true,\n      \"bearTamer\": _BearTamerGameOptions {\n        \"doesGrowlOnWerewolvesSide\": true,\n      },\n      \"bigBadWolf\": _BigBadWolfGameOptions {\n        \"isPowerlessIfWerewolfDies\": true,\n      },\n      \"cupid\": _CupidGameOptions {\n        \"lovers\": _CupidLoversGameOptions {\n          \"doRevealRoleToEachOther\": false,\n        },\n        \"mustWinWithLovers\": false,\n      },\n      \"defender\": _DefenderGameOptions {\n        \"canProtectTwice\": false,\n      },\n      \"doSkipCallIfNoTarget\": false,\n      \"elder\": _ElderGameOptions {\n        \"doesTakeHisRevenge\": true,\n        \"livesCountAgainstWerewolves\": 2,\n      },\n      \"fox\": _FoxGameOptions {\n        \"isPowerlessIfMissesWerewolf\": true,\n      },\n      \"idiot\": _IdiotGameOptions {\n        \"doesDieOnElderDeath\": true,\n      },\n      \"littleGirl\": _LittleGirlGameOptions {\n        \"isProtectedByDefender\": false,\n      },\n      \"piedPiper\": _PiedPiperGameOptions {\n        \"charmedPeopleCountPerNight\": 2,\n        \"isPowerlessOnWerewolvesSide\": true,\n      },\n      \"prejudicedManipulator\": _PrejudicedManipulatorGameOptions {\n        \"isPowerlessOnWerewolvesSide\": true,\n      },\n      \"scandalmonger\": _ScandalmongerGameOptions {\n        \"markPenalty\": 2,\n      },\n      \"seer\": _SeerGameOptions {\n        \"canSeeRoles\": true,\n        \"isTalkative\": true,\n      },\n      \"sheriff\": _SheriffGameOptions {\n        \"electedAt\": _SheriffElectionGameOptions {\n          \"phaseName\": \"\",\n          \"turn\": 1,\n        },\n        \"hasDoubledVote\": true,\n        \"isEnabled\": true,\n        \"mustSettleTieInVotes\": true,\n      },\n      \"stutteringJudge\": _StutteringJudgeGameOptions {\n        \"voteRequestsCount\": 1,\n      },\n      \"thief\": _ThiefGameOptions {\n        \"additionalCardsCount\": 2,\n        \"isChosenCardRevealed\": false,\n        \"mustChooseBetweenWerewolves\": true,\n      },\n      \"threeBrothers\": _ThreeBrothersGameOptions {\n        \"wakingUpInterval\": 2,\n      },\n      \"twoSisters\": _TwoSistersGameOptions {\n        \"wakingUpInterval\": 2,\n      },\n      \"whiteWerewolf\": _WhiteWerewolfGameOptions {\n        \"wakingUpInterval\": 2,\n      },\n      \"wildChild\": _WildChildGameOptions {\n        \"isTransformationRevealed\": false,\n      },\n      \"witch\": _WitchGameOptions {\n        \"doesKnowWerewolvesTargets\": true,\n      },\n      \"wolfHound\": _WolfHoundGameOptions {\n        \"isChosenSideRevealed\": false,\n        \"isSideRandomlyChosen\": false,\n      },\n    },\n    \"votes\": _VotesGameOptions {\n      \"canBeSkipped\": true,\n    },\n  },\n  \"players\": Array [],\n}",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "401"
          ],
          "coveredBy": [
            "401"
          ],
          "location": {
            "end": {
              "column": 91,
              "line": 74
            },
            "start": {
              "column": 84,
              "line": 74
            }
          }
        },
        {
          "id": "1057",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Sheriff Election Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "394"
          ],
          "coveredBy": [
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 86
            },
            "start": {
              "column": 63,
              "line": 79
            }
          }
        },
        {
          "id": "1048",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "973"
          ],
          "coveredBy": [
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 77
            },
            "start": {
              "column": 66,
              "line": 70
            }
          }
        },
        {
          "id": "1058",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Sheriff Election Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "394"
          ],
          "coveredBy": [
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 116,
              "line": 80
            },
            "start": {
              "column": 24,
              "line": 80
            }
          }
        },
        {
          "id": "1059",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Sheriff Election Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "394"
          ],
          "coveredBy": [
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 97,
              "line": 82
            },
            "start": {
              "column": 12,
              "line": 82
            }
          }
        },
        {
          "id": "1061",
          "mutatorName": "MethodExpression",
          "replacement": "phaseLabel.toUpperCase()",
          "statusReason": "Snapshot `Game Lobby Options Hub Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "973"
          ],
          "coveredBy": [
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 84
            },
            "start": {
              "column": 12,
              "line": 84
            }
          }
        }
      ],
      "source": "<template>\n  <GameOptionInputGroup\n    id=\"game-lobby-options-hub-roles-tab-sheriff-election-input-group\"\n    :option-description=\"sheriffElectionTurnDescription\"\n    option-icon-class=\"fa fa-clock text-white\"\n    :option-label=\"$t('components.GameLobbyOptionsHubRolesTabSheriffElection.options.electedAt.label')\"\n  >\n    <VuePrimeToggleButton\n      id=\"game-lobby-options-hub-roles-tab-sheriff-election-phase-input\"\n      v-model=\"sheriffPhaseNameElectionValueAsBoolean\"\n      class=\"mb-8 w-full\"\n      off-icon=\"fa fa-moon !text-white\"\n      :off-label=\"$t('shared.game.phase.night')\"\n      on-icon=\"fa fa-sun !text-white\"\n      :on-label=\"$t('shared.game.phase.day')\"\n    />\n\n    <VuePrimeFloatLabel>\n      <label\n        id=\"game-lobby-options-hub-roles-tab-sheriff-election-turn-label\"\n        for=\"game-lobby-options-hub-roles-tab-sheriff-election-turn-input\"\n      >\n        {{ $t(\"components.GameLobbyOptionsHubRolesTabSheriffElection.options.electedAt.turn.label\") }}\n      </label>\n\n      <VuePrimeInputNumber\n        id=\"game-lobby-options-hub-roles-tab-sheriff-election-turn-input\"\n        v-model=\"sheriffElectionTurnValue\"\n        class=\"w-full\"\n        :max=\"10\"\n        :min=\"1\"\n      />\n    </VuePrimeFloatLabel>\n\n    <VuePrimeSlider\n      id=\"game-lobby-options-hub-roles-tab-sheriff-election-turn-slider\"\n      v-model=\"sheriffElectionTurnValue\"\n      class=\"mt-4 w-full\"\n      :max=\"10\"\n      :min=\"1\"\n      :step=\"1\"\n    />\n  </GameOptionInputGroup>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\nimport GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst { setCreateGameDto } = createGameDtoStore;\nconst { createGameDto } = storeToRefs(createGameDtoStore);\n\nconst { t } = useI18n();\n\nconst sheriffElectionTurnValue = computed<number>({\n  get: () => createGameDto.value.options.roles.sheriff.electedAt.turn,\n  set: (value: number | null) => {\n    if (value === null) {\n      return;\n    }\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.sheriff.electedAt.turn = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst sheriffPhaseNameElectionValueAsBoolean = computed<boolean>({\n  get: () => createGameDto.value.options.roles.sheriff.electedAt.phaseName === \"day\",\n  set: (value: boolean) => {\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.sheriff.electedAt.phaseName = value ? \"day\" : \"night\";\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst sheriffElectionTurnDescription = computed<string>(() => {\n  const phaseLabel = t(`shared.game.definitePhase.${createGameDto.value.options.roles.sheriff.electedAt.phaseName}`);\n\n  return t(\"components.GameLobbyOptionsHubRolesTabSheriffElection.options.electedAt.description\", {\n    turn: sheriffElectionTurnValue.value,\n    phase: phaseLabel.toLowerCase(),\n  });\n});\n</script>"
    },
    "components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabStutteringJudge/GameLobbyOptionsHubRolesTabStutteringJudge.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1062",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "651"
          ],
          "coveredBy": [
            "651",
            "652",
            "653",
            "654",
            "655",
            "656",
            "657",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 68
            },
            "start": {
              "column": 64,
              "line": 58
            }
          }
        },
        {
          "id": "1063",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Stuttering Judge Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "651"
          ],
          "coveredBy": [
            "651",
            "652",
            "653",
            "654",
            "655",
            "656",
            "657",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 81,
              "line": 59
            },
            "start": {
              "column": 8,
              "line": 59
            }
          }
        },
        {
          "id": "1064",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "655"
          ],
          "coveredBy": [
            "655",
            "656",
            "657"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 67
            },
            "start": {
              "column": 34,
              "line": 60
            }
          }
        },
        {
          "id": "1065",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "655"
          ],
          "coveredBy": [
            "655",
            "656",
            "657"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 61
            },
            "start": {
              "column": 9,
              "line": 61
            }
          }
        },
        {
          "id": "1066",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      _CreateGameDto {\n        \"additionalCards\": undefined,\n        \"options\": _GameOptions {\n          \"composition\": _CompositionGameOptions {\n            \"isHidden\": false,\n          },\n          \"roles\": _RolesGameOptions {\n            \"actor\": _ActorGameOptions {\n              \"additionalCardsCount\": 3,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"areRevealedOnDeath\": true,\n            \"bearTamer\": _BearTamerGameOptions {\n              \"doesGrowlOnWerewolvesSide\": true,\n            },\n            \"bigBadWolf\": _BigBadWolfGameOptions {\n              \"isPowerlessIfWerewolfDies\": true,\n            },\n            \"cupid\": _CupidGameOptions {\n              \"lovers\": _CupidLoversGameOptions {\n                \"doRevealRoleToEachOther\": false,\n              },\n              \"mustWinWithLovers\": false,\n            },\n            \"defender\": _DefenderGameOptions {\n              \"canProtectTwice\": false,\n            },\n            \"doSkipCallIfNoTarget\": false,\n            \"elder\": _ElderGameOptions {\n              \"doesTakeHisRevenge\": true,\n              \"livesCountAgainstWerewolves\": 2,\n            },\n            \"fox\": _FoxGameOptions {\n              \"isPowerlessIfMissesWerewolf\": true,\n            },\n            \"idiot\": _IdiotGameOptions {\n              \"doesDieOnElderDeath\": true,\n            },\n            \"littleGirl\": _LittleGirlGameOptions {\n              \"isProtectedByDefender\": false,\n            },\n            \"piedPiper\": _PiedPiperGameOptions {\n              \"charmedPeopleCountPerNight\": 2,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"prejudicedManipulator\": _PrejudicedManipulatorGameOptions {\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"scandalmonger\": _ScandalmongerGameOptions {\n              \"markPenalty\": 2,\n            },\n            \"seer\": _SeerGameOptions {\n              \"canSeeRoles\": true,\n              \"isTalkative\": true,\n            },\n            \"sheriff\": _SheriffGameOptions {\n              \"electedAt\": _SheriffElectionGameOptions {\n                \"phaseName\": \"night\",\n                \"turn\": 1,\n              },\n              \"hasDoubledVote\": true,\n              \"isEnabled\": true,\n              \"mustSettleTieInVotes\": true,\n            },\n            \"stutteringJudge\": _StutteringJudgeGameOptions {\n              \"voteRequestsCount\": null,\n            },\n            \"thief\": _ThiefGameOptions {\n              \"additionalCardsCount\": 2,\n              \"isChosenCardRevealed\": false,\n              \"mustChooseBetweenWerewolves\": true,\n            },\n            \"threeBrothers\": _ThreeBrothersGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"twoSisters\": _TwoSistersGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"whiteWerewolf\": _WhiteWerewolfGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"wildChild\": _WildChildGameOptions {\n              \"isTransformationRevealed\": false,\n            },\n            \"witch\": _WitchGameOptions {\n              \"doesKnowWerewolvesTargets\": true,\n            },\n            \"wolfHound\": _WolfHoundGameOptions {\n              \"isChosenSideRevealed\": false,\n              \"isSideRandomlyChosen\": false,\n            },\n          },\n          \"votes\": _VotesGameOptions {\n            \"canBeSkipped\": true,\n          },\n        },\n        \"players\": Array [],\n      },\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "657"
          ],
          "coveredBy": [
            "655",
            "656",
            "657"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 61
            },
            "start": {
              "column": 9,
              "line": 61
            }
          }
        },
        {
          "id": "1067",
          "mutatorName": "EqualityOperator",
          "replacement": "value !== null",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "655"
          ],
          "coveredBy": [
            "655",
            "656",
            "657"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 61
            },
            "start": {
              "column": 9,
              "line": 61
            }
          }
        },
        {
          "id": "1068",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      _CreateGameDto {\n        \"additionalCards\": undefined,\n        \"options\": _GameOptions {\n          \"composition\": _CompositionGameOptions {\n            \"isHidden\": false,\n          },\n          \"roles\": _RolesGameOptions {\n            \"actor\": _ActorGameOptions {\n              \"additionalCardsCount\": 3,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"areRevealedOnDeath\": true,\n            \"bearTamer\": _BearTamerGameOptions {\n              \"doesGrowlOnWerewolvesSide\": true,\n            },\n            \"bigBadWolf\": _BigBadWolfGameOptions {\n              \"isPowerlessIfWerewolfDies\": true,\n            },\n            \"cupid\": _CupidGameOptions {\n              \"lovers\": _CupidLoversGameOptions {\n                \"doRevealRoleToEachOther\": false,\n              },\n              \"mustWinWithLovers\": false,\n            },\n            \"defender\": _DefenderGameOptions {\n              \"canProtectTwice\": false,\n            },\n            \"doSkipCallIfNoTarget\": false,\n            \"elder\": _ElderGameOptions {\n              \"doesTakeHisRevenge\": true,\n              \"livesCountAgainstWerewolves\": 2,\n            },\n            \"fox\": _FoxGameOptions {\n              \"isPowerlessIfMissesWerewolf\": true,\n            },\n            \"idiot\": _IdiotGameOptions {\n              \"doesDieOnElderDeath\": true,\n            },\n            \"littleGirl\": _LittleGirlGameOptions {\n              \"isProtectedByDefender\": false,\n            },\n            \"piedPiper\": _PiedPiperGameOptions {\n              \"charmedPeopleCountPerNight\": 2,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"prejudicedManipulator\": _PrejudicedManipulatorGameOptions {\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"scandalmonger\": _ScandalmongerGameOptions {\n              \"markPenalty\": 2,\n            },\n            \"seer\": _SeerGameOptions {\n              \"canSeeRoles\": true,\n              \"isTalkative\": true,\n            },\n            \"sheriff\": _SheriffGameOptions {\n              \"electedAt\": _SheriffElectionGameOptions {\n                \"phaseName\": \"night\",\n                \"turn\": 1,\n              },\n              \"hasDoubledVote\": true,\n              \"isEnabled\": true,\n              \"mustSettleTieInVotes\": true,\n            },\n            \"stutteringJudge\": _StutteringJudgeGameOptions {\n              \"voteRequestsCount\": null,\n            },\n            \"thief\": _ThiefGameOptions {\n              \"additionalCardsCount\": 2,\n              \"isChosenCardRevealed\": false,\n              \"mustChooseBetweenWerewolves\": true,\n            },\n            \"threeBrothers\": _ThreeBrothersGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"twoSisters\": _TwoSistersGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"whiteWerewolf\": _WhiteWerewolfGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"wildChild\": _WildChildGameOptions {\n              \"isTransformationRevealed\": false,\n            },\n            \"witch\": _WitchGameOptions {\n              \"doesKnowWerewolvesTargets\": true,\n            },\n            \"wolfHound\": _WolfHoundGameOptions {\n              \"isChosenSideRevealed\": false,\n              \"isSideRandomlyChosen\": false,\n            },\n          },\n          \"votes\": _VotesGameOptions {\n            \"canBeSkipped\": true,\n          },\n        },\n        \"players\": Array [],\n      },\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "657"
          ],
          "coveredBy": [
            "657"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 63
            },
            "start": {
              "column": 25,
              "line": 61
            }
          }
        },
        {
          "id": "1069",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Stuttering Judge Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "651"
          ],
          "coveredBy": [
            "651",
            "652",
            "653",
            "654",
            "655",
            "656",
            "657",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 74
            },
            "start": {
              "column": 76,
              "line": 70
            }
          }
        },
        {
          "id": "1070",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Stuttering Judge Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "651"
          ],
          "coveredBy": [
            "651",
            "652",
            "653",
            "654",
            "655",
            "656",
            "657",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 109,
              "line": 71
            },
            "start": {
              "column": 16,
              "line": 71
            }
          }
        },
        {
          "id": "1071",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Stuttering Judge Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "651"
          ],
          "coveredBy": [
            "651",
            "652",
            "653",
            "654",
            "655",
            "656",
            "657",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 72,
              "line": 73
            },
            "start": {
              "column": 18,
              "line": 73
            }
          }
        }
      ],
      "source": "<template>\n  <VuePrimeFieldset\n    id=\"game-lobby-options-hub-roles-tab-stuttering-judge\"\n    :pt=\"{ 'legend': 'ml-4 !p-3 !px-6' }\"\n  >\n    <template #legend>\n      <GameOptionRoleLegend role-name=\"stuttering-judge\"/>\n    </template>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-stuttering-judge-vote-requests-count-input-group\"\n      :option-description=\"stutteringJudgeVoteRequestsCountDescription\"\n      option-icon-class=\"fa fa-gavel text-cyan-300\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabStutteringJudge.options.voteRequestsCount.label')\"\n    >\n      <VuePrimeFloatLabel>\n        <label\n          id=\"game-lobby-options-hub-roles-tab-stuttering-judge-vote-requests-count-label\"\n          for=\"game-lobby-options-hub-roles-tab-stuttering-judge-vote-requests-count-input\"\n        >\n          {{ $t(\"components.GameLobbyOptionsHubRolesTabStutteringJudge.options.voteRequestsCount.label\") }}\n        </label>\n\n        <VuePrimeInputNumber\n          id=\"game-lobby-options-hub-roles-tab-stuttering-judge-vote-requests-count-input\"\n          v-model=\"stutteringJudgeVoteRequestsCountValue\"\n          class=\"w-full\"\n          :max=\"5\"\n          :min=\"1\"\n        />\n      </VuePrimeFloatLabel>\n\n      <VuePrimeSlider\n        id=\"game-lobby-options-hub-roles-tab-stuttering-judge-vote-requests-count-slider\"\n        v-model=\"stutteringJudgeVoteRequestsCountValue\"\n        class=\"mt-4 w-full\"\n        :max=\"5\"\n        :min=\"1\"\n        :step=\"1\"\n      />\n    </GameOptionInputGroup>\n  </VuePrimeFieldset>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\nimport GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport GameOptionRoleLegend from \"~/components/shared/game/game-options/GameOptionRoleLegend/GameOptionRoleLegend.vue\";\nimport { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst { setCreateGameDto } = createGameDtoStore;\nconst { createGameDto } = storeToRefs(createGameDtoStore);\n\nconst { t } = useI18n();\n\nconst stutteringJudgeVoteRequestsCountValue = computed<number>({\n  get: () => createGameDto.value.options.roles.stutteringJudge.voteRequestsCount,\n  set: (value: number | null) => {\n    if (value === null) {\n      return;\n    }\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.stutteringJudge.voteRequestsCount = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst stutteringJudgeVoteRequestsCountDescription = computed<string>(() => {\n  const tKey = \"components.GameLobbyOptionsHubRolesTabStutteringJudge.options.voteRequestsCount.description\";\n\n  return t(tKey, { count: stutteringJudgeVoteRequestsCountValue.value });\n});\n</script>"
    },
    "components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabThief/GameLobbyOptionsHubRolesTabThief.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1072",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "527"
          ],
          "coveredBy": [
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 63
            },
            "start": {
              "column": 65,
              "line": 56
            }
          }
        },
        {
          "id": "1073",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Thief Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "527"
          ],
          "coveredBy": [
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 81,
              "line": 57
            },
            "start": {
              "column": 8,
              "line": 57
            }
          }
        },
        {
          "id": "1074",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "531"
          ],
          "coveredBy": [
            "531"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 62
            },
            "start": {
              "column": 28,
              "line": 58
            }
          }
        },
        {
          "id": "1075",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "527"
          ],
          "coveredBy": [
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 72
            },
            "start": {
              "column": 58,
              "line": 65
            }
          }
        },
        {
          "id": "1076",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Thief Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "527"
          ],
          "coveredBy": [
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 74,
              "line": 66
            },
            "start": {
              "column": 8,
              "line": 66
            }
          }
        },
        {
          "id": "1077",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "535"
          ],
          "coveredBy": [
            "535"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 71
            },
            "start": {
              "column": 28,
              "line": 67
            }
          }
        },
        {
          "id": "1078",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Thief Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "527"
          ],
          "coveredBy": [
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 78
            },
            "start": {
              "column": 76,
              "line": 74
            }
          }
        },
        {
          "id": "1079",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Thief Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "527"
          ],
          "coveredBy": [
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 130,
              "line": 77
            },
            "start": {
              "column": 12,
              "line": 77
            }
          }
        },
        {
          "id": "1080",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Thief Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "527"
          ],
          "coveredBy": [
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 84
            },
            "start": {
              "column": 69,
              "line": 80
            }
          }
        },
        {
          "id": "1081",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Thief Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "527"
          ],
          "coveredBy": [
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 123,
              "line": 83
            },
            "start": {
              "column": 12,
              "line": 83
            }
          }
        }
      ],
      "source": "<template>\n  <VuePrimeFieldset\n    id=\"game-lobby-options-hub-roles-tab-thief\"\n    :pt=\"{ 'legend': 'ml-4 !p-3 !px-6' }\"\n  >\n    <template #legend>\n      <GameOptionRoleLegend role-name=\"thief\"/>\n    </template>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-thief-must-choose-between-werewolves-input-group\"\n      does-have-bottom-divider\n      :option-description=\"mustThiefChooseBetweenWerewolvesDescription\"\n      option-icon-class=\"fa fa-hands-bound text-cyan-500\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabThief.options.mustChooseBetweenWerewolves.label')\"\n    >\n      <AffirmativeToggleButton\n        id=\"game-lobby-options-hub-roles-tab-thief-must-choose-between-werewolves-input\"\n        v-model=\"mustThiefChooseBetweenWerewolvesValue\"\n        class=\"w-full\"\n      />\n    </GameOptionInputGroup>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-thief-is-chosen-card-revealed-input-group\"\n      :option-description=\"isThiefChosenCardRevealedDescription\"\n      option-icon-class=\"fa fa-mask text-cyan-500\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabThief.options.isChosenCardRevealed.label')\"\n    >\n      <AffirmativeToggleButton\n        id=\"game-lobby-options-hub-roles-tab-thief-is-chosen-card-revealed-input\"\n        v-model=\"isThiefChosenCardRevealedValue\"\n        class=\"w-full\"\n      />\n    </GameOptionInputGroup>\n  </VuePrimeFieldset>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\nimport AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport GameOptionRoleLegend from \"~/components/shared/game/game-options/GameOptionRoleLegend/GameOptionRoleLegend.vue\";\nimport { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport { useStrings } from \"~/composables/misc/useStrings\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst { setCreateGameDto } = createGameDtoStore;\nconst { createGameDto } = storeToRefs(createGameDtoStore);\n\nconst { t } = useI18n();\n\nconst { convertBooleanAsAffirmativeString } = useStrings();\n\nconst mustThiefChooseBetweenWerewolvesValue = computed<boolean>({\n  get: () => createGameDto.value.options.roles.thief.mustChooseBetweenWerewolves,\n  set: (value: boolean) => {\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.thief.mustChooseBetweenWerewolves = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst isThiefChosenCardRevealedValue = computed<boolean>({\n  get: () => createGameDto.value.options.roles.thief.isChosenCardRevealed,\n  set: (value: boolean) => {\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.thief.isChosenCardRevealed = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst mustThiefChooseBetweenWerewolvesDescription = computed<string>(() => {\n  const booleanAsAffirmative = convertBooleanAsAffirmativeString(mustThiefChooseBetweenWerewolvesValue.value);\n\n  return t(`components.GameLobbyOptionsHubRolesTabThief.options.mustChooseBetweenWerewolves.descriptions.${booleanAsAffirmative}`);\n});\n\nconst isThiefChosenCardRevealedDescription = computed<string>(() => {\n  const booleanAsAffirmative = convertBooleanAsAffirmativeString(isThiefChosenCardRevealedValue.value);\n\n  return t(`components.GameLobbyOptionsHubRolesTabThief.options.isChosenCardRevealed.descriptions.${booleanAsAffirmative}`);\n});\n</script>"
    },
    "components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabThreeBrothers/GameLobbyOptionsHubRolesTabThreeBrothers.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1082",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "603"
          ],
          "coveredBy": [
            "603",
            "604",
            "605",
            "606",
            "607",
            "608",
            "609",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 68
            },
            "start": {
              "column": 61,
              "line": 58
            }
          }
        },
        {
          "id": "1083",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Three Brothers Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "603"
          ],
          "coveredBy": [
            "603",
            "604",
            "605",
            "606",
            "607",
            "608",
            "609",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 78,
              "line": 59
            },
            "start": {
              "column": 8,
              "line": 59
            }
          }
        },
        {
          "id": "1084",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "607"
          ],
          "coveredBy": [
            "607",
            "608",
            "609"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 67
            },
            "start": {
              "column": 34,
              "line": 60
            }
          }
        },
        {
          "id": "1085",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "607"
          ],
          "coveredBy": [
            "607",
            "608",
            "609"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 61
            },
            "start": {
              "column": 9,
              "line": 61
            }
          }
        },
        {
          "id": "1086",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      _CreateGameDto {\n        \"additionalCards\": undefined,\n        \"options\": _GameOptions {\n          \"composition\": _CompositionGameOptions {\n            \"isHidden\": false,\n          },\n          \"roles\": _RolesGameOptions {\n            \"actor\": _ActorGameOptions {\n              \"additionalCardsCount\": 3,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"areRevealedOnDeath\": true,\n            \"bearTamer\": _BearTamerGameOptions {\n              \"doesGrowlOnWerewolvesSide\": true,\n            },\n            \"bigBadWolf\": _BigBadWolfGameOptions {\n              \"isPowerlessIfWerewolfDies\": true,\n            },\n            \"cupid\": _CupidGameOptions {\n              \"lovers\": _CupidLoversGameOptions {\n                \"doRevealRoleToEachOther\": false,\n              },\n              \"mustWinWithLovers\": false,\n            },\n            \"defender\": _DefenderGameOptions {\n              \"canProtectTwice\": false,\n            },\n            \"doSkipCallIfNoTarget\": false,\n            \"elder\": _ElderGameOptions {\n              \"doesTakeHisRevenge\": true,\n              \"livesCountAgainstWerewolves\": 2,\n            },\n            \"fox\": _FoxGameOptions {\n              \"isPowerlessIfMissesWerewolf\": true,\n            },\n            \"idiot\": _IdiotGameOptions {\n              \"doesDieOnElderDeath\": true,\n            },\n            \"littleGirl\": _LittleGirlGameOptions {\n              \"isProtectedByDefender\": false,\n            },\n            \"piedPiper\": _PiedPiperGameOptions {\n              \"charmedPeopleCountPerNight\": 2,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"prejudicedManipulator\": _PrejudicedManipulatorGameOptions {\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"scandalmonger\": _ScandalmongerGameOptions {\n              \"markPenalty\": 2,\n            },\n            \"seer\": _SeerGameOptions {\n              \"canSeeRoles\": true,\n              \"isTalkative\": true,\n            },\n            \"sheriff\": _SheriffGameOptions {\n              \"electedAt\": _SheriffElectionGameOptions {\n                \"phaseName\": \"night\",\n                \"turn\": 1,\n              },\n              \"hasDoubledVote\": true,\n              \"isEnabled\": true,\n              \"mustSettleTieInVotes\": true,\n            },\n            \"stutteringJudge\": _StutteringJudgeGameOptions {\n              \"voteRequestsCount\": 1,\n            },\n            \"thief\": _ThiefGameOptions {\n              \"additionalCardsCount\": 2,\n              \"isChosenCardRevealed\": false,\n              \"mustChooseBetweenWerewolves\": true,\n            },\n            \"threeBrothers\": _ThreeBrothersGameOptions {\n              \"wakingUpInterval\": null,\n            },\n            \"twoSisters\": _TwoSistersGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"whiteWerewolf\": _WhiteWerewolfGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"wildChild\": _WildChildGameOptions {\n              \"isTransformationRevealed\": false,\n            },\n            \"witch\": _WitchGameOptions {\n              \"doesKnowWerewolvesTargets\": true,\n            },\n            \"wolfHound\": _WolfHoundGameOptions {\n              \"isChosenSideRevealed\": false,\n              \"isSideRandomlyChosen\": false,\n            },\n          },\n          \"votes\": _VotesGameOptions {\n            \"canBeSkipped\": true,\n          },\n        },\n        \"players\": Array [],\n      },\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "609"
          ],
          "coveredBy": [
            "607",
            "608",
            "609"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 61
            },
            "start": {
              "column": 9,
              "line": 61
            }
          }
        },
        {
          "id": "1087",
          "mutatorName": "EqualityOperator",
          "replacement": "value !== null",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "607"
          ],
          "coveredBy": [
            "607",
            "608",
            "609"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 61
            },
            "start": {
              "column": 9,
              "line": 61
            }
          }
        },
        {
          "id": "1088",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      _CreateGameDto {\n        \"additionalCards\": undefined,\n        \"options\": _GameOptions {\n          \"composition\": _CompositionGameOptions {\n            \"isHidden\": false,\n          },\n          \"roles\": _RolesGameOptions {\n            \"actor\": _ActorGameOptions {\n              \"additionalCardsCount\": 3,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"areRevealedOnDeath\": true,\n            \"bearTamer\": _BearTamerGameOptions {\n              \"doesGrowlOnWerewolvesSide\": true,\n            },\n            \"bigBadWolf\": _BigBadWolfGameOptions {\n              \"isPowerlessIfWerewolfDies\": true,\n            },\n            \"cupid\": _CupidGameOptions {\n              \"lovers\": _CupidLoversGameOptions {\n                \"doRevealRoleToEachOther\": false,\n              },\n              \"mustWinWithLovers\": false,\n            },\n            \"defender\": _DefenderGameOptions {\n              \"canProtectTwice\": false,\n            },\n            \"doSkipCallIfNoTarget\": false,\n            \"elder\": _ElderGameOptions {\n              \"doesTakeHisRevenge\": true,\n              \"livesCountAgainstWerewolves\": 2,\n            },\n            \"fox\": _FoxGameOptions {\n              \"isPowerlessIfMissesWerewolf\": true,\n            },\n            \"idiot\": _IdiotGameOptions {\n              \"doesDieOnElderDeath\": true,\n            },\n            \"littleGirl\": _LittleGirlGameOptions {\n              \"isProtectedByDefender\": false,\n            },\n            \"piedPiper\": _PiedPiperGameOptions {\n              \"charmedPeopleCountPerNight\": 2,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"prejudicedManipulator\": _PrejudicedManipulatorGameOptions {\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"scandalmonger\": _ScandalmongerGameOptions {\n              \"markPenalty\": 2,\n            },\n            \"seer\": _SeerGameOptions {\n              \"canSeeRoles\": true,\n              \"isTalkative\": true,\n            },\n            \"sheriff\": _SheriffGameOptions {\n              \"electedAt\": _SheriffElectionGameOptions {\n                \"phaseName\": \"night\",\n                \"turn\": 1,\n              },\n              \"hasDoubledVote\": true,\n              \"isEnabled\": true,\n              \"mustSettleTieInVotes\": true,\n            },\n            \"stutteringJudge\": _StutteringJudgeGameOptions {\n              \"voteRequestsCount\": 1,\n            },\n            \"thief\": _ThiefGameOptions {\n              \"additionalCardsCount\": 2,\n              \"isChosenCardRevealed\": false,\n              \"mustChooseBetweenWerewolves\": true,\n            },\n            \"threeBrothers\": _ThreeBrothersGameOptions {\n              \"wakingUpInterval\": null,\n            },\n            \"twoSisters\": _TwoSistersGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"whiteWerewolf\": _WhiteWerewolfGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"wildChild\": _WildChildGameOptions {\n              \"isTransformationRevealed\": false,\n            },\n            \"witch\": _WitchGameOptions {\n              \"doesKnowWerewolvesTargets\": true,\n            },\n            \"wolfHound\": _WolfHoundGameOptions {\n              \"isChosenSideRevealed\": false,\n              \"isSideRandomlyChosen\": false,\n            },\n          },\n          \"votes\": _VotesGameOptions {\n            \"canBeSkipped\": true,\n          },\n        },\n        \"players\": Array [],\n      },\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "609"
          ],
          "coveredBy": [
            "609"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 63
            },
            "start": {
              "column": 25,
              "line": 61
            }
          }
        },
        {
          "id": "1089",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Three Brothers Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "603"
          ],
          "coveredBy": [
            "603",
            "604",
            "605",
            "606",
            "607",
            "608",
            "609",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 74
            },
            "start": {
              "column": 73,
              "line": 70
            }
          }
        },
        {
          "id": "1090",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Three Brothers Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "603"
          ],
          "coveredBy": [
            "603",
            "604",
            "605",
            "606",
            "607",
            "608",
            "609",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 106,
              "line": 71
            },
            "start": {
              "column": 16,
              "line": 71
            }
          }
        },
        {
          "id": "1091",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Three Brothers Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "603"
          ],
          "coveredBy": [
            "603",
            "604",
            "605",
            "606",
            "607",
            "608",
            "609",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 72,
              "line": 73
            },
            "start": {
              "column": 18,
              "line": 73
            }
          }
        }
      ],
      "source": "<template>\n  <VuePrimeFieldset\n    id=\"game-lobby-options-hub-roles-tab-three-brothers\"\n    :pt=\"{ 'legend': 'ml-4 !p-3 !px-6' }\"\n  >\n    <template #legend>\n      <GameOptionRoleLegend role-name=\"three-brothers\"/>\n    </template>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-three-brothers-waking-up-interval-input-group\"\n      :option-description=\"threeBrothersWakingUpIntervalDescription\"\n      option-icon-class=\"fa fa-clock-rotate-left text-blue-400\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabThreeBrothers.options.wakingUpInterval.label')\"\n    >\n      <VuePrimeFloatLabel>\n        <label\n          id=\"game-lobby-options-hub-roles-tab-three-brothers-waking-up-interval-label\"\n          for=\"game-lobby-options-hub-roles-tab-three-brothers-waking-up-interval-input\"\n        >\n          {{ $t(\"components.GameLobbyOptionsHubRolesTabThreeBrothers.options.wakingUpInterval.label\") }}\n        </label>\n\n        <VuePrimeInputNumber\n          id=\"game-lobby-options-hub-roles-tab-three-brothers-waking-up-interval-input\"\n          v-model=\"threeBrothersWakingUpIntervalValue\"\n          class=\"w-full\"\n          :max=\"5\"\n          :min=\"0\"\n        />\n      </VuePrimeFloatLabel>\n\n      <VuePrimeSlider\n        id=\"game-lobby-options-hub-roles-tab-three-brothers-waking-up-interval-slider\"\n        v-model=\"threeBrothersWakingUpIntervalValue\"\n        class=\"mt-4 w-full\"\n        :max=\"5\"\n        :min=\"0\"\n        :step=\"1\"\n      />\n    </GameOptionInputGroup>\n  </VuePrimeFieldset>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\nimport GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport GameOptionRoleLegend from \"~/components/shared/game/game-options/GameOptionRoleLegend/GameOptionRoleLegend.vue\";\nimport { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst { setCreateGameDto } = createGameDtoStore;\nconst { createGameDto } = storeToRefs(createGameDtoStore);\n\nconst { t } = useI18n();\n\nconst threeBrothersWakingUpIntervalValue = computed<number>({\n  get: () => createGameDto.value.options.roles.threeBrothers.wakingUpInterval,\n  set: (value: number | null) => {\n    if (value === null) {\n      return;\n    }\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.threeBrothers.wakingUpInterval = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst threeBrothersWakingUpIntervalDescription = computed<string>(() => {\n  const tKey = \"components.GameLobbyOptionsHubRolesTabThreeBrothers.options.wakingUpInterval.description\";\n\n  return t(tKey, { interval: threeBrothersWakingUpIntervalValue.value }, threeBrothersWakingUpIntervalValue.value);\n});\n</script>"
    },
    "components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabTwoSisters/GameLobbyOptionsHubRolesTabTwoSisters.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1092",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "635"
          ],
          "coveredBy": [
            "635",
            "636",
            "637",
            "638",
            "639",
            "640",
            "641",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 68
            },
            "start": {
              "column": 58,
              "line": 58
            }
          }
        },
        {
          "id": "1093",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Two Sisters Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "635"
          ],
          "coveredBy": [
            "635",
            "636",
            "637",
            "638",
            "639",
            "640",
            "641",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 75,
              "line": 59
            },
            "start": {
              "column": 8,
              "line": 59
            }
          }
        },
        {
          "id": "1094",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "639"
          ],
          "coveredBy": [
            "639",
            "640",
            "641"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 67
            },
            "start": {
              "column": 34,
              "line": 60
            }
          }
        },
        {
          "id": "1095",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "639"
          ],
          "coveredBy": [
            "639",
            "640",
            "641"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 61
            },
            "start": {
              "column": 9,
              "line": 61
            }
          }
        },
        {
          "id": "1096",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      _CreateGameDto {\n        \"additionalCards\": undefined,\n        \"options\": _GameOptions {\n          \"composition\": _CompositionGameOptions {\n            \"isHidden\": false,\n          },\n          \"roles\": _RolesGameOptions {\n            \"actor\": _ActorGameOptions {\n              \"additionalCardsCount\": 3,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"areRevealedOnDeath\": true,\n            \"bearTamer\": _BearTamerGameOptions {\n              \"doesGrowlOnWerewolvesSide\": true,\n            },\n            \"bigBadWolf\": _BigBadWolfGameOptions {\n              \"isPowerlessIfWerewolfDies\": true,\n            },\n            \"cupid\": _CupidGameOptions {\n              \"lovers\": _CupidLoversGameOptions {\n                \"doRevealRoleToEachOther\": false,\n              },\n              \"mustWinWithLovers\": false,\n            },\n            \"defender\": _DefenderGameOptions {\n              \"canProtectTwice\": false,\n            },\n            \"doSkipCallIfNoTarget\": false,\n            \"elder\": _ElderGameOptions {\n              \"doesTakeHisRevenge\": true,\n              \"livesCountAgainstWerewolves\": 2,\n            },\n            \"fox\": _FoxGameOptions {\n              \"isPowerlessIfMissesWerewolf\": true,\n            },\n            \"idiot\": _IdiotGameOptions {\n              \"doesDieOnElderDeath\": true,\n            },\n            \"littleGirl\": _LittleGirlGameOptions {\n              \"isProtectedByDefender\": false,\n            },\n            \"piedPiper\": _PiedPiperGameOptions {\n              \"charmedPeopleCountPerNight\": 2,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"prejudicedManipulator\": _PrejudicedManipulatorGameOptions {\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"scandalmonger\": _ScandalmongerGameOptions {\n              \"markPenalty\": 2,\n            },\n            \"seer\": _SeerGameOptions {\n              \"canSeeRoles\": true,\n              \"isTalkative\": true,\n            },\n            \"sheriff\": _SheriffGameOptions {\n              \"electedAt\": _SheriffElectionGameOptions {\n                \"phaseName\": \"night\",\n                \"turn\": 1,\n              },\n              \"hasDoubledVote\": true,\n              \"isEnabled\": true,\n              \"mustSettleTieInVotes\": true,\n            },\n            \"stutteringJudge\": _StutteringJudgeGameOptions {\n              \"voteRequestsCount\": 1,\n            },\n            \"thief\": _ThiefGameOptions {\n              \"additionalCardsCount\": 2,\n              \"isChosenCardRevealed\": false,\n              \"mustChooseBetweenWerewolves\": true,\n            },\n            \"threeBrothers\": _ThreeBrothersGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"twoSisters\": _TwoSistersGameOptions {\n              \"wakingUpInterval\": null,\n            },\n            \"whiteWerewolf\": _WhiteWerewolfGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"wildChild\": _WildChildGameOptions {\n              \"isTransformationRevealed\": false,\n            },\n            \"witch\": _WitchGameOptions {\n              \"doesKnowWerewolvesTargets\": true,\n            },\n            \"wolfHound\": _WolfHoundGameOptions {\n              \"isChosenSideRevealed\": false,\n              \"isSideRandomlyChosen\": false,\n            },\n          },\n          \"votes\": _VotesGameOptions {\n            \"canBeSkipped\": true,\n          },\n        },\n        \"players\": Array [],\n      },\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "641"
          ],
          "coveredBy": [
            "639",
            "640",
            "641"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 61
            },
            "start": {
              "column": 9,
              "line": 61
            }
          }
        },
        {
          "id": "1097",
          "mutatorName": "EqualityOperator",
          "replacement": "value !== null",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "639"
          ],
          "coveredBy": [
            "639",
            "640",
            "641"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 61
            },
            "start": {
              "column": 9,
              "line": 61
            }
          }
        },
        {
          "id": "1098",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      _CreateGameDto {\n        \"additionalCards\": undefined,\n        \"options\": _GameOptions {\n          \"composition\": _CompositionGameOptions {\n            \"isHidden\": false,\n          },\n          \"roles\": _RolesGameOptions {\n            \"actor\": _ActorGameOptions {\n              \"additionalCardsCount\": 3,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"areRevealedOnDeath\": true,\n            \"bearTamer\": _BearTamerGameOptions {\n              \"doesGrowlOnWerewolvesSide\": true,\n            },\n            \"bigBadWolf\": _BigBadWolfGameOptions {\n              \"isPowerlessIfWerewolfDies\": true,\n            },\n            \"cupid\": _CupidGameOptions {\n              \"lovers\": _CupidLoversGameOptions {\n                \"doRevealRoleToEachOther\": false,\n              },\n              \"mustWinWithLovers\": false,\n            },\n            \"defender\": _DefenderGameOptions {\n              \"canProtectTwice\": false,\n            },\n            \"doSkipCallIfNoTarget\": false,\n            \"elder\": _ElderGameOptions {\n              \"doesTakeHisRevenge\": true,\n              \"livesCountAgainstWerewolves\": 2,\n            },\n            \"fox\": _FoxGameOptions {\n              \"isPowerlessIfMissesWerewolf\": true,\n            },\n            \"idiot\": _IdiotGameOptions {\n              \"doesDieOnElderDeath\": true,\n            },\n            \"littleGirl\": _LittleGirlGameOptions {\n              \"isProtectedByDefender\": false,\n            },\n            \"piedPiper\": _PiedPiperGameOptions {\n              \"charmedPeopleCountPerNight\": 2,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"prejudicedManipulator\": _PrejudicedManipulatorGameOptions {\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"scandalmonger\": _ScandalmongerGameOptions {\n              \"markPenalty\": 2,\n            },\n            \"seer\": _SeerGameOptions {\n              \"canSeeRoles\": true,\n              \"isTalkative\": true,\n            },\n            \"sheriff\": _SheriffGameOptions {\n              \"electedAt\": _SheriffElectionGameOptions {\n                \"phaseName\": \"night\",\n                \"turn\": 1,\n              },\n              \"hasDoubledVote\": true,\n              \"isEnabled\": true,\n              \"mustSettleTieInVotes\": true,\n            },\n            \"stutteringJudge\": _StutteringJudgeGameOptions {\n              \"voteRequestsCount\": 1,\n            },\n            \"thief\": _ThiefGameOptions {\n              \"additionalCardsCount\": 2,\n              \"isChosenCardRevealed\": false,\n              \"mustChooseBetweenWerewolves\": true,\n            },\n            \"threeBrothers\": _ThreeBrothersGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"twoSisters\": _TwoSistersGameOptions {\n              \"wakingUpInterval\": null,\n            },\n            \"whiteWerewolf\": _WhiteWerewolfGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"wildChild\": _WildChildGameOptions {\n              \"isTransformationRevealed\": false,\n            },\n            \"witch\": _WitchGameOptions {\n              \"doesKnowWerewolvesTargets\": true,\n            },\n            \"wolfHound\": _WolfHoundGameOptions {\n              \"isChosenSideRevealed\": false,\n              \"isSideRandomlyChosen\": false,\n            },\n          },\n          \"votes\": _VotesGameOptions {\n            \"canBeSkipped\": true,\n          },\n        },\n        \"players\": Array [],\n      },\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "641"
          ],
          "coveredBy": [
            "641"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 63
            },
            "start": {
              "column": 25,
              "line": 61
            }
          }
        },
        {
          "id": "1099",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Two Sisters Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "635"
          ],
          "coveredBy": [
            "635",
            "636",
            "637",
            "638",
            "639",
            "640",
            "641",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 74
            },
            "start": {
              "column": 70,
              "line": 70
            }
          }
        },
        {
          "id": "1100",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Two Sisters Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "635"
          ],
          "coveredBy": [
            "635",
            "636",
            "637",
            "638",
            "639",
            "640",
            "641",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 103,
              "line": 71
            },
            "start": {
              "column": 16,
              "line": 71
            }
          }
        },
        {
          "id": "1101",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Two Sisters Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "635"
          ],
          "coveredBy": [
            "635",
            "636",
            "637",
            "638",
            "639",
            "640",
            "641",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 69,
              "line": 73
            },
            "start": {
              "column": 18,
              "line": 73
            }
          }
        }
      ],
      "source": "<template>\n  <VuePrimeFieldset\n    id=\"game-lobby-options-hub-roles-tab-two-sisters\"\n    :pt=\"{ 'legend': 'ml-4 !p-3 !px-6' }\"\n  >\n    <template #legend>\n      <GameOptionRoleLegend role-name=\"two-sisters\"/>\n    </template>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-two-sisters-waking-up-interval-input-group\"\n      :option-description=\"twoSistersWakingUpIntervalDescription\"\n      option-icon-class=\"fa fa-clock-rotate-left text-pink-500\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabTwoSisters.options.wakingUpInterval.label')\"\n    >\n      <VuePrimeFloatLabel>\n        <label\n          id=\"game-lobby-options-hub-roles-tab-two-sisters-waking-up-interval-label\"\n          for=\"game-lobby-options-hub-roles-tab-two-sisters-waking-up-interval-input\"\n        >\n          {{ $t(\"components.GameLobbyOptionsHubRolesTabTwoSisters.options.wakingUpInterval.label\") }}\n        </label>\n\n        <VuePrimeInputNumber\n          id=\"game-lobby-options-hub-roles-tab-two-sisters-waking-up-interval-input\"\n          v-model=\"twoSistersWakingUpIntervalValue\"\n          class=\"w-full\"\n          :max=\"5\"\n          :min=\"0\"\n        />\n      </VuePrimeFloatLabel>\n\n      <VuePrimeSlider\n        id=\"game-lobby-options-hub-roles-tab-two-sisters-waking-up-interval-slider\"\n        v-model=\"twoSistersWakingUpIntervalValue\"\n        class=\"mt-4 w-full\"\n        :max=\"5\"\n        :min=\"0\"\n        :step=\"1\"\n      />\n    </GameOptionInputGroup>\n  </VuePrimeFieldset>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\nimport GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport GameOptionRoleLegend from \"~/components/shared/game/game-options/GameOptionRoleLegend/GameOptionRoleLegend.vue\";\nimport { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst { setCreateGameDto } = createGameDtoStore;\nconst { createGameDto } = storeToRefs(createGameDtoStore);\n\nconst { t } = useI18n();\n\nconst twoSistersWakingUpIntervalValue = computed<number>({\n  get: () => createGameDto.value.options.roles.twoSisters.wakingUpInterval,\n  set: (value: number | null) => {\n    if (value === null) {\n      return;\n    }\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.twoSisters.wakingUpInterval = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst twoSistersWakingUpIntervalDescription = computed<string>(() => {\n  const tKey = \"components.GameLobbyOptionsHubRolesTabTwoSisters.options.wakingUpInterval.description\";\n\n  return t(tKey, { interval: twoSistersWakingUpIntervalValue.value }, twoSistersWakingUpIntervalValue.value);\n});\n</script>"
    },
    "components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWhiteWerewolf/GameLobbyOptionsHubRolesTabWhiteWerewolf.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1102",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "610"
          ],
          "coveredBy": [
            "610",
            "611",
            "612",
            "613",
            "614",
            "615",
            "616",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 68
            },
            "start": {
              "column": 61,
              "line": 58
            }
          }
        },
        {
          "id": "1103",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab White Werewolf Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "610"
          ],
          "coveredBy": [
            "610",
            "611",
            "612",
            "613",
            "614",
            "615",
            "616",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 78,
              "line": 59
            },
            "start": {
              "column": 8,
              "line": 59
            }
          }
        },
        {
          "id": "1104",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "614"
          ],
          "coveredBy": [
            "614",
            "615",
            "616"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 67
            },
            "start": {
              "column": 34,
              "line": 60
            }
          }
        },
        {
          "id": "1105",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "614"
          ],
          "coveredBy": [
            "614",
            "615",
            "616"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 61
            },
            "start": {
              "column": 9,
              "line": 61
            }
          }
        },
        {
          "id": "1106",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      _CreateGameDto {\n        \"additionalCards\": undefined,\n        \"options\": _GameOptions {\n          \"composition\": _CompositionGameOptions {\n            \"isHidden\": false,\n          },\n          \"roles\": _RolesGameOptions {\n            \"actor\": _ActorGameOptions {\n              \"additionalCardsCount\": 3,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"areRevealedOnDeath\": true,\n            \"bearTamer\": _BearTamerGameOptions {\n              \"doesGrowlOnWerewolvesSide\": true,\n            },\n            \"bigBadWolf\": _BigBadWolfGameOptions {\n              \"isPowerlessIfWerewolfDies\": true,\n            },\n            \"cupid\": _CupidGameOptions {\n              \"lovers\": _CupidLoversGameOptions {\n                \"doRevealRoleToEachOther\": false,\n              },\n              \"mustWinWithLovers\": false,\n            },\n            \"defender\": _DefenderGameOptions {\n              \"canProtectTwice\": false,\n            },\n            \"doSkipCallIfNoTarget\": false,\n            \"elder\": _ElderGameOptions {\n              \"doesTakeHisRevenge\": true,\n              \"livesCountAgainstWerewolves\": 2,\n            },\n            \"fox\": _FoxGameOptions {\n              \"isPowerlessIfMissesWerewolf\": true,\n            },\n            \"idiot\": _IdiotGameOptions {\n              \"doesDieOnElderDeath\": true,\n            },\n            \"littleGirl\": _LittleGirlGameOptions {\n              \"isProtectedByDefender\": false,\n            },\n            \"piedPiper\": _PiedPiperGameOptions {\n              \"charmedPeopleCountPerNight\": 2,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"prejudicedManipulator\": _PrejudicedManipulatorGameOptions {\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"scandalmonger\": _ScandalmongerGameOptions {\n              \"markPenalty\": 2,\n            },\n            \"seer\": _SeerGameOptions {\n              \"canSeeRoles\": true,\n              \"isTalkative\": true,\n            },\n            \"sheriff\": _SheriffGameOptions {\n              \"electedAt\": _SheriffElectionGameOptions {\n                \"phaseName\": \"night\",\n                \"turn\": 1,\n              },\n              \"hasDoubledVote\": true,\n              \"isEnabled\": true,\n              \"mustSettleTieInVotes\": true,\n            },\n            \"stutteringJudge\": _StutteringJudgeGameOptions {\n              \"voteRequestsCount\": 1,\n            },\n            \"thief\": _ThiefGameOptions {\n              \"additionalCardsCount\": 2,\n              \"isChosenCardRevealed\": false,\n              \"mustChooseBetweenWerewolves\": true,\n            },\n            \"threeBrothers\": _ThreeBrothersGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"twoSisters\": _TwoSistersGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"whiteWerewolf\": _WhiteWerewolfGameOptions {\n              \"wakingUpInterval\": null,\n            },\n            \"wildChild\": _WildChildGameOptions {\n              \"isTransformationRevealed\": false,\n            },\n            \"witch\": _WitchGameOptions {\n              \"doesKnowWerewolvesTargets\": true,\n            },\n            \"wolfHound\": _WolfHoundGameOptions {\n              \"isChosenSideRevealed\": false,\n              \"isSideRandomlyChosen\": false,\n            },\n          },\n          \"votes\": _VotesGameOptions {\n            \"canBeSkipped\": true,\n          },\n        },\n        \"players\": Array [],\n      },\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "616"
          ],
          "coveredBy": [
            "614",
            "615",
            "616"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 61
            },
            "start": {
              "column": 9,
              "line": 61
            }
          }
        },
        {
          "id": "1107",
          "mutatorName": "EqualityOperator",
          "replacement": "value !== null",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "614"
          ],
          "coveredBy": [
            "614",
            "615",
            "616"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 61
            },
            "start": {
              "column": 9,
              "line": 61
            }
          }
        },
        {
          "id": "1108",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      _CreateGameDto {\n        \"additionalCards\": undefined,\n        \"options\": _GameOptions {\n          \"composition\": _CompositionGameOptions {\n            \"isHidden\": false,\n          },\n          \"roles\": _RolesGameOptions {\n            \"actor\": _ActorGameOptions {\n              \"additionalCardsCount\": 3,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"areRevealedOnDeath\": true,\n            \"bearTamer\": _BearTamerGameOptions {\n              \"doesGrowlOnWerewolvesSide\": true,\n            },\n            \"bigBadWolf\": _BigBadWolfGameOptions {\n              \"isPowerlessIfWerewolfDies\": true,\n            },\n            \"cupid\": _CupidGameOptions {\n              \"lovers\": _CupidLoversGameOptions {\n                \"doRevealRoleToEachOther\": false,\n              },\n              \"mustWinWithLovers\": false,\n            },\n            \"defender\": _DefenderGameOptions {\n              \"canProtectTwice\": false,\n            },\n            \"doSkipCallIfNoTarget\": false,\n            \"elder\": _ElderGameOptions {\n              \"doesTakeHisRevenge\": true,\n              \"livesCountAgainstWerewolves\": 2,\n            },\n            \"fox\": _FoxGameOptions {\n              \"isPowerlessIfMissesWerewolf\": true,\n            },\n            \"idiot\": _IdiotGameOptions {\n              \"doesDieOnElderDeath\": true,\n            },\n            \"littleGirl\": _LittleGirlGameOptions {\n              \"isProtectedByDefender\": false,\n            },\n            \"piedPiper\": _PiedPiperGameOptions {\n              \"charmedPeopleCountPerNight\": 2,\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"prejudicedManipulator\": _PrejudicedManipulatorGameOptions {\n              \"isPowerlessOnWerewolvesSide\": true,\n            },\n            \"scandalmonger\": _ScandalmongerGameOptions {\n              \"markPenalty\": 2,\n            },\n            \"seer\": _SeerGameOptions {\n              \"canSeeRoles\": true,\n              \"isTalkative\": true,\n            },\n            \"sheriff\": _SheriffGameOptions {\n              \"electedAt\": _SheriffElectionGameOptions {\n                \"phaseName\": \"night\",\n                \"turn\": 1,\n              },\n              \"hasDoubledVote\": true,\n              \"isEnabled\": true,\n              \"mustSettleTieInVotes\": true,\n            },\n            \"stutteringJudge\": _StutteringJudgeGameOptions {\n              \"voteRequestsCount\": 1,\n            },\n            \"thief\": _ThiefGameOptions {\n              \"additionalCardsCount\": 2,\n              \"isChosenCardRevealed\": false,\n              \"mustChooseBetweenWerewolves\": true,\n            },\n            \"threeBrothers\": _ThreeBrothersGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"twoSisters\": _TwoSistersGameOptions {\n              \"wakingUpInterval\": 2,\n            },\n            \"whiteWerewolf\": _WhiteWerewolfGameOptions {\n              \"wakingUpInterval\": null,\n            },\n            \"wildChild\": _WildChildGameOptions {\n              \"isTransformationRevealed\": false,\n            },\n            \"witch\": _WitchGameOptions {\n              \"doesKnowWerewolvesTargets\": true,\n            },\n            \"wolfHound\": _WolfHoundGameOptions {\n              \"isChosenSideRevealed\": false,\n              \"isSideRandomlyChosen\": false,\n            },\n          },\n          \"votes\": _VotesGameOptions {\n            \"canBeSkipped\": true,\n          },\n        },\n        \"players\": Array [],\n      },\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "616"
          ],
          "coveredBy": [
            "616"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 63
            },
            "start": {
              "column": 25,
              "line": 61
            }
          }
        },
        {
          "id": "1109",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab White Werewolf Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "610"
          ],
          "coveredBy": [
            "610",
            "611",
            "612",
            "613",
            "614",
            "615",
            "616",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 74
            },
            "start": {
              "column": 73,
              "line": 70
            }
          }
        },
        {
          "id": "1110",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab White Werewolf Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "610"
          ],
          "coveredBy": [
            "610",
            "611",
            "612",
            "613",
            "614",
            "615",
            "616",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 106,
              "line": 71
            },
            "start": {
              "column": 16,
              "line": 71
            }
          }
        },
        {
          "id": "1111",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab White Werewolf Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "610"
          ],
          "coveredBy": [
            "610",
            "611",
            "612",
            "613",
            "614",
            "615",
            "616",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 72,
              "line": 73
            },
            "start": {
              "column": 18,
              "line": 73
            }
          }
        }
      ],
      "source": "<template>\n  <VuePrimeFieldset\n    id=\"game-lobby-options-hub-roles-tab-white-werewolf\"\n    :pt=\"{ 'legend': 'ml-4 !p-3 !px-6' }\"\n  >\n    <template #legend>\n      <GameOptionRoleLegend role-name=\"white-werewolf\"/>\n    </template>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-white-werewolf-waking-up-interval-input-group\"\n      :option-description=\"whiteWerewolfWakingUpIntervalDescription\"\n      option-icon-class=\"fa fa-clock-rotate-left text-white\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabWhiteWerewolf.options.wakingUpInterval.label')\"\n    >\n      <VuePrimeFloatLabel>\n        <label\n          id=\"game-lobby-options-hub-roles-tab-white-werewolf-waking-up-interval-label\"\n          for=\"game-lobby-options-hub-roles-tab-white-werewolf-waking-up-interval-input\"\n        >\n          {{ $t(\"components.GameLobbyOptionsHubRolesTabWhiteWerewolf.options.wakingUpInterval.label\") }}\n        </label>\n\n        <VuePrimeInputNumber\n          id=\"game-lobby-options-hub-roles-tab-white-werewolf-waking-up-interval-input\"\n          v-model=\"whiteWerewolfWakingUpIntervalValue\"\n          class=\"w-full\"\n          :max=\"5\"\n          :min=\"1\"\n        />\n      </VuePrimeFloatLabel>\n\n      <VuePrimeSlider\n        id=\"game-lobby-options-hub-roles-tab-white-werewolf-waking-up-interval-slider\"\n        v-model=\"whiteWerewolfWakingUpIntervalValue\"\n        class=\"mt-4 w-full\"\n        :max=\"5\"\n        :min=\"1\"\n        :step=\"1\"\n      />\n    </GameOptionInputGroup>\n  </VuePrimeFieldset>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\nimport GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport GameOptionRoleLegend from \"~/components/shared/game/game-options/GameOptionRoleLegend/GameOptionRoleLegend.vue\";\nimport { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst { setCreateGameDto } = createGameDtoStore;\nconst { createGameDto } = storeToRefs(createGameDtoStore);\n\nconst { t } = useI18n();\n\nconst whiteWerewolfWakingUpIntervalValue = computed<number>({\n  get: () => createGameDto.value.options.roles.whiteWerewolf.wakingUpInterval,\n  set: (value: number | null) => {\n    if (value === null) {\n      return;\n    }\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.whiteWerewolf.wakingUpInterval = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst whiteWerewolfWakingUpIntervalDescription = computed<string>(() => {\n  const tKey = \"components.GameLobbyOptionsHubRolesTabWhiteWerewolf.options.wakingUpInterval.description\";\n\n  return t(tKey, { interval: whiteWerewolfWakingUpIntervalValue.value }, whiteWerewolfWakingUpIntervalValue.value);\n});\n</script>"
    },
    "components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWildChild/GameLobbyOptionsHubRolesTabWildChild.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1112",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "741"
          ],
          "coveredBy": [
            "741",
            "742",
            "743",
            "744",
            "745",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 48
            },
            "start": {
              "column": 66,
              "line": 41
            }
          }
        },
        {
          "id": "1113",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Wild Child Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "741"
          ],
          "coveredBy": [
            "741",
            "742",
            "743",
            "744",
            "745",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 82,
              "line": 42
            },
            "start": {
              "column": 8,
              "line": 42
            }
          }
        },
        {
          "id": "1114",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "745"
          ],
          "coveredBy": [
            "745"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 47
            },
            "start": {
              "column": 28,
              "line": 43
            }
          }
        },
        {
          "id": "1115",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Wild Child Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "741"
          ],
          "coveredBy": [
            "741",
            "742",
            "743",
            "744",
            "745",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 54
            },
            "start": {
              "column": 77,
              "line": 50
            }
          }
        },
        {
          "id": "1116",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Wild Child Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "741"
          ],
          "coveredBy": [
            "741",
            "742",
            "743",
            "744",
            "745",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 131,
              "line": 53
            },
            "start": {
              "column": 12,
              "line": 53
            }
          }
        }
      ],
      "source": "<template>\n  <VuePrimeFieldset\n    id=\"game-lobby-options-hub-roles-tab-wild-child\"\n    :pt=\"{ 'legend': 'ml-4 !p-3 !px-6' }\"\n  >\n    <template #legend>\n      <GameOptionRoleLegend role-name=\"wild-child\"/>\n    </template>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-wild-child-is-transformation-revealed-input-group\"\n      :option-description=\"isWildChildTransformationRevealedDescription\"\n      option-icon-class=\"fa fa-bullhorn text-red-600\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabWildChild.options.isTransformationRevealed.label')\"\n    >\n      <AffirmativeToggleButton\n        id=\"game-lobby-options-hub-roles-tab-wild-child-is-transformation-revealed-input\"\n        v-model=\"isWildChildTransformationRevealedValue\"\n        class=\"w-full\"\n      />\n    </GameOptionInputGroup>\n  </VuePrimeFieldset>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\nimport AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport GameOptionRoleLegend from \"~/components/shared/game/game-options/GameOptionRoleLegend/GameOptionRoleLegend.vue\";\nimport { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport { useStrings } from \"~/composables/misc/useStrings\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst { setCreateGameDto } = createGameDtoStore;\nconst { createGameDto } = storeToRefs(createGameDtoStore);\n\nconst { t } = useI18n();\nconst { convertBooleanAsAffirmativeString } = useStrings();\n\nconst isWildChildTransformationRevealedValue = computed<boolean>({\n  get: () => createGameDto.value.options.roles.wildChild.isTransformationRevealed,\n  set: (value: boolean) => {\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.wildChild.isTransformationRevealed = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst isWildChildTransformationRevealedDescription = computed<string>(() => {\n  const booleanAsAffirmative = convertBooleanAsAffirmativeString(isWildChildTransformationRevealedValue.value);\n\n  return t(`components.GameLobbyOptionsHubRolesTabWildChild.options.isTransformationRevealed.descriptions.${booleanAsAffirmative}`);\n});\n</script>"
    },
    "components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWitch/GameLobbyOptionsHubRolesTabWitch.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1117",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "776"
          ],
          "coveredBy": [
            "776",
            "777",
            "778",
            "779",
            "780",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 49
            },
            "start": {
              "column": 63,
              "line": 42
            }
          }
        },
        {
          "id": "1118",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Witch Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "776"
          ],
          "coveredBy": [
            "776",
            "777",
            "778",
            "779",
            "780",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 79,
              "line": 43
            },
            "start": {
              "column": 8,
              "line": 43
            }
          }
        },
        {
          "id": "1119",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "780"
          ],
          "coveredBy": [
            "780"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 48
            },
            "start": {
              "column": 28,
              "line": 44
            }
          }
        },
        {
          "id": "1120",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Witch Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "776"
          ],
          "coveredBy": [
            "776",
            "777",
            "778",
            "779",
            "780",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 55
            },
            "start": {
              "column": 74,
              "line": 51
            }
          }
        },
        {
          "id": "1121",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Witch Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "776"
          ],
          "coveredBy": [
            "776",
            "777",
            "778",
            "779",
            "780",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 128,
              "line": 54
            },
            "start": {
              "column": 12,
              "line": 54
            }
          }
        }
      ],
      "source": "<template>\n  <VuePrimeFieldset\n    id=\"game-lobby-options-hub-roles-tab-witch\"\n    :pt=\"{ 'legend': 'ml-4 !p-3 !px-6' }\"\n  >\n    <template #legend>\n      <GameOptionRoleLegend role-name=\"witch\"/>\n    </template>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-witch-does-know-werewolves-targets-input-group\"\n      :option-description=\"doesWitchKnowWerewolvesTargetsDescription\"\n      option-icon-class=\"fa fa-wand-sparkles text-orange-600\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabWitch.options.doesKnowWerewolvesTargets.label')\"\n    >\n      <AffirmativeToggleButton\n        id=\"game-lobby-options-hub-roles-tab-witch-does-know-werewolves-targets-input\"\n        v-model=\"doesWitchKnowWerewolvesTargetsValue\"\n        class=\"w-full\"\n      />\n    </GameOptionInputGroup>\n  </VuePrimeFieldset>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\nimport AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport GameOptionRoleLegend from \"~/components/shared/game/game-options/GameOptionRoleLegend/GameOptionRoleLegend.vue\";\nimport { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport { useStrings } from \"~/composables/misc/useStrings\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst { setCreateGameDto } = createGameDtoStore;\nconst { createGameDto } = storeToRefs(createGameDtoStore);\n\nconst { t } = useI18n();\n\nconst { convertBooleanAsAffirmativeString } = useStrings();\n\nconst doesWitchKnowWerewolvesTargetsValue = computed<boolean>({\n  get: () => createGameDto.value.options.roles.witch.doesKnowWerewolvesTargets,\n  set: (value: boolean) => {\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.witch.doesKnowWerewolvesTargets = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst doesWitchKnowWerewolvesTargetsDescription = computed<string>(() => {\n  const booleanAsAffirmative = convertBooleanAsAffirmativeString(doesWitchKnowWerewolvesTargetsValue.value);\n\n  return t(`components.GameLobbyOptionsHubRolesTabWitch.options.doesKnowWerewolvesTargets.descriptions.${booleanAsAffirmative}`);\n});\n</script>"
    },
    "components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWolfHound/GameLobbyOptionsHubRolesTabWolfHound.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1122",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "497"
          ],
          "coveredBy": [
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 63
            },
            "start": {
              "column": 62,
              "line": 56
            }
          }
        },
        {
          "id": "1123",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Wolf Hound Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "497"
          ],
          "coveredBy": [
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 78,
              "line": 57
            },
            "start": {
              "column": 8,
              "line": 57
            }
          }
        },
        {
          "id": "1124",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "501"
          ],
          "coveredBy": [
            "501"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 62
            },
            "start": {
              "column": 28,
              "line": 58
            }
          }
        },
        {
          "id": "1125",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "497"
          ],
          "coveredBy": [
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 72
            },
            "start": {
              "column": 62,
              "line": 65
            }
          }
        },
        {
          "id": "1126",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Wolf Hound Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "497"
          ],
          "coveredBy": [
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 78,
              "line": 66
            },
            "start": {
              "column": 8,
              "line": 66
            }
          }
        },
        {
          "id": "1127",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "505"
          ],
          "coveredBy": [
            "505"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 71
            },
            "start": {
              "column": 28,
              "line": 67
            }
          }
        },
        {
          "id": "1128",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Wolf Hound Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "497"
          ],
          "coveredBy": [
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 78
            },
            "start": {
              "column": 73,
              "line": 74
            }
          }
        },
        {
          "id": "1129",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Wolf Hound Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "497"
          ],
          "coveredBy": [
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 127,
              "line": 77
            },
            "start": {
              "column": 12,
              "line": 77
            }
          }
        },
        {
          "id": "1130",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Wolf Hound Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "497"
          ],
          "coveredBy": [
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 84
            },
            "start": {
              "column": 73,
              "line": 80
            }
          }
        },
        {
          "id": "1131",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Wolf Hound Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "497"
          ],
          "coveredBy": [
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 127,
              "line": 83
            },
            "start": {
              "column": 12,
              "line": 83
            }
          }
        }
      ],
      "source": "<template>\n  <VuePrimeFieldset\n    id=\"game-lobby-options-hub-roles-tab-wolf-hound\"\n    :pt=\"{ 'legend': 'ml-4 !p-3 !px-6' }\"\n  >\n    <template #legend>\n      <GameOptionRoleLegend role-name=\"wolf-hound\"/>\n    </template>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-wolf-hound-is-chosen-side-revealed-input-group\"\n      does-have-bottom-divider\n      :option-description=\"isWolfHoundChosenSideRevealedDescription\"\n      option-icon-class=\"fa fa-dog text-red-600\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabWolfHound.options.isChosenSideRevealed.label')\"\n    >\n      <AffirmativeToggleButton\n        id=\"game-lobby-options-hub-roles-tab-wolf-hound-is-chosen-side-revealed-input\"\n        v-model=\"isWolfHoundChosenSideRevealedValue\"\n        class=\"w-full\"\n      />\n    </GameOptionInputGroup>\n\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-roles-tab-wolf-hound-is-side-randomly-chosen-input-group\"\n      :option-description=\"isWolfHoundSideRandomlyChosenDescription\"\n      option-icon-class=\"fa fa-random text-green-500\"\n      :option-label=\"$t('components.GameLobbyOptionsHubRolesTabWolfHound.options.isSideRandomlyChosen.label')\"\n    >\n      <AffirmativeToggleButton\n        id=\"game-lobby-options-hub-roles-tab-wolf-hound-is-side-randomly-chosen-input\"\n        v-model=\"isWolfHoundSideRandomlyChosenValue\"\n        class=\"w-full\"\n      />\n    </GameOptionInputGroup>\n  </VuePrimeFieldset>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\nimport AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport GameOptionRoleLegend from \"~/components/shared/game/game-options/GameOptionRoleLegend/GameOptionRoleLegend.vue\";\nimport { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport { useStrings } from \"~/composables/misc/useStrings\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst { setCreateGameDto } = createGameDtoStore;\nconst { createGameDto } = storeToRefs(createGameDtoStore);\n\nconst { t } = useI18n();\n\nconst { convertBooleanAsAffirmativeString } = useStrings();\n\nconst isWolfHoundChosenSideRevealedValue = computed<boolean>({\n  get: () => createGameDto.value.options.roles.wolfHound.isChosenSideRevealed,\n  set: (value: boolean) => {\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.wolfHound.isChosenSideRevealed = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst isWolfHoundSideRandomlyChosenValue = computed<boolean>({\n  get: () => createGameDto.value.options.roles.wolfHound.isSideRandomlyChosen,\n  set: (value: boolean) => {\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.roles.wolfHound.isSideRandomlyChosen = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst isWolfHoundChosenSideRevealedDescription = computed<string>(() => {\n  const booleanAsAffirmative = convertBooleanAsAffirmativeString(isWolfHoundChosenSideRevealedValue.value);\n\n  return t(`components.GameLobbyOptionsHubRolesTabWolfHound.options.isChosenSideRevealed.descriptions.${booleanAsAffirmative}`);\n});\n\nconst isWolfHoundSideRandomlyChosenDescription = computed<string>(() => {\n  const booleanAsAffirmative = convertBooleanAsAffirmativeString(isWolfHoundSideRandomlyChosenValue.value);\n\n  return t(`components.GameLobbyOptionsHubRolesTabWolfHound.options.isSideRandomlyChosen.descriptions.${booleanAsAffirmative}`);\n});\n</script>"
    },
    "components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubVotesTab/GameLobbyOptionsHubVotesTab.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1132",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "806"
          ],
          "coveredBy": [
            "806",
            "807",
            "808",
            "809",
            "810",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 41
            },
            "start": {
              "column": 50,
              "line": 34
            }
          }
        },
        {
          "id": "1133",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Votes Tab Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "806"
          ],
          "coveredBy": [
            "806",
            "807",
            "808",
            "809",
            "810",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 60,
              "line": 35
            },
            "start": {
              "column": 8,
              "line": 35
            }
          }
        },
        {
          "id": "1134",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "810"
          ],
          "coveredBy": [
            "810"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 40
            },
            "start": {
              "column": 17,
              "line": 36
            }
          }
        },
        {
          "id": "1135",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Options Hub Votes Tab Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "806"
          ],
          "coveredBy": [
            "806",
            "807",
            "808",
            "809",
            "810",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 47
            },
            "start": {
              "column": 61,
              "line": 43
            }
          }
        },
        {
          "id": "1136",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Lobby Options Hub Votes Tab Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "806"
          ],
          "coveredBy": [
            "806",
            "807",
            "808",
            "809",
            "810",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 110,
              "line": 46
            },
            "start": {
              "column": 12,
              "line": 46
            }
          }
        }
      ],
      "source": "<template>\n  <div id=\"game-lobby-options-votes-tab\">\n    <GameOptionInputGroup\n      id=\"game-lobby-options-hub-votes-tab-can-be-skipped-input-group\"\n      :option-description=\"canVotesBeSkippedDescription\"\n      option-icon-class=\"fa fa-forward text-blue-300\"\n      :option-label=\"$t('components.GameLobbyOptionsHubVotesTab.options.canBeSkipped.label')\"\n    >\n      <AffirmativeToggleButton\n        id=\"game-lobby-options-hub-votes-tab-can-be-skipped-input\"\n        v-model=\"canVotesBeSkippedValue\"\n        class=\"w-full\"\n      />\n    </GameOptionInputGroup>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\nimport AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport { useStrings } from \"~/composables/misc/useStrings\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst { setCreateGameDto } = createGameDtoStore;\nconst { createGameDto } = storeToRefs(createGameDtoStore);\n\nconst { t } = useI18n();\n\nconst { convertBooleanAsAffirmativeString } = useStrings();\n\nconst canVotesBeSkippedValue = computed<boolean>({\n  get: () => createGameDto.value.options.votes.canBeSkipped,\n  set: value => {\n    const localCreateGameDto = CreateGameDto.create(createGameDto.value);\n    localCreateGameDto.options.votes.canBeSkipped = value;\n    setCreateGameDto(localCreateGameDto);\n  },\n});\n\nconst canVotesBeSkippedDescription = computed<string>(() => {\n  const booleanAsAffirmative = convertBooleanAsAffirmativeString(canVotesBeSkippedValue.value);\n\n  return t(`components.GameLobbyOptionsHubVotesTab.options.canBeSkipped.descriptions.${booleanAsAffirmative}`);\n});\n</script>"
    },
    "components/pages/game-lobby/GameLobbyPlayersParty/GameLobbyPlayerCard/GameLobbyPlayerCard.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1137",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected '' to be 'components.GameLobbyPlayerCard.roleNo…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "718"
          ],
          "coveredBy": [
            "714",
            "715",
            "716",
            "717",
            "718",
            "719",
            "720"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 52
            },
            "start": {
              "column": 51,
              "line": 47
            }
          }
        },
        {
          "id": "1138",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Game Lobby Player Card Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "714"
          ],
          "coveredBy": [
            "714",
            "715",
            "716",
            "717",
            "718",
            "719",
            "720"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 48
            },
            "start": {
              "column": 7,
              "line": 48
            }
          }
        },
        {
          "id": "1139",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected '' to be 'components.GameLobbyPlayerCard.roleNo…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "718"
          ],
          "coveredBy": [
            "714",
            "715",
            "716",
            "717",
            "718",
            "719",
            "720"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 48
            },
            "start": {
              "column": 7,
              "line": 48
            }
          }
        },
        {
          "id": "1140",
          "mutatorName": "EqualityOperator",
          "replacement": "props.player.role.name !== undefined",
          "statusReason": "Snapshot `Game Lobby Player Card Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "714"
          ],
          "coveredBy": [
            "714",
            "715",
            "716",
            "717",
            "718",
            "719",
            "720"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 48
            },
            "start": {
              "column": 7,
              "line": 48
            }
          }
        },
        {
          "id": "1141",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected '' to be 'components.GameLobbyPlayerCard.roleNo…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "718"
          ],
          "coveredBy": [
            "718"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 50
            },
            "start": {
              "column": 45,
              "line": 48
            }
          }
        },
        {
          "id": "1142",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be 'components.GameLobbyPlayerCard.roleNo…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "718"
          ],
          "coveredBy": [
            "718"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 49
            },
            "start": {
              "column": 14,
              "line": 49
            }
          }
        },
        {
          "id": "1143",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "717"
          ],
          "coveredBy": [
            "717"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 56
            },
            "start": {
              "column": 48,
              "line": 54
            }
          }
        },
        {
          "id": "1144",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Target cannot be null or undefined.",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "720"
          ],
          "coveredBy": [
            "720"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 60
            },
            "start": {
              "column": 36,
              "line": 58
            }
          }
        },
        {
          "id": "1145",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Target cannot be null or undefined.",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "720"
          ],
          "coveredBy": [
            "720"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 59
            },
            "start": {
              "column": 8,
              "line": 59
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    class=\"flex flex-col game-lobby-player-card items-center mb-4 p-1\"\n    :data-testid=\"`game-lobby-player-card-${props.player.name}`\"\n  >\n    <VuePrimeButton\n      v-p-tooltip=\"$t('components.GameLobbyPlayerCard.removePlayer', { 'playerName': player.name })\"\n      :aria-label=\"$t('components.GameLobbyPlayerCard.removePlayer', { 'playerName': player.name })\"\n      class=\"mb-1 player-card-delete-button\"\n      icon=\"fa-minus fa fa-2x\"\n      raised\n      severity=\"danger\"\n      size=\"small\"\n      type=\"button\"\n      @click.prevent=\"removePlayerFromCreateGameDto\"\n    />\n\n    <PlayerCard\n      class=\"player-card\"\n      :player-name=\"player.name\"\n      :player-role=\"player.role.name\"\n      @player-card-selector-click=\"pickRoleForPlayer\"\n    />\n\n    <small class=\"player-card-role truncate\">\n      {{ playerCardRoleText }}\n    </small>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { GameLobbyPlayerCardEmits, GameLobbyPlayerCardProps } from \"~/components/pages/game-lobby/GameLobbyPlayersParty/GameLobbyPlayerCard/game-lobby-player-card.types\";\nimport PlayerCard from \"~/components/shared/game/player/PlayerCard/PlayerCard.vue\";\nimport { useRoleName } from \"~/composables/api/role/useRoleName\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst props = defineProps<GameLobbyPlayerCardProps>();\n\nconst emit = defineEmits<GameLobbyPlayerCardEmits>();\n\nconst { getRoleNameLabel } = useRoleName();\n\nconst { t } = useI18n();\n\nconst createGameDtoStore = useCreateGameDtoStore();\n\nconst playerCardRoleText = computed<string>(() => {\n  if (props.player.role.name === undefined) {\n    return t(\"components.GameLobbyPlayerCard.roleNotSelected\");\n  }\n  return getRoleNameLabel(props.player.role.name);\n});\n\nfunction removePlayerFromCreateGameDto(): void {\n  createGameDtoStore.removePlayerFromCreateGameDto(props.player.name);\n}\n\nfunction pickRoleForPlayer(): void {\n  emit(\"pickRoleForPlayer\", props.player);\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  .game-lobby-player-card {\n    .player-card-delete-button {\n      max-height: 10px;\n      width: 10px;\n      font-size: .5rem;\n    }\n  }\n</style>"
    },
    "components/pages/game-lobby/GameLobbyPlayersParty/GameLobbyPlayersParty.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1146",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Target cannot be null or undefined.",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "750"
          ],
          "coveredBy": [
            "750",
            "751"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 53
            },
            "start": {
              "column": 64,
              "line": 48
            }
          }
        },
        {
          "id": "1147",
          "mutatorName": "BooleanLiteral",
          "replacement": "player",
          "statusReason": "Target cannot be null or undefined.",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "750"
          ],
          "coveredBy": [
            "750",
            "751"
          ],
          "location": {
            "end": {
              "column": 14,
              "line": 49
            },
            "start": {
              "column": 7,
              "line": 49
            }
          }
        },
        {
          "id": "1148",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Target cannot be null or undefined.",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "750"
          ],
          "coveredBy": [
            "750",
            "751"
          ],
          "location": {
            "end": {
              "column": 14,
              "line": 49
            },
            "start": {
              "column": 7,
              "line": 49
            }
          }
        },
        {
          "id": "1149",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected [ [ undefined ] ] to be undefined",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "751"
          ],
          "coveredBy": [
            "750",
            "751"
          ],
          "location": {
            "end": {
              "column": 14,
              "line": 49
            },
            "start": {
              "column": 7,
              "line": 49
            }
          }
        },
        {
          "id": "1150",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected [ [ undefined ] ] to be undefined",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "751"
          ],
          "coveredBy": [
            "751"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 51
            },
            "start": {
              "column": 16,
              "line": 49
            }
          }
        },
        {
          "id": "1151",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Target cannot be null or undefined.",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "750"
          ],
          "coveredBy": [
            "750"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 52
            },
            "start": {
              "column": 8,
              "line": 52
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-lobby-players-party-container\"\n    class=\"flex h-full items-center justify-center\"\n  >\n    <h2\n      v-if=\"!createGameDto.players.length\"\n      id=\"no-players-in-lobby-message\"\n      class=\"flex items-center justify-center\"\n    >\n      <i class=\"fa fa-plus me-2\"/>\n\n      <span>\n        {{ $t(\"components.GameLobbyPlayersParty.addPlayersWithInputAbove\") }}\n      </span>\n    </h2>\n\n    <div\n      v-else\n      id=\"game-lobby-players-party\"\n      class=\"grid grid-cols-5 h-full items-center justify-center w-full\"\n    >\n      <GameLobbyPlayerCard\n        v-for=\"player in createGameDto.players\"\n        :key=\"player.name\"\n        class=\"game-lobby-player-card\"\n        :player=\"player\"\n        @pick-role-for-player=\"pickRoleForPlayer\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\n\nimport type { GameLobbyPlayersPartyEmits } from \"~/components/pages/game-lobby/GameLobbyPlayersParty/game-lobby-players-party.types\";\nimport GameLobbyPlayerCard from \"~/components/pages/game-lobby/GameLobbyPlayersParty/GameLobbyPlayerCard/GameLobbyPlayerCard.vue\";\nimport type { CreateGamePlayerDto } from \"~/composables/api/game/dto/create-game/create-game-player/create-game-player.dto\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst emit = defineEmits<GameLobbyPlayersPartyEmits>();\n\nconst createGameDtoStore = useCreateGameDtoStore();\n\nconst { createGameDto } = storeToRefs(createGameDtoStore);\n\nfunction pickRoleForPlayer(player?: CreateGamePlayerDto): void {\n  if (!player) {\n    return;\n  }\n  emit(\"pickRoleForPlayer\", player);\n}\n</script>"
    },
    "components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePicker.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1152",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "expected true to be falsy",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "329"
          ],
          "coveredBy": [
            "328",
            "329",
            "330",
            "331",
            "332",
            "333",
            "334",
            "335",
            "336",
            "337",
            "338",
            "339",
            "340",
            "341"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 65
            },
            "start": {
              "column": 32,
              "line": 65
            }
          }
        },
        {
          "id": "1153",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected 'false' to be 'true' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "333"
          ],
          "coveredBy": [
            "333",
            "334",
            "335",
            "336",
            "337",
            "338",
            "339",
            "340",
            "341"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 73
            },
            "start": {
              "column": 69,
              "line": 69
            }
          }
        },
        {
          "id": "1154",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "expected 'false' to be 'true' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "333"
          ],
          "coveredBy": [
            "333",
            "334",
            "335",
            "336",
            "337",
            "338",
            "339",
            "340",
            "341"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 72
            },
            "start": {
              "column": 21,
              "line": 72
            }
          }
        },
        {
          "id": "1155",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected undefined to strictly equal _Role{ name: 'elder', …(7) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "338"
          ],
          "coveredBy": [
            "338",
            "341"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 77
            },
            "start": {
              "column": 37,
              "line": 75
            }
          }
        },
        {
          "id": "1156",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected true to be falsy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "341"
          ],
          "coveredBy": [
            "341"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 81
            },
            "start": {
              "column": 24,
              "line": 79
            }
          }
        },
        {
          "id": "1157",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "expected true to be falsy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "341"
          ],
          "coveredBy": [
            "341"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 80
            },
            "start": {
              "column": 21,
              "line": 80
            }
          }
        },
        {
          "id": "1158",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "The macro defineExpose from Nuxt is breaking Stryker, so we ignore it.",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 41,
              "line": 83
            },
            "start": {
              "column": 14,
              "line": 83
            }
          }
        }
      ],
      "source": "<template>\n  <VuePrimeDialog\n    id=\"game-lobby-role-picker\"\n    block-scroll\n    content-class=\"w-x-screen-9/10 max-w-x-screen-9/10\"\n    dismissable-mask\n    :draggable=\"false\"\n    modal\n    :pt=\"{\n      'root': 'h-9/10',\n      'icons': 'pb-2',\n      'header': '!py-2',\n      'content': 'w-x-screen-9/10 max-w-x-screen-9/10 !py-0',\n      'footer': '!py-2'\n    }\"\n    :visible=\"isVisible\"\n    @update:visible=\"close\"\n  >\n    <template\n      #header\n    >\n      <GameLobbyRolePickerHeader\n        id=\"game-lobby-role-picker-header\"\n        :player=\"localPlayer\"\n      />\n    </template>\n\n    <div\n      id=\"game-lobby-role-picker-content\"\n      class=\"flex gap-2 h-full\"\n    >\n      <GameLobbyRolePickerDescription\n        id=\"game-lobby-role-picker-description\"\n        class=\"overflow-y-scroll w-4/12\"\n        :picked-role=\"pickedRole\"\n      />\n\n      <GameLobbyRolePickerGrid\n        id=\"game-lobby-role-picker-grid\"\n        class=\"overflow-y-scroll w-8/12\"\n        :picked-role=\"pickedRole\"\n        @pick-role=\"pickRole\"\n      />\n    </div>\n\n    <template #footer>\n      <GameLobbyRolePickerFooter\n        id=\"game-lobby-role-picker-footer\"\n        :picked-role=\"pickedRole\"\n        :player=\"localPlayer\"\n        @player-update=\"close\"\n      />\n    </template>\n  </VuePrimeDialog>\n</template>\n\n<script setup lang=\"ts\">\nimport GameLobbyRolePickerDescription from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescription.vue\";\nimport GameLobbyRolePickerFooter from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerFooter/GameLobbyRolePickerFooter.vue\";\nimport GameLobbyRolePickerGrid from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGrid.vue\";\nimport GameLobbyRolePickerHeader from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerHeader/GameLobbyRolePickerHeader.vue\";\nimport { CreateGamePlayerDto } from \"~/composables/api/game/dto/create-game/create-game-player/create-game-player.dto\";\nimport type { Role } from \"~/composables/api/role/types/role.class\";\n\nconst isVisible = ref<boolean>(false);\nconst localPlayer = ref<CreateGamePlayerDto>();\nconst pickedRole = ref<Role>();\n\nfunction openToPickRoleForPlayer(player: CreateGamePlayerDto): void {\n  localPlayer.value = CreateGamePlayerDto.create(player);\n  pickedRole.value = undefined;\n  isVisible.value = true;\n}\n\nfunction pickRole(role: Role): void {\n  pickedRole.value = role;\n}\n\nfunction close(): void {\n  isVisible.value = false;\n}\n\ndefineExpose({ openToPickRoleForPlayer });\n</script>"
    },
    "components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescription.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1159",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Anything,\n  Object {\n    \"behavior\": \"smooth\",\n  },\n], but it was called with RefImpl {\n  \"__v_isRef\": true,\n  \"__v_isShallow\": false,\n  \"_rawValue\": <div\n    class=\"border-gray-600 border-r flex flex-col gap-2 items-center pe-4\"\n    data-testid=\"game-lobby-role-picker-description\"\n    id=\"game-lobby-role-picker-description\"\n  >\n    <role-flipping-image-stub\n      class=\"rounded-2xl\"\n      definition=\"normal\"\n      rolename=\"seer\"\n      sizes=\"200px\"\n    />\n    <game-lobby-role-picker-description-content-stub\n      id=\"game-lobby-role-picker-description-content\"\n      pickedrole=\"[object Object]\"\n    />\n  </div>,\n  \"_value\": <div\n    class=\"border-gray-600 border-r flex flex-col gap-2 items-center pe-4\"\n    data-testid=\"game-lobby-role-picker-description\"\n    id=\"game-lobby-role-picker-description\"\n  >\n    <role-flipping-image-stub\n      class=\"rounded-2xl\"\n      definition=\"normal\"\n      rolename=\"seer\"\n      sizes=\"200px\"\n    />\n    <game-lobby-role-picker-description-content-stub\n      id=\"game-lobby-role-picker-description-content\"\n      pickedrole=\"[object Object]\"\n    />\n  </div>,\n  \"dep\": undefined,\n}",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "843"
          ],
          "coveredBy": [
            "839",
            "840",
            "841",
            "842",
            "843",
            "844"
          ],
          "location": {
            "end": {
              "column": 88,
              "line": 42
            },
            "start": {
              "column": 66,
              "line": 42
            }
          }
        },
        {
          "id": "1160",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Anything,\n  Object {\n    \"behavior\": \"smooth\",\n  },\n], but it was called with RefImpl {\n  \"__v_isRef\": true,\n  \"__v_isShallow\": false,\n  \"_rawValue\": <div\n    class=\"border-gray-600 border-r flex flex-col gap-2 items-center pe-4\"\n    data-testid=\"game-lobby-role-picker-description\"\n    id=\"game-lobby-role-picker-description\"\n  >\n    <role-flipping-image-stub\n      class=\"rounded-2xl\"\n      definition=\"normal\"\n      rolename=\"seer\"\n      sizes=\"200px\"\n    />\n    <game-lobby-role-picker-description-content-stub\n      id=\"game-lobby-role-picker-description-content\"\n      pickedrole=\"[object Object]\"\n    />\n  </div>,\n  \"_value\": <div\n    class=\"border-gray-600 border-r flex flex-col gap-2 items-center pe-4\"\n    data-testid=\"game-lobby-role-picker-description\"\n    id=\"game-lobby-role-picker-description\"\n  >\n    <role-flipping-image-stub\n      class=\"rounded-2xl\"\n      definition=\"normal\"\n      rolename=\"seer\"\n      sizes=\"200px\"\n    />\n    <game-lobby-role-picker-description-content-stub\n      id=\"game-lobby-role-picker-description-content\"\n      pickedrole=\"[object Object]\"\n    />\n  </div>,\n  \"dep\": undefined,\n}",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "843"
          ],
          "coveredBy": [
            "839",
            "840",
            "841",
            "842",
            "843",
            "844"
          ],
          "location": {
            "end": {
              "column": 86,
              "line": 42
            },
            "start": {
              "column": 78,
              "line": 42
            }
          }
        },
        {
          "id": "1161",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected 20 to be +0 // Object.is equality",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "844"
          ],
          "coveredBy": [
            "839",
            "840",
            "841",
            "842",
            "843",
            "844"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 44
            },
            "start": {
              "column": 7,
              "line": 44
            }
          }
        },
        {
          "id": "1162",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected 20 to be +0 // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "844"
          ],
          "coveredBy": [
            "844"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 46
            },
            "start": {
              "column": 37,
              "line": 44
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-lobby-role-picker-description\"\n    ref=\"gameLobbyRolePickerDescription\"\n    class=\"border-gray-600 border-r flex flex-col gap-2 items-center pe-4\"\n    data-testid=\"game-lobby-role-picker-description\"\n  >\n    <RoleFlippingImage\n      class=\"rounded-2xl\"\n      :role-name=\"pickedRole?.name\"\n      sizes=\"200px\"\n    />\n\n    <div\n      v-if=\"!pickedRole\"\n      id=\"no-picked-role-container\"\n      class=\"flex flex-col gap-4 items-center justify-center\"\n    >\n      <h3>\n        {{ $t(\"components.GameLobbyRolePickerDescription.pickARole\") }}\n      </h3>\n\n      <i class=\"fa-3x fa-circle-chevron-right fas\"/>\n    </div>\n\n    <GameLobbyRolePickerDescriptionContent\n      v-else\n      id=\"game-lobby-role-picker-description-content\"\n      :picked-role=\"pickedRole\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { GameLobbyRolePickerDescriptionProps } from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/game-lobby-role-picker-description.types\";\nimport GameLobbyRolePickerDescriptionContent from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionContent.vue\";\nimport RoleFlippingImage from \"~/components/shared/role/RoleImage/RoleFlippingImage/RoleFlippingImage.vue\";\n\nconst props = defineProps<GameLobbyRolePickerDescriptionProps>();\n\nconst gameLobbyRolePickerDescription = ref<HTMLElement | null>(null);\nconst { y: yScroll } = useScroll(gameLobbyRolePickerDescription, { behavior: \"smooth\" });\n\nwatch(() => props.pickedRole, () => {\n  yScroll.value = 0;\n});\n</script>"
    },
    "components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/GameLobbyRolePickerDescriptionBoundaries.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1163",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Role Picker Description Boundaries Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "440"
          ],
          "coveredBy": [
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448"
          ],
          "location": {
            "end": {
              "column": 124,
              "line": 66
            },
            "start": {
              "column": 51,
              "line": 66
            }
          }
        },
        {
          "id": "1164",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected true to be falsy",
          "status": "Killed",
          "testsCompleted": 8,
          "static": false,
          "killedBy": [
            "447"
          ],
          "coveredBy": [
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448"
          ],
          "location": {
            "end": {
              "column": 110,
              "line": 68
            },
            "start": {
              "column": 50,
              "line": 68
            }
          }
        },
        {
          "id": "1165",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected 'components.GameLobbyRolePickerDescrip…' to be 'components.GameLobbyRolePickerDescrip…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "446"
          ],
          "coveredBy": [
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448"
          ],
          "location": {
            "end": {
              "column": 135,
              "line": 70
            },
            "start": {
              "column": 65,
              "line": 70
            }
          }
        },
        {
          "id": "1166",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Cannot call text on an empty DOMWrapper.",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "442"
          ],
          "coveredBy": [
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448"
          ],
          "location": {
            "end": {
              "column": 110,
              "line": 72
            },
            "start": {
              "column": 50,
              "line": 72
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-lobby-role-picker-description-boundaries\"\n  >\n    <div\n      id=\"role-count-in-party\"\n      class=\"flex gap-2 items-center\"\n    >\n      <i class=\"fa-chess-pawn fas text-center text-info w-4\"/>\n\n      <span id=\"role-count\">\n        {{ t(\"components.GameLobbyRolePickerDescriptionBoundaries.roleCountInParty\", { \"count\": roleCountInCreateGameDto }) }}\n      </span>\n\n      <div\n        v-if=\"isRoleMaxInGameReached\"\n        id=\"role-count-max-reached\"\n        class=\"italic text-gray-400\"\n      >\n        ({{ t(\"components.GameLobbyRolePickerDescriptionBoundaries.roleCountMaxReached\") }})\n      </div>\n    </div>\n\n    <div\n      v-if=\"pickedRole.recommendedMinPlayers\"\n      id=\"recommended-role-min-in-game\"\n      class=\"flex gap-2 items-center\"\n    >\n      <i class=\"fa-chess fas text-center text-warning w-4\"/>\n\n      <span>\n        {{ t(\"components.GameLobbyRolePickerDescriptionBoundaries.recommendedMinPlayers\", { \"count\": pickedRole.recommendedMinPlayers }) }}\n      </span>\n    </div>\n\n    <div\n      v-if=\"roleCountInCreateGameDto && !isRoleMinInGameReached\"\n      id=\"min-in-game-not-reached\"\n      class=\"flex gap-2 items-center\"\n    >\n      <i class=\"fa-circle-exclamation fas text-center text-error w-4\"/>\n\n      <span>\n        {{ t(\"components.GameLobbyRolePickerDescriptionBoundaries.minInGameNotReached\", { \"count\": roleLeftCountToReachMinInCreateGameDto }) }}\n      </span>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { GameLobbyRolePickerDescriptionBoundariesProps } from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/game-lobby-role-picker-description-boundaries.types\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst props = defineProps<GameLobbyRolePickerDescriptionBoundariesProps>();\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst {\n  getPlayersWithRoleNameInCreateGameDto,\n  getRoleLeftCountToReachMinInCreateGameDto,\n  isRoleMinReachedInCreateGameDto,\n  isRoleMaxReachedInCreateGameDto,\n} = createGameDtoStore;\n\nconst { t } = useI18n();\n\nconst roleCountInCreateGameDto = computed<number>(() => getPlayersWithRoleNameInCreateGameDto(props.pickedRole.name).length);\n\nconst isRoleMinInGameReached = computed<boolean>(() => isRoleMinReachedInCreateGameDto(props.pickedRole.name));\n\nconst roleLeftCountToReachMinInCreateGameDto = computed<number>(() => getRoleLeftCountToReachMinInCreateGameDto(props.pickedRole.name));\n\nconst isRoleMaxInGameReached = computed<boolean>(() => isRoleMaxReachedInCreateGameDto(props.pickedRole.name));\n</script>"
    },
    "components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionContent.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1167",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Role Picker Description Content Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "968"
          ],
          "coveredBy": [
            "968",
            "969"
          ],
          "location": {
            "end": {
              "column": 72,
              "line": 57
            },
            "start": {
              "column": 27,
              "line": 57
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-lobby-role-picker-description-content\"\n    class=\"flex flex-col gap-4 items-center w-full\"\n  >\n    <h3 id=\"role-name\">\n      {{ roleName }}\n    </h3>\n\n    <RoleSideBadge\n      id=\"role-side-badge\"\n      :role-side=\"pickedRole.side\"\n      size=\"large\"\n    />\n\n    <div class=\"flex gap-2 items-center justify-between w-full\">\n      <RoleOriginBadge\n        id=\"role-origin-badge\"\n        :role-origin=\"pickedRole.origin\"\n      />\n\n      <RoleTypeBadge\n        id=\"role-type-badge\"\n        class=\"role-type-badge\"\n        :role-type=\"pickedRole.type\"\n      />\n    </div>\n\n    <GameLobbyRolePickerDescriptionBoundaries\n      id=\"game-lobby-role-picker-description-boundaries\"\n      class=\"w-full\"\n      :picked-role=\"pickedRole\"\n    />\n\n    <VuePrimeDivider class=\"!my-2\"/>\n\n    <RoleDescriptionLines\n      id=\"role-description-lines\"\n      :role=\"pickedRole\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { GameLobbyRolePickerDescriptionContentProps } from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/game-lobby-role-picker-description-content.types\";\nimport GameLobbyRolePickerDescriptionBoundaries from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/GameLobbyRolePickerDescriptionBoundaries.vue\";\nimport RoleDescriptionLines from \"~/components/shared/role/RoleDescriptionLines/RoleDescriptionLines.vue\";\nimport RoleOriginBadge from \"~/components/shared/role/RoleOriginBadge/RoleOriginBadge.vue\";\nimport RoleSideBadge from \"~/components/shared/role/RoleSideBadge/RoleSideBadge.vue\";\nimport RoleTypeBadge from \"~/components/shared/role/RoleTypeBadge/RoleTypeBadge.vue\";\nimport { useRoleName } from \"~/composables/api/role/useRoleName\";\n\nconst props = defineProps<GameLobbyRolePickerDescriptionContentProps>();\n\nconst { getRoleNameLabel } = useRoleName();\n\nconst roleName = computed(() => getRoleNameLabel(props.pickedRole.name));\n</script>"
    },
    "components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerFooter/GameLobbyRolePickerFooter.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1168",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Role Picker Footer Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "255"
          ],
          "coveredBy": [
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265"
          ],
          "location": {
            "end": {
              "column": 103,
              "line": 34
            },
            "start": {
              "column": 47,
              "line": 34
            }
          }
        },
        {
          "id": "1169",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'false' to be 'true' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "259"
          ],
          "coveredBy": [
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265"
          ],
          "location": {
            "end": {
              "column": 103,
              "line": 34
            },
            "start": {
              "column": 53,
              "line": 34
            }
          }
        },
        {
          "id": "1170",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Snapshot `Game Lobby Role Picker Footer Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "255"
          ],
          "coveredBy": [
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265"
          ],
          "location": {
            "end": {
              "column": 103,
              "line": 34
            },
            "start": {
              "column": 53,
              "line": 34
            }
          }
        },
        {
          "id": "1171",
          "mutatorName": "EqualityOperator",
          "replacement": "props.player?.role.name === props.pickedRole?.name",
          "statusReason": "Snapshot `Game Lobby Role Picker Footer Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "255"
          ],
          "coveredBy": [
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265"
          ],
          "location": {
            "end": {
              "column": 103,
              "line": 34
            },
            "start": {
              "column": 53,
              "line": 34
            }
          }
        },
        {
          "id": "1172",
          "mutatorName": "OptionalChaining",
          "replacement": "props.player.role",
          "statusReason": "Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "257"
          ],
          "coveredBy": [
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265"
          ],
          "location": {
            "end": {
              "column": 71,
              "line": 34
            },
            "start": {
              "column": 53,
              "line": 34
            }
          }
        },
        {
          "id": "1173",
          "mutatorName": "OptionalChaining",
          "replacement": "props.pickedRole.name",
          "statusReason": "Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "258"
          ],
          "coveredBy": [
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265"
          ],
          "location": {
            "end": {
              "column": 103,
              "line": 34
            },
            "start": {
              "column": 81,
              "line": 34
            }
          }
        },
        {
          "id": "1174",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Role Picker Footer Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "255"
          ],
          "coveredBy": [
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265"
          ],
          "location": {
            "end": {
              "column": 114,
              "line": 36
            },
            "start": {
              "column": 43,
              "line": 36
            }
          }
        },
        {
          "id": "1175",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'false' to be 'true' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "257"
          ],
          "coveredBy": [
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265"
          ],
          "location": {
            "end": {
              "column": 114,
              "line": 36
            },
            "start": {
              "column": 49,
              "line": 36
            }
          }
        },
        {
          "id": "1176",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Snapshot `Game Lobby Role Picker Footer Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "255"
          ],
          "coveredBy": [
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265"
          ],
          "location": {
            "end": {
              "column": 114,
              "line": 36
            },
            "start": {
              "column": 49,
              "line": 36
            }
          }
        },
        {
          "id": "1177",
          "mutatorName": "LogicalOperator",
          "replacement": "!!props.player && !!props.pickedRole || isPlayerRoleChanged.value",
          "statusReason": "expected 'false' to be 'true' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "257"
          ],
          "coveredBy": [
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265"
          ],
          "location": {
            "end": {
              "column": 114,
              "line": 36
            },
            "start": {
              "column": 49,
              "line": 36
            }
          }
        },
        {
          "id": "1178",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'false' to be 'true' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "257"
          ],
          "coveredBy": [
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265"
          ],
          "location": {
            "end": {
              "column": 85,
              "line": 36
            },
            "start": {
              "column": 49,
              "line": 36
            }
          }
        },
        {
          "id": "1179",
          "mutatorName": "LogicalOperator",
          "replacement": "!!props.player || !!props.pickedRole",
          "statusReason": "expected 'false' to be 'true' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "257"
          ],
          "coveredBy": [
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265"
          ],
          "location": {
            "end": {
              "column": 85,
              "line": 36
            },
            "start": {
              "column": 49,
              "line": 36
            }
          }
        },
        {
          "id": "1180",
          "mutatorName": "BooleanLiteral",
          "replacement": "!props.player",
          "statusReason": "Snapshot `Game Lobby Role Picker Footer Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "255"
          ],
          "coveredBy": [
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265"
          ],
          "location": {
            "end": {
              "column": 63,
              "line": 36
            },
            "start": {
              "column": 49,
              "line": 36
            }
          }
        },
        {
          "id": "1181",
          "mutatorName": "BooleanLiteral",
          "replacement": "props.player",
          "statusReason": "Snapshot `Game Lobby Role Picker Footer Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "255"
          ],
          "coveredBy": [
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265"
          ],
          "location": {
            "end": {
              "column": 63,
              "line": 36
            },
            "start": {
              "column": 50,
              "line": 36
            }
          }
        },
        {
          "id": "1182",
          "mutatorName": "BooleanLiteral",
          "replacement": "!props.pickedRole",
          "statusReason": "Snapshot `Game Lobby Role Picker Footer Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "255"
          ],
          "coveredBy": [
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265"
          ],
          "location": {
            "end": {
              "column": 85,
              "line": 36
            },
            "start": {
              "column": 67,
              "line": 36
            }
          }
        },
        {
          "id": "1183",
          "mutatorName": "BooleanLiteral",
          "replacement": "props.pickedRole",
          "statusReason": "Snapshot `Game Lobby Role Picker Footer Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "255"
          ],
          "coveredBy": [
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265"
          ],
          "location": {
            "end": {
              "column": 85,
              "line": 36
            },
            "start": {
              "column": 68,
              "line": 36
            }
          }
        },
        {
          "id": "1184",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected 1st \"spy\" call to have been called with [ _CreateGamePlayerDto{ …(4) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "262"
          ],
          "coveredBy": [
            "262",
            "263"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 53
            },
            "start": {
              "column": 101,
              "line": 38
            }
          }
        },
        {
          "id": "1185",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 1st \"spy\" call to have been called with [ _CreateGamePlayerDto{ …(4) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "262"
          ],
          "coveredBy": [
            "262",
            "263"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 40
            },
            "start": {
              "column": 7,
              "line": 40
            }
          }
        },
        {
          "id": "1186",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 2 times",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "263"
          ],
          "coveredBy": [
            "262",
            "263"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 40
            },
            "start": {
              "column": 7,
              "line": 40
            }
          }
        },
        {
          "id": "1187",
          "mutatorName": "EqualityOperator",
          "replacement": "players.length !== 0",
          "statusReason": "expected 1st \"spy\" call to have been called with [ _CreateGamePlayerDto{ …(4) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "262"
          ],
          "coveredBy": [
            "262",
            "263"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 40
            },
            "start": {
              "column": 7,
              "line": 40
            }
          }
        },
        {
          "id": "1188",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 2 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "263"
          ],
          "coveredBy": [
            "263"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 42
            },
            "start": {
              "column": 29,
              "line": 40
            }
          }
        },
        {
          "id": "1189",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected 1st \"spy\" call to have been called with [ _CreateGamePlayerDto{ …(4) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "262"
          ],
          "coveredBy": [
            "262"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 51
            },
            "start": {
              "column": 52,
              "line": 44
            }
          }
        },
        {
          "id": "1190",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected 1st \"spy\" call to have been called with [ _CreateGamePlayerDto{ …(4) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "262"
          ],
          "coveredBy": [
            "262"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 46
            },
            "start": {
              "column": 11,
              "line": 46
            }
          }
        },
        {
          "id": "1191",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected 1st \"spy\" call to have been called with [ _CreateGamePlayerDto{ …(4) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "262"
          ],
          "coveredBy": [
            "262"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 50
            },
            "start": {
              "column": 11,
              "line": 47
            }
          }
        },
        {
          "id": "1192",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "261"
          ],
          "coveredBy": [
            "261",
            "262",
            "263",
            "264",
            "265"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 72
            },
            "start": {
              "column": 36,
              "line": 55
            }
          }
        },
        {
          "id": "1193",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "261"
          ],
          "coveredBy": [
            "261",
            "262",
            "263",
            "264",
            "265"
          ],
          "location": {
            "end": {
              "column": 41,
              "line": 56
            },
            "start": {
              "column": 7,
              "line": 56
            }
          }
        },
        {
          "id": "1194",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Cannot read properties of undefined (reading 'name')",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "265"
          ],
          "coveredBy": [
            "261",
            "262",
            "263",
            "264",
            "265"
          ],
          "location": {
            "end": {
              "column": 41,
              "line": 56
            },
            "start": {
              "column": 7,
              "line": 56
            }
          }
        },
        {
          "id": "1195",
          "mutatorName": "LogicalOperator",
          "replacement": "!props.pickedRole && !props.player",
          "statusReason": "Cannot read properties of undefined (reading 'name')",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "265"
          ],
          "coveredBy": [
            "261",
            "262",
            "263",
            "264",
            "265"
          ],
          "location": {
            "end": {
              "column": 41,
              "line": 56
            },
            "start": {
              "column": 7,
              "line": 56
            }
          }
        },
        {
          "id": "1196",
          "mutatorName": "BooleanLiteral",
          "replacement": "props.pickedRole",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "261"
          ],
          "coveredBy": [
            "261",
            "262",
            "263",
            "264",
            "265"
          ],
          "location": {
            "end": {
              "column": 24,
              "line": 56
            },
            "start": {
              "column": 7,
              "line": 56
            }
          }
        },
        {
          "id": "1197",
          "mutatorName": "BooleanLiteral",
          "replacement": "props.player",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "261"
          ],
          "coveredBy": [
            "261",
            "262",
            "263",
            "264",
            "265"
          ],
          "location": {
            "end": {
              "column": 41,
              "line": 56
            },
            "start": {
              "column": 28,
              "line": 56
            }
          }
        },
        {
          "id": "1198",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Cannot read properties of undefined (reading 'name')",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "265"
          ],
          "coveredBy": [
            "265"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 58
            },
            "start": {
              "column": 43,
              "line": 56
            }
          }
        },
        {
          "id": "1199",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 2 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "261"
          ],
          "coveredBy": [
            "261",
            "262",
            "263",
            "264",
            "265"
          ],
          "location": {
            "end": {
              "column": 61,
              "line": 59
            },
            "start": {
              "column": 7,
              "line": 59
            }
          }
        },
        {
          "id": "1200",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected 1st \"spy\" call to have been called with [ _CreateGamePlayerDto{ …(4) } ]",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "262"
          ],
          "coveredBy": [
            "261",
            "262",
            "263",
            "264",
            "265"
          ],
          "location": {
            "end": {
              "column": 61,
              "line": 59
            },
            "start": {
              "column": 7,
              "line": 59
            }
          }
        },
        {
          "id": "1201",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected 1st \"spy\" call to have been called with [ _CreateGamePlayerDto{ …(4) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "262"
          ],
          "coveredBy": [
            "262",
            "263"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 61
            },
            "start": {
              "column": 63,
              "line": 59
            }
          }
        },
        {
          "id": "1202",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  _CreateGamePlayerDto {\n    \"group\": undefined,\n    \"name\": \"Antoine\",\n    \"role\": _CreateGamePlayerRoleDto {\n      \"name\": \"werewolf\",\n    },\n    \"side\": _CreateGamePlayerSideDto {\n      \"current\": \"werewolves\",\n      \"original\": \"werewolves\",\n    },\n  },\n], but it was called with _CreateGamePlayerDto {\n  \"group\": undefined,\n  \"name\": undefined,\n  \"role\": undefined,\n  \"side\": undefined,\n}",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "261"
          ],
          "coveredBy": [
            "261",
            "262",
            "263",
            "264",
            "265"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 69
            },
            "start": {
              "column": 52,
              "line": 62
            }
          }
        },
        {
          "id": "1203",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  _CreateGamePlayerDto {\n    \"group\": undefined,\n    \"name\": \"Antoine\",\n    \"role\": _CreateGamePlayerRoleDto {\n      \"name\": \"werewolf\",\n    },\n    \"side\": _CreateGamePlayerSideDto {\n      \"current\": \"werewolves\",\n      \"original\": \"werewolves\",\n    },\n  },\n], but it was called with _CreateGamePlayerDto {\n  \"group\": undefined,\n  \"name\": \"Antoine\",\n  \"role\": _CreateGamePlayerRoleDto {\n    \"name\": undefined,\n  },\n  \"side\": _CreateGamePlayerSideDto {\n    \"current\": \"werewolves\",\n    \"original\": \"werewolves\",\n  },\n}",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "261"
          ],
          "coveredBy": [
            "261",
            "262",
            "263",
            "264",
            "265"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 64
            },
            "start": {
              "column": 11,
              "line": 64
            }
          }
        },
        {
          "id": "1204",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  _CreateGamePlayerDto {\n    \"group\": undefined,\n    \"name\": \"Antoine\",\n    \"role\": _CreateGamePlayerRoleDto {\n      \"name\": \"werewolf\",\n    },\n    \"side\": _CreateGamePlayerSideDto {\n      \"current\": \"werewolves\",\n      \"original\": \"werewolves\",\n    },\n  },\n], but it was called with _CreateGamePlayerDto {\n  \"group\": undefined,\n  \"name\": \"Antoine\",\n  \"role\": _CreateGamePlayerRoleDto {\n    \"name\": \"werewolf\",\n  },\n  \"side\": _CreateGamePlayerSideDto {\n    \"current\": undefined,\n    \"original\": undefined,\n  },\n}",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "261"
          ],
          "coveredBy": [
            "261",
            "262",
            "263",
            "264",
            "265"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 68
            },
            "start": {
              "column": 11,
              "line": 65
            }
          }
        },
        {
          "id": "1205",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Target cannot be null or undefined.",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "264"
          ],
          "coveredBy": [
            "261",
            "262",
            "263",
            "264",
            "265"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 71
            },
            "start": {
              "column": 8,
              "line": 71
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-lobby-role-picker-footer\"\n    class=\"text-center w-full\"\n  >\n    <VuePrimeDivider class=\"!my-2\"/>\n\n    <VuePrimeButton\n      id=\"game-lobby-role-picker-footer-button\"\n      :disabled=\"!canRoleBePicked\"\n      :label=\"$t('components.GameLobbyRolePickerFooter.pickRole')\"\n      @click=\"pickRoleForPlayer\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { GameLobbyRolePickerFooterEmits, GameLobbyRolePickerFooterProps } from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerFooter/game-lobby-role-picker-footer.types\";\nimport { CreateGamePlayerDto } from \"~/composables/api/game/dto/create-game/create-game-player/create-game-player.dto\";\nimport type { Role } from \"~/composables/api/role/types/role.class\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst props = defineProps<GameLobbyRolePickerFooterProps>();\n\nconst emit = defineEmits<GameLobbyRolePickerFooterEmits>();\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst {\n  updatePlayerInCreateGameDto,\n  isRoleMaxReachedInCreateGameDto,\n  getPlayersWithRoleNameInCreateGameDto,\n} = createGameDtoStore;\n\nconst isPlayerRoleChanged = computed<boolean>(() => props.player?.role.name !== props.pickedRole?.name);\n\nconst canRoleBePicked = computed<boolean>(() => !!props.player && !!props.pickedRole && isPlayerRoleChanged.value);\n\nfunction swapRoleWithFirstPlayerWithRole(pickedRole: Role, sourcePlayer: CreateGamePlayerDto): void {\n  const players = getPlayersWithRoleNameInCreateGameDto(pickedRole.name);\n  if (players.length === 0) {\n    return;\n  }\n  const firstPlayer = players[0];\n  const updatedPlayer = CreateGamePlayerDto.create({\n    ...firstPlayer,\n    role: { name: sourcePlayer.role.name },\n    side: {\n      original: sourcePlayer.side.original,\n      current: sourcePlayer.side.current,\n    },\n  });\n  updatePlayerInCreateGameDto(updatedPlayer);\n}\n\nfunction pickRoleForPlayer(): void {\n  if (!props.pickedRole || !props.player) {\n    return;\n  }\n  if (isRoleMaxReachedInCreateGameDto(props.pickedRole.name)) {\n    swapRoleWithFirstPlayerWithRole(props.pickedRole, props.player);\n  }\n  const updatedPlayer = CreateGamePlayerDto.create({\n    ...props.player,\n    role: { name: props.pickedRole.name },\n    side: {\n      original: props.pickedRole.side,\n      current: props.pickedRole.side,\n    },\n  });\n  updatePlayerInCreateGameDto(updatedPlayer);\n  emit(\"playerUpdate\", updatedPlayer);\n}\n</script>"
    },
    "components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGrid.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1206",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Target cannot be null or undefined.",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "925"
          ],
          "coveredBy": [
            "925"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 41
            },
            "start": {
              "column": 37,
              "line": 39
            }
          }
        },
        {
          "id": "1207",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Target cannot be null or undefined.",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "925"
          ],
          "coveredBy": [
            "925"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 40
            },
            "start": {
              "column": 8,
              "line": 40
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-lobby-role-picker-grid\"\n    class=\"gap-4 grid grid-cols-5\"\n  >\n    <GameLobbyRolePickerGridElement\n      class=\"available-role\"\n      :picked-role=\"pickedRole\"\n      @pick-role=\"pickRole\"\n    />\n\n    <GameLobbyRolePickerGridElement\n      v-for=\"role in roles\"\n      :key=\"role.name\"\n      class=\"available-role\"\n      :picked-role=\"pickedRole\"\n      :role=\"role\"\n      @pick-role=\"pickRole\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\n\nimport type { GameLobbyRolePickerGridEmits, GameLobbyRolePickerGridProps } from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/game-lobby-role-picker-grid.types\";\nimport GameLobbyRolePickerGridElement from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElement.vue\";\nimport type { Role } from \"~/composables/api/role/types/role.class\";\nimport { useRolesStore } from \"~/stores/role/useRolesStore\";\n\ndefineProps<GameLobbyRolePickerGridProps>();\n\nconst emit = defineEmits<GameLobbyRolePickerGridEmits>();\n\nconst rolesStore = useRolesStore();\n\nconst { roles } = storeToRefs(rolesStore);\n\nfunction pickRole(role: Role): void {\n  emit(\"pickRole\", role);\n}\n</script>"
    },
    "components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElement.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1208",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Role Picker Grid Element Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "415"
          ],
          "coveredBy": [
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 73
            },
            "start": {
              "column": 42,
              "line": 68
            }
          }
        },
        {
          "id": "1209",
          "mutatorName": "BooleanLiteral",
          "replacement": "props.role",
          "statusReason": "Snapshot `Game Lobby Role Picker Grid Element Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "415"
          ],
          "coveredBy": [
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 69
            },
            "start": {
              "column": 7,
              "line": 69
            }
          }
        },
        {
          "id": "1210",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Game Lobby Role Picker Grid Element Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "415"
          ],
          "coveredBy": [
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 69
            },
            "start": {
              "column": 7,
              "line": 69
            }
          }
        },
        {
          "id": "1211",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "417"
          ],
          "coveredBy": [
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 69
            },
            "start": {
              "column": 7,
              "line": 69
            }
          }
        },
        {
          "id": "1212",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "417"
          ],
          "coveredBy": [
            "417",
            "420",
            "421",
            "423",
            "426",
            "427"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 71
            },
            "start": {
              "column": 20,
              "line": 69
            }
          }
        },
        {
          "id": "1213",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be 'components.GameLobbyRolePickerGridEle…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "420"
          ],
          "coveredBy": [
            "417",
            "420",
            "421",
            "423",
            "426",
            "427"
          ],
          "location": {
            "end": {
              "column": 64,
              "line": 70
            },
            "start": {
              "column": 14,
              "line": 70
            }
          }
        },
        {
          "id": "1214",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected [ 'border-4', 'border-gray-600', …(3) ] to include '!border-gray-100'",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "418"
          ],
          "coveredBy": [
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428"
          ],
          "location": {
            "end": {
              "column": 100,
              "line": 75
            },
            "start": {
              "column": 36,
              "line": 75
            }
          }
        },
        {
          "id": "1215",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Game Lobby Role Picker Grid Element Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "415"
          ],
          "coveredBy": [
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428"
          ],
          "location": {
            "end": {
              "column": 100,
              "line": 75
            },
            "start": {
              "column": 42,
              "line": 75
            }
          }
        },
        {
          "id": "1216",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected [ 'border-4', 'border-gray-600', …(3) ] to include '!border-gray-100'",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "418"
          ],
          "coveredBy": [
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428"
          ],
          "location": {
            "end": {
              "column": 100,
              "line": 75
            },
            "start": {
              "column": 42,
              "line": 75
            }
          }
        },
        {
          "id": "1217",
          "mutatorName": "LogicalOperator",
          "replacement": "!!props.role || props.role.name === props.pickedRole?.name",
          "statusReason": "Snapshot `Game Lobby Role Picker Grid Element Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "415"
          ],
          "coveredBy": [
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428"
          ],
          "location": {
            "end": {
              "column": 100,
              "line": 75
            },
            "start": {
              "column": 42,
              "line": 75
            }
          }
        },
        {
          "id": "1218",
          "mutatorName": "BooleanLiteral",
          "replacement": "!props.role",
          "statusReason": "Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "417"
          ],
          "coveredBy": [
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428"
          ],
          "location": {
            "end": {
              "column": 54,
              "line": 75
            },
            "start": {
              "column": 42,
              "line": 75
            }
          }
        },
        {
          "id": "1219",
          "mutatorName": "BooleanLiteral",
          "replacement": "props.role",
          "statusReason": "Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "417"
          ],
          "coveredBy": [
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428"
          ],
          "location": {
            "end": {
              "column": 54,
              "line": 75
            },
            "start": {
              "column": 43,
              "line": 75
            }
          }
        },
        {
          "id": "1220",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Game Lobby Role Picker Grid Element Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "415"
          ],
          "coveredBy": [
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428"
          ],
          "location": {
            "end": {
              "column": 100,
              "line": 75
            },
            "start": {
              "column": 58,
              "line": 75
            }
          }
        },
        {
          "id": "1221",
          "mutatorName": "EqualityOperator",
          "replacement": "props.role.name !== props.pickedRole?.name",
          "statusReason": "Snapshot `Game Lobby Role Picker Grid Element Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "415"
          ],
          "coveredBy": [
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428"
          ],
          "location": {
            "end": {
              "column": 100,
              "line": 75
            },
            "start": {
              "column": 58,
              "line": 75
            }
          }
        },
        {
          "id": "1222",
          "mutatorName": "OptionalChaining",
          "replacement": "props.pickedRole.name",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "415"
          ],
          "coveredBy": [
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428"
          ],
          "location": {
            "end": {
              "column": 100,
              "line": 75
            },
            "start": {
              "column": 78,
              "line": 75
            }
          }
        },
        {
          "id": "1223",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Target cannot be null or undefined.",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "424"
          ],
          "coveredBy": [
            "424",
            "425",
            "426",
            "427",
            "428"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 91
            },
            "start": {
              "column": 27,
              "line": 77
            }
          }
        },
        {
          "id": "1224",
          "mutatorName": "BooleanLiteral",
          "replacement": "roles.value",
          "statusReason": "Target cannot be null or undefined.",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "424"
          ],
          "coveredBy": [
            "424",
            "425",
            "426",
            "427",
            "428"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 78
            },
            "start": {
              "column": 7,
              "line": 78
            }
          }
        },
        {
          "id": "1225",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Target cannot be null or undefined.",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "424"
          ],
          "coveredBy": [
            "424",
            "425",
            "426",
            "427",
            "428"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 78
            },
            "start": {
              "column": 7,
              "line": 78
            }
          }
        },
        {
          "id": "1226",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected [ [ _Role{ name: 'seer', …(7) } ] ] to be undefined",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "428"
          ],
          "coveredBy": [
            "424",
            "425",
            "426",
            "427",
            "428"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 78
            },
            "start": {
              "column": 7,
              "line": 78
            }
          }
        },
        {
          "id": "1227",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected [ [ _Role{ name: 'seer', …(7) } ] ] to be undefined",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "428"
          ],
          "coveredBy": [
            "428"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 80
            },
            "start": {
              "column": 21,
              "line": 78
            }
          }
        },
        {
          "id": "1228",
          "mutatorName": "BooleanLiteral",
          "replacement": "props.role",
          "statusReason": "expected [ undefined ] to strictly equal [ _Role{ name: 'seer', …(7) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "424"
          ],
          "coveredBy": [
            "424",
            "425",
            "426",
            "427"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 82
            },
            "start": {
              "column": 7,
              "line": 82
            }
          }
        },
        {
          "id": "1229",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected [ undefined ] to strictly equal [ _Role{ name: 'seer', …(7) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "424"
          ],
          "coveredBy": [
            "424",
            "425",
            "426",
            "427"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 82
            },
            "start": {
              "column": 7,
              "line": 82
            }
          }
        },
        {
          "id": "1230",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "426"
          ],
          "coveredBy": [
            "424",
            "425",
            "426",
            "427"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 82
            },
            "start": {
              "column": 7,
              "line": 82
            }
          }
        },
        {
          "id": "1231",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "426"
          ],
          "coveredBy": [
            "426",
            "427"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 88
            },
            "start": {
              "column": 20,
              "line": 82
            }
          }
        },
        {
          "id": "1232",
          "mutatorName": "MethodExpression",
          "replacement": "roles.value",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Array [\n    _Role {\n      \"additionalCardsEligibleRecipients\": undefined,\n      \"maxInGame\": 6,\n      \"minInGame\": undefined,\n      \"name\": \"villager\",\n      \"origin\": \"the-village\",\n      \"recommendedMinPlayers\": undefined,\n      \"side\": \"villagers\",\n      \"type\": \"ambiguous\",\n    },\n    _Role {\n      \"additionalCardsEligibleRecipients\": undefined,\n      \"maxInGame\": 9,\n      \"minInGame\": undefined,\n      \"name\": \"werewolf\",\n      \"origin\": \"characters\",\n      \"recommendedMinPlayers\": undefined,\n      \"side\": \"villagers\",\n      \"type\": \"werewolf\",\n    },\n  ],\n], but it was called with Array [\n  _Role {\n    \"additionalCardsEligibleRecipients\": undefined,\n    \"maxInGame\": 2,\n    \"minInGame\": undefined,\n    \"name\": \"seer\",\n    \"origin\": \"the-village\",\n    \"recommendedMinPlayers\": undefined,\n    \"side\": \"werewolves\",\n    \"type\": \"werewolf\",\n  },\n  _Role {\n    \"additionalCardsEligibleRecipients\": undefined,\n    \"maxInGame\": 6,\n    \"minInGame\": undefined,\n    \"name\": \"villager\",\n    \"origin\": \"the-village\",\n    \"recommendedMinPlayers\": undefined,\n    \"side\": \"villagers\",\n    \"type\": \"ambiguous\",\n  },\n  _Role {\n    \"additionalCardsEligibleRecipients\": undefined,\n    \"maxInGame\": 9,\n    \"minInGame\": undefined,\n    \"name\": \"werewolf\",\n    \"origin\": \"characters\",\n    \"recommendedMinPlayers\": undefined,\n    \"side\": \"villagers\",\n    \"type\": \"werewolf\",\n  },\n]",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "427"
          ],
          "coveredBy": [
            "426",
            "427"
          ],
          "location": {
            "end": {
              "column": 121,
              "line": 83
            },
            "start": {
              "column": 36,
              "line": 83
            }
          }
        },
        {
          "id": "1233",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Array [\n    _Role {\n      \"additionalCardsEligibleRecipients\": undefined,\n      \"maxInGame\": 2,\n      \"minInGame\": undefined,\n      \"name\": \"seer\",\n      \"origin\": \"unconventional\",\n      \"recommendedMinPlayers\": undefined,\n      \"side\": \"werewolves\",\n      \"type\": \"villager\",\n    },\n    _Role {\n      \"additionalCardsEligibleRecipients\": undefined,\n      \"maxInGame\": 9,\n      \"minInGame\": undefined,\n      \"name\": \"villager\",\n      \"origin\": \"the-village\",\n      \"recommendedMinPlayers\": undefined,\n      \"side\": \"villagers\",\n      \"type\": \"ambiguous\",\n    },\n    _Role {\n      \"additionalCardsEligibleRecipients\": undefined,\n      \"maxInGame\": 4,\n      \"minInGame\": undefined,\n      \"name\": \"werewolf\",\n      \"origin\": \"new-moon\",\n      \"recommendedMinPlayers\": undefined,\n      \"side\": \"villagers\",\n      \"type\": \"werewolf\",\n    },\n  ],\n], but it was called with Array []",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "426"
          ],
          "coveredBy": [
            "426",
            "427"
          ],
          "location": {
            "end": {
              "column": 120,
              "line": 83
            },
            "start": {
              "column": 55,
              "line": 83
            }
          }
        },
        {
          "id": "1234",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Array [\n    _Role {\n      \"additionalCardsEligibleRecipients\": undefined,\n      \"maxInGame\": 2,\n      \"minInGame\": undefined,\n      \"name\": \"villager\",\n      \"origin\": \"characters\",\n      \"recommendedMinPlayers\": undefined,\n      \"side\": \"werewolves\",\n      \"type\": \"werewolf\",\n    },\n    _Role {\n      \"additionalCardsEligibleRecipients\": undefined,\n      \"maxInGame\": 3,\n      \"minInGame\": undefined,\n      \"name\": \"werewolf\",\n      \"origin\": \"characters\",\n      \"recommendedMinPlayers\": undefined,\n      \"side\": \"villagers\",\n      \"type\": \"villager\",\n    },\n  ],\n], but it was called with Array [\n  _Role {\n    \"additionalCardsEligibleRecipients\": undefined,\n    \"maxInGame\": 9,\n    \"minInGame\": undefined,\n    \"name\": \"seer\",\n    \"origin\": \"the-village\",\n    \"recommendedMinPlayers\": undefined,\n    \"side\": \"villagers\",\n    \"type\": \"lonely\",\n  },\n  _Role {\n    \"additionalCardsEligibleRecipients\": undefined,\n    \"maxInGame\": 2,\n    \"minInGame\": undefined,\n    \"name\": \"villager\",\n    \"origin\": \"characters\",\n    \"recommendedMinPlayers\": undefined,\n    \"side\": \"werewolves\",\n    \"type\": \"werewolf\",\n  },\n  _Role {\n    \"additionalCardsEligibleRecipients\": undefined,\n    \"maxInGame\": 3,\n    \"minInGame\": undefined,\n    \"name\": \"werewolf\",\n    \"origin\": \"characters\",\n    \"recommendedMinPlayers\": undefined,\n    \"side\": \"villagers\",\n    \"type\": \"villager\",\n  },\n]",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "427"
          ],
          "coveredBy": [
            "426",
            "427"
          ],
          "location": {
            "end": {
              "column": 120,
              "line": 83
            },
            "start": {
              "column": 69,
              "line": 83
            }
          }
        },
        {
          "id": "1235",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Array [\n    _Role {\n      \"additionalCardsEligibleRecipients\": undefined,\n      \"maxInGame\": 6,\n      \"minInGame\": undefined,\n      \"name\": \"seer\",\n      \"origin\": \"characters\",\n      \"recommendedMinPlayers\": undefined,\n      \"side\": \"werewolves\",\n      \"type\": \"ambiguous\",\n    },\n    _Role {\n      \"additionalCardsEligibleRecipients\": undefined,\n      \"maxInGame\": 5,\n      \"minInGame\": undefined,\n      \"name\": \"villager\",\n      \"origin\": \"the-village\",\n      \"recommendedMinPlayers\": undefined,\n      \"side\": \"werewolves\",\n      \"type\": \"werewolf\",\n    },\n    _Role {\n      \"additionalCardsEligibleRecipients\": undefined,\n      \"maxInGame\": 2,\n      \"minInGame\": undefined,\n      \"name\": \"werewolf\",\n      \"origin\": \"the-village\",\n      \"recommendedMinPlayers\": undefined,\n      \"side\": \"villagers\",\n      \"type\": \"ambiguous\",\n    },\n  ],\n], but it was called with Array []",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "426"
          ],
          "coveredBy": [
            "426",
            "427"
          ],
          "location": {
            "end": {
              "column": 120,
              "line": 83
            },
            "start": {
              "column": 69,
              "line": 83
            }
          }
        },
        {
          "id": "1236",
          "mutatorName": "LogicalOperator",
          "replacement": "!props.pickedRole && name !== props.pickedRole.name",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "426"
          ],
          "coveredBy": [
            "426",
            "427"
          ],
          "location": {
            "end": {
              "column": 120,
              "line": 83
            },
            "start": {
              "column": 69,
              "line": 83
            }
          }
        },
        {
          "id": "1237",
          "mutatorName": "BooleanLiteral",
          "replacement": "props.pickedRole",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "426"
          ],
          "coveredBy": [
            "426",
            "427"
          ],
          "location": {
            "end": {
              "column": 86,
              "line": 83
            },
            "start": {
              "column": 69,
              "line": 83
            }
          }
        },
        {
          "id": "1238",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Array [\n    _Role {\n      \"additionalCardsEligibleRecipients\": undefined,\n      \"maxInGame\": 8,\n      \"minInGame\": undefined,\n      \"name\": \"villager\",\n      \"origin\": \"characters\",\n      \"recommendedMinPlayers\": undefined,\n      \"side\": \"werewolves\",\n      \"type\": \"lonely\",\n    },\n    _Role {\n      \"additionalCardsEligibleRecipients\": undefined,\n      \"maxInGame\": 10,\n      \"minInGame\": undefined,\n      \"name\": \"werewolf\",\n      \"origin\": \"unconventional\",\n      \"recommendedMinPlayers\": undefined,\n      \"side\": \"werewolves\",\n      \"type\": \"lonely\",\n    },\n  ],\n], but it was called with Array []",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "427"
          ],
          "coveredBy": [
            "427"
          ],
          "location": {
            "end": {
              "column": 120,
              "line": 83
            },
            "start": {
              "column": 90,
              "line": 83
            }
          }
        },
        {
          "id": "1239",
          "mutatorName": "EqualityOperator",
          "replacement": "name === props.pickedRole.name",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Array [\n    _Role {\n      \"additionalCardsEligibleRecipients\": undefined,\n      \"maxInGame\": 8,\n      \"minInGame\": undefined,\n      \"name\": \"villager\",\n      \"origin\": \"unconventional\",\n      \"recommendedMinPlayers\": undefined,\n      \"side\": \"villagers\",\n      \"type\": \"villager\",\n    },\n    _Role {\n      \"additionalCardsEligibleRecipients\": undefined,\n      \"maxInGame\": 8,\n      \"minInGame\": undefined,\n      \"name\": \"werewolf\",\n      \"origin\": \"the-village\",\n      \"recommendedMinPlayers\": undefined,\n      \"side\": \"werewolves\",\n      \"type\": \"villager\",\n    },\n  ],\n], but it was called with Array [\n  _Role {\n    \"additionalCardsEligibleRecipients\": undefined,\n    \"maxInGame\": 4,\n    \"minInGame\": undefined,\n    \"name\": \"seer\",\n    \"origin\": \"the-village\",\n    \"recommendedMinPlayers\": undefined,\n    \"side\": \"werewolves\",\n    \"type\": \"werewolf\",\n  },\n]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "427"
          ],
          "coveredBy": [
            "427"
          ],
          "location": {
            "end": {
              "column": 120,
              "line": 83
            },
            "start": {
              "column": 90,
              "line": 83
            }
          }
        },
        {
          "id": "1240",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Target cannot be null or undefined.",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "426"
          ],
          "coveredBy": [
            "426",
            "427"
          ],
          "location": {
            "end": {
              "column": 20,
              "line": 85
            },
            "start": {
              "column": 10,
              "line": 85
            }
          }
        },
        {
          "id": "1241",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Target cannot be null or undefined.",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "424"
          ],
          "coveredBy": [
            "424",
            "425"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 90
            },
            "start": {
              "column": 8,
              "line": 90
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-lobby-role-picker-grid-element\"\n    class=\"flex flex-col items-center\"\n  >\n    <button\n      id=\"game-lobby-role-picker-grid-element-button\"\n      class=\"border-4 border-gray-600 hover:border-gray-400 relative rounded-lg\"\n      :class=\"{ '!border-gray-100': isPicked }\"\n      type=\"button\"\n      @click.prevent=\"pickRole\"\n    >\n      <RoleImage\n        id=\"game-lobby-role-picker-grid-element-role-image\"\n        :alt=\"roleLabel\"\n        definition=\"normal\"\n        :role-name=\"role?.name\"\n        sizes=\"100px\"\n      />\n\n      <GameLobbyRolePickerGridElementBadges\n        aria-hidden=\"true\"\n        :role=\"role\"\n      />\n    </button>\n\n    <div\n      id=\"game-lobby-role-picker-grid-element-role-name\"\n      class=\"cursor-pointer font-semibold mt-1 text-center\"\n      :class=\"{ 'italic text-gray-300': !role }\"\n      @click=\"pickRole\"\n    >\n      <i\n        v-if=\"!role\"\n        id=\"shuffle-icon\"\n        class=\"fa-shuffle fas me-2\"\n      />\n\n      <span>\n        {{ roleLabel }}\n      </span>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\nimport { draw } from \"radash\";\n\nimport type { GameLobbyRolePickerGridElementEmits, GameLobbyRolePickerGridElementProps } from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/game-lobby-role-picker-grid-element.types\";\nimport GameLobbyRolePickerGridElementBadges from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.vue\";\nimport RoleImage from \"~/components/shared/role/RoleImage/RoleImage.vue\";\nimport type { Role } from \"~/composables/api/role/types/role.class\";\nimport { useRoleName } from \"~/composables/api/role/useRoleName\";\nimport { useRolesStore } from \"~/stores/role/useRolesStore\";\n\nconst props = defineProps<GameLobbyRolePickerGridElementProps>();\n\nconst emit = defineEmits<GameLobbyRolePickerGridElementEmits>();\n\nconst rolesStore = useRolesStore();\nconst { roles } = storeToRefs(rolesStore);\n\nconst { t } = useI18n();\n\nconst { getRoleNameLabel } = useRoleName();\n\nconst roleLabel = computed<string>(() => {\n  if (!props.role) {\n    return t(\"components.GameLobbyRolePickerGridElement.random\");\n  }\n  return getRoleNameLabel(props.role.name);\n});\n\nconst isPicked = computed<boolean>(() => !!props.role && props.role.name === props.pickedRole?.name);\n\nfunction pickRole(): void {\n  if (!roles.value) {\n    return;\n  }\n\n  if (!props.role) {\n    const rolesWithoutPickedRole = roles.value.filter(({ name }) => !props.pickedRole || name !== props.pickedRole.name);\n    const randomRole = draw(rolesWithoutPickedRole) as Role;\n    emit(\"pickRole\", randomRole);\n\n    return;\n  }\n\n  emit(\"pickRole\", props.role);\n}\n</script>\n\n<style lang=\"scss\" scoped>\n#game-lobby-role-picker-grid-element-button {\n  transition: border-color 0.2s ease;\n}\n</style>"
    },
    "components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1242",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Role Picker Grid Element Badges Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "378"
          ],
          "coveredBy": [
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 49
            },
            "start": {
              "column": 53,
              "line": 44
            }
          }
        },
        {
          "id": "1243",
          "mutatorName": "BooleanLiteral",
          "replacement": "props.role",
          "statusReason": "Snapshot `Game Lobby Role Picker Grid Element Badges Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "378"
          ],
          "coveredBy": [
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 45
            },
            "start": {
              "column": 7,
              "line": 45
            }
          }
        },
        {
          "id": "1244",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Game Lobby Role Picker Grid Element Badges Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "378"
          ],
          "coveredBy": [
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 45
            },
            "start": {
              "column": 7,
              "line": 45
            }
          }
        },
        {
          "id": "1245",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "382"
          ],
          "coveredBy": [
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 45
            },
            "start": {
              "column": 7,
              "line": 45
            }
          }
        },
        {
          "id": "1246",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "382"
          ],
          "coveredBy": [
            "382",
            "387"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 47
            },
            "start": {
              "column": 20,
              "line": 45
            }
          }
        },
        {
          "id": "1247",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Role Picker Grid Element Badges Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "378"
          ],
          "coveredBy": [
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 56
            },
            "start": {
              "column": 67,
              "line": 51
            }
          }
        },
        {
          "id": "1248",
          "mutatorName": "BooleanLiteral",
          "replacement": "props.role",
          "statusReason": "Snapshot `Game Lobby Role Picker Grid Element Badges Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "378"
          ],
          "coveredBy": [
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 52
            },
            "start": {
              "column": 7,
              "line": 52
            }
          }
        },
        {
          "id": "1249",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Game Lobby Role Picker Grid Element Badges Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "378"
          ],
          "coveredBy": [
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 52
            },
            "start": {
              "column": 7,
              "line": 52
            }
          }
        },
        {
          "id": "1250",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "382"
          ],
          "coveredBy": [
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 52
            },
            "start": {
              "column": 7,
              "line": 52
            }
          }
        },
        {
          "id": "1251",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "382"
          ],
          "coveredBy": [
            "382",
            "387"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 54
            },
            "start": {
              "column": 20,
              "line": 52
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-lobby-role-picker-grid-element-badges\"\n  >\n    <VuePrimeBadge\n      v-if=\"countInCreateGameDto\"\n      id=\"role-count-in-game-badge\"\n      v-p-tooltip=\"$t('components.GameLobbyRolePickerGridElementBadges.totalInParty')\"\n      class=\"-right-4 absolute top-1\"\n      data-testid=\"game-lobby-role-picker-role-count-in-game-badge\"\n    >\n      <i class=\"fa fa-chess-pawn me-2\"/>\n\n      <span>\n        {{ countInCreateGameDto }}\n      </span>\n    </VuePrimeBadge>\n\n    <VuePrimeBadge\n      v-if=\"countInCreateGameDto && leftCountToReachMinInCreateGameDto\"\n      id=\"role-min-count-in-game-badge\"\n      v-p-tooltip=\"$t('components.GameLobbyRolePickerGridElementBadges.minInGameNotReached', { 'count': leftCountToReachMinInCreateGameDto })\"\n      class=\"-right-4 absolute top-8\"\n      data-testid=\"game-lobby-role-picker-role-min-count-in-game-badge\"\n      severity=\"danger\"\n    >\n      <i class=\"fa fa-exclamation-circle\"/>\n    </VuePrimeBadge>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { GameLobbyRolePickerGridElementBadgesProps } from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/game-lobby-role-picker-grid-element-badges.types\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\n\nconst props = defineProps<GameLobbyRolePickerGridElementBadgesProps>();\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst {\n  getPlayersWithRoleNameInCreateGameDto,\n  getRoleLeftCountToReachMinInCreateGameDto,\n} = createGameDtoStore;\n\nconst countInCreateGameDto = computed<number>(() => {\n  if (!props.role) {\n    return 0;\n  }\n  return getPlayersWithRoleNameInCreateGameDto(props.role.name).length;\n});\n\nconst leftCountToReachMinInCreateGameDto = computed<number>(() => {\n  if (!props.role) {\n    return 0;\n  }\n  return getRoleLeftCountToReachMinInCreateGameDto(props.role.name);\n});\n</script>"
    },
    "components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerHeader/GameLobbyRolePickerHeader.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1252",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Role Picker Header Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "857"
          ],
          "coveredBy": [
            "857",
            "858",
            "859",
            "860",
            "861",
            "862",
            "863"
          ],
          "location": {
            "end": {
              "column": 133,
              "line": 64
            },
            "start": {
              "column": 32,
              "line": 64
            }
          }
        },
        {
          "id": "1253",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Lobby Role Picker Header Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "857"
          ],
          "coveredBy": [
            "857",
            "858",
            "859",
            "860",
            "861",
            "862",
            "863"
          ],
          "location": {
            "end": {
              "column": 96,
              "line": 64
            },
            "start": {
              "column": 40,
              "line": 64
            }
          }
        },
        {
          "id": "1254",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Role Picker Header Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "857"
          ],
          "coveredBy": [
            "857",
            "858",
            "859",
            "860",
            "861",
            "862",
            "863"
          ],
          "location": {
            "end": {
              "column": 132,
              "line": 64
            },
            "start": {
              "column": 98,
              "line": 64
            }
          }
        },
        {
          "id": "1255",
          "mutatorName": "OptionalChaining",
          "replacement": "props.player.name",
          "statusReason": "Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "860"
          ],
          "coveredBy": [
            "857",
            "858",
            "859",
            "860",
            "861",
            "862",
            "863"
          ],
          "location": {
            "end": {
              "column": 130,
              "line": 64
            },
            "start": {
              "column": 112,
              "line": 64
            }
          }
        },
        {
          "id": "1256",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Role Picker Header Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "857"
          ],
          "coveredBy": [
            "857",
            "858",
            "859",
            "860",
            "861",
            "862",
            "863"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 71
            },
            "start": {
              "column": 48,
              "line": 66
            }
          }
        },
        {
          "id": "1257",
          "mutatorName": "BooleanLiteral",
          "replacement": "props.player?.role.name",
          "statusReason": "Snapshot `Game Lobby Role Picker Header Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "857"
          ],
          "coveredBy": [
            "857",
            "858",
            "859",
            "860",
            "861",
            "862",
            "863"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 67
            },
            "start": {
              "column": 7,
              "line": 67
            }
          }
        },
        {
          "id": "1258",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Game Lobby Role Picker Header Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "857"
          ],
          "coveredBy": [
            "857",
            "858",
            "859",
            "860",
            "861",
            "862",
            "863"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 67
            },
            "start": {
              "column": 7,
              "line": 67
            }
          }
        },
        {
          "id": "1259",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "860"
          ],
          "coveredBy": [
            "857",
            "858",
            "859",
            "860",
            "861",
            "862",
            "863"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 67
            },
            "start": {
              "column": 7,
              "line": 67
            }
          }
        },
        {
          "id": "1260",
          "mutatorName": "OptionalChaining",
          "replacement": "props.player.role",
          "statusReason": "Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "860"
          ],
          "coveredBy": [
            "857",
            "858",
            "859",
            "860",
            "861",
            "862",
            "863"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 67
            },
            "start": {
              "column": 8,
              "line": 67
            }
          }
        },
        {
          "id": "1261",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "860"
          ],
          "coveredBy": [
            "860",
            "861",
            "863"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 69
            },
            "start": {
              "column": 33,
              "line": 67
            }
          }
        },
        {
          "id": "1262",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be 'components.GameLobbyRolePickerHeader.…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "860"
          ],
          "coveredBy": [
            "860",
            "861",
            "863"
          ],
          "location": {
            "end": {
              "column": 59,
              "line": 68
            },
            "start": {
              "column": 14,
              "line": 68
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-lobby-role-picker-header\"\n    class=\"w-full\"\n  >\n    <div\n      id=\"game-lobby-role-picker-header\"\n      class=\"flex items-center w-full\"\n    >\n      <div\n        id=\"current-player-role-container\"\n        class=\"flex w-3/12\"\n      >\n        <div\n          id=\"current-player-role\"\n          class=\"border-2 border-gray-600 me-2 px-2 py-1 rounded-lg text-center\"\n          data-testid=\"game-lobby-role-picker-header-current-role\"\n        >\n          <span\n            id=\"current-role-title\"\n            class=\"italic text-gray-400 text-sm\"\n          >\n            {{ t(\"components.GameLobbyRolePickerHeader.currentRole\") }}\n          </span>\n\n          <RoleImage\n            class=\"mx-auto\"\n            definition=\"small\"\n            :role-name=\"player?.role.name\"\n            sizes=\"35px\"\n          />\n\n          <span id=\"current-role-text\">\n            {{ currentRoleText }}\n          </span>\n        </div>\n      </div>\n\n      <h2\n        id=\"role-picker-header-title\"\n        class=\"grow text-center\"\n      >\n        {{ title }}\n      </h2>\n\n      <div class=\"w-3/12\"/>\n    </div>\n\n    <VuePrimeDivider class=\"!my-2\"/>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { GameLobbyRolePickerHeaderProps } from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerHeader/game-lobby-role-picker-header.types\";\nimport RoleImage from \"~/components/shared/role/RoleImage/RoleImage.vue\";\nimport { useRoleName } from \"~/composables/api/role/useRoleName\";\n\nconst props = defineProps<GameLobbyRolePickerHeaderProps>();\n\nconst { getRoleNameLabel } = useRoleName();\n\nconst { t } = useI18n();\n\nconst title = computed<string>(() => t(\"components.GameLobbyRolePickerHeader.pickRoleForPlayer\", { playerName: props.player?.name }));\n\nconst currentRoleText = computed<string>(() => {\n  if (!props.player?.role.name) {\n    return t(\"components.GameLobbyRolePickerHeader.noRole\");\n  }\n  return getRoleNameLabel(props.player.role.name);\n});\n</script>"
    },
    "components/shared/dialogs/DialogFooterCloseButtonOnly/DialogFooterCloseButtonOnly.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1263",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected undefined to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "1000"
          ],
          "coveredBy": [
            "1000"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 27
            },
            "start": {
              "column": 24,
              "line": 25
            }
          }
        },
        {
          "id": "1264",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected undefined to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "1000"
          ],
          "coveredBy": [
            "1000"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 26
            },
            "start": {
              "column": 8,
              "line": 26
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"close-button-only-dialog-footer\"\n    class=\"w-full\"\n  >\n    <VuePrimeDivider class=\"!my-2\"/>\n\n    <div class=\"flex justify-end w-full\">\n      <VuePrimeButton\n        id=\"close-button-only-dialog-footer-close-button\"\n        :label=\"$t('shared.actions.close')\"\n        severity=\"secondary\"\n        size=\"small\"\n        @click=\"close\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { DialogFooterCloseButtonOnlyEmits } from \"~/components/shared/dialogs/DialogFooterCloseButtonOnly/dialog-footer-close-button-only.types\";\n\nconst emit = defineEmits<DialogFooterCloseButtonOnlyEmits>();\n\nfunction close(): void {\n  emit(\"closeDialog\");\n}\n</script>"
    },
    "components/shared/external/BuyMeACoffeeButton/BuyMeACoffeeButton.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1265",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Buy Me A Coffee Button Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "1047"
          ],
          "coveredBy": [
            "1047",
            "1048"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 18
            },
            "start": {
              "column": 17,
              "line": 18
            }
          }
        },
        {
          "id": "1266",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `Buy Me A Coffee Button Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "1047"
          ],
          "coveredBy": [
            "1047",
            "1048"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 27
            },
            "start": {
              "column": 38,
              "line": 19
            }
          }
        },
        {
          "id": "1267",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Buy Me A Coffee Button Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "1047"
          ],
          "coveredBy": [
            "1047",
            "1048"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 20
            },
            "start": {
              "column": 9,
              "line": 20
            }
          }
        },
        {
          "id": "1268",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Buy Me A Coffee Button Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "1047"
          ],
          "coveredBy": [
            "1047",
            "1048"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 21
            },
            "start": {
              "column": 9,
              "line": 21
            }
          }
        },
        {
          "id": "1269",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Buy Me A Coffee Button Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "1047"
          ],
          "coveredBy": [
            "1047",
            "1048"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 22
            },
            "start": {
              "column": 17,
              "line": 22
            }
          }
        },
        {
          "id": "1270",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Buy Me A Coffee Button Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "1047"
          ],
          "coveredBy": [
            "1047",
            "1048"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 23
            },
            "start": {
              "column": 15,
              "line": 23
            }
          }
        },
        {
          "id": "1271",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Buy Me A Coffee Button Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "1047"
          ],
          "coveredBy": [
            "1047",
            "1048"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 24
            },
            "start": {
              "column": 15,
              "line": 24
            }
          }
        },
        {
          "id": "1272",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Buy Me A Coffee Button Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "1047"
          ],
          "coveredBy": [
            "1047",
            "1048"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 25
            },
            "start": {
              "column": 18,
              "line": 25
            }
          }
        },
        {
          "id": "1273",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Buy Me A Coffee Button Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "1047"
          ],
          "coveredBy": [
            "1047",
            "1048"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 26
            },
            "start": {
              "column": 17,
              "line": 26
            }
          }
        },
        {
          "id": "1274",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Buy Me A Coffee Button Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "1047"
          ],
          "coveredBy": [
            "1047",
            "1048"
          ],
          "location": {
            "end": {
              "column": 55,
              "line": 28
            },
            "start": {
              "column": 13,
              "line": 28
            }
          }
        }
      ],
      "source": "<template>\n  <a\n    href=\"https://www.buymeacoffee.com/antoinezanardi\"\n    rel=\"noopener noreferrer\"\n    target=\"_blank\"\n  >\n    <img\n      :alt=\"$t('components.BuyMeACoffeeButton.alt')\"\n      :src=\"src\"\n    >\n  </a>\n</template>\n\n<script setup lang=\"ts\">\nimport { stringify } from \"qs\";\nimport { objectToSnake } from \"ts-case-convert\";\n\nconst baseUri = \"https://img.buymeacoffee.com/button-api\";\nconst urlQueryParams = objectToSnake({\n  text: \"Buy me a coffee\",\n  slug: \"antoinezanardi\",\n  buttonColour: \"46a6ff\",\n  fontColour: \"FFFFFF\",\n  fontFamily: \"Lato\",\n  outlineColour: \"000000\",\n  coffeeColour: \"FFDD00\",\n});\nconst src = `${baseUri}/?${stringify(urlQueryParams)}`;\n</script>"
    },
    "components/shared/external/GitHubRepositoryButton/GitHubRepositoryButton.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1275",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `App Component > should render component without shallow and match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "991"
          ],
          "coveredBy": [
            "991",
            "1001",
            "1002",
            "1003",
            "1008",
            "1009"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 29
            },
            "start": {
              "column": 43,
              "line": 24
            }
          }
        },
        {
          "id": "1276",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `App Component > should render component without shallow and match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "991"
          ],
          "coveredBy": [
            "991",
            "1001",
            "1002",
            "1003",
            "1008",
            "1009"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 25
            },
            "start": {
              "column": 7,
              "line": 25
            }
          }
        },
        {
          "id": "1277",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Snapshot `GitHub Repository Button > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "1001"
          ],
          "coveredBy": [
            "991",
            "1001",
            "1002",
            "1003",
            "1008",
            "1009"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 25
            },
            "start": {
              "column": 7,
              "line": 25
            }
          }
        },
        {
          "id": "1278",
          "mutatorName": "EqualityOperator",
          "replacement": "props.textButton === undefined",
          "statusReason": "Snapshot `App Component > should render component without shallow and match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "991"
          ],
          "coveredBy": [
            "991",
            "1001",
            "1002",
            "1003",
            "1008",
            "1009"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 25
            },
            "start": {
              "column": 7,
              "line": 25
            }
          }
        },
        {
          "id": "1279",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `GitHub Repository Button > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "1001"
          ],
          "coveredBy": [
            "1001",
            "1002",
            "1003"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 27
            },
            "start": {
              "column": 39,
              "line": 25
            }
          }
        },
        {
          "id": "1280",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `App Component > should render component without shallow and match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "991"
          ],
          "coveredBy": [
            "991",
            "1003",
            "1008",
            "1009"
          ],
          "location": {
            "end": {
              "column": 71,
              "line": 28
            },
            "start": {
              "column": 12,
              "line": 28
            }
          }
        }
      ],
      "source": "<template>\n  <a\n    id=\"github-repository-link\"\n    class=\"p-button primary\"\n    href=\"https://www.github.com/antoinezanardi/werewolves-assistant-web-next\"\n    rel=\"noopener noreferrer\"\n    target=\"_blank\"\n  >\n    <span class=\"fa-github fab me-2\"/>\n\n    <span>\n      {{ textButton }}\n    </span>\n  </a>\n</template>\n\n<script lang=\"ts\" setup>\nimport type { GitHubRepositoryButtonProps } from \"~/components/shared/external/GitHubRepositoryButton/git-hub-repository-button.types\";\n\nconst props = defineProps<GitHubRepositoryButtonProps>();\n\nconst { t } = useI18n();\n\nconst textButton = computed<string>(() => {\n  if (props.textButton !== undefined) {\n    return props.textButton;\n  }\n  return t(\"components.GitHubRepositoryButton.thisProjectIsOpenSource\");\n});\n</script>"
    },
    "components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1281",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "We can't mutate defineProps macro as it is stated here: https://github.com/stryker-mutator/stryker-js/issues/3305.",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 88,
              "line": 50
            },
            "start": {
              "column": 56,
              "line": 50
            }
          }
        },
        {
          "id": "1282",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "We can't mutate defineProps macro as it is stated here: https://github.com/stryker-mutator/stryker-js/issues/3305.",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 86,
              "line": 50
            },
            "start": {
              "column": 81,
              "line": 50
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-option-input-group-container\"\n  >\n    <div\n      id=\"game-option-input-group\"\n      class=\"flex gap-2 items-center justify-between\"\n    >\n      <h3\n        id=\"game-option-label\"\n        class=\"w-8/12\"\n      >\n        <i\n          id=\"game-option-label-icon\"\n          class=\"me-3\"\n          :class=\"optionIconClass\"\n        />\n\n        <span>\n          {{ optionLabel }}\n        </span>\n      </h3>\n\n      <div\n        id=\"game-option-input\"\n        class=\"w-4/12\"\n      >\n        <slot/>\n      </div>\n    </div>\n\n    <p\n      id=\"game-option-description\"\n      class=\"italic mt-3 text-gray-400\"\n    >\n      {{ optionDescription }}\n    </p>\n\n    <VuePrimeDivider\n      v-if=\"doesHaveBottomDivider\"\n      id=\"game-option-bottom-divider\"\n      class=\"!my-4\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { GameOptionInputGroupProps } from \"~/components/shared/game/game-options/GameOptionInputGroup/game-option-input-group.types\";\n\nwithDefaults(defineProps<GameOptionInputGroupProps>(), { doesHaveBottomDivider: false });\n\ndefineSlots<{\n  default: () => void;\n}>();\n</script>"
    },
    "components/shared/game/game-options/GameOptionRoleLegend/GameOptionRoleLegend.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1283",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Game Lobby Options Hub Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "973"
          ],
          "coveredBy": [
            "973",
            "974",
            "975",
            "976",
            "977",
            "978",
            "979"
          ],
          "location": {
            "end": {
              "column": 77,
              "line": 26
            },
            "start": {
              "column": 32,
              "line": 26
            }
          }
        },
        {
          "id": "1284",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Lobby Options Hub Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "973"
          ],
          "coveredBy": [
            "973",
            "974",
            "975",
            "976",
            "977",
            "978",
            "979"
          ],
          "location": {
            "end": {
              "column": 76,
              "line": 26
            },
            "start": {
              "column": 40,
              "line": 26
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-option-role-legend\"\n    class=\"flex gap-4 items-center\"\n  >\n    <RoleImage\n      id=\"game-option-role-legend-image\"\n      class=\"!border-0\"\n      :role-name=\"roleName\"\n    />\n\n    <h2 id=\"game-option-role-legend-title\">\n      {{ title }}\n    </h2>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { GameOptionRoleLegendProps } from \"~/components/shared/game/game-options/GameOptionRoleLegend/game-option-role-legend.types\";\nimport RoleImage from \"~/components/shared/role/RoleImage/RoleImage.vue\";\n\nconst props = defineProps<GameOptionRoleLegendProps>();\n\nconst { t } = useI18n();\n\nconst title = computed<string>(() => t(`shared.role.name.${props.roleName}`));\n</script>"
    },
    "components/shared/game/game-phase/GamePhaseIcon/GamePhaseIcon.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1285",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Phase Icon Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "995"
          ],
          "coveredBy": [
            "995",
            "996",
            "997"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 21
            },
            "start": {
              "column": 42,
              "line": 14
            }
          }
        },
        {
          "id": "1286",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Phase Icon Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "995"
          ],
          "coveredBy": [
            "995",
            "996",
            "997"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 18
            },
            "start": {
              "column": 53,
              "line": 15
            }
          }
        },
        {
          "id": "1287",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toContainValues(expected)\n\nExpected object to contain all values:\n  Array [\n  \"fa-moon\",\n  \"text-night\",\n]\nReceived:\n  Array []",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "996"
          ],
          "coveredBy": [
            "995",
            "996",
            "997"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 16
            },
            "start": {
              "column": 12,
              "line": 16
            }
          }
        },
        {
          "id": "1288",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Phase Icon Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "995"
          ],
          "coveredBy": [
            "995",
            "996",
            "997"
          ],
          "location": {
            "end": {
              "column": 30,
              "line": 17
            },
            "start": {
              "column": 10,
              "line": 17
            }
          }
        }
      ],
      "source": "<template>\n  <i\n    id=\"game-phase-icon\"\n    :class=\"phaseIcon\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport type { GamePhaseIconProps } from \"~/components/shared/game/game-phase/GamePhaseIcon/game-phase-icon.types\";\nimport type { GamePhaseName } from \"~/composables/api/game/types/game-phase/game-phase.types\";\n\nconst props = defineProps<GamePhaseIconProps>();\n\nconst phaseIcon = computed<string>(() => {\n  const phasesIcon: Record<GamePhaseName, string> = {\n    night: \"fa fa-moon text-night\",\n    day: \"fa fa-sun text-day\",\n  };\n\n  return phasesIcon[props.phase];\n});\n</script>"
    },
    "components/shared/game/game-play/game-play.constants.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1289",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 2,
              "line": 169
            },
            "start": {
              "column": 117,
              "line": 6
            }
          }
        },
        {
          "id": "1290",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 12
            },
            "start": {
              "column": 27,
              "line": 7
            }
          }
        },
        {
          "id": "1291",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 11
            },
            "start": {
              "column": 13,
              "line": 8
            }
          }
        },
        {
          "id": "1292",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 52,
              "line": 9
            },
            "start": {
              "column": 16,
              "line": 9
            }
          }
        },
        {
          "id": "1293",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 86,
              "line": 10
            },
            "start": {
              "column": 16,
              "line": 10
            }
          }
        },
        {
          "id": "1294",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 18
            },
            "start": {
              "column": 12,
              "line": 13
            }
          }
        },
        {
          "id": "1295",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 17
            },
            "start": {
              "column": 20,
              "line": 14
            }
          }
        },
        {
          "id": "1296",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 37,
              "line": 15
            },
            "start": {
              "column": 16,
              "line": 15
            }
          }
        },
        {
          "id": "1297",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 77,
              "line": 16
            },
            "start": {
              "column": 16,
              "line": 16
            }
          }
        },
        {
          "id": "1298",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 24
            },
            "start": {
              "column": 17,
              "line": 19
            }
          }
        },
        {
          "id": "1299",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 23
            },
            "start": {
              "column": 12,
              "line": 20
            }
          }
        },
        {
          "id": "1300",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 42,
              "line": 21
            },
            "start": {
              "column": 16,
              "line": 21
            }
          }
        },
        {
          "id": "1301",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 76,
              "line": 22
            },
            "start": {
              "column": 16,
              "line": 22
            }
          }
        },
        {
          "id": "1302",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 30
            },
            "start": {
              "column": 19,
              "line": 25
            }
          }
        },
        {
          "id": "1303",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 29
            },
            "start": {
              "column": 10,
              "line": 26
            }
          }
        },
        {
          "id": "1304",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 44,
              "line": 27
            },
            "start": {
              "column": 16,
              "line": 27
            }
          }
        },
        {
          "id": "1305",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 75,
              "line": 28
            },
            "start": {
              "column": 16,
              "line": 28
            }
          }
        },
        {
          "id": "1306",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 36
            },
            "start": {
              "column": 14,
              "line": 31
            }
          }
        },
        {
          "id": "1307",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 35
            },
            "start": {
              "column": 24,
              "line": 32
            }
          }
        },
        {
          "id": "1308",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 42,
              "line": 33
            },
            "start": {
              "column": 16,
              "line": 33
            }
          }
        },
        {
          "id": "1309",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 87,
              "line": 34
            },
            "start": {
              "column": 16,
              "line": 34
            }
          }
        },
        {
          "id": "1310",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 42
            },
            "start": {
              "column": 12,
              "line": 37
            }
          }
        },
        {
          "id": "1311",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 41
            },
            "start": {
              "column": 12,
              "line": 38
            }
          }
        },
        {
          "id": "1312",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 37,
              "line": 39
            },
            "start": {
              "column": 16,
              "line": 39
            }
          }
        },
        {
          "id": "1313",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 72,
              "line": 40
            },
            "start": {
              "column": 16,
              "line": 40
            }
          }
        },
        {
          "id": "1314",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 48
            },
            "start": {
              "column": 15,
              "line": 43
            }
          }
        },
        {
          "id": "1315",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 47
            },
            "start": {
              "column": 14,
              "line": 44
            }
          }
        },
        {
          "id": "1316",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 40,
              "line": 45
            },
            "start": {
              "column": 16,
              "line": 45
            }
          }
        },
        {
          "id": "1317",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 77,
              "line": 46
            },
            "start": {
              "column": 16,
              "line": 46
            }
          }
        },
        {
          "id": "1318",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 54
            },
            "start": {
              "column": 10,
              "line": 49
            }
          }
        },
        {
          "id": "1319",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 53
            },
            "start": {
              "column": 12,
              "line": 50
            }
          }
        },
        {
          "id": "1320",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 35,
              "line": 51
            },
            "start": {
              "column": 16,
              "line": 51
            }
          }
        },
        {
          "id": "1321",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 70,
              "line": 52
            },
            "start": {
              "column": 16,
              "line": 52
            }
          }
        },
        {
          "id": "1322",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 60
            },
            "start": {
              "column": 13,
              "line": 55
            }
          }
        },
        {
          "id": "1323",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 59
            },
            "start": {
              "column": 12,
              "line": 56
            }
          }
        },
        {
          "id": "1324",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 38,
              "line": 57
            },
            "start": {
              "column": 16,
              "line": 57
            }
          }
        },
        {
          "id": "1325",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 73,
              "line": 58
            },
            "start": {
              "column": 16,
              "line": 58
            }
          }
        },
        {
          "id": "1326",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 66
            },
            "start": {
              "column": 13,
              "line": 61
            }
          }
        },
        {
          "id": "1327",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 65
            },
            "start": {
              "column": 24,
              "line": 62
            }
          }
        },
        {
          "id": "1328",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 38,
              "line": 63
            },
            "start": {
              "column": 16,
              "line": 63
            }
          }
        },
        {
          "id": "1329",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 80,
              "line": 64
            },
            "start": {
              "column": 16,
              "line": 64
            }
          }
        },
        {
          "id": "1330",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 72
            },
            "start": {
              "column": 17,
              "line": 67
            }
          }
        },
        {
          "id": "1331",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 71
            },
            "start": {
              "column": 12,
              "line": 68
            }
          }
        },
        {
          "id": "1332",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 42,
              "line": 69
            },
            "start": {
              "column": 16,
              "line": 69
            }
          }
        },
        {
          "id": "1333",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 76,
              "line": 70
            },
            "start": {
              "column": 16,
              "line": 70
            }
          }
        },
        {
          "id": "1334",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 78
            },
            "start": {
              "column": 20,
              "line": 73
            }
          }
        },
        {
          "id": "1335",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 77
            },
            "start": {
              "column": 11,
              "line": 74
            }
          }
        },
        {
          "id": "1336",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 45,
              "line": 75
            },
            "start": {
              "column": 16,
              "line": 75
            }
          }
        },
        {
          "id": "1337",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 79,
              "line": 76
            },
            "start": {
              "column": 16,
              "line": 76
            }
          }
        },
        {
          "id": "1338",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 84
            },
            "start": {
              "column": 16,
              "line": 79
            }
          }
        },
        {
          "id": "1339",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 83
            },
            "start": {
              "column": 19,
              "line": 80
            }
          }
        },
        {
          "id": "1340",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 41,
              "line": 81
            },
            "start": {
              "column": 16,
              "line": 81
            }
          }
        },
        {
          "id": "1341",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 80,
              "line": 82
            },
            "start": {
              "column": 16,
              "line": 82
            }
          }
        },
        {
          "id": "1342",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 90
            },
            "start": {
              "column": 11,
              "line": 85
            }
          }
        },
        {
          "id": "1343",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 89
            },
            "start": {
              "column": 11,
              "line": 86
            }
          }
        },
        {
          "id": "1344",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 36,
              "line": 87
            },
            "start": {
              "column": 16,
              "line": 87
            }
          }
        },
        {
          "id": "1345",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 70,
              "line": 88
            },
            "start": {
              "column": 16,
              "line": 88
            }
          }
        },
        {
          "id": "1346",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 100
            },
            "start": {
              "column": 14,
              "line": 91
            }
          }
        },
        {
          "id": "1347",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 95
            },
            "start": {
              "column": 17,
              "line": 92
            }
          }
        },
        {
          "id": "1348",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 63,
              "line": 93
            },
            "start": {
              "column": 16,
              "line": 93
            }
          }
        },
        {
          "id": "1349",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 77,
              "line": 94
            },
            "start": {
              "column": 16,
              "line": 94
            }
          }
        },
        {
          "id": "1350",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 99
            },
            "start": {
              "column": 21,
              "line": 96
            }
          }
        },
        {
          "id": "1351",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 71,
              "line": 97
            },
            "start": {
              "column": 16,
              "line": 97
            }
          }
        },
        {
          "id": "1352",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 80,
              "line": 98
            },
            "start": {
              "column": 16,
              "line": 98
            }
          }
        },
        {
          "id": "1353",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 106
            },
            "start": {
              "column": 23,
              "line": 101
            }
          }
        },
        {
          "id": "1354",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 105
            },
            "start": {
              "column": 29,
              "line": 102
            }
          }
        },
        {
          "id": "1355",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 48,
              "line": 103
            },
            "start": {
              "column": 16,
              "line": 103
            }
          }
        },
        {
          "id": "1356",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 95,
              "line": 104
            },
            "start": {
              "column": 16,
              "line": 104
            }
          }
        },
        {
          "id": "1357",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 120
            },
            "start": {
              "column": 16,
              "line": 107
            }
          }
        },
        {
          "id": "1358",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 111
            },
            "start": {
              "column": 25,
              "line": 108
            }
          }
        },
        {
          "id": "1359",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 43,
              "line": 109
            },
            "start": {
              "column": 16,
              "line": 109
            }
          }
        },
        {
          "id": "1360",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 84,
              "line": 110
            },
            "start": {
              "column": 16,
              "line": 110
            }
          }
        },
        {
          "id": "1361",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 115
            },
            "start": {
              "column": 22,
              "line": 112
            }
          }
        },
        {
          "id": "1362",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 63,
              "line": 113
            },
            "start": {
              "column": 16,
              "line": 113
            }
          }
        },
        {
          "id": "1363",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 82,
              "line": 114
            },
            "start": {
              "column": 16,
              "line": 114
            }
          }
        },
        {
          "id": "1364",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 119
            },
            "start": {
              "column": 13,
              "line": 116
            }
          }
        },
        {
          "id": "1365",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 63,
              "line": 117
            },
            "start": {
              "column": 16,
              "line": 117
            }
          }
        },
        {
          "id": "1366",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 74,
              "line": 118
            },
            "start": {
              "column": 16,
              "line": 118
            }
          }
        },
        {
          "id": "1367",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 126
            },
            "start": {
              "column": 12,
              "line": 121
            }
          }
        },
        {
          "id": "1368",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 125
            },
            "start": {
              "column": 20,
              "line": 122
            }
          }
        },
        {
          "id": "1369",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 37,
              "line": 123
            },
            "start": {
              "column": 16,
              "line": 123
            }
          }
        },
        {
          "id": "1370",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 77,
              "line": 124
            },
            "start": {
              "column": 16,
              "line": 124
            }
          }
        },
        {
          "id": "1371",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 132
            },
            "start": {
              "column": 21,
              "line": 127
            }
          }
        },
        {
          "id": "1372",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 131
            },
            "start": {
              "column": 24,
              "line": 128
            }
          }
        },
        {
          "id": "1373",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 46,
              "line": 129
            },
            "start": {
              "column": 16,
              "line": 129
            }
          }
        },
        {
          "id": "1374",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 87,
              "line": 130
            },
            "start": {
              "column": 16,
              "line": 130
            }
          }
        },
        {
          "id": "1375",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 138
            },
            "start": {
              "column": 18,
              "line": 133
            }
          }
        },
        {
          "id": "1376",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 137
            },
            "start": {
              "column": 24,
              "line": 134
            }
          }
        },
        {
          "id": "1377",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 43,
              "line": 135
            },
            "start": {
              "column": 16,
              "line": 135
            }
          }
        },
        {
          "id": "1378",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 84,
              "line": 136
            },
            "start": {
              "column": 16,
              "line": 136
            }
          }
        },
        {
          "id": "1379",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 144
            },
            "start": {
              "column": 17,
              "line": 139
            }
          }
        },
        {
          "id": "1380",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 143
            },
            "start": {
              "column": 10,
              "line": 140
            }
          }
        },
        {
          "id": "1381",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 40,
              "line": 141
            },
            "start": {
              "column": 16,
              "line": 141
            }
          }
        },
        {
          "id": "1382",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 74,
              "line": 142
            },
            "start": {
              "column": 16,
              "line": 142
            }
          }
        },
        {
          "id": "1383",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 150
            },
            "start": {
              "column": 21,
              "line": 145
            }
          }
        },
        {
          "id": "1384",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 149
            },
            "start": {
              "column": 10,
              "line": 146
            }
          }
        },
        {
          "id": "1385",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 46,
              "line": 147
            },
            "start": {
              "column": 16,
              "line": 147
            }
          }
        },
        {
          "id": "1386",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 78,
              "line": 148
            },
            "start": {
              "column": 16,
              "line": 148
            }
          }
        },
        {
          "id": "1387",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 156
            },
            "start": {
              "column": 17,
              "line": 151
            }
          }
        },
        {
          "id": "1388",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 155
            },
            "start": {
              "column": 21,
              "line": 152
            }
          }
        },
        {
          "id": "1389",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 42,
              "line": 153
            },
            "start": {
              "column": 16,
              "line": 153
            }
          }
        },
        {
          "id": "1390",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 82,
              "line": 154
            },
            "start": {
              "column": 16,
              "line": 154
            }
          }
        },
        {
          "id": "1391",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 162
            },
            "start": {
              "column": 12,
              "line": 157
            }
          }
        },
        {
          "id": "1392",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 161
            },
            "start": {
              "column": 20,
              "line": 158
            }
          }
        },
        {
          "id": "1393",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 37,
              "line": 159
            },
            "start": {
              "column": 16,
              "line": 159
            }
          }
        },
        {
          "id": "1394",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 77,
              "line": 160
            },
            "start": {
              "column": 16,
              "line": 160
            }
          }
        },
        {
          "id": "1395",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 168
            },
            "start": {
              "column": 17,
              "line": 163
            }
          }
        },
        {
          "id": "1396",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 167
            },
            "start": {
              "column": 20,
              "line": 164
            }
          }
        },
        {
          "id": "1397",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 42,
              "line": 165
            },
            "start": {
              "column": 16,
              "line": 165
            }
          }
        },
        {
          "id": "1398",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 81,
              "line": 166
            },
            "start": {
              "column": 16,
              "line": 166
            }
          }
        }
      ],
      "source": "import type { GamePlaySourceName } from \"~/composables/api/game/types/game-play/game-play-source/game-play-source.types\";\nimport type { GamePlayAction } from \"~/composables/api/game/types/game-play/game-play.types\";\n\ntype GamePlaySvgAndTextKey = { svgPath: string; textKey: string };\n\nconst GAME_PLAYS_TEXT_AND_SVG: Record<GamePlaySourceName, Partial<Record<GamePlayAction, GamePlaySvgAndTextKey>>> = {\n  \"accursed-wolf-father\": {\n    infect: {\n      svgPath: \"/svg/role/accursed-wolf-father.svg\",\n      textKey: \"components.GamePlaygroundHeaderCurrentPlay.accursedWolfFatherInfects\",\n    },\n  },\n  \"actor\": {\n    \"choose-card\": {\n      svgPath: \"/svg/role/actor.svg\",\n      textKey: \"components.GamePlaygroundHeaderCurrentPlay.actorChoosesCard\",\n    },\n  },\n  \"bear-tamer\": {\n    growl: {\n      svgPath: \"/svg/role/bear-tamer.svg\",\n      textKey: \"components.GamePlaygroundHeaderCurrentPlay.bearTamerGrowls\",\n    },\n  },\n  \"big-bad-wolf\": {\n    eat: {\n      svgPath: \"/svg/role/big-bad-wolf.svg\",\n      textKey: \"components.GamePlaygroundHeaderCurrentPlay.bigBadWolfEats\",\n    },\n  },\n  \"charmed\": {\n    \"meet-each-other\": {\n      svgPath: \"/svg/role/pied-piper.svg\",\n      textKey: \"components.GamePlaygroundHeaderCurrentPlay.charmedPeopleMeetEachOther\",\n    },\n  },\n  \"cupid\": {\n    charm: {\n      svgPath: \"/svg/role/cupid.svg\",\n      textKey: \"components.GamePlaygroundHeaderCurrentPlay.cupidCharms\",\n    },\n  },\n  \"defender\": {\n    protect: {\n      svgPath: \"/svg/role/defender.svg\",\n      textKey: \"components.GamePlaygroundHeaderCurrentPlay.defenderProtects\",\n    },\n  },\n  \"fox\": {\n    sniff: {\n      svgPath: \"/svg/role/fox.svg\",\n      textKey: \"components.GamePlaygroundHeaderCurrentPlay.foxSniffs\",\n    },\n  },\n  \"hunter\": {\n    shoot: {\n      svgPath: \"/svg/role/hunter.svg\",\n      textKey: \"components.GamePlaygroundHeaderCurrentPlay.hunterShoots\",\n    },\n  },\n  \"lovers\": {\n    \"meet-each-other\": {\n      svgPath: \"/svg/role/lovers.svg\",\n      textKey: \"components.GamePlaygroundHeaderCurrentPlay.loversMeetEachOther\",\n    },\n  },\n  \"pied-piper\": {\n    charm: {\n      svgPath: \"/svg/role/pied-piper.svg\",\n      textKey: \"components.GamePlaygroundHeaderCurrentPlay.piedPiperCharms\",\n    },\n  },\n  \"scandalmonger\": {\n    mark: {\n      svgPath: \"/svg/role/scandalmonger.svg\",\n      textKey: \"components.GamePlaygroundHeaderCurrentPlay.scandalmongerMarks\",\n    },\n  },\n  \"scapegoat\": {\n    \"ban-voting\": {\n      svgPath: \"/svg/role/scapegoat.svg\",\n      textKey: \"components.GamePlaygroundHeaderCurrentPlay.scapegoatBansVoting\",\n    },\n  },\n  \"seer\": {\n    look: {\n      svgPath: \"/svg/role/seer.svg\",\n      textKey: \"components.GamePlaygroundHeaderCurrentPlay.seerLooks\",\n    },\n  },\n  \"sheriff\": {\n    \"delegate\": {\n      svgPath: \"/svg/game/player/player-attribute/sheriff.svg\",\n      textKey: \"components.GamePlaygroundHeaderCurrentPlay.sheriffDelegates\",\n    },\n    \"settle-votes\": {\n      svgPath: \"/svg/game/game-play/game-play-action/settle-votes.svg\",\n      textKey: \"components.GamePlaygroundHeaderCurrentPlay.sheriffSettlesVotes\",\n    },\n  },\n  \"stuttering-judge\": {\n    \"request-another-vote\": {\n      svgPath: \"/svg/role/stuttering-judge.svg\",\n      textKey: \"components.GamePlaygroundHeaderCurrentPlay.stutteringJudgeRequestsAnotherVote\",\n    },\n  },\n  \"survivors\": {\n    \"bury-dead-bodies\": {\n      svgPath: \"/svg/game/player/dead.svg\",\n      textKey: \"components.GamePlaygroundHeaderCurrentPlay.survivorsBuryDeadBodies\",\n    },\n    \"elect-sheriff\": {\n      svgPath: \"/svg/game/player/player-attribute/sheriff.svg\",\n      textKey: \"components.GamePlaygroundHeaderCurrentPlay.survivorsElectSheriff\",\n    },\n    \"vote\": {\n      svgPath: \"/svg/game/game-play/game-play-action/vote.svg\",\n      textKey: \"components.GamePlaygroundHeaderCurrentPlay.survivorsVote\",\n    },\n  },\n  \"thief\": {\n    \"choose-card\": {\n      svgPath: \"/svg/role/thief.svg\",\n      textKey: \"components.GamePlaygroundHeaderCurrentPlay.thiefChoosesCard\",\n    },\n  },\n  \"three-brothers\": {\n    \"meet-each-other\": {\n      svgPath: \"/svg/role/three-brothers.svg\",\n      textKey: \"components.GamePlaygroundHeaderCurrentPlay.threeBrothersMeetEachOther\",\n    },\n  },\n  \"two-sisters\": {\n    \"meet-each-other\": {\n      svgPath: \"/svg/role/two-sisters.svg\",\n      textKey: \"components.GamePlaygroundHeaderCurrentPlay.twoSistersMeetEachOther\",\n    },\n  },\n  \"werewolves\": {\n    eat: {\n      svgPath: \"/svg/role/werewolf.svg\",\n      textKey: \"components.GamePlaygroundHeaderCurrentPlay.werewolvesEat\",\n    },\n  },\n  \"white-werewolf\": {\n    eat: {\n      svgPath: \"/svg/role/white-werewolf.svg\",\n      textKey: \"components.GamePlaygroundHeaderCurrentPlay.whiteWerewolfEats\",\n    },\n  },\n  \"wild-child\": {\n    \"choose-model\": {\n      svgPath: \"/svg/role/wild-child.svg\",\n      textKey: \"components.GamePlaygroundHeaderCurrentPlay.wildChildChoosesModel\",\n    },\n  },\n  \"witch\": {\n    \"use-potions\": {\n      svgPath: \"/svg/role/witch.svg\",\n      textKey: \"components.GamePlaygroundHeaderCurrentPlay.witchUsesPotions\",\n    },\n  },\n  \"wolf-hound\": {\n    \"choose-side\": {\n      svgPath: \"/svg/role/wolf-hound.svg\",\n      textKey: \"components.GamePlaygroundHeaderCurrentPlay.wolfHoundChoosesSide\",\n    },\n  },\n};\n\nexport { GAME_PLAYS_TEXT_AND_SVG };"
    },
    "components/shared/game/player/PlayerCard/PlayerCard.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1399",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "We can't mutate defineProps macro as it is stated here: https://github.com/stryker-mutator/stryker-js/issues/3305.",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 2,
              "line": 32
            },
            "start": {
              "column": 60,
              "line": 29
            }
          }
        },
        {
          "id": "1400",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "We can't mutate defineProps macro as it is stated here: https://github.com/stryker-mutator/stryker-js/issues/3305.",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 33,
              "line": 30
            },
            "start": {
              "column": 28,
              "line": 30
            }
          }
        },
        {
          "id": "1401",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "We can't mutate defineProps macro as it is stated here: https://github.com/stryker-mutator/stryker-js/issues/3305.",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 20,
              "line": 31
            },
            "start": {
              "column": 15,
              "line": 31
            }
          }
        },
        {
          "id": "1402",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected undefined to be 'Select Player' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "874"
          ],
          "coveredBy": [
            "715",
            "871",
            "872",
            "873",
            "874",
            "875",
            "876"
          ],
          "location": {
            "end": {
              "column": 128,
              "line": 38
            },
            "start": {
              "column": 53,
              "line": 38
            }
          }
        },
        {
          "id": "1403",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Player Card Component > should match snapshot when rendered without shallow. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "715"
          ],
          "coveredBy": [
            "715",
            "871",
            "872",
            "873",
            "874",
            "875",
            "876"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 42
            },
            "start": {
              "column": 46,
              "line": 40
            }
          }
        },
        {
          "id": "1404",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Lobby Player Card Component > should match snapshot when rendered without shallow. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "715"
          ],
          "coveredBy": [
            "715",
            "871",
            "872",
            "873",
            "874",
            "875",
            "876"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 41
            },
            "start": {
              "column": 12,
              "line": 41
            }
          }
        },
        {
          "id": "1405",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Lobby Player Card Component > should match snapshot when rendered without shallow. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "715"
          ],
          "coveredBy": [
            "715",
            "871",
            "872",
            "873",
            "874",
            "875",
            "876"
          ],
          "location": {
            "end": {
              "column": 92,
              "line": 41
            },
            "start": {
              "column": 60,
              "line": 41
            }
          }
        },
        {
          "id": "1406",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Target cannot be null or undefined.",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "873"
          ],
          "coveredBy": [
            "873"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 46
            },
            "start": {
              "column": 51,
              "line": 44
            }
          }
        },
        {
          "id": "1407",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Target cannot be null or undefined.",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "873"
          ],
          "coveredBy": [
            "873"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 45
            },
            "start": {
              "column": 8,
              "line": 45
            }
          }
        }
      ],
      "source": "<template>\n  <div class=\"flex flex-col items-center player-card position-relative\">\n    <button\n      v-p-tooltip=\"tooltipContent\"\n      :alt=\"getPlayerCardRoleImageAlt()\"\n      :aria-label=\"selectorAriaLabel\"\n      class=\"border-4 border-gray-600 flex player-card-selector rounded-lg\"\n      :class=\"{ '!border-gray-100': isSelected }\"\n      type=\"button\"\n      @click.prevent=\"emitPlayerCardSelectorClickEvent\"\n    >\n      <RoleFlippingImage\n        :alt=\"getPlayerCardRoleImageAlt()\"\n        class=\"player-card-role-image\"\n        :role-name=\"playerRole\"\n      />\n    </button>\n\n    <span class=\"max-w-full player-card-name truncate\">\n      {{ playerName }}\n    </span>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { PlayerCardEmits, PlayerCardProps } from \"~/components/shared/game/player/PlayerCard/player-card.types\";\nimport RoleFlippingImage from \"~/components/shared/role/RoleImage/RoleFlippingImage/RoleFlippingImage.vue\";\n\nconst props = withDefaults(defineProps<PlayerCardProps>(), {\n  doesShowSelectorTooltip: false,\n  isSelected: false,\n});\n\nconst emit = defineEmits<PlayerCardEmits>();\n\nconst { t } = useI18n();\n\nconst tooltipContent = computed<string | undefined>(() => (props.doesShowSelectorTooltip ? props.selectorAriaLabel : undefined));\n\nfunction getPlayerCardRoleImageAlt(): string {\n  return t(\"components.PlayerCard.playerCardRoleImageAlt\", { playerName: props.playerName });\n}\n\nfunction emitPlayerCardSelectorClickEvent(): void {\n  emit(\"playerCardSelectorClick\");\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.player-card-selector {\n  transition: border-color 0.2s ease;\n\n  &:hover {\n    border-color: #747474;\n  }\n}\n</style>"
    },
    "components/shared/misc/OverflowTag/OverflowTag.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1408",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Overflow Tag Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "980"
          ],
          "coveredBy": [
            "980",
            "981",
            "982"
          ],
          "location": {
            "end": {
              "column": 106,
              "line": 18
            },
            "start": {
              "column": 48,
              "line": 18
            }
          }
        },
        {
          "id": "1409",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be falsy",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "982"
          ],
          "coveredBy": [
            "980",
            "981",
            "982"
          ],
          "location": {
            "end": {
              "column": 106,
              "line": 18
            },
            "start": {
              "column": 54,
              "line": 18
            }
          }
        },
        {
          "id": "1410",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Snapshot `Overflow Tag Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "980"
          ],
          "coveredBy": [
            "980",
            "981",
            "982"
          ],
          "location": {
            "end": {
              "column": 106,
              "line": 18
            },
            "start": {
              "column": 54,
              "line": 18
            }
          }
        },
        {
          "id": "1411",
          "mutatorName": "EqualityOperator",
          "replacement": "props.entitiesCount >= props.maximumEntitiesDisplayed",
          "statusReason": "expected true to be falsy",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "982"
          ],
          "coveredBy": [
            "980",
            "981",
            "982"
          ],
          "location": {
            "end": {
              "column": 106,
              "line": 18
            },
            "start": {
              "column": 54,
              "line": 18
            }
          }
        },
        {
          "id": "1412",
          "mutatorName": "EqualityOperator",
          "replacement": "props.entitiesCount <= props.maximumEntitiesDisplayed",
          "statusReason": "Snapshot `Overflow Tag Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "980"
          ],
          "coveredBy": [
            "980",
            "981",
            "982"
          ],
          "location": {
            "end": {
              "column": 106,
              "line": 18
            },
            "start": {
              "column": 54,
              "line": 18
            }
          }
        },
        {
          "id": "1413",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Overflow Tag Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "980"
          ],
          "coveredBy": [
            "980",
            "981",
            "982"
          ],
          "location": {
            "end": {
              "column": 107,
              "line": 20
            },
            "start": {
              "column": 49,
              "line": 20
            }
          }
        },
        {
          "id": "1414",
          "mutatorName": "ArithmeticOperator",
          "replacement": "props.entitiesCount + props.maximumEntitiesDisplayed",
          "statusReason": "Snapshot `Overflow Tag Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "980"
          ],
          "coveredBy": [
            "980",
            "981",
            "982"
          ],
          "location": {
            "end": {
              "column": 107,
              "line": 20
            },
            "start": {
              "column": 55,
              "line": 20
            }
          }
        },
        {
          "id": "1415",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Overflow Tag Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "980"
          ],
          "coveredBy": [
            "980",
            "981",
            "982"
          ],
          "location": {
            "end": {
              "column": 94,
              "line": 22
            },
            "start": {
              "column": 53,
              "line": 22
            }
          }
        },
        {
          "id": "1416",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Overflow Tag Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "980"
          ],
          "coveredBy": [
            "980",
            "981",
            "982"
          ],
          "location": {
            "end": {
              "column": 94,
              "line": 22
            },
            "start": {
              "column": 59,
              "line": 22
            }
          }
        }
      ],
      "source": "<template>\n  <div id=\"overflow-tag-container\">\n    <VuePrimeTag\n      v-if=\"areEntitiesTruncated\"\n      id=\"overflow-tag\"\n      class=\"min-w-12\"\n      severity=\"info\"\n      :value=\"truncatedEntitiesCountText\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { OverflowTagProps } from \"~/components/shared/misc/OverflowTag/overflow-tag.types\";\n\nconst props = defineProps<OverflowTagProps>();\n\nconst areEntitiesTruncated = computed<boolean>(() => props.entitiesCount > props.maximumEntitiesDisplayed);\n\nconst truncatedEntitiesCount = computed<number>(() => props.entitiesCount - props.maximumEntitiesDisplayed);\n\nconst truncatedEntitiesCountText = computed<string>(() => `+ ${truncatedEntitiesCount.value}`);\n</script>"
    },
    "components/shared/role/RoleDescriptionLines/RoleDescriptionLines.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1417",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Role Description Lines Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "940"
          ],
          "coveredBy": [
            "940",
            "941",
            "942"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 33
            },
            "start": {
              "column": 55,
              "line": 24
            }
          }
        },
        {
          "id": "1418",
          "mutatorName": "BooleanLiteral",
          "replacement": "roleDescriptionMessages",
          "statusReason": "Snapshot `Role Description Lines Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "940"
          ],
          "coveredBy": [
            "940",
            "941",
            "942"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 29
            },
            "start": {
              "column": 7,
              "line": 29
            }
          }
        },
        {
          "id": "1419",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Role Description Lines Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "940"
          ],
          "coveredBy": [
            "940",
            "941",
            "942"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 29
            },
            "start": {
              "column": 7,
              "line": 29
            }
          }
        },
        {
          "id": "1420",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "942"
          ],
          "coveredBy": [
            "940",
            "941",
            "942"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 29
            },
            "start": {
              "column": 7,
              "line": 29
            }
          }
        },
        {
          "id": "1421",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "942"
          ],
          "coveredBy": [
            "942"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 31
            },
            "start": {
              "column": 33,
              "line": 29
            }
          }
        },
        {
          "id": "1422",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "expected [ DOMWrapper{ …(2) } ] to have a length of +0 but got 1",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "942"
          ],
          "coveredBy": [
            "942"
          ],
          "location": {
            "end": {
              "column": 14,
              "line": 30
            },
            "start": {
              "column": 12,
              "line": 30
            }
          }
        },
        {
          "id": "1423",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Role Description Lines Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "940"
          ],
          "coveredBy": [
            "940",
            "941",
            "942"
          ],
          "location": {
            "end": {
              "column": 113,
              "line": 32
            },
            "start": {
              "column": 51,
              "line": 32
            }
          }
        },
        {
          "id": "1424",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Role Description Lines Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "940"
          ],
          "coveredBy": [
            "940",
            "941",
            "942"
          ],
          "location": {
            "end": {
              "column": 112,
              "line": 32
            },
            "start": {
              "column": 60,
              "line": 32
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"role-description-lines\"\n    class=\"container-fluid flex flex-col justify-center\"\n  >\n    <p\n      v-for=\"line in roleDescriptionLines\"\n      :key=\"line\"\n      class=\"role-description-line\"\n    >\n      {{ line }}\n    </p>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { RoleDescriptionLinesProps } from \"~/components/shared/role/RoleDescriptionLines/role-description-lines.types\";\nimport type { RoleName } from \"~/composables/api/role/types/role.types\";\n\nconst props = defineProps<RoleDescriptionLinesProps>();\n\nconst { t, messages, locale } = useI18n();\n\nconst roleDescriptionLines = computed<string[]>(() => {\n  type SharedMessages = Record<\"role\", Record<\"descriptions\", Record<RoleName, Record<string, string>>>>;\n\n  const sharedMessages = messages.value[locale.value].shared as SharedMessages;\n  const roleDescriptionMessages = sharedMessages.role.descriptions[props.role.name] as Record<string, string> | undefined;\n  if (!roleDescriptionMessages) {\n    return [];\n  }\n  return Object.keys(roleDescriptionMessages).map(key => t(`shared.role.descriptions.${props.role.name}.${key}`));\n});\n</script>"
    },
    "components/shared/role/RoleImage/RoleFlippingImage/RoleFlippingImage.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1425",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "We can't mutate defineProps macro as it is stated here: https://github.com/stryker-mutator/stryker-js/issues/3305.",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 2,
              "line": 41
            },
            "start": {
              "column": 67,
              "line": 38
            }
          }
        },
        {
          "id": "1426",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "We can't mutate defineProps macro as it is stated here: https://github.com/stryker-mutator/stryker-js/issues/3305.",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 16,
              "line": 39
            },
            "start": {
              "column": 10,
              "line": 39
            }
          }
        },
        {
          "id": "1427",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "We can't mutate defineProps macro as it is stated here: https://github.com/stryker-mutator/stryker-js/issues/3305.",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 23,
              "line": 40
            },
            "start": {
              "column": 15,
              "line": 40
            }
          }
        },
        {
          "id": "1428",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "Snapshot `Game Lobby Player Card Component > should match snapshot when rendered without shallow. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "715"
          ],
          "coveredBy": [
            "715",
            "752",
            "753",
            "754",
            "755",
            "756",
            "757",
            "758",
            "759",
            "760"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 43
            },
            "start": {
              "column": 32,
              "line": 43
            }
          }
        },
        {
          "id": "1429",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Role Flipping Image Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "752"
          ],
          "coveredBy": [
            "715",
            "752",
            "753",
            "754",
            "755",
            "756",
            "757",
            "758",
            "759",
            "760"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 49
            },
            "start": {
              "column": 17,
              "line": 47
            }
          }
        },
        {
          "id": "1430",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected 'werewolf' to be 'seer' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "757"
          ],
          "coveredBy": [
            "715",
            "752",
            "753",
            "754",
            "755",
            "756",
            "757",
            "758",
            "759",
            "760"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 51
            },
            "start": {
              "column": 7,
              "line": 51
            }
          }
        },
        {
          "id": "1431",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected 'werewolf' to be 'seer' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "757"
          ],
          "coveredBy": [
            "756",
            "757",
            "759",
            "760"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 60
            },
            "start": {
              "column": 41,
              "line": 51
            }
          }
        },
        {
          "id": "1432",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'false' to be 'true' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "759"
          ],
          "coveredBy": [
            "756",
            "757",
            "759",
            "760"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 52
            },
            "start": {
              "column": 7,
              "line": 52
            }
          }
        },
        {
          "id": "1433",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected 'true' to be 'false' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "756"
          ],
          "coveredBy": [
            "756",
            "757",
            "759",
            "760"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 52
            },
            "start": {
              "column": 7,
              "line": 52
            }
          }
        },
        {
          "id": "1434",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected 'true' to be 'false' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "756"
          ],
          "coveredBy": [
            "756",
            "757"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 57
            },
            "start": {
              "column": 24,
              "line": 52
            }
          }
        },
        {
          "id": "1435",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "expected 'true' to be 'false' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "756"
          ],
          "coveredBy": [
            "756",
            "757"
          ],
          "location": {
            "end": {
              "column": 28,
              "line": 54
            },
            "start": {
              "column": 23,
              "line": 54
            }
          }
        },
        {
          "id": "1436",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "expected 'werewolf' to be 'seer' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "757"
          ],
          "coveredBy": [
            "756",
            "757",
            "759",
            "760"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 59
            },
            "start": {
              "column": 21,
              "line": 59
            }
          }
        }
      ],
      "source": "<template>\n  <VueFlip\n    id=\"role-flipping-image\"\n    class=\"flex-none\"\n    :height=\"sizes\"\n    :model-value=\"isFlipped\"\n    :width=\"sizes\"\n  >\n    <template #front>\n      <RoleImage\n        id=\"front-role-image\"\n        :alt=\"alt\"\n        :class=\"imageClasses\"\n        :definition=\"definition\"\n        :role-name=\"frontRoleName\"\n        :sizes=\"sizes\"\n      />\n    </template>\n\n    <template #back>\n      <RoleImage\n        id=\"back-role-image\"\n        :alt=\"alt\"\n        :class=\"imageClasses\"\n        :definition=\"definition\"\n        :role-name=\"backRoleName\"\n        :sizes=\"sizes\"\n      />\n    </template>\n  </VueFlip>\n</template>\n\n<script setup lang=\"ts\">\nimport type { RoleFlippingImageProps } from \"~/components/shared/role/RoleImage/RoleFlippingImage/role-flipping-image.types\";\nimport RoleImage from \"~/components/shared/role/RoleImage/RoleImage.vue\";\nimport type { RoleName } from \"~/composables/api/role/types/role.types\";\n\nconst props = withDefaults(defineProps<RoleFlippingImageProps>(), {\n  sizes: \"50px\",\n  definition: \"normal\",\n});\n\nconst isFlipped = ref<boolean>(false);\nconst frontRoleName = ref<RoleName | undefined>();\nconst backRoleName = ref<RoleName | undefined>();\n\nonMounted(() => {\n  frontRoleName.value = props.roleName;\n});\n\nwatch(() => props.roleName, roleName => {\n  if (isFlipped.value) {\n    frontRoleName.value = roleName;\n    isFlipped.value = false;\n\n    return;\n  }\n  backRoleName.value = roleName;\n  isFlipped.value = true;\n});\n</script>"
    },
    "components/shared/role/RoleImage/RoleImage.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1437",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "We can't mutate defineProps macro as it is stated here: https://github.com/stryker-mutator/stryker-js/issues/3305.",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 2,
              "line": 20
            },
            "start": {
              "column": 59,
              "line": 17
            }
          }
        },
        {
          "id": "1438",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "We can't mutate defineProps macro as it is stated here: https://github.com/stryker-mutator/stryker-js/issues/3305.",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 16,
              "line": 18
            },
            "start": {
              "column": 10,
              "line": 18
            }
          }
        },
        {
          "id": "1439",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "We can't mutate defineProps macro as it is stated here: https://github.com/stryker-mutator/stryker-js/issues/3305.",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 23,
              "line": 19
            },
            "start": {
              "column": 15,
              "line": 19
            }
          }
        },
        {
          "id": "1440",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be '/img/role/back.jpeg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 10,
          "static": false,
          "killedBy": [
            "826"
          ],
          "coveredBy": [
            "288",
            "474",
            "475",
            "476",
            "477",
            "478",
            "715",
            "824",
            "825",
            "826",
            "827",
            "828",
            "829",
            "830",
            "831",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 26
            },
            "start": {
              "column": 22,
              "line": 26
            }
          }
        },
        {
          "id": "1441",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Role Image Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 8,
          "static": false,
          "killedBy": [
            "824"
          ],
          "coveredBy": [
            "288",
            "474",
            "475",
            "476",
            "477",
            "478",
            "715",
            "824",
            "825",
            "826",
            "827",
            "828",
            "829",
            "830",
            "831",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 37
            },
            "start": {
              "column": 45,
              "line": 28
            }
          }
        },
        {
          "id": "1442",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Role Image Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "824"
          ],
          "coveredBy": [
            "288",
            "474",
            "475",
            "476",
            "477",
            "478",
            "715",
            "824",
            "825",
            "826",
            "827",
            "828",
            "829",
            "830",
            "831",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 29
            },
            "start": {
              "column": 7,
              "line": 29
            }
          }
        },
        {
          "id": "1443",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected 'http://127.0.0.1/public/assets/images…' to be '/img/role/back.jpeg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 10,
          "static": false,
          "killedBy": [
            "826"
          ],
          "coveredBy": [
            "288",
            "474",
            "475",
            "476",
            "477",
            "478",
            "715",
            "824",
            "825",
            "826",
            "827",
            "828",
            "829",
            "830",
            "831",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 29
            },
            "start": {
              "column": 7,
              "line": 29
            }
          }
        },
        {
          "id": "1444",
          "mutatorName": "EqualityOperator",
          "replacement": "props.roleName !== undefined",
          "statusReason": "Snapshot `Role Image Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 8,
          "static": false,
          "killedBy": [
            "824"
          ],
          "coveredBy": [
            "288",
            "474",
            "475",
            "476",
            "477",
            "478",
            "715",
            "824",
            "825",
            "826",
            "827",
            "828",
            "829",
            "830",
            "831",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 29
            },
            "start": {
              "column": 7,
              "line": 29
            }
          }
        },
        {
          "id": "1445",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected 'http://127.0.0.1/public/assets/images…' to be '/img/role/back.jpeg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "826"
          ],
          "coveredBy": [
            "715",
            "826",
            "831",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 31
            },
            "start": {
              "column": 37,
              "line": 29
            }
          }
        },
        {
          "id": "1446",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'http://127.0.0.1/public/assets/images…' to be 'http://127.0.0.1/public/assets/images…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "828"
          ],
          "coveredBy": [
            "288",
            "474",
            "475",
            "476",
            "477",
            "478",
            "715",
            "824",
            "825",
            "826",
            "827",
            "828",
            "829",
            "830",
            "831",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 34
            },
            "start": {
              "column": 23,
              "line": 34
            }
          }
        },
        {
          "id": "1447",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Snapshot `Role Image Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "824"
          ],
          "coveredBy": [
            "288",
            "474",
            "475",
            "476",
            "477",
            "478",
            "715",
            "824",
            "825",
            "826",
            "827",
            "828",
            "829",
            "830",
            "831",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 34
            },
            "start": {
              "column": 23,
              "line": 34
            }
          }
        },
        {
          "id": "1448",
          "mutatorName": "EqualityOperator",
          "replacement": "props.definition !== \"normal\"",
          "statusReason": "Snapshot `Role Image Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "824"
          ],
          "coveredBy": [
            "288",
            "474",
            "475",
            "476",
            "477",
            "478",
            "715",
            "824",
            "825",
            "826",
            "827",
            "828",
            "829",
            "830",
            "831",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 34
            },
            "start": {
              "column": 23,
              "line": 34
            }
          }
        },
        {
          "id": "1449",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Role Image Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "824"
          ],
          "coveredBy": [
            "288",
            "474",
            "475",
            "476",
            "477",
            "478",
            "715",
            "824",
            "825",
            "826",
            "827",
            "828",
            "829",
            "830",
            "831",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 34
            },
            "start": {
              "column": 44,
              "line": 34
            }
          }
        },
        {
          "id": "1450",
          "mutatorName": "StringLiteral",
          "replacement": "\"Stryker was here!\"",
          "statusReason": "Snapshot `Role Image Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "824"
          ],
          "coveredBy": [
            "474",
            "475",
            "476",
            "477",
            "478",
            "715",
            "824",
            "825",
            "826",
            "827",
            "828",
            "829",
            "830",
            "831",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 34
            },
            "start": {
              "column": 55,
              "line": 34
            }
          }
        },
        {
          "id": "1451",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected 'http://127.0.0.1/public/assets/images…' to be 'http://127.0.0.1/public/assets/images…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "828"
          ],
          "coveredBy": [
            "288",
            "828"
          ],
          "location": {
            "end": {
              "column": 82,
              "line": 34
            },
            "start": {
              "column": 60,
              "line": 34
            }
          }
        },
        {
          "id": "1452",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Role Image Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 8,
          "static": false,
          "killedBy": [
            "824"
          ],
          "coveredBy": [
            "288",
            "474",
            "475",
            "476",
            "477",
            "478",
            "715",
            "824",
            "825",
            "826",
            "827",
            "828",
            "829",
            "830",
            "831",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 107,
              "line": 36
            },
            "start": {
              "column": 10,
              "line": 36
            }
          }
        },
        {
          "id": "1453",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Role Image Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "824"
          ],
          "coveredBy": [
            "288",
            "474",
            "475",
            "476",
            "477",
            "478",
            "715",
            "824",
            "825",
            "826",
            "827",
            "828",
            "829",
            "830",
            "831",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 88,
              "line": 39
            },
            "start": {
              "column": 39,
              "line": 39
            }
          }
        },
        {
          "id": "1454",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Role Image Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "824"
          ],
          "coveredBy": [
            "288",
            "474",
            "475",
            "476",
            "477",
            "478",
            "715",
            "824",
            "825",
            "826",
            "827",
            "828",
            "829",
            "830",
            "831",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 88,
              "line": 39
            },
            "start": {
              "column": 45,
              "line": 39
            }
          }
        },
        {
          "id": "1455",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Role Image Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "824"
          ],
          "coveredBy": [
            "288",
            "474",
            "475",
            "476",
            "477",
            "478",
            "715",
            "824",
            "825",
            "826",
            "827",
            "828",
            "829",
            "830",
            "831",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 49
            },
            "start": {
              "column": 41,
              "line": 41
            }
          }
        },
        {
          "id": "1456",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected undefined to be 'shared.role.name.werewolf' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "830"
          ],
          "coveredBy": [
            "288",
            "474",
            "475",
            "476",
            "477",
            "478",
            "715",
            "824",
            "825",
            "826",
            "827",
            "828",
            "829",
            "830",
            "831",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 30,
              "line": 42
            },
            "start": {
              "column": 7,
              "line": 42
            }
          }
        },
        {
          "id": "1457",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Snapshot `Role Image Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "824"
          ],
          "coveredBy": [
            "288",
            "474",
            "475",
            "476",
            "477",
            "478",
            "715",
            "824",
            "825",
            "826",
            "827",
            "828",
            "829",
            "830",
            "831",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 30,
              "line": 42
            },
            "start": {
              "column": 7,
              "line": 42
            }
          }
        },
        {
          "id": "1458",
          "mutatorName": "EqualityOperator",
          "replacement": "props.alt === undefined",
          "statusReason": "Snapshot `Role Image Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "824"
          ],
          "coveredBy": [
            "288",
            "474",
            "475",
            "476",
            "477",
            "478",
            "715",
            "824",
            "825",
            "826",
            "827",
            "828",
            "829",
            "830",
            "831",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 30,
              "line": 42
            },
            "start": {
              "column": 7,
              "line": 42
            }
          }
        },
        {
          "id": "1459",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Role Image Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "824"
          ],
          "coveredBy": [
            "288",
            "474",
            "475",
            "476",
            "477",
            "478",
            "715",
            "824",
            "825",
            "826",
            "827",
            "828",
            "829",
            "830",
            "831"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 44
            },
            "start": {
              "column": 32,
              "line": 42
            }
          }
        },
        {
          "id": "1460",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'shared.role.name.undefined' to be 'components.RoleImage.back' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "831"
          ],
          "coveredBy": [
            "830",
            "831",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 45
            },
            "start": {
              "column": 7,
              "line": 45
            }
          }
        },
        {
          "id": "1461",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected 'components.RoleImage.back' to be 'shared.role.name.werewolf' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "830"
          ],
          "coveredBy": [
            "830",
            "831",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 45
            },
            "start": {
              "column": 7,
              "line": 45
            }
          }
        },
        {
          "id": "1462",
          "mutatorName": "EqualityOperator",
          "replacement": "props.roleName === undefined",
          "statusReason": "expected 'components.RoleImage.back' to be 'shared.role.name.werewolf' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "830"
          ],
          "coveredBy": [
            "830",
            "831",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 45
            },
            "start": {
              "column": 7,
              "line": 45
            }
          }
        },
        {
          "id": "1463",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected 'components.RoleImage.back' to be 'shared.role.name.werewolf' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "830"
          ],
          "coveredBy": [
            "830",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 47
            },
            "start": {
              "column": 37,
              "line": 45
            }
          }
        },
        {
          "id": "1464",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected '' to be 'shared.role.name.werewolf' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "830"
          ],
          "coveredBy": [
            "830",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 46
            },
            "start": {
              "column": 14,
              "line": 46
            }
          }
        },
        {
          "id": "1465",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be 'components.RoleImage.back' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "831"
          ],
          "coveredBy": [
            "831",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 48
            },
            "start": {
              "column": 12,
              "line": 48
            }
          }
        }
      ],
      "source": "<template>\n  <NuxtImg\n    :alt=\"imageAlt\"\n    class=\"border-4 border-gray-800 role-image rounded-lg\"\n    :class=\"imageClasses\"\n    :height=\"sizes\"\n    placeholder=\"/svg/misc/infinite-spinner.svg\"\n    :src=\"roleImageSrc\"\n    :width=\"sizes\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport type { RoleImageProps } from \"~/components/shared/role/RoleImage/role-image.types\";\nimport { removeTrailingSlashes } from \"~/utils/url.utils\";\n\nconst props = withDefaults(defineProps<RoleImageProps>(), {\n  sizes: \"50px\",\n  definition: \"normal\",\n});\n\nconst { t } = useI18n();\n\nconst runtimeConfig = useRuntimeConfig();\n\nconst backImageSrc = \"/img/role/back.jpeg\";\n\nconst roleImageSrc = computed<string>(() => {\n  if (props.roleName === undefined) {\n    return backImageSrc;\n  }\n\n  const apiBaseUrl = removeTrailingSlashes(runtimeConfig.public.werewolvesAssistantApi.baseUrl);\n  const imageSuffix = props.definition === \"normal\" ? \"\" : `-${props.definition}`;\n\n  return `${apiBaseUrl}/public/assets/images/roles/${props.roleName}/${props.roleName}${imageSuffix}.jpeg`;\n});\n\nconst imageClasses = computed<string>(() => `h-[${props.sizes}px] w-[${props.sizes}px]`);\n\nconst imageAlt = computed<string>(() => {\n  if (props.alt !== undefined) {\n    return props.alt;\n  }\n  if (props.roleName !== undefined) {\n    return t(`shared.role.name.${props.roleName}`);\n  }\n  return t(\"components.RoleImage.back\");\n});\n</script>"
    },
    "components/shared/role/RoleSideBadge/RoleSideBadge.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1466",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "952"
          ],
          "coveredBy": [
            "952",
            "953",
            "954",
            "955",
            "956"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 27
            },
            "start": {
              "column": 60,
              "line": 20
            }
          }
        },
        {
          "id": "1467",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "952"
          ],
          "coveredBy": [
            "952",
            "953",
            "954",
            "955",
            "956"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 24
            },
            "start": {
              "column": 66,
              "line": 21
            }
          }
        },
        {
          "id": "1468",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `Role Side Badge Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "952"
          ],
          "coveredBy": [
            "952",
            "953",
            "954",
            "955",
            "956"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 22
            },
            "start": {
              "column": 16,
              "line": 22
            }
          }
        },
        {
          "id": "1469",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Role Side Badge Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "952"
          ],
          "coveredBy": [
            "952",
            "953",
            "954",
            "955",
            "956"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 22
            },
            "start": {
              "column": 28,
              "line": 22
            }
          }
        },
        {
          "id": "1470",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected undefined to be 'danger' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "956"
          ],
          "coveredBy": [
            "952",
            "953",
            "954",
            "955",
            "956"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 23
            },
            "start": {
              "column": 17,
              "line": 23
            }
          }
        },
        {
          "id": "1471",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be 'danger' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "956"
          ],
          "coveredBy": [
            "952",
            "953",
            "954",
            "955",
            "956"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 23
            },
            "start": {
              "column": 29,
              "line": 23
            }
          }
        },
        {
          "id": "1472",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Role Side Badge Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "952"
          ],
          "coveredBy": [
            "952",
            "953",
            "954",
            "955",
            "956"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 34
            },
            "start": {
              "column": 43,
              "line": 29
            }
          }
        },
        {
          "id": "1473",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'components.RoleSideBadge.villagersSide' to be 'components.RoleSideBadge.werewolvesSi…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "954"
          ],
          "coveredBy": [
            "952",
            "953",
            "954",
            "955",
            "956"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 30
            },
            "start": {
              "column": 7,
              "line": 30
            }
          }
        },
        {
          "id": "1474",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Snapshot `Role Side Badge Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "952"
          ],
          "coveredBy": [
            "952",
            "953",
            "954",
            "955",
            "956"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 30
            },
            "start": {
              "column": 7,
              "line": 30
            }
          }
        },
        {
          "id": "1475",
          "mutatorName": "EqualityOperator",
          "replacement": "props.roleSide !== \"villagers\"",
          "statusReason": "Snapshot `Role Side Badge Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "952"
          ],
          "coveredBy": [
            "952",
            "953",
            "954",
            "955",
            "956"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 30
            },
            "start": {
              "column": 7,
              "line": 30
            }
          }
        },
        {
          "id": "1476",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Role Side Badge Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "952"
          ],
          "coveredBy": [
            "952",
            "953",
            "954",
            "955",
            "956"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 30
            },
            "start": {
              "column": 26,
              "line": 30
            }
          }
        },
        {
          "id": "1477",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Role Side Badge Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "952"
          ],
          "coveredBy": [
            "952",
            "953",
            "954",
            "955",
            "956"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 32
            },
            "start": {
              "column": 39,
              "line": 30
            }
          }
        },
        {
          "id": "1478",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Role Side Badge Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "952"
          ],
          "coveredBy": [
            "952",
            "953",
            "954",
            "955",
            "956"
          ],
          "location": {
            "end": {
              "column": 54,
              "line": 31
            },
            "start": {
              "column": 14,
              "line": 31
            }
          }
        },
        {
          "id": "1479",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be 'components.RoleSideBadge.werewolvesSi…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "954"
          ],
          "coveredBy": [
            "954",
            "956"
          ],
          "location": {
            "end": {
              "column": 53,
              "line": 33
            },
            "start": {
              "column": 12,
              "line": 33
            }
          }
        }
      ],
      "source": "<template>\n  <VuePrimeBadge\n    id=\"role-side-badge\"\n    :severity=\"roleTypeBadgeAttributes.severity\"\n    :size=\"size\"\n    :value=\"badgeValue\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport type { BadgeProps } from \"primevue/badge\";\n\nimport type { RoleSideBadgeProps } from \"~/components/shared/role/RoleSideBadge/role-side-badge-types\";\nimport type { RoleSide } from \"~/composables/api/role/types/role.types\";\n\nconst props = defineProps<RoleSideBadgeProps>();\n\nconst { t } = useI18n();\n\nconst roleTypeBadgeAttributes = computed<BadgeProps>(() => {\n  const roleTypesBadgeAttributes: Record<RoleSide, BadgeProps> = {\n    villagers: { severity: \"success\" },\n    werewolves: { severity: \"danger\" },\n  };\n\n  return roleTypesBadgeAttributes[props.roleSide];\n});\n\nconst badgeValue = computed<string>(() => {\n  if (props.roleSide === \"villagers\") {\n    return t(\"components.RoleSideBadge.villagersSide\");\n  }\n  return t(\"components.RoleSideBadge.werewolvesSide\");\n});\n</script>"
    },
    "components/shared/role/RoleTypeBadge/RoleTypeBadge.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1480",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "885"
          ],
          "coveredBy": [
            "885",
            "886",
            "887",
            "888",
            "889",
            "890",
            "891"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 28
            },
            "start": {
              "column": 60,
              "line": 19
            }
          }
        },
        {
          "id": "1481",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "885"
          ],
          "coveredBy": [
            "885",
            "886",
            "887",
            "888",
            "889",
            "890",
            "891"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 25
            },
            "start": {
              "column": 66,
              "line": 20
            }
          }
        },
        {
          "id": "1482",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected undefined to be 'success' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "889"
          ],
          "coveredBy": [
            "885",
            "886",
            "887",
            "888",
            "889",
            "890",
            "891"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 21
            },
            "start": {
              "column": 15,
              "line": 21
            }
          }
        },
        {
          "id": "1483",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be 'success' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "889"
          ],
          "coveredBy": [
            "885",
            "886",
            "887",
            "888",
            "889",
            "890",
            "891"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 21
            },
            "start": {
              "column": 27,
              "line": 21
            }
          }
        },
        {
          "id": "1484",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `Role Type Badge Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "885"
          ],
          "coveredBy": [
            "885",
            "886",
            "887",
            "888",
            "889",
            "890",
            "891"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 22
            },
            "start": {
              "column": 15,
              "line": 22
            }
          }
        },
        {
          "id": "1485",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Role Type Badge Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "885"
          ],
          "coveredBy": [
            "885",
            "886",
            "887",
            "888",
            "889",
            "890",
            "891"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 22
            },
            "start": {
              "column": 27,
              "line": 22
            }
          }
        },
        {
          "id": "1486",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected undefined to be 'info' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "891"
          ],
          "coveredBy": [
            "885",
            "886",
            "887",
            "888",
            "889",
            "890",
            "891"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 23
            },
            "start": {
              "column": 13,
              "line": 23
            }
          }
        },
        {
          "id": "1487",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be 'info' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "891"
          ],
          "coveredBy": [
            "885",
            "886",
            "887",
            "888",
            "889",
            "890",
            "891"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 23
            },
            "start": {
              "column": 25,
              "line": 23
            }
          }
        },
        {
          "id": "1488",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected undefined to be 'warning' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "890"
          ],
          "coveredBy": [
            "885",
            "886",
            "887",
            "888",
            "889",
            "890",
            "891"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 24
            },
            "start": {
              "column": 16,
              "line": 24
            }
          }
        },
        {
          "id": "1489",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be 'warning' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "890"
          ],
          "coveredBy": [
            "885",
            "886",
            "887",
            "888",
            "889",
            "890",
            "891"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 24
            },
            "start": {
              "column": 28,
              "line": 24
            }
          }
        }
      ],
      "source": "<template>\n  <VuePrimeBadge\n    v-p-tooltip=\"$t(`components.RoleTypeBadge.descriptions.${roleType}`)\"\n    class=\"cursor-help role-type-badge\"\n    :severity=\"roleTypeBadgeAttributes.severity\"\n    :size=\"size\"\n    :value=\"$t(`shared.role.type.${roleType}`)\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport type { BadgeProps } from \"primevue/badge\";\n\nimport type { RoleTypeBadgeProps } from \"~/components/shared/role/RoleTypeBadge/role-type-badge-types\";\nimport type { RoleType } from \"~/composables/api/role/types/role.types\";\n\nconst props = defineProps<RoleTypeBadgeProps>();\n\nconst roleTypeBadgeAttributes = computed<BadgeProps>(() => {\n  const roleTypesBadgeAttributes: Record<RoleType, BadgeProps> = {\n    villager: { severity: \"success\" },\n    werewolf: { severity: \"danger\" },\n    lonely: { severity: \"info\" },\n    ambiguous: { severity: \"warning\" },\n  };\n\n  return roleTypesBadgeAttributes[props.roleType];\n});\n</script>"
    },
    "composables/api/error/useWerewolvesAssistantApiError.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1491",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "960"
          ],
          "coveredBy": [
            "960",
            "961"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 22
            },
            "start": {
              "column": 124,
              "line": 14
            }
          }
        },
        {
          "id": "1492",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"detail\": \"composables.useWerewolvesAssistantApiError.checkConsoleForMoreDetails\",\n    \"summary\": \"composables.useWerewolvesAssistantApiError.statusCode.404\",\n  },\n], but it was called with Object {}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "961"
          ],
          "coveredBy": [
            "960",
            "961"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 21
            },
            "start": {
              "column": 19,
              "line": 18
            }
          }
        },
        {
          "id": "1493",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"detail\": \"composables.useWerewolvesAssistantApiError.checkConsoleForMoreDetails\",\n    \"summary\": \"composables.useWerewolvesAssistantApiError.statusCode.404\",\n  },\n], but it was called with Object {\n  \"detail\": \"composables.useWerewolvesAssistantApiError.checkConsoleForMoreDetails\",\n  \"summary\": \"\",\n}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "961"
          ],
          "coveredBy": [
            "960",
            "961"
          ],
          "location": {
            "end": {
              "column": 92,
              "line": 19
            },
            "start": {
              "column": 18,
              "line": 19
            }
          }
        },
        {
          "id": "1494",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"detail\": \"composables.useWerewolvesAssistantApiError.checkConsoleForMoreDetails\",\n    \"summary\": \"composables.useWerewolvesAssistantApiError.statusCode.404\",\n  },\n], but it was called with Object {\n  \"detail\": \"\",\n  \"summary\": \"composables.useWerewolvesAssistantApiError.statusCode.404\",\n}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "961"
          ],
          "coveredBy": [
            "960",
            "961"
          ],
          "location": {
            "end": {
              "column": 88,
              "line": 20
            },
            "start": {
              "column": 17,
              "line": 20
            }
          }
        },
        {
          "id": "1490",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/error/useWerewolvesAssistantApiError.ts(10,44): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213",
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242",
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265",
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "310",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "319",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327",
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387",
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428",
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448",
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468",
            "469",
            "470",
            "471",
            "472",
            "473",
            "474",
            "475",
            "476",
            "477",
            "478",
            "479",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "488",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511",
            "512",
            "513",
            "514",
            "515",
            "516",
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "596",
            "597",
            "598",
            "599",
            "600",
            "601",
            "602",
            "603",
            "604",
            "605",
            "606",
            "607",
            "608",
            "609",
            "610",
            "611",
            "612",
            "613",
            "614",
            "615",
            "616",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634",
            "635",
            "636",
            "637",
            "638",
            "639",
            "640",
            "641",
            "651",
            "652",
            "653",
            "654",
            "655",
            "656",
            "657",
            "658",
            "659",
            "660",
            "661",
            "662",
            "663",
            "664",
            "665",
            "666",
            "667",
            "668",
            "669",
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677",
            "678",
            "679",
            "680",
            "681",
            "682",
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713",
            "714",
            "715",
            "716",
            "717",
            "718",
            "719",
            "720",
            "721",
            "722",
            "723",
            "724",
            "725",
            "726",
            "727",
            "728",
            "729",
            "730",
            "731",
            "732",
            "733",
            "734",
            "735",
            "736",
            "737",
            "738",
            "739",
            "740",
            "741",
            "742",
            "743",
            "744",
            "745",
            "746",
            "747",
            "748",
            "749",
            "750",
            "751",
            "766",
            "767",
            "768",
            "769",
            "770",
            "771",
            "772",
            "773",
            "774",
            "775",
            "776",
            "777",
            "778",
            "779",
            "780",
            "781",
            "782",
            "783",
            "784",
            "785",
            "786",
            "787",
            "788",
            "789",
            "790",
            "791",
            "792",
            "793",
            "794",
            "795",
            "796",
            "797",
            "798",
            "799",
            "800",
            "801",
            "802",
            "803",
            "804",
            "805",
            "806",
            "807",
            "808",
            "809",
            "810",
            "811",
            "812",
            "813",
            "814",
            "815",
            "845",
            "846",
            "847",
            "848",
            "864",
            "865",
            "866",
            "904",
            "905",
            "906",
            "907",
            "908",
            "909",
            "923",
            "924",
            "925",
            "926",
            "927",
            "928",
            "929",
            "939",
            "957",
            "958",
            "959",
            "960",
            "961",
            "973",
            "974",
            "975",
            "976",
            "990",
            "991",
            "992",
            "993",
            "1079"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 24
            },
            "start": {
              "column": 75,
              "line": 10
            }
          }
        },
        {
          "id": "1495",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "composables/api/error/useWerewolvesAssistantApiError.ts(23,3): error TS2741: Property 'handleWerewolvesAssistantApiError' is missing in type '{}' but required in type 'UseWerewolvesAssistantApiError'.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213",
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242",
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265",
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "310",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "319",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327",
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387",
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428",
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448",
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468",
            "469",
            "470",
            "471",
            "472",
            "473",
            "474",
            "475",
            "476",
            "477",
            "478",
            "479",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "488",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511",
            "512",
            "513",
            "514",
            "515",
            "516",
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "596",
            "597",
            "598",
            "599",
            "600",
            "601",
            "602",
            "603",
            "604",
            "605",
            "606",
            "607",
            "608",
            "609",
            "610",
            "611",
            "612",
            "613",
            "614",
            "615",
            "616",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634",
            "635",
            "636",
            "637",
            "638",
            "639",
            "640",
            "641",
            "651",
            "652",
            "653",
            "654",
            "655",
            "656",
            "657",
            "658",
            "659",
            "660",
            "661",
            "662",
            "663",
            "664",
            "665",
            "666",
            "667",
            "668",
            "669",
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677",
            "678",
            "679",
            "680",
            "681",
            "682",
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713",
            "714",
            "715",
            "716",
            "717",
            "718",
            "719",
            "720",
            "721",
            "722",
            "723",
            "724",
            "725",
            "726",
            "727",
            "728",
            "729",
            "730",
            "731",
            "732",
            "733",
            "734",
            "735",
            "736",
            "737",
            "738",
            "739",
            "740",
            "741",
            "742",
            "743",
            "744",
            "745",
            "746",
            "747",
            "748",
            "749",
            "750",
            "751",
            "766",
            "767",
            "768",
            "769",
            "770",
            "771",
            "772",
            "773",
            "774",
            "775",
            "776",
            "777",
            "778",
            "779",
            "780",
            "781",
            "782",
            "783",
            "784",
            "785",
            "786",
            "787",
            "788",
            "789",
            "790",
            "791",
            "792",
            "793",
            "794",
            "795",
            "796",
            "797",
            "798",
            "799",
            "800",
            "801",
            "802",
            "803",
            "804",
            "805",
            "806",
            "807",
            "808",
            "809",
            "810",
            "811",
            "812",
            "813",
            "814",
            "815",
            "845",
            "846",
            "847",
            "848",
            "864",
            "865",
            "866",
            "904",
            "905",
            "906",
            "907",
            "908",
            "909",
            "923",
            "924",
            "925",
            "926",
            "927",
            "928",
            "929",
            "939",
            "957",
            "958",
            "959",
            "960",
            "961",
            "973",
            "974",
            "975",
            "976",
            "990",
            "991",
            "992",
            "993",
            "1079"
          ],
          "location": {
            "end": {
              "column": 47,
              "line": 23
            },
            "start": {
              "column": 10,
              "line": 23
            }
          }
        }
      ],
      "source": "import type { FetchResponse } from \"ofetch\";\n\nimport type { WerewolvesAssistantApiError } from \"~/composables/api/error/types/api-error.types\";\nimport { useVuePrimeToasts } from \"~/composables/vue-prime/useVuePrimeToasts\";\n\ntype UseWerewolvesAssistantApiError = {\n  handleWerewolvesAssistantApiError: (error: { response: FetchResponse<WerewolvesAssistantApiError> }) => void;\n};\n\nfunction useWerewolvesAssistantApiError(): UseWerewolvesAssistantApiError {\n  const { addErrorToast } = useVuePrimeToasts();\n  const { t } = useI18n();\n\n  function handleWerewolvesAssistantApiError({ response }: { response: FetchResponse<WerewolvesAssistantApiError> }): void {\n    const { _data: errorData } = response;\n    // eslint-disable-next-line no-console\n    console.error(errorData);\n    addErrorToast({\n      summary: t(`composables.useWerewolvesAssistantApiError.statusCode.${response.status}`),\n      detail: t(`composables.useWerewolvesAssistantApiError.checkConsoleForMoreDetails`),\n    });\n  }\n  return { handleWerewolvesAssistantApiError };\n}\n\nexport { useWerewolvesAssistantApiError };"
    },
    "composables/api/game/dto/create-game/create-game-additional-card/create-game-additional-card.dto.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1496",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/dto/create-game/create-game-additional-card/create-game-additional-card.dto.ts(14,83): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "1065"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 16
            },
            "start": {
              "column": 111,
              "line": 14
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport type { GameAdditionalCardRecipientRoleName } from \"~/composables/api/game/types/game-additional-card/game-additional-card.types\";\nimport type { RoleName } from \"~/composables/api/role/types/role.types\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass CreateGameAdditionalCardDto {\n  @Expose()\n  public roleName: RoleName;\n\n  @Expose()\n  public recipient: GameAdditionalCardRecipientRoleName;\n\n  public static create(createGameAdditionalCardDto: CreateGameAdditionalCardDto): CreateGameAdditionalCardDto {\n    return plainToInstance(CreateGameAdditionalCardDto, createGameAdditionalCardDto, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { CreateGameAdditionalCardDto };"
    },
    "composables/api/game/dto/create-game/create-game-player/create-game-player-role.dto.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1497",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/dto/create-game/create-game-player/create-game-player-role.dto.ts(10,75): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122",
            "261",
            "262",
            "263",
            "264",
            "265",
            "344",
            "345",
            "346",
            "348",
            "349",
            "350",
            "351",
            "353",
            "354",
            "359",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387",
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448",
            "514",
            "582",
            "584",
            "718",
            "749",
            "750",
            "751",
            "861",
            "1024",
            "1050"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 12
            },
            "start": {
              "column": 99,
              "line": 10
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport type { RoleName } from \"~/composables/api/role/types/role.types\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass CreateGamePlayerRoleDto {\n  @Expose()\n  public name?: RoleName;\n\n  public static create(createGamePlayerRoleDto: CreateGamePlayerRoleDto): CreateGamePlayerRoleDto {\n    return plainToInstance(CreateGamePlayerRoleDto, createGamePlayerRoleDto, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { CreateGamePlayerRoleDto };"
    },
    "composables/api/game/dto/create-game/create-game-player/create-game-player-side.dto.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1498",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/dto/create-game/create-game-player/create-game-player-side.dto.ts(13,75): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122",
            "261",
            "262",
            "263",
            "264",
            "265",
            "344",
            "345",
            "346",
            "348",
            "349",
            "350",
            "351",
            "353",
            "354",
            "359",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387",
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448",
            "514",
            "582",
            "584",
            "718",
            "749",
            "750",
            "751",
            "861",
            "1024",
            "1050"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 15
            },
            "start": {
              "column": 99,
              "line": 13
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport type { RoleSide } from \"~/composables/api/role/types/role.types\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass CreateGamePlayerSideDto {\n  @Expose()\n  public original?: RoleSide;\n\n  @Expose()\n  public current?: RoleSide;\n\n  public static create(createGamePlayerSideDto: CreateGamePlayerSideDto): CreateGamePlayerSideDto {\n    return plainToInstance(CreateGamePlayerSideDto, createGamePlayerSideDto, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { CreateGamePlayerSideDto };"
    },
    "composables/api/game/dto/create-game/create-game-player/create-game-player.dto.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1499",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/dto/create-game/create-game-player/create-game-player.dto.ts(22,67): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122",
            "261",
            "262",
            "263",
            "264",
            "265",
            "333",
            "334",
            "335",
            "336",
            "337",
            "338",
            "339",
            "340",
            "341",
            "344",
            "345",
            "346",
            "348",
            "349",
            "350",
            "351",
            "353",
            "354",
            "359",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387",
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448",
            "514",
            "515",
            "582",
            "584",
            "718",
            "749",
            "750",
            "751",
            "861",
            "1024",
            "1050"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 24
            },
            "start": {
              "column": 87,
              "line": 22
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\n\nimport { CreateGamePlayerRoleDto } from \"~/composables/api/game/dto/create-game/create-game-player/create-game-player-role.dto\";\nimport { CreateGamePlayerSideDto } from \"~/composables/api/game/dto/create-game/create-game-player/create-game-player-side.dto\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass CreateGamePlayerDto {\n  @Expose()\n  public name: string;\n\n  @Type(() => CreateGamePlayerRoleDto)\n  @Expose()\n  public role: CreateGamePlayerRoleDto;\n\n  @Type(() => CreateGamePlayerSideDto)\n  @Expose()\n  public side: CreateGamePlayerSideDto;\n\n  @Expose()\n  public group?: string;\n\n  public static create(createGamePlayerDto: CreateGamePlayerDto): CreateGamePlayerDto {\n    return plainToInstance(CreateGamePlayerDto, createGamePlayerDto, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { CreateGamePlayerDto };"
    },
    "composables/api/game/dto/make-game-play/make-game-play-target/make-game-play-target.dto.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1502",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/dto/make-game-play/make-game-play-target/make-game-play-target.dto.ts(13,71): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "69",
            "74",
            "75",
            "77",
            "78",
            "82",
            "83",
            "163",
            "164",
            "166",
            "167",
            "168",
            "171",
            "174",
            "175"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 15
            },
            "start": {
              "column": 93,
              "line": 13
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport type { WitchPotion } from \"~/composables/api/game/types/game-play/game-play.types\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass MakeGamePlayTargetDto {\n  @Expose()\n  public playerId: string;\n\n  @Expose()\n  public drankPotion?: WitchPotion;\n\n  public static create(makeGamePlayTargetDto: MakeGamePlayTargetDto): MakeGamePlayTargetDto {\n    return plainToInstance(MakeGamePlayTargetDto, makeGamePlayTargetDto, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { MakeGamePlayTargetDto };"
    },
    "composables/api/game/dto/make-game-play/make-game-play-vote/make-game-play-vote.dto.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1503",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/dto/make-game-play/make-game-play-vote/make-game-play-vote.dto.ts(12,67): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "176",
            "177",
            "179",
            "180",
            "181"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 14
            },
            "start": {
              "column": 87,
              "line": 12
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass MakeGamePlayVoteDto {\n  @Expose()\n  public sourceId: string;\n\n  @Expose()\n  public targetId: string;\n\n  public static create(makeGamePlayVoteDto: MakeGamePlayVoteDto): MakeGamePlayVoteDto {\n    return plainToInstance(MakeGamePlayVoteDto, makeGamePlayVoteDto, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { MakeGamePlayVoteDto };"
    },
    "composables/api/game/dto/make-game-play/make-game-play.dto.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1504",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/dto/make-game-play/make-game-play.dto.ts(26,59): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "108",
            "109",
            "160",
            "161",
            "162",
            "163",
            "164",
            "165",
            "166",
            "167",
            "168",
            "169",
            "170",
            "171",
            "172",
            "173",
            "174",
            "175",
            "176",
            "177",
            "178",
            "179",
            "180",
            "181",
            "182",
            "183",
            "184",
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634",
            "642",
            "643",
            "644",
            "645",
            "646",
            "647",
            "648",
            "649",
            "650",
            "822",
            "823",
            "832",
            "833",
            "834",
            "835",
            "836",
            "855",
            "856"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 28
            },
            "start": {
              "column": 75,
              "line": 26
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\n\nimport { MakeGamePlayTargetDto } from \"~/composables/api/game/dto/make-game-play/make-game-play-target/make-game-play-target.dto\";\nimport { MakeGamePlayVoteDto } from \"~/composables/api/game/dto/make-game-play/make-game-play-vote/make-game-play-vote.dto\";\nimport type { RoleSide } from \"~/composables/api/role/types/role.types\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass MakeGamePlayDto {\n  @Type(() => MakeGamePlayTargetDto)\n  @Expose()\n  public targets?: MakeGamePlayTargetDto[];\n\n  @Type(() => MakeGamePlayVoteDto)\n  @Expose()\n  public votes?: MakeGamePlayVoteDto[];\n\n  @Expose()\n  public doesJudgeRequestAnotherVote?: boolean;\n\n  @Expose()\n  public chosenCardId?: string;\n\n  @Expose()\n  public chosenSide?: RoleSide;\n\n  public static create(makeGamePlayDto: MakeGamePlayDto): MakeGamePlayDto {\n    return plainToInstance(MakeGamePlayDto, makeGamePlayDto, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { MakeGamePlayDto };"
    },
    "composables/api/game/game-history-record/useFetchGameHistoryRecords.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1505",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/game-history-record/useFetchGameHistoryRecords.ts(8,40): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677",
            "864",
            "865",
            "866",
            "904",
            "905",
            "906",
            "907",
            "908",
            "909",
            "1004",
            "1005"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 19
            },
            "start": {
              "column": 60,
              "line": 8
            }
          }
        },
        {
          "id": "1506",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/game-history-record/useFetchGameHistoryRecords.ts(11,57): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "1004",
            "1005"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 17
            },
            "start": {
              "column": 120,
              "line": 11
            }
          }
        },
        {
          "id": "1507",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/game-history-record/useFetchGameHistoryRecords.ts(11,57): error TS2366: Function lacks ending return statement and return type does not include 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "1004",
            "1005"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 14
            },
            "start": {
              "column": 9,
              "line": 12
            }
          }
        },
        {
          "id": "1508",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games/gameId/history\",\n  Object {\n    \"method\": \"GET\",\n  },\n], but it was called with \"\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "1004"
          ],
          "coveredBy": [
            "1004",
            "1005"
          ],
          "location": {
            "end": {
              "column": 95,
              "line": 13
            },
            "start": {
              "column": 69,
              "line": 13
            }
          }
        },
        {
          "id": "1509",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games/gameId/history\",\n  Object {\n    \"method\": \"GET\",\n  },\n], but it was called with \"/games/gameId/history\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "1004"
          ],
          "coveredBy": [
            "1004",
            "1005"
          ],
          "location": {
            "end": {
              "column": 114,
              "line": 13
            },
            "start": {
              "column": 97,
              "line": 13
            }
          }
        },
        {
          "id": "1510",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "composables/api/game/game-history-record/useFetchGameHistoryRecords.ts(13,99): error TS2322: Type '\"\"' is not assignable to type '\"delete\" | \"get\" | \"GET\" | \"HEAD\" | \"PATCH\" | \"POST\" | \"PUT\" | \"DELETE\" | \"CONNECT\" | \"OPTIONS\" | \"TRACE\" | \"head\" | \"patch\" | \"post\" | \"put\" | \"connect\" | \"options\" | \"trace\" | undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "1004",
            "1005"
          ],
          "location": {
            "end": {
              "column": 112,
              "line": 13
            },
            "start": {
              "column": 107,
              "line": 13
            }
          }
        },
        {
          "id": "1511",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/game-history-record/useFetchGameHistoryRecords.ts(11,57): error TS2366: Function lacks ending return statement and return type does not include 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "1005"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 16
            },
            "start": {
              "column": 21,
              "line": 14
            }
          }
        },
        {
          "id": "1512",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "composables/api/game/game-history-record/useFetchGameHistoryRecords.ts(18,3): error TS2741: Property 'getGameHistoryRecords' is missing in type '{}' but required in type 'UseFetchGameHistory'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677",
            "864",
            "865",
            "866",
            "904",
            "905",
            "906",
            "907",
            "908",
            "909",
            "1004",
            "1005"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 18
            },
            "start": {
              "column": 10,
              "line": 18
            }
          }
        }
      ],
      "source": "import type { GameHistoryRecord } from \"~/composables/api/game/types/game-history-record/game-history-record.class\";\nimport { useWerewolvesAssistantApi } from \"~/composables/api/useWerewolvesAssistantApi\";\n\ntype UseFetchGameHistory = {\n  getGameHistoryRecords: (gameId: string) => Promise<ReturnType<typeof $fetch<GameHistoryRecord[]>> | null>;\n};\n\nfunction useFetchGameHistoryRecords(): UseFetchGameHistory {\n  const { fetchWerewolvesAssistantApi } = useWerewolvesAssistantApi();\n\n  async function getGameHistoryRecords(gameId: string): Promise<ReturnType<typeof $fetch<GameHistoryRecord[]>> | null> {\n    try {\n      return await fetchWerewolvesAssistantApi<GameHistoryRecord[]>(`/games/${gameId}/history`, { method: \"GET\" });\n    } catch (error) {\n      return null;\n    }\n  }\n  return { getGameHistoryRecords };\n}\n\nexport { useFetchGameHistoryRecords };"
    },
    "composables/api/game/game-history-record/useGameHistoryRecord.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1513",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/game-history-record/useGameHistoryRecord.ts(7,34): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61",
            "62",
            "63",
            "64",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "761",
            "762",
            "763",
            "764",
            "765"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 23
            },
            "start": {
              "column": 55,
              "line": 7
            }
          }
        },
        {
          "id": "1514",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/game-history-record/useGameHistoryRecord.ts(8,68): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61",
            "62",
            "63",
            "64",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "761",
            "762",
            "763",
            "764",
            "765"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 21
            },
            "start": {
              "column": 76,
              "line": 8
            }
          }
        },
        {
          "id": "1515",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'components.GameOverHistoryRecordActio…' to be 'components.GameOverHistoryRecordActio…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "38"
          ],
          "coveredBy": [
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61",
            "62",
            "63",
            "64",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "761",
            "762",
            "763",
            "764",
            "765"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 20
            },
            "start": {
              "column": 12,
              "line": 17
            }
          }
        },
        {
          "id": "1516",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Snapshot `Game Over History Record Action Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "36"
          ],
          "coveredBy": [
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61",
            "62",
            "63",
            "64",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "761",
            "762",
            "763",
            "764",
            "765"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 20
            },
            "start": {
              "column": 12,
              "line": 17
            }
          }
        },
        {
          "id": "1517",
          "mutatorName": "LogicalOperator",
          "replacement": "(type === \"vote\" && !votes || type === \"target\" && !targets || type === \"request-another-vote\" && didJudgeRequestAnotherVote === undefined) && type === \"choose-card\" && !chosenCard",
          "statusReason": "composables/api/game/game-history-record/useGameHistoryRecord.ts(17,155): error TS2367: This comparison appears to be unintentional because the types '\"vote\" | \"target\" | \"request-another-vote\"' and '\"choose-card\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61",
            "62",
            "63",
            "64",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "761",
            "762",
            "763",
            "764",
            "765"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 20
            },
            "start": {
              "column": 12,
              "line": 17
            }
          }
        },
        {
          "id": "1518",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Snapshot `Game Over History Record Action Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "36"
          ],
          "coveredBy": [
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61",
            "62",
            "63",
            "64",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "761",
            "762",
            "763",
            "764",
            "765"
          ],
          "location": {
            "end": {
              "column": 84,
              "line": 19
            },
            "start": {
              "column": 12,
              "line": 17
            }
          }
        },
        {
          "id": "1519",
          "mutatorName": "LogicalOperator",
          "replacement": "(type === \"vote\" && !votes || type === \"target\" && !targets) && type === \"request-another-vote\" && didJudgeRequestAnotherVote === undefined",
          "statusReason": "composables/api/game/game-history-record/useGameHistoryRecord.ts(17,76): error TS2367: This comparison appears to be unintentional because the types '\"vote\" | \"target\"' and '\"request-another-vote\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61",
            "62",
            "63",
            "64",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "761",
            "762",
            "763",
            "764",
            "765"
          ],
          "location": {
            "end": {
              "column": 84,
              "line": 19
            },
            "start": {
              "column": 12,
              "line": 17
            }
          }
        },
        {
          "id": "1520",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Snapshot `Game Over History Record Action Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "36"
          ],
          "coveredBy": [
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61",
            "62",
            "63",
            "64",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "761",
            "762",
            "763",
            "764",
            "765"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 18
            },
            "start": {
              "column": 12,
              "line": 17
            }
          }
        },
        {
          "id": "1521",
          "mutatorName": "LogicalOperator",
          "replacement": "type === \"vote\" && !votes && type === \"target\" && !targets",
          "statusReason": "composables/api/game/game-history-record/useGameHistoryRecord.ts(17,41): error TS2367: This comparison appears to be unintentional because the types '\"vote\"' and '\"target\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61",
            "62",
            "63",
            "64",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "761",
            "762",
            "763",
            "764",
            "765"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 18
            },
            "start": {
              "column": 12,
              "line": 17
            }
          }
        },
        {
          "id": "1522",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Snapshot `Game Over History Record Action Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "36"
          ],
          "coveredBy": [
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61",
            "62",
            "63",
            "64",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "761",
            "762",
            "763",
            "764",
            "765"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 17
            },
            "start": {
              "column": 12,
              "line": 17
            }
          }
        },
        {
          "id": "1523",
          "mutatorName": "LogicalOperator",
          "replacement": "type === \"vote\" || !votes",
          "statusReason": "expected 'components.GameOverHistoryRecordActio…' to be 'components.GameOverHistoryRecordActio…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "38"
          ],
          "coveredBy": [
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61",
            "62",
            "63",
            "64",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "761",
            "762",
            "763",
            "764",
            "765"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 17
            },
            "start": {
              "column": 12,
              "line": 17
            }
          }
        },
        {
          "id": "1524",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'components.GameOverHistoryRecordActio…' to be 'components.GameOverHistoryRecordActio…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "38"
          ],
          "coveredBy": [
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61",
            "62",
            "63",
            "64",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "761",
            "762",
            "763",
            "764",
            "765"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 17
            },
            "start": {
              "column": 12,
              "line": 17
            }
          }
        },
        {
          "id": "1525",
          "mutatorName": "EqualityOperator",
          "replacement": "type !== \"vote\"",
          "statusReason": "Snapshot `Game Over History Record Action Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "36"
          ],
          "coveredBy": [
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61",
            "62",
            "63",
            "64",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "761",
            "762",
            "763",
            "764",
            "765"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 17
            },
            "start": {
              "column": 12,
              "line": 17
            }
          }
        },
        {
          "id": "1526",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "composables/api/game/game-history-record/useGameHistoryRecord.ts(17,12): error TS2367: This comparison appears to be unintentional because the types '\"no-action\" | \"vote\" | \"target\" | \"choose-card\" | \"choose-side\" | \"request-another-vote\" | \"bury-dead-bodies\"' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61",
            "62",
            "63",
            "64",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "761",
            "762",
            "763",
            "764",
            "765"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 17
            },
            "start": {
              "column": 21,
              "line": 17
            }
          }
        },
        {
          "id": "1527",
          "mutatorName": "BooleanLiteral",
          "replacement": "votes",
          "statusReason": "composables/api/game/game-history-record/useGameHistoryRecord.ts(17,5): error TS2322: Type 'boolean | GameHistoryRecordPlayVote[]' is not assignable to type 'boolean'.\n  Type 'GameHistoryRecordPlayVote[]' is not assignable to type 'boolean'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61",
            "62",
            "63",
            "64",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "761",
            "765"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 17
            },
            "start": {
              "column": 31,
              "line": 17
            }
          }
        },
        {
          "id": "1528",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 35,
          "static": false,
          "killedBy": [
            "762"
          ],
          "coveredBy": [
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "62",
            "63",
            "64",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "762",
            "763",
            "764",
            "765"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 18
            },
            "start": {
              "column": 7,
              "line": 18
            }
          }
        },
        {
          "id": "1529",
          "mutatorName": "LogicalOperator",
          "replacement": "type === \"target\" || !targets",
          "statusReason": "expected 'components.GameOverHistoryRecordActio…' to be 'components.GameOverHistoryRecordActio…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "38"
          ],
          "coveredBy": [
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "62",
            "63",
            "64",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "762",
            "763",
            "764",
            "765"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 18
            },
            "start": {
              "column": 7,
              "line": 18
            }
          }
        },
        {
          "id": "1530",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected '/svg/game/player/player-attribute/pow…' to be '/svg/misc/people.svg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 33,
          "static": false,
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "62",
            "63",
            "64",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "762",
            "763",
            "764",
            "765"
          ],
          "location": {
            "end": {
              "column": 24,
              "line": 18
            },
            "start": {
              "column": 7,
              "line": 18
            }
          }
        },
        {
          "id": "1531",
          "mutatorName": "EqualityOperator",
          "replacement": "type !== \"target\"",
          "statusReason": "expected '/svg/game/player/player-attribute/pow…' to be '/svg/misc/people.svg' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 33,
          "static": false,
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "62",
            "63",
            "64",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "762",
            "763",
            "764",
            "765"
          ],
          "location": {
            "end": {
              "column": 24,
              "line": 18
            },
            "start": {
              "column": 7,
              "line": 18
            }
          }
        },
        {
          "id": "1532",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "composables/api/game/game-history-record/useGameHistoryRecord.ts(18,7): error TS2367: This comparison appears to be unintentional because the types '\"no-action\" | \"vote\" | \"target\" | \"choose-card\" | \"choose-side\" | \"request-another-vote\" | \"bury-dead-bodies\"' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "62",
            "63",
            "64",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "762",
            "763",
            "764",
            "765"
          ],
          "location": {
            "end": {
              "column": 24,
              "line": 18
            },
            "start": {
              "column": 16,
              "line": 18
            }
          }
        },
        {
          "id": "1533",
          "mutatorName": "BooleanLiteral",
          "replacement": "targets",
          "statusReason": "composables/api/game/game-history-record/useGameHistoryRecord.ts(17,5): error TS2322: Type 'boolean | GameHistoryRecordPlayTarget[]' is not assignable to type 'boolean'.\n  Type 'GameHistoryRecordPlayTarget[]' is not assignable to type 'boolean'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "62",
            "64",
            "493",
            "762",
            "765"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 18
            },
            "start": {
              "column": 28,
              "line": 18
            }
          }
        },
        {
          "id": "1534",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 43,
          "static": false,
          "killedBy": [
            "763"
          ],
          "coveredBy": [
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "62",
            "63",
            "64",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "763",
            "764",
            "765"
          ],
          "location": {
            "end": {
              "column": 84,
              "line": 19
            },
            "start": {
              "column": 9,
              "line": 19
            }
          }
        },
        {
          "id": "1535",
          "mutatorName": "LogicalOperator",
          "replacement": "type === \"request-another-vote\" || didJudgeRequestAnotherVote === undefined",
          "statusReason": "expected 'components.GameOverHistoryRecordActio…' to be 'components.GameOverHistoryRecordActio…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "38"
          ],
          "coveredBy": [
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "62",
            "63",
            "64",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "763",
            "764",
            "765"
          ],
          "location": {
            "end": {
              "column": 84,
              "line": 19
            },
            "start": {
              "column": 9,
              "line": 19
            }
          }
        },
        {
          "id": "1536",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "765"
          ],
          "coveredBy": [
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "62",
            "63",
            "64",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "763",
            "764",
            "765"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 19
            },
            "start": {
              "column": 9,
              "line": 19
            }
          }
        },
        {
          "id": "1537",
          "mutatorName": "EqualityOperator",
          "replacement": "type !== \"request-another-vote\"",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "763"
          ],
          "coveredBy": [
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "62",
            "63",
            "64",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "763",
            "764",
            "765"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 19
            },
            "start": {
              "column": 9,
              "line": 19
            }
          }
        },
        {
          "id": "1538",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "composables/api/game/game-history-record/useGameHistoryRecord.ts(19,9): error TS2367: This comparison appears to be unintentional because the types '\"no-action\" | \"vote\" | \"target\" | \"choose-card\" | \"choose-side\" | \"request-another-vote\" | \"bury-dead-bodies\"' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "62",
            "63",
            "64",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "763",
            "764",
            "765"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 19
            },
            "start": {
              "column": 18,
              "line": 19
            }
          }
        },
        {
          "id": "1539",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "765"
          ],
          "coveredBy": [
            "763",
            "765"
          ],
          "location": {
            "end": {
              "column": 84,
              "line": 19
            },
            "start": {
              "column": 44,
              "line": 19
            }
          }
        },
        {
          "id": "1540",
          "mutatorName": "EqualityOperator",
          "replacement": "didJudgeRequestAnotherVote !== undefined",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "763"
          ],
          "coveredBy": [
            "763",
            "765"
          ],
          "location": {
            "end": {
              "column": 84,
              "line": 19
            },
            "start": {
              "column": 44,
              "line": 19
            }
          }
        },
        {
          "id": "1541",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 35,
          "static": false,
          "killedBy": [
            "764"
          ],
          "coveredBy": [
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "62",
            "63",
            "64",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "764",
            "765"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 20
            },
            "start": {
              "column": 11,
              "line": 20
            }
          }
        },
        {
          "id": "1542",
          "mutatorName": "LogicalOperator",
          "replacement": "type === \"choose-card\" || !chosenCard",
          "statusReason": "expected 'components.GameOverHistoryRecordActio…' to be 'components.GameOverHistoryRecordActio…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "38"
          ],
          "coveredBy": [
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "62",
            "63",
            "64",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "764",
            "765"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 20
            },
            "start": {
              "column": 11,
              "line": 20
            }
          }
        },
        {
          "id": "1543",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'components.GameOverHistoryRecordActio…' to be 'components.GameOverHistoryRecordActio…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "38"
          ],
          "coveredBy": [
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "62",
            "63",
            "64",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "764",
            "765"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 20
            },
            "start": {
              "column": 11,
              "line": 20
            }
          }
        },
        {
          "id": "1544",
          "mutatorName": "EqualityOperator",
          "replacement": "type !== \"choose-card\"",
          "statusReason": "expected 'components.GameOverHistoryRecordActio…' to be 'components.GameOverHistoryRecordActio…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "38"
          ],
          "coveredBy": [
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "62",
            "63",
            "64",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "764",
            "765"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 20
            },
            "start": {
              "column": 11,
              "line": 20
            }
          }
        },
        {
          "id": "1545",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "composables/api/game/game-history-record/useGameHistoryRecord.ts(20,11): error TS2367: This comparison appears to be unintentional because the types '\"no-action\" | \"vote\" | \"target\" | \"choose-card\" | \"choose-side\" | \"request-another-vote\" | \"bury-dead-bodies\"' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "62",
            "63",
            "64",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "764",
            "765"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 20
            },
            "start": {
              "column": 20,
              "line": 20
            }
          }
        },
        {
          "id": "1546",
          "mutatorName": "BooleanLiteral",
          "replacement": "chosenCard",
          "statusReason": "composables/api/game/game-history-record/useGameHistoryRecord.ts(17,5): error TS2322: Type 'boolean | GameAdditionalCard | undefined' is not assignable to type 'boolean'.\n  Type 'undefined' is not assignable to type 'boolean'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "495",
            "764",
            "765"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 20
            },
            "start": {
              "column": 37,
              "line": 20
            }
          }
        },
        {
          "id": "1547",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "composables/api/game/game-history-record/useGameHistoryRecord.ts(22,3): error TS2741: Property 'didSourceSkipped' is missing in type '{}' but required in type 'UseGameHistoryRecord'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61",
            "62",
            "63",
            "64",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "761",
            "762",
            "763",
            "764",
            "765"
          ],
          "location": {
            "end": {
              "column": 30,
              "line": 22
            },
            "start": {
              "column": 10,
              "line": 22
            }
          }
        }
      ],
      "source": "import type { GameHistoryRecord } from \"~/composables/api/game/types/game-history-record/game-history-record.class\";\n\ntype UseGameHistoryRecord = {\n  didSourceSkipped: (gameHistoryRecord: GameHistoryRecord) => boolean;\n};\n\nfunction useGameHistoryRecord(): UseGameHistoryRecord {\n  function didSourceSkipped(gameHistoryRecord: GameHistoryRecord): boolean {\n    const {\n      type,\n      votes,\n      targets,\n      didJudgeRequestAnotherVote,\n      chosenCard,\n    } = gameHistoryRecord.play;\n\n    return type === \"vote\" && !votes ||\n      type === \"target\" && !targets ||\n        type === \"request-another-vote\" && didJudgeRequestAnotherVote === undefined ||\n          type === \"choose-card\" && !chosenCard;\n  }\n  return { didSourceSkipped };\n}\n\nexport { useGameHistoryRecord };"
    },
    "composables/api/game/game-phase/useGamePhase.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1548",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/game-phase/useGamePhase.ts(7,26): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "957",
            "958",
            "959",
            "983",
            "1105"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 16
            },
            "start": {
              "column": 39,
              "line": 7
            }
          }
        },
        {
          "id": "1549",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/game-phase/useGamePhase.ts(10,74): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "957",
            "958",
            "959",
            "983",
            "1105"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 14
            },
            "start": {
              "column": 81,
              "line": 10
            }
          }
        },
        {
          "id": "1550",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Playground Header Phase > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "957"
          ],
          "coveredBy": [
            "957",
            "958",
            "959",
            "983",
            "1105"
          ],
          "location": {
            "end": {
              "column": 53,
              "line": 11
            },
            "start": {
              "column": 25,
              "line": 11
            }
          }
        },
        {
          "id": "1551",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Playground Header Phase > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "957"
          ],
          "coveredBy": [
            "957",
            "958",
            "959",
            "983",
            "1105"
          ],
          "location": {
            "end": {
              "column": 34,
              "line": 13
            },
            "start": {
              "column": 12,
              "line": 13
            }
          }
        },
        {
          "id": "1552",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "composables/api/game/game-phase/useGamePhase.ts(15,3): error TS2741: Property 'getGamePhaseWithTurnText' is missing in type '{}' but required in type 'UseGamePhase'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "957",
            "958",
            "959",
            "983",
            "1105"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 15
            },
            "start": {
              "column": 10,
              "line": 15
            }
          }
        }
      ],
      "source": "import type { GamePhaseName } from \"~/composables/api/game/types/game-phase/game-phase.types\";\n\ntype UseGamePhase = {\n  getGamePhaseWithTurnText: (phase: GamePhaseName, turn: number) => string;\n};\n\nfunction useGamePhase(): UseGamePhase {\n  const { t } = useI18n();\n\n  function getGamePhaseWithTurnText(phase: GamePhaseName, turn: number): string {\n    const phaseText = t(`shared.game.phase.${phase}`);\n\n    return `${phaseText} ${turn}`;\n  }\n  return { getGamePhaseWithTurnText };\n}\n\nexport { useGamePhase };"
    },
    "composables/api/game/game-play/useCurrentGamePlay.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1553",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/game-play/useCurrentGamePlay.ts(11,47): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "665",
            "666",
            "667",
            "668",
            "669",
            "678",
            "679",
            "680",
            "681",
            "682",
            "837",
            "838"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 23
            },
            "start": {
              "column": 66,
              "line": 11
            }
          }
        },
        {
          "id": "1554",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/game-play/useCurrentGamePlay.ts(12,104): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "665",
            "666",
            "667",
            "668",
            "669",
            "678",
            "679",
            "680",
            "681",
            "682",
            "837",
            "838"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 21
            },
            "start": {
              "column": 125,
              "line": 12
            }
          }
        },
        {
          "id": "1555",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "composables/api/game/game-play/useCurrentGamePlay.ts(16,25): error TS18047: 'game.value.currentPlay' is possibly 'null'.\ncomposables/api/game/game-play/useCurrentGamePlay.ts(16,25): error TS18048: 'game.value.currentPlay.source.interactions' is possibly 'undefined'.\ncomposables/api/game/game-play/useCurrentGamePlay.ts(20,12): error TS18048: 'interaction' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "665",
            "666",
            "667",
            "668",
            "669",
            "678",
            "679",
            "680",
            "681",
            "682",
            "837",
            "838"
          ],
          "location": {
            "end": {
              "column": 66,
              "line": 13
            },
            "start": {
              "column": 9,
              "line": 13
            }
          }
        },
        {
          "id": "1556",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "composables/api/game/game-play/useCurrentGamePlay.ts(16,25): error TS18047: 'game.value.currentPlay' is possibly 'null'.\ncomposables/api/game/game-play/useCurrentGamePlay.ts(16,25): error TS18048: 'game.value.currentPlay.source.interactions' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "665",
            "666",
            "667",
            "668",
            "669",
            "678",
            "679",
            "680",
            "681",
            "682",
            "837",
            "838"
          ],
          "location": {
            "end": {
              "column": 66,
              "line": 13
            },
            "start": {
              "column": 9,
              "line": 13
            }
          }
        },
        {
          "id": "1557",
          "mutatorName": "EqualityOperator",
          "replacement": "game.value.currentPlay?.source.interactions !== undefined",
          "statusReason": "composables/api/game/game-play/useCurrentGamePlay.ts(16,25): error TS18047: 'game.value.currentPlay' is possibly 'null'.\ncomposables/api/game/game-play/useCurrentGamePlay.ts(16,25): error TS18048: 'game.value.currentPlay.source.interactions' is possibly 'undefined'.\ncomposables/api/game/game-play/useCurrentGamePlay.ts(16,76): error TS7031: Binding element 'type' implicitly has an 'any' type.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "665",
            "666",
            "667",
            "668",
            "669",
            "678",
            "679",
            "680",
            "681",
            "682",
            "837",
            "838"
          ],
          "location": {
            "end": {
              "column": 66,
              "line": 13
            },
            "start": {
              "column": 9,
              "line": 13
            }
          }
        },
        {
          "id": "1558",
          "mutatorName": "OptionalChaining",
          "replacement": "game.value.currentPlay.source",
          "statusReason": "composables/api/game/game-play/useCurrentGamePlay.ts(13,9): error TS18047: 'game.value.currentPlay' is possibly 'null'.\ncomposables/api/game/game-play/useCurrentGamePlay.ts(16,25): error TS18047: 'game.value.currentPlay' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "665",
            "666",
            "667",
            "668",
            "669",
            "678",
            "679",
            "680",
            "681",
            "682",
            "837",
            "838"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 13
            },
            "start": {
              "column": 9,
              "line": 13
            }
          }
        },
        {
          "id": "1559",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/game-play/useCurrentGamePlay.ts(14,25): error TS18047: 'game.value.currentPlay' is possibly 'null'.\ncomposables/api/game/game-play/useCurrentGamePlay.ts(14,25): error TS18048: 'game.value.currentPlay.source.interactions' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "666",
            "667",
            "678",
            "679",
            "680",
            "681",
            "682",
            "837"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 15
            },
            "start": {
              "column": 68,
              "line": 13
            }
          }
        },
        {
          "id": "1560",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Witch Use Potions Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "214"
          ],
          "coveredBy": [
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "665",
            "666",
            "667",
            "668",
            "669",
            "679",
            "682",
            "837",
            "838"
          ],
          "location": {
            "end": {
              "column": 111,
              "line": 16
            },
            "start": {
              "column": 73,
              "line": 16
            }
          }
        },
        {
          "id": "1561",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Witch Use Potions Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "214"
          ],
          "coveredBy": [
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "665",
            "666",
            "667",
            "668",
            "669",
            "679",
            "682",
            "837",
            "838"
          ],
          "location": {
            "end": {
              "column": 111,
              "line": 16
            },
            "start": {
              "column": 87,
              "line": 16
            }
          }
        },
        {
          "id": "1562",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Snapshot `Witch Use Potions Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "214"
          ],
          "coveredBy": [
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "665",
            "666",
            "667",
            "668",
            "669",
            "679",
            "682",
            "837",
            "838"
          ],
          "location": {
            "end": {
              "column": 111,
              "line": 16
            },
            "start": {
              "column": 87,
              "line": 16
            }
          }
        },
        {
          "id": "1563",
          "mutatorName": "EqualityOperator",
          "replacement": "type !== interactionType",
          "statusReason": "Snapshot `Witch Use Potions Tab View Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "214"
          ],
          "coveredBy": [
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "665",
            "666",
            "667",
            "668",
            "669",
            "679",
            "682",
            "837",
            "838"
          ],
          "location": {
            "end": {
              "column": 111,
              "line": 16
            },
            "start": {
              "column": 87,
              "line": 16
            }
          }
        },
        {
          "id": "1564",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "composables/api/game/game-play/useCurrentGamePlay.ts(20,12): error TS18048: 'interaction' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "665",
            "666",
            "667",
            "668",
            "669",
            "679",
            "682",
            "837",
            "838"
          ],
          "location": {
            "end": {
              "column": 34,
              "line": 17
            },
            "start": {
              "column": 9,
              "line": 17
            }
          }
        },
        {
          "id": "1565",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "composables/api/game/game-play/useCurrentGamePlay.ts(20,12): error TS18048: 'interaction' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "665",
            "666",
            "667",
            "668",
            "669",
            "679",
            "682",
            "837",
            "838"
          ],
          "location": {
            "end": {
              "column": 34,
              "line": 17
            },
            "start": {
              "column": 9,
              "line": 17
            }
          }
        },
        {
          "id": "1566",
          "mutatorName": "EqualityOperator",
          "replacement": "interaction !== undefined",
          "statusReason": "composables/api/game/game-play/useCurrentGamePlay.ts(20,12): error TS18048: 'interaction' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "665",
            "666",
            "667",
            "668",
            "669",
            "679",
            "682",
            "837",
            "838"
          ],
          "location": {
            "end": {
              "column": 34,
              "line": 17
            },
            "start": {
              "column": 9,
              "line": 17
            }
          }
        },
        {
          "id": "1567",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/game-play/useCurrentGamePlay.ts(18,12): error TS18048: 'interaction' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "546",
            "665",
            "666",
            "667",
            "668",
            "669",
            "837"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 19
            },
            "start": {
              "column": 36,
              "line": 17
            }
          }
        },
        {
          "id": "1568",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "composables/api/game/game-play/useCurrentGamePlay.ts(22,3): error TS2741: Property 'getEligibleTargetsWithInteractionInCurrentGamePlay' is missing in type '{}' but required in type 'UseCurrentGamePlay'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "665",
            "666",
            "667",
            "668",
            "669",
            "678",
            "679",
            "680",
            "681",
            "682",
            "837",
            "838"
          ],
          "location": {
            "end": {
              "column": 64,
              "line": 22
            },
            "start": {
              "column": 10,
              "line": 22
            }
          }
        }
      ],
      "source": "import type { Ref } from \"vue\";\n\nimport type { Game } from \"~/composables/api/game/types/game.class\";\nimport type { PlayerInteractionType } from \"~/composables/api/game/types/players/player-interaction/player-interaction.types\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\n\ntype UseCurrentGamePlay = {\n  getEligibleTargetsWithInteractionInCurrentGamePlay: (interaction: PlayerInteractionType) => Player[] | undefined;\n};\n\nfunction useCurrentGamePlay(game: Ref<Game>): UseCurrentGamePlay {\n  function getEligibleTargetsWithInteractionInCurrentGamePlay(interactionType: PlayerInteractionType): Player[] | undefined {\n    if (game.value.currentPlay?.source.interactions === undefined) {\n      return undefined;\n    }\n    const interaction = game.value.currentPlay.source.interactions.find(({ type }) => type === interactionType);\n    if (interaction === undefined) {\n      return undefined;\n    }\n    return interaction.eligibleTargets;\n  }\n  return { getEligibleTargetsWithInteractionInCurrentGamePlay };\n}\n\nexport { useCurrentGamePlay };"
    },
    "composables/api/game/types/game-additional-card/game-additional-card.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1569",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-additional-card/game-additional-card.class.ts(20,65): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "495",
            "948",
            "1066"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 22
            },
            "start": {
              "column": 84,
              "line": 20
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport type { GameAdditionalCardRecipientRoleName } from \"~/composables/api/game/types/game-additional-card/game-additional-card.types\";\nimport type { RoleName } from \"~/composables/api/role/types/role.types\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass GameAdditionalCard {\n  @Expose()\n  public _id: string;\n\n  @Expose()\n  public roleName: RoleName;\n\n  @Expose()\n  public recipient: GameAdditionalCardRecipientRoleName;\n\n  @Expose()\n  public isUsed: boolean;\n\n  public static create(gameAdditionalCard: GameAdditionalCard): GameAdditionalCard {\n    return plainToInstance(GameAdditionalCard, gameAdditionalCard, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { GameAdditionalCard };"
    },
    "composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-source/game-history-record-play-source.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1570",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-source/game-history-record-play-source.class.ts(20,83): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "244",
            "246",
            "247",
            "248",
            "249",
            "250",
            "251",
            "252",
            "253",
            "254",
            "390",
            "391",
            "392",
            "490",
            "491",
            "493",
            "494",
            "495",
            "496",
            "538",
            "540",
            "541",
            "542",
            "551",
            "552",
            "553",
            "575",
            "576",
            "870",
            "884",
            "908",
            "948",
            "951",
            "984",
            "1049"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 22
            },
            "start": {
              "column": 111,
              "line": 20
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\n\nimport { GamePlaySourceInteraction } from \"~/composables/api/game/types/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction.class\";\nimport type { GamePlaySourceName } from \"~/composables/api/game/types/game-play/game-play-source/game-play-source.types\";\nimport { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass GameHistoryRecordPlaySource {\n  @Expose()\n  public name: GamePlaySourceName;\n\n  @Expose()\n  @Type(() => Player)\n  public players: Player[];\n\n  @Expose()\n  @Type(() => GamePlaySourceInteraction)\n  public interactions?: GamePlaySourceInteraction[];\n\n  public static create(gameHistoryRecordPlaySource: GameHistoryRecordPlaySource): GameHistoryRecordPlaySource {\n    return plainToInstance(GameHistoryRecordPlaySource, gameHistoryRecordPlaySource, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { GameHistoryRecordPlaySource };"
    },
    "composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-target/game-history-record-play-target.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1571",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-target/game-history-record-play-target.class.ts(15,83): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "493",
            "538",
            "540",
            "541",
            "542",
            "590",
            "591",
            "592",
            "593",
            "594",
            "595",
            "948",
            "1055"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 17
            },
            "start": {
              "column": 111,
              "line": 15
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\n\nimport type { WitchPotion } from \"~/composables/api/game/types/game-play/game-play.types\";\nimport { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass GameHistoryRecordPlayTarget {\n  @Expose()\n  @Type(() => Player)\n  public player: Player;\n\n  @Expose()\n  public drankPotion?: WitchPotion;\n\n  public static create(gameHistoryRecordPlayTarget: GameHistoryRecordPlayTarget): GameHistoryRecordPlayTarget {\n    return plainToInstance(GameHistoryRecordPlayTarget, gameHistoryRecordPlayTarget, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { GameHistoryRecordPlayTarget };"
    },
    "composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-vote/game-history-record-play-vote.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1572",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-vote/game-history-record-play-vote.class.ts(15,79): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "948",
            "1056"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 17
            },
            "start": {
              "column": 105,
              "line": 15
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\n\nimport { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass GameHistoryRecordPlayVote {\n  @Expose()\n  @Type(() => Player)\n  public source: Player;\n\n  @Expose()\n  @Type(() => Player)\n  public target: Player;\n\n  public static create(gameHistoryRecordPlayVote: GameHistoryRecordPlayVote): GameHistoryRecordPlayVote {\n    return plainToInstance(GameHistoryRecordPlayVote, gameHistoryRecordPlayVote, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { GameHistoryRecordPlayVote };"
    },
    "composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-voting/game-history-record-play-voting.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1573",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-voting/game-history-record-play-voting.class.ts(15,83): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\ncomposables/api/useWerewolvesAssistantApi.ts(21,3): error TS2321: Excessive stack depth comparing types 'Exclude<R extends \"/__nuxt_error\" ? { key: \"/__nuxt_error\"; exact: true; score: []; catchAll: false; } : { key: \"/__nuxt_error\"; exact: false; score: `${R}/` extends `${infer RouteSeg}/${infer RouteRest}` ? `${RouteSeg}?` extends `${infer RouteSegWithoutQuery}?${string}` ? RouteSegWithoutQuery extends \"\" ? `${RouteR...' and '{ score: MaxTuple<((R extends \"/__nuxt_error\" ? { key: \"/__nuxt_error\"; exact: true; score: []; catchAll: false; } : { key: \"/__nuxt_error\"; exact: false; score: `${R}/` extends `${infer RouteSeg}/${infer RouteRest}` ? `${RouteSeg}?` extends `${infer RouteSegWithoutQuery}?${string}` ? RouteSegWithoutQuery extends \"\"...'.\ncomposables/api/useWerewolvesAssistantApi.ts(21,3): error TS2321: Excessive stack depth comparing types 'Exclude<{ key: \"/__nuxt_error\"; exact: false; score: `${R}/` extends `${infer RouteSeg}/${infer RouteRest}` ? `${RouteSeg}?` extends `${infer RouteSegWithoutQuery}?${string}` ? RouteSegWithoutQuery extends \"\" ? `${RouteRest}/` extends `${infer RouteSeg}/${infer RouteRest}` ? `${RouteSeg}?` extends `${infer RouteSegW...' and '{ score: MaxTuple<((R extends \"/__nuxt_error\" ? { key: \"/__nuxt_error\"; exact: true; score: []; catchAll: false; } : { key: \"/__nuxt_error\"; exact: false; score: `${R}/` extends `${infer RouteSeg}/${infer RouteRest}` ? `${RouteSeg}?` extends `${infer RouteSegWithoutQuery}?${string}` ? RouteSegWithoutQuery extends \"\"...'.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "551",
            "553",
            "948",
            "1043"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 17
            },
            "start": {
              "column": 111,
              "line": 15
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\n\nimport type { GameHistoryRecordPlayVotingResult } from \"~/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-voting/game-history-record-play-voting.types\";\nimport { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass GameHistoryRecordPlayVoting {\n  @Expose()\n  public result: GameHistoryRecordPlayVotingResult;\n\n  @Expose()\n  @Type(() => Player)\n  public nominatedPlayers?: Player[];\n\n  public static create(gameHistoryRecordPlayVoting: GameHistoryRecordPlayVoting): GameHistoryRecordPlayVoting {\n    return plainToInstance(GameHistoryRecordPlayVoting, gameHistoryRecordPlayVoting, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { GameHistoryRecordPlayVoting };"
    },
    "composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1574",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play.class.ts(48,71): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "244",
            "246",
            "247",
            "248",
            "249",
            "250",
            "251",
            "252",
            "253",
            "254",
            "390",
            "391",
            "392",
            "490",
            "491",
            "493",
            "494",
            "495",
            "496",
            "538",
            "540",
            "541",
            "542",
            "551",
            "552",
            "553",
            "575",
            "576",
            "870",
            "884",
            "908",
            "948",
            "951",
            "984"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 50
            },
            "start": {
              "column": 93,
              "line": 48
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\n\nimport { GameAdditionalCard } from \"~/composables/api/game/types/game-additional-card/game-additional-card.class\";\nimport { GameHistoryRecordPlaySource } from \"~/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-source/game-history-record-play-source.class\";\nimport { GameHistoryRecordPlayTarget } from \"~/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-target/game-history-record-play-target.class\";\nimport { GameHistoryRecordPlayVote } from \"~/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-vote/game-history-record-play-vote.class\";\nimport { GameHistoryRecordPlayVoting } from \"~/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-voting/game-history-record-play-voting.class\";\nimport type { GamePlayAction, GamePlayCause, GamePlayType } from \"~/composables/api/game/types/game-play/game-play.types\";\nimport type { RoleSide } from \"~/composables/api/role/types/role.types\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass GameHistoryRecordPlay {\n  @Expose()\n  public type: GamePlayType;\n\n  @Expose()\n  public action: GamePlayAction;\n\n  @Expose()\n  @Type(() => GameHistoryRecordPlaySource)\n  public source: GameHistoryRecordPlaySource;\n\n  @Expose()\n  public cause?: GamePlayCause;\n\n  @Expose()\n  @Type(() => GameHistoryRecordPlayTarget)\n  public targets?: GameHistoryRecordPlayTarget[];\n\n  @Expose()\n  @Type(() => GameHistoryRecordPlayVote)\n  public votes?: GameHistoryRecordPlayVote[];\n\n  @Expose()\n  @Type(() => GameHistoryRecordPlayVoting)\n  public voting?: GameHistoryRecordPlayVoting;\n\n  @Expose()\n  public didJudgeRequestAnotherVote?: boolean;\n\n  @Expose()\n  @Type(() => GameAdditionalCard)\n  public chosenCard?: GameAdditionalCard;\n\n  @Expose()\n  public chosenSide?: RoleSide;\n\n  public static create(gameHistoryRecordPlay: GameHistoryRecordPlay): GameHistoryRecordPlay {\n    return plainToInstance(GameHistoryRecordPlay, gameHistoryRecordPlay, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { GameHistoryRecordPlay };"
    },
    "composables/api/game/types/game-history-record/game-history-record.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1575",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-history-record/game-history-record.class.ts(40,63): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "244",
            "246",
            "247",
            "248",
            "249",
            "250",
            "251",
            "252",
            "253",
            "254",
            "390",
            "391",
            "392",
            "490",
            "491",
            "493",
            "494",
            "495",
            "496",
            "538",
            "540",
            "541",
            "542",
            "551",
            "552",
            "553",
            "575",
            "576",
            "870",
            "884",
            "908",
            "951",
            "984"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 42
            },
            "start": {
              "column": 81,
              "line": 40
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\n\nimport { GameHistoryRecordPlay } from \"~/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play.class\";\nimport { GamePhase } from \"~/composables/api/game/types/game-phase/game-phase.class\";\nimport { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass GameHistoryRecord {\n  @Expose()\n  public _id: string;\n\n  @Expose()\n  public gameId: string;\n\n  @Expose()\n  public turn: number;\n\n  @Type(() => GamePhase)\n  @Expose()\n  public phase: GamePhase;\n\n  @Expose()\n  public tick: number;\n\n  @Expose()\n  @Type(() => GameHistoryRecordPlay)\n  public play: GameHistoryRecordPlay;\n\n  @Expose()\n  @Type(() => Player)\n  public revealedPlayers?: Player[];\n\n  @Expose()\n  @Type(() => Player)\n  public deadPlayers?: Player[];\n\n  @Expose()\n  public createdAt: Date;\n\n  public static create(gameHistoryRecord: GameHistoryRecord): GameHistoryRecord {\n    return plainToInstance(GameHistoryRecord, gameHistoryRecord, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { GameHistoryRecord };"
    },
    "composables/api/game/types/game-phase/game-phase.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1604",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-phase/game-phase.class.ts(12,47): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "108",
            "109",
            "244",
            "246",
            "247",
            "248",
            "249",
            "250",
            "251",
            "252",
            "253",
            "254",
            "373",
            "374",
            "390",
            "391",
            "392",
            "409",
            "411",
            "412",
            "413",
            "465",
            "466",
            "467",
            "468",
            "490",
            "491",
            "493",
            "494",
            "495",
            "496",
            "538",
            "540",
            "541",
            "542",
            "551",
            "552",
            "553",
            "575",
            "576",
            "850",
            "852",
            "854",
            "856",
            "870",
            "884",
            "908",
            "951",
            "984",
            "994",
            "1100"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 14
            },
            "start": {
              "column": 57,
              "line": 12
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\nimport type { GamePhaseName } from \"~/composables/api/game/types/game-phase/game-phase.types\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass GamePhase {\n  @Expose()\n  public name: GamePhaseName;\n\n  @Expose()\n  public tick: number;\n\n  public static create(gamePhase: GamePhase): GamePhase {\n    return plainToInstance(GamePhase, gamePhase, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { GamePhase };"
    },
    "composables/api/game/types/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction-boundaries/game-play-source-interaction-boundaries.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1605",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction-boundaries/game-play-source-interaction-boundaries.class.ts(12,99): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\ncomposables/api/useWerewolvesAssistantApi.ts(21,3): error TS2321: Excessive stack depth comparing types 'Exclude<R extends \"/__nuxt_error\" ? { key: \"/__nuxt_error\"; exact: true; score: []; catchAll: false; } : { key: \"/__nuxt_error\"; exact: false; score: `${R}/` extends `${infer RouteSeg}/${infer RouteRest}` ? `${RouteSeg}?` extends `${infer RouteSegWithoutQuery}?${string}` ? RouteSegWithoutQuery extends \"\" ? `${RouteR...' and '{ score: MaxTuple<((R extends \"/__nuxt_error\" ? { key: \"/__nuxt_error\"; exact: true; score: []; catchAll: false; } : { key: \"/__nuxt_error\"; exact: false; score: `${R}/` extends `${infer RouteSeg}/${infer RouteRest}` ? `${RouteSeg}?` extends `${infer RouteSegWithoutQuery}?${string}` ? RouteSegWithoutQuery extends \"\"...'.\ncomposables/api/useWerewolvesAssistantApi.ts(21,3): error TS2321: Excessive stack depth comparing types 'Exclude<{ key: \"/__nuxt_error\"; exact: false; score: `${R}/` extends `${infer RouteSeg}/${infer RouteRest}` ? `${RouteSeg}?` extends `${infer RouteSegWithoutQuery}?${string}` ? RouteSegWithoutQuery extends \"\" ? `${RouteRest}/` extends `${infer RouteSeg}/${infer RouteRest}` ? `${RouteSeg}?` extends `${infer RouteSegW...' and '{ score: MaxTuple<((R extends \"/__nuxt_error\" ? { key: \"/__nuxt_error\"; exact: true; score: []; catchAll: false; } : { key: \"/__nuxt_error\"; exact: false; score: `${R}/` extends `${infer RouteSeg}/${infer RouteRest}` ? `${RouteSeg}?` extends `${infer RouteSegWithoutQuery}?${string}` ? RouteSegWithoutQuery extends \"\"...'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "1060"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 14
            },
            "start": {
              "column": 135,
              "line": 12
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass GamePlaySourceInteractionBoundaries {\n  @Expose()\n  public min: number;\n\n  @Expose()\n  public max: number;\n\n  public static create(gamePlaySourceInteractionBoundaries: GamePlaySourceInteractionBoundaries): GamePlaySourceInteractionBoundaries {\n    return plainToInstance(GamePlaySourceInteractionBoundaries, gamePlaySourceInteractionBoundaries, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { GamePlaySourceInteractionBoundaries };"
    },
    "composables/api/game/types/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1606",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction.class.ts(25,79): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "1022"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 27
            },
            "start": {
              "column": 105,
              "line": 25
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport type { PlayerInteractionType } from \"~/composables/api/game/types/players/player-interaction/player-interaction.types\";\nimport { GamePlaySourceInteractionBoundaries } from \"~/composables/api/game/types/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction-boundaries/game-play-source-interaction-boundaries.class\";\nimport type { GameSource } from \"~/composables/api/game/types/game.types\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass GamePlaySourceInteraction {\n  @Expose()\n  public source: GameSource;\n\n  @Expose()\n  public type: PlayerInteractionType;\n\n  @Expose()\n  public eligibleTargets: Player[];\n\n  @Expose()\n  public boundaries: GamePlaySourceInteractionBoundaries;\n\n  @Expose()\n  public isInconsequential?: boolean;\n\n  public static create(gamePlaySourceInteraction: GamePlaySourceInteraction): GamePlaySourceInteraction {\n    return plainToInstance(GamePlaySourceInteraction, gamePlaySourceInteraction, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { GamePlaySourceInteraction };"
    },
    "composables/api/game/types/game-play/game-play-source/game-play-source.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1607",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-play/game-play-source/game-play-source.class.ts(20,57): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "71",
            "72",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "87",
            "108",
            "109",
            "215",
            "216",
            "217",
            "218",
            "221",
            "222",
            "223",
            "226",
            "232",
            "233",
            "234",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "545",
            "546",
            "547",
            "598",
            "599",
            "600",
            "602",
            "628",
            "629",
            "631",
            "632",
            "633",
            "634",
            "668",
            "669",
            "679",
            "680",
            "681",
            "682",
            "708",
            "709",
            "710",
            "711",
            "712",
            "728",
            "730",
            "847",
            "994",
            "1061",
            "1063"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 22
            },
            "start": {
              "column": 72,
              "line": 20
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\n\nimport type { GamePlaySourceName } from \"~/composables/api/game/types/game-play/game-play-source/game-play-source.types\";\nimport { GamePlaySourceInteraction } from \"~/composables/api/game/types/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction.class\";\nimport { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass GamePlaySource {\n  @Expose()\n  public name: GamePlaySourceName;\n\n  @Type(() => Player)\n  @Expose()\n  public players?: Player[];\n\n  @Type(() => GamePlaySourceInteraction)\n  @Expose()\n  public interactions?: GamePlaySourceInteraction[];\n\n  public static create(gamePlaySource: GamePlaySource): GamePlaySource {\n    return plainToInstance(GamePlaySource, gamePlaySource, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { GamePlaySource };"
    },
    "composables/api/game/types/game-play/game-play.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1608",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-play/game-play.class.ts(27,45): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "71",
            "72",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "87",
            "108",
            "109",
            "215",
            "216",
            "217",
            "218",
            "221",
            "222",
            "223",
            "226",
            "232",
            "233",
            "234",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "545",
            "546",
            "547",
            "598",
            "599",
            "600",
            "602",
            "628",
            "629",
            "631",
            "632",
            "633",
            "634",
            "668",
            "669",
            "679",
            "680",
            "681",
            "682",
            "708",
            "709",
            "710",
            "711",
            "712",
            "728",
            "730",
            "847",
            "994",
            "1061"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 29
            },
            "start": {
              "column": 54,
              "line": 27
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\n\nimport { GamePlaySource } from \"~/composables/api/game/types/game-play/game-play-source/game-play-source.class\";\nimport type { GamePlayAction, GamePlayCause, GamePlayOccurrence, GamePlayType } from \"~/composables/api/game/types/game-play/game-play.types\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass GamePlay {\n  @Expose()\n  public type: GamePlayType;\n\n  @Type(() => GamePlaySource)\n  @Expose()\n  public source: GamePlaySource;\n\n  @Expose()\n  public action: GamePlayAction;\n\n  @Expose()\n  public cause?: GamePlayCause;\n\n  @Expose()\n  public canBeSkipped?: boolean;\n\n  @Expose()\n  public occurrence: GamePlayOccurrence;\n\n  public static create(gamePlay: GamePlay): GamePlay {\n    return plainToInstance(GamePlay, gamePlay, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { GamePlay };"
    },
    "composables/api/game/types/game-victory/game-victory.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1609",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-victory/game-victory.class.ts(14,51): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "675",
            "929",
            "1070"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 16
            },
            "start": {
              "column": 63,
              "line": 14
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport type { GameVictoryTypes } from \"~/composables/api/game/types/game-victory/game-victory.types\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass GameVictory {\n  @Expose()\n  public type: GameVictoryTypes;\n\n  @Expose()\n  public winners?: Player[];\n\n  public static create(gameVictory: GameVictory): GameVictory {\n    return plainToInstance(GameVictory, gameVictory, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { GameVictory };"
    },
    "composables/api/game/types/game.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1610",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game.class.ts(54,37): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "108",
            "109",
            "373",
            "374",
            "409",
            "411",
            "412",
            "413",
            "465",
            "466",
            "467",
            "468",
            "850",
            "852",
            "854",
            "856",
            "994"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 56
            },
            "start": {
              "column": 42,
              "line": 54
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\n\nimport { GameOptions } from \"~/composables/api/game/types/game-options/game-options.class\";\nimport { GamePhase } from \"~/composables/api/game/types/game-phase/game-phase.class\";\nimport { GamePlay } from \"~/composables/api/game/types/game-play/game-play.class\";\nimport { GameVictory } from \"~/composables/api/game/types/game-victory/game-victory.class\";\nimport type { GameStatus } from \"~/composables/api/game/types/game.types\";\nimport { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass Game {\n  @Expose()\n  public _id: string;\n\n  @Expose()\n  public turn: number;\n\n  @Type(() => GamePhase)\n  @Expose()\n  public phase: GamePhase;\n\n  @Expose()\n  public tick: number;\n\n  @Expose()\n  public status: GameStatus;\n\n  @Type(() => Player)\n  @Expose()\n  public players: Player[];\n\n  @Type(() => GamePlay)\n  @Expose()\n  public currentPlay: GamePlay | null;\n\n  @Type(() => GamePlay)\n  @Expose()\n  public upcomingPlays: GamePlay[];\n\n  @Type(() => GameOptions)\n  @Expose()\n  public options: GameOptions;\n\n  @Type(() => GameVictory)\n  @Expose()\n  public victory?: GameVictory;\n\n  @Expose()\n  public createdAt: Date;\n\n  @Expose()\n  public updatedAt: Date;\n\n  public static create(game: Game): Game {\n    return plainToInstance(Game, game, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { Game };"
    },
    "composables/api/game/types/players/player-attribute/player-attribute-activation/player-attribute-activation.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1611",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/players/player-attribute/player-attribute-activation/player-attribute-activation.class.ts(13,79): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "1051",
            "1067"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 15
            },
            "start": {
              "column": 105,
              "line": 13
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\nimport type { GamePhaseName } from \"~/composables/api/game/types/game-phase/game-phase.types\";\n\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass PlayerAttributeActivation {\n  @Expose()\n  public turn: number;\n\n  @Expose()\n  public phaseName: GamePhaseName;\n\n  public static create(playerAttributeActivation: PlayerAttributeActivation): PlayerAttributeActivation {\n    return plainToInstance(PlayerAttributeActivation, playerAttributeActivation, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { PlayerAttributeActivation };"
    },
    "composables/api/game/types/players/player-attribute/player-attribute.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1612",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/players/player-attribute/player-attribute.class.ts(25,59): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "1023",
            "1051"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 27
            },
            "start": {
              "column": 75,
              "line": 25
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\n\nimport type { GameSource } from \"~/composables/api/game/types/game.types\";\nimport { PlayerAttributeActivation } from \"~/composables/api/game/types/players/player-attribute/player-attribute-activation/player-attribute-activation.class\";\nimport type { PlayerAttributeName } from \"~/composables/api/game/types/players/player-attribute/player-attribute.types\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass PlayerAttribute {\n  @Expose()\n  public name: PlayerAttributeName;\n\n  @Expose()\n  public source: GameSource;\n\n  @Expose()\n  public remainingPhases?: number;\n\n  @Type(() => PlayerAttributeActivation)\n  @Expose()\n  public activeAt?: PlayerAttributeActivation;\n\n  @Expose()\n  public doesRemainAfterDeath?: boolean;\n\n  public static create(playerAttribute: PlayerAttribute): PlayerAttribute {\n    return plainToInstance(PlayerAttribute, playerAttribute, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { PlayerAttribute };"
    },
    "composables/api/game/types/players/player-role/player-role.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1613",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/players/player-role/player-role.class.ts(16,52): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "75",
            "78",
            "215",
            "216",
            "217",
            "218",
            "221",
            "222",
            "223",
            "226",
            "493",
            "668",
            "669",
            "679",
            "682",
            "948",
            "984",
            "1022",
            "1023",
            "1043",
            "1049",
            "1055",
            "1056",
            "1063",
            "1070",
            "1082"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 18
            },
            "start": {
              "column": 63,
              "line": 16
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport type { RoleName } from \"~/composables/api/role/types/role.types\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass PlayerRole {\n  @Expose()\n  public original: RoleName;\n\n  @Expose()\n  public current: RoleName;\n\n  @Expose()\n  public isRevealed: boolean;\n\n  public static create(role: Partial<PlayerRole>): PlayerRole {\n    return plainToInstance(PlayerRole, role, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { PlayerRole };"
    },
    "composables/api/game/types/players/player-side/player-side.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1614",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/players/player-side/player-side.class.ts(13,52): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "75",
            "78",
            "215",
            "216",
            "217",
            "218",
            "221",
            "222",
            "223",
            "226",
            "493",
            "668",
            "669",
            "679",
            "682",
            "948",
            "984",
            "1022",
            "1023",
            "1043",
            "1049",
            "1055",
            "1056",
            "1063",
            "1070",
            "1092"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 15
            },
            "start": {
              "column": 63,
              "line": 13
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport type { RoleSide } from \"~/composables/api/role/types/role.types\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass PlayerSide {\n  @Expose()\n  public original: RoleSide;\n\n  @Expose()\n  public current: RoleSide;\n\n  public static create(side: Partial<PlayerSide>): PlayerSide {\n    return plainToInstance(PlayerSide, side, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { PlayerSide };"
    },
    "composables/api/game/types/players/player.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1615",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/players/player.class.ts(30,41): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "69",
            "74",
            "75",
            "77",
            "78",
            "82",
            "83",
            "159",
            "215",
            "216",
            "217",
            "218",
            "221",
            "222",
            "223",
            "226",
            "283",
            "284",
            "285",
            "286",
            "288",
            "290",
            "292",
            "293",
            "294",
            "295",
            "296",
            "297",
            "390",
            "465",
            "466",
            "467",
            "468",
            "493",
            "540",
            "551",
            "590",
            "591",
            "592",
            "593",
            "594",
            "595",
            "602",
            "668",
            "669",
            "679",
            "682",
            "730",
            "948",
            "984",
            "1022",
            "1023",
            "1043",
            "1049",
            "1055",
            "1056",
            "1063",
            "1070"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 32
            },
            "start": {
              "column": 48,
              "line": 30
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\n\nimport { PlayerAttribute } from \"~/composables/api/game/types/players/player-attribute/player-attribute.class\";\nimport { PlayerRole } from \"~/composables/api/game/types/players/player-role/player-role.class\";\nimport { PlayerSide } from \"~/composables/api/game/types/players/player-side/player-side.class\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass Player {\n  @Expose()\n  public _id: string;\n\n  @Expose()\n  public name: string;\n\n  @Expose()\n  @Type(() => PlayerRole)\n  public role: PlayerRole;\n\n  @Expose()\n  @Type(() => PlayerSide)\n  public side: PlayerSide;\n\n  @Type(() => PlayerAttribute)\n  @Expose()\n  public attributes: PlayerAttribute[];\n\n  @Expose()\n  public isAlive: boolean;\n\n  public static create(player: Player): Player {\n    return plainToInstance(Player, player, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { Player };"
    },
    "composables/api/game/useCreateGameDtoValidation.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1616",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(27,73): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 141
            },
            "start": {
              "column": 100,
              "line": 27
            }
          }
        },
        {
          "id": "1617",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(33,35): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Type 'undefined' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean>', gave the following error.\n    Argument of type '() => undefined' is not assignable to parameter of type 'WritableComputedOptions<boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 116,
              "line": 33
            },
            "start": {
              "column": 53,
              "line": 33
            }
          }
        },
        {
          "id": "1618",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Game Lobby Random Composition Button Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "357"
          ],
          "coveredBy": [
            "0",
            "1",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 116,
              "line": 33
            },
            "start": {
              "column": 59,
              "line": 33
            }
          }
        },
        {
          "id": "1619",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "1"
          ],
          "coveredBy": [
            "0",
            "1",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 116,
              "line": 33
            },
            "start": {
              "column": 59,
              "line": 33
            }
          }
        },
        {
          "id": "1620",
          "mutatorName": "EqualityOperator",
          "replacement": "createGameDto.value.players.length > MIN_PLAYERS_IN_GAME",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "1"
          ],
          "coveredBy": [
            "0",
            "1",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 116,
              "line": 33
            },
            "start": {
              "column": 59,
              "line": 33
            }
          }
        },
        {
          "id": "1621",
          "mutatorName": "EqualityOperator",
          "replacement": "createGameDto.value.players.length < MIN_PLAYERS_IN_GAME",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "0"
          ],
          "coveredBy": [
            "0",
            "1",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 116,
              "line": 33
            },
            "start": {
              "column": 59,
              "line": 33
            }
          }
        },
        {
          "id": "1622",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(35,26): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Type 'undefined' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean>', gave the following error.\n    Argument of type '() => undefined' is not assignable to parameter of type 'WritableComputedOptions<boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 125,
              "line": 35
            },
            "start": {
              "column": 44,
              "line": 35
            }
          }
        },
        {
          "id": "1623",
          "mutatorName": "MethodExpression",
          "replacement": "createGameDto.value.players.some(player => player.role.name !== undefined)",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "3"
          ],
          "coveredBy": [
            "2",
            "3",
            "24",
            "25",
            "26",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 125,
              "line": 35
            },
            "start": {
              "column": 50,
              "line": 35
            }
          }
        },
        {
          "id": "1624",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "2"
          ],
          "coveredBy": [
            "2",
            "3",
            "24",
            "25",
            "26",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 124,
              "line": 35
            },
            "start": {
              "column": 84,
              "line": 35
            }
          }
        },
        {
          "id": "1625",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "3"
          ],
          "coveredBy": [
            "2",
            "3",
            "24",
            "25",
            "26",
            "30",
            "31",
            "32",
            "369",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 124,
              "line": 35
            },
            "start": {
              "column": 94,
              "line": 35
            }
          }
        },
        {
          "id": "1626",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "2"
          ],
          "coveredBy": [
            "2",
            "3",
            "24",
            "25",
            "26",
            "30",
            "31",
            "32",
            "369",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 124,
              "line": 35
            },
            "start": {
              "column": 94,
              "line": 35
            }
          }
        },
        {
          "id": "1627",
          "mutatorName": "EqualityOperator",
          "replacement": "player.role.name === undefined",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "2"
          ],
          "coveredBy": [
            "2",
            "3",
            "24",
            "25",
            "26",
            "30",
            "31",
            "32",
            "369",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 124,
              "line": 35
            },
            "start": {
              "column": 94,
              "line": 35
            }
          }
        },
        {
          "id": "1628",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(37,43): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Type 'undefined' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean>', gave the following error.\n    Argument of type '() => undefined' is not assignable to parameter of type 'WritableComputedOptions<boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 146,
              "line": 37
            },
            "start": {
              "column": 61,
              "line": 37
            }
          }
        },
        {
          "id": "1629",
          "mutatorName": "MethodExpression",
          "replacement": "createGameDto.value.players.every(player => player.side.current === \"villagers\")",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "4"
          ],
          "coveredBy": [
            "4",
            "5",
            "25",
            "26",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 146,
              "line": 37
            },
            "start": {
              "column": 67,
              "line": 37
            }
          }
        },
        {
          "id": "1630",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "4"
          ],
          "coveredBy": [
            "4",
            "5",
            "25",
            "26",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 145,
              "line": 37
            },
            "start": {
              "column": 100,
              "line": 37
            }
          }
        },
        {
          "id": "1631",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "5"
          ],
          "coveredBy": [
            "4",
            "5",
            "25",
            "26",
            "30",
            "31",
            "32",
            "369",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 145,
              "line": 37
            },
            "start": {
              "column": 110,
              "line": 37
            }
          }
        },
        {
          "id": "1632",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "4"
          ],
          "coveredBy": [
            "4",
            "5",
            "25",
            "26",
            "30",
            "31",
            "32",
            "369",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 145,
              "line": 37
            },
            "start": {
              "column": 110,
              "line": 37
            }
          }
        },
        {
          "id": "1633",
          "mutatorName": "EqualityOperator",
          "replacement": "player.side.current !== \"villagers\"",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "5"
          ],
          "coveredBy": [
            "4",
            "5",
            "25",
            "26",
            "30",
            "31",
            "32",
            "369",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 145,
              "line": 37
            },
            "start": {
              "column": 110,
              "line": 37
            }
          }
        },
        {
          "id": "1634",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(37,110): error TS2367: This comparison appears to be unintentional because the types '\"villagers\" | \"werewolves\" | undefined' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "4",
            "5",
            "25",
            "26",
            "30",
            "31",
            "32",
            "369",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 145,
              "line": 37
            },
            "start": {
              "column": 134,
              "line": 37
            }
          }
        },
        {
          "id": "1635",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(39,43): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Type 'undefined' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean>', gave the following error.\n    Argument of type '() => undefined' is not assignable to parameter of type 'WritableComputedOptions<boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 147,
              "line": 39
            },
            "start": {
              "column": 61,
              "line": 39
            }
          }
        },
        {
          "id": "1636",
          "mutatorName": "MethodExpression",
          "replacement": "createGameDto.value.players.every(player => player.side.current === \"werewolves\")",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "6"
          ],
          "coveredBy": [
            "6",
            "7",
            "25",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 147,
              "line": 39
            },
            "start": {
              "column": 67,
              "line": 39
            }
          }
        },
        {
          "id": "1637",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "6"
          ],
          "coveredBy": [
            "6",
            "7",
            "25",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 146,
              "line": 39
            },
            "start": {
              "column": 100,
              "line": 39
            }
          }
        },
        {
          "id": "1638",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "7"
          ],
          "coveredBy": [
            "6",
            "7",
            "25",
            "30",
            "31",
            "32",
            "369",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 146,
              "line": 39
            },
            "start": {
              "column": 110,
              "line": 39
            }
          }
        },
        {
          "id": "1639",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "6"
          ],
          "coveredBy": [
            "6",
            "7",
            "25",
            "30",
            "31",
            "32",
            "369",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 146,
              "line": 39
            },
            "start": {
              "column": 110,
              "line": 39
            }
          }
        },
        {
          "id": "1640",
          "mutatorName": "EqualityOperator",
          "replacement": "player.side.current !== \"werewolves\"",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "7"
          ],
          "coveredBy": [
            "6",
            "7",
            "25",
            "30",
            "31",
            "32",
            "369",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 146,
              "line": 39
            },
            "start": {
              "column": 110,
              "line": 39
            }
          }
        },
        {
          "id": "1641",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(39,110): error TS2367: This comparison appears to be unintentional because the types '\"villagers\" | \"werewolves\" | undefined' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "6",
            "7",
            "25",
            "30",
            "31",
            "32",
            "369",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 146,
              "line": 39
            },
            "start": {
              "column": 134,
              "line": 39
            }
          }
        },
        {
          "id": "1642",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(41,59): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'ComputedGetter<boolean>'.\n      Type 'void' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'WritableComputedOptions<boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "8",
            "9",
            "10",
            "30",
            "369",
            "371"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 48
            },
            "start": {
              "column": 65,
              "line": 41
            }
          }
        },
        {
          "id": "1643",
          "mutatorName": "BooleanLiteral",
          "replacement": "roles.value",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(45,37): error TS18047: 'roles.value' is possibly 'null'.\ncomposables/api/game/useCreateGameDtoValidation.ts(45,57): error TS7006: Parameter 'role' implicitly has an 'any' type.\ncomposables/api/game/useCreateGameDtoValidation.ts(47,42): error TS7006: Parameter 'role' implicitly has an 'any' type.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "8",
            "9",
            "10",
            "30",
            "369",
            "371"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 42
            },
            "start": {
              "column": 9,
              "line": 42
            }
          }
        },
        {
          "id": "1644",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(45,37): error TS18047: 'roles.value' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "8",
            "9",
            "10",
            "30",
            "369",
            "371"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 42
            },
            "start": {
              "column": 9,
              "line": 42
            }
          }
        },
        {
          "id": "1645",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(45,37): error TS18047: 'roles.value' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "8",
            "9",
            "10",
            "30",
            "369",
            "371"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 42
            },
            "start": {
              "column": 9,
              "line": 42
            }
          }
        },
        {
          "id": "1646",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(43,37): error TS18047: 'roles.value' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "8"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 44
            },
            "start": {
              "column": 23,
              "line": 42
            }
          }
        },
        {
          "id": "1647",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "8"
          ],
          "coveredBy": [
            "8"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 43
            },
            "start": {
              "column": 14,
              "line": 43
            }
          }
        },
        {
          "id": "1648",
          "mutatorName": "MethodExpression",
          "replacement": "roles.value",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(47,88): error TS2345: Argument of type '{ name: \"werewolf\" | \"big-bad-wolf\" | \"accursed-wolf-father\" | \"white-werewolf\" | \"villager\" | \"villager-villager\" | \"seer\" | \"cupid\" | \"witch\" | \"hunter\" | \"little-girl\" | \"defender\" | ... 17 more ... | \"devoted-servant\"; ... 6 more ...; recommendedMinPlayers?: number | undefined; }' is not assignable to parameter of type 'RoleWithMinInGame'.\n  Type '{ name: \"werewolf\" | \"big-bad-wolf\" | \"accursed-wolf-father\" | \"white-werewolf\" | \"villager\" | \"villager-villager\" | \"seer\" | \"cupid\" | \"witch\" | \"hunter\" | \"little-girl\" | \"defender\" | ... 17 more ... | \"devoted-servant\"; ... 6 more ...; recommendedMinPlayers?: number | undefined; }' is not assignable to type '{ minInGame: number; }'.\n    Types of property 'minInGame' are incompatible.\n      Type 'number | undefined' is not assignable to type 'number'.\n        Type 'undefined' is not assignable to type 'number'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "9",
            "10",
            "30",
            "369",
            "371"
          ],
          "location": {
            "end": {
              "column": 122,
              "line": 45
            },
            "start": {
              "column": 37,
              "line": 45
            }
          }
        },
        {
          "id": "1649",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(47,88): error TS2345: Argument of type '{ name: \"werewolf\" | \"big-bad-wolf\" | \"accursed-wolf-father\" | \"white-werewolf\" | \"villager\" | \"villager-villager\" | \"seer\" | \"cupid\" | \"witch\" | \"hunter\" | \"little-girl\" | \"defender\" | ... 17 more ... | \"devoted-servant\"; ... 6 more ...; recommendedMinPlayers?: number | undefined; }' is not assignable to parameter of type 'RoleWithMinInGame'.\n  Type '{ name: \"werewolf\" | \"big-bad-wolf\" | \"accursed-wolf-father\" | \"white-werewolf\" | \"villager\" | \"villager-villager\" | \"seer\" | \"cupid\" | \"witch\" | \"hunter\" | \"little-girl\" | \"defender\" | ... 17 more ... | \"devoted-servant\"; ... 6 more ...; recommendedMinPlayers?: number | undefined; }' is not assignable to type '{ minInGame: number; }'.\n    Types of property 'minInGame' are incompatible.\n      Type 'number | undefined' is not assignable to type 'number'.\n        Type 'undefined' is not assignable to type 'number'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "9",
            "10",
            "30",
            "369",
            "371"
          ],
          "location": {
            "end": {
              "column": 121,
              "line": 45
            },
            "start": {
              "column": 56,
              "line": 45
            }
          }
        },
        {
          "id": "1650",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "9"
          ],
          "coveredBy": [
            "9",
            "10",
            "30",
            "369",
            "371"
          ],
          "location": {
            "end": {
              "column": 121,
              "line": 45
            },
            "start": {
              "column": 93,
              "line": 45
            }
          }
        },
        {
          "id": "1651",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "10"
          ],
          "coveredBy": [
            "9",
            "10",
            "30",
            "369",
            "371"
          ],
          "location": {
            "end": {
              "column": 121,
              "line": 45
            },
            "start": {
              "column": 93,
              "line": 45
            }
          }
        },
        {
          "id": "1652",
          "mutatorName": "EqualityOperator",
          "replacement": "role.minInGame === undefined",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "9"
          ],
          "coveredBy": [
            "9",
            "10",
            "30",
            "369",
            "371"
          ],
          "location": {
            "end": {
              "column": 121,
              "line": 45
            },
            "start": {
              "column": 93,
              "line": 45
            }
          }
        },
        {
          "id": "1653",
          "mutatorName": "MethodExpression",
          "replacement": "rolesWithMinimumPlayers.some(role => isRolePresentAndMinimumPlayersReached(role))",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "10"
          ],
          "coveredBy": [
            "9",
            "10",
            "30",
            "369",
            "371"
          ],
          "location": {
            "end": {
              "column": 94,
              "line": 47
            },
            "start": {
              "column": 12,
              "line": 47
            }
          }
        },
        {
          "id": "1654",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "9"
          ],
          "coveredBy": [
            "9",
            "10",
            "30",
            "369",
            "371"
          ],
          "location": {
            "end": {
              "column": 93,
              "line": 47
            },
            "start": {
              "column": 42,
              "line": 47
            }
          }
        },
        {
          "id": "1655",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(50,77): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'ComputedGetter<boolean>'.\n      Type 'void' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'WritableComputedOptions<boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "11",
            "12",
            "13",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 57
            },
            "start": {
              "column": 83,
              "line": 50
            }
          }
        },
        {
          "id": "1656",
          "mutatorName": "BooleanLiteral",
          "replacement": "roles.value",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(54,18): error TS18047: 'roles.value' is possibly 'null'.\ncomposables/api/game/useCreateGameDtoValidation.ts(54,38): error TS7031: Binding element 'name' implicitly has an 'any' type.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "11",
            "12",
            "13",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 51
            },
            "start": {
              "column": 9,
              "line": 51
            }
          }
        },
        {
          "id": "1657",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(54,18): error TS18047: 'roles.value' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "11",
            "12",
            "13",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 51
            },
            "start": {
              "column": 9,
              "line": 51
            }
          }
        },
        {
          "id": "1658",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(54,18): error TS18047: 'roles.value' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "11",
            "12",
            "13",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 51
            },
            "start": {
              "column": 9,
              "line": 51
            }
          }
        },
        {
          "id": "1659",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(52,18): error TS18047: 'roles.value' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "11",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 53
            },
            "start": {
              "column": 23,
              "line": 51
            }
          }
        },
        {
          "id": "1660",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "11"
          ],
          "coveredBy": [
            "11",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 52
            },
            "start": {
              "column": 14,
              "line": 52
            }
          }
        },
        {
          "id": "1661",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(59,80): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'ComputedGetter<boolean>'.\n      Type 'void' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'WritableComputedOptions<boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "14",
            "15",
            "16",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 66
            },
            "start": {
              "column": 86,
              "line": 59
            }
          }
        },
        {
          "id": "1662",
          "mutatorName": "BooleanLiteral",
          "replacement": "roles.value",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(63,18): error TS18047: 'roles.value' is possibly 'null'.\ncomposables/api/game/useCreateGameDtoValidation.ts(63,38): error TS7031: Binding element 'name' implicitly has an 'any' type.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "14",
            "15",
            "16",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 60
            },
            "start": {
              "column": 9,
              "line": 60
            }
          }
        },
        {
          "id": "1663",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(63,18): error TS18047: 'roles.value' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "14",
            "15",
            "16",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 60
            },
            "start": {
              "column": 9,
              "line": 60
            }
          }
        },
        {
          "id": "1664",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(63,18): error TS18047: 'roles.value' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "14",
            "15",
            "16",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 60
            },
            "start": {
              "column": 9,
              "line": 60
            }
          }
        },
        {
          "id": "1665",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(61,18): error TS18047: 'roles.value' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "14",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 62
            },
            "start": {
              "column": 23,
              "line": 60
            }
          }
        },
        {
          "id": "1666",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "14"
          ],
          "coveredBy": [
            "14",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 61
            },
            "start": {
              "column": 14,
              "line": 61
            }
          }
        },
        {
          "id": "1667",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(68,68): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'ComputedGetter<boolean>'.\n      Type 'void' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'WritableComputedOptions<boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "17",
            "18",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 75
            },
            "start": {
              "column": 74,
              "line": 68
            }
          }
        },
        {
          "id": "1668",
          "mutatorName": "MethodExpression",
          "replacement": "createGameDto.value.players.every(player => player.role.name === \"thief\")",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "17",
            "18",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 100,
              "line": 69
            },
            "start": {
              "column": 28,
              "line": 69
            }
          }
        },
        {
          "id": "1669",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "17",
            "18",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 69
            },
            "start": {
              "column": 61,
              "line": 69
            }
          }
        },
        {
          "id": "1670",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "17"
          ],
          "coveredBy": [
            "17",
            "18",
            "30",
            "31",
            "32",
            "369",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 69
            },
            "start": {
              "column": 71,
              "line": 69
            }
          }
        },
        {
          "id": "1671",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "17",
            "18",
            "30",
            "31",
            "32",
            "369",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 69
            },
            "start": {
              "column": 71,
              "line": 69
            }
          }
        },
        {
          "id": "1672",
          "mutatorName": "EqualityOperator",
          "replacement": "player.role.name !== \"thief\"",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "17"
          ],
          "coveredBy": [
            "17",
            "18",
            "30",
            "31",
            "32",
            "369",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 69
            },
            "start": {
              "column": 71,
              "line": 69
            }
          }
        },
        {
          "id": "1673",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(69,71): error TS2367: This comparison appears to be unintentional because the types '\"werewolf\" | \"big-bad-wolf\" | \"accursed-wolf-father\" | \"white-werewolf\" | \"villager\" | \"villager-villager\" | \"seer\" | \"cupid\" | \"witch\" | \"hunter\" | \"little-girl\" | \"defender\" | ... 18 more ... | undefined' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "17",
            "18",
            "30",
            "31",
            "32",
            "369",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 69
            },
            "start": {
              "column": 92,
              "line": 69
            }
          }
        },
        {
          "id": "1674",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "17",
            "18",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 129,
              "line": 70
            },
            "start": {
              "column": 43,
              "line": 70
            }
          }
        },
        {
          "id": "1675",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "17"
          ],
          "coveredBy": [
            "17",
            "18",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 129,
              "line": 70
            },
            "start": {
              "column": 43,
              "line": 70
            }
          }
        },
        {
          "id": "1676",
          "mutatorName": "EqualityOperator",
          "replacement": "createGameDto.value.additionalCards?.some(card => card.recipient === \"thief\") !== true",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "17"
          ],
          "coveredBy": [
            "17",
            "18",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 129,
              "line": 70
            },
            "start": {
              "column": 43,
              "line": 70
            }
          }
        },
        {
          "id": "1677",
          "mutatorName": "MethodExpression",
          "replacement": "createGameDto.value.additionalCards?.every(card => card.recipient === \"thief\")",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "17"
          ],
          "coveredBy": [
            "17",
            "18",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 120,
              "line": 70
            },
            "start": {
              "column": 43,
              "line": 70
            }
          }
        },
        {
          "id": "1678",
          "mutatorName": "OptionalChaining",
          "replacement": "createGameDto.value.additionalCards.some",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(70,43): error TS18048: 'createGameDto.value.additionalCards' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "17",
            "18",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 84,
              "line": 70
            },
            "start": {
              "column": 43,
              "line": 70
            }
          }
        },
        {
          "id": "1679",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "17"
          ],
          "coveredBy": [
            "17",
            "18"
          ],
          "location": {
            "end": {
              "column": 119,
              "line": 70
            },
            "start": {
              "column": 85,
              "line": 70
            }
          }
        },
        {
          "id": "1680",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "17",
            "18"
          ],
          "location": {
            "end": {
              "column": 119,
              "line": 70
            },
            "start": {
              "column": 93,
              "line": 70
            }
          }
        },
        {
          "id": "1681",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "17"
          ],
          "coveredBy": [
            "17",
            "18"
          ],
          "location": {
            "end": {
              "column": 119,
              "line": 70
            },
            "start": {
              "column": 93,
              "line": 70
            }
          }
        },
        {
          "id": "1682",
          "mutatorName": "EqualityOperator",
          "replacement": "card.recipient !== \"thief\"",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "17",
            "18"
          ],
          "location": {
            "end": {
              "column": 119,
              "line": 70
            },
            "start": {
              "column": 93,
              "line": 70
            }
          }
        },
        {
          "id": "1683",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(70,93): error TS2367: This comparison appears to be unintentional because the types '\"thief\" | \"actor\"' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "17",
            "18"
          ],
          "location": {
            "end": {
              "column": 119,
              "line": 70
            },
            "start": {
              "column": 112,
              "line": 70
            }
          }
        },
        {
          "id": "1684",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "17"
          ],
          "coveredBy": [
            "17",
            "18",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 129,
              "line": 70
            },
            "start": {
              "column": 125,
              "line": 70
            }
          }
        },
        {
          "id": "1685",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "17"
          ],
          "coveredBy": [
            "17",
            "18",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 71
            },
            "start": {
              "column": 9,
              "line": 71
            }
          }
        },
        {
          "id": "1686",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "17",
            "18",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 71
            },
            "start": {
              "column": 9,
              "line": 71
            }
          }
        },
        {
          "id": "1687",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "17",
            "18",
            "31"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 73
            },
            "start": {
              "column": 25,
              "line": 71
            }
          }
        },
        {
          "id": "1688",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "17"
          ],
          "coveredBy": [
            "17",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 16,
              "line": 74
            },
            "start": {
              "column": 12,
              "line": 74
            }
          }
        },
        {
          "id": "1689",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(77,68): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'ComputedGetter<boolean>'.\n      Type 'void' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'WritableComputedOptions<boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "19",
            "20",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 84
            },
            "start": {
              "column": 74,
              "line": 77
            }
          }
        },
        {
          "id": "1690",
          "mutatorName": "MethodExpression",
          "replacement": "createGameDto.value.players.every(player => player.role.name === \"actor\")",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "20"
          ],
          "coveredBy": [
            "19",
            "20",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 100,
              "line": 78
            },
            "start": {
              "column": 28,
              "line": 78
            }
          }
        },
        {
          "id": "1691",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "20"
          ],
          "coveredBy": [
            "19",
            "20",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 78
            },
            "start": {
              "column": 61,
              "line": 78
            }
          }
        },
        {
          "id": "1692",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "19",
            "20",
            "30",
            "31",
            "32",
            "369",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 78
            },
            "start": {
              "column": 71,
              "line": 78
            }
          }
        },
        {
          "id": "1693",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "20"
          ],
          "coveredBy": [
            "19",
            "20",
            "30",
            "31",
            "32",
            "369",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 78
            },
            "start": {
              "column": 71,
              "line": 78
            }
          }
        },
        {
          "id": "1694",
          "mutatorName": "EqualityOperator",
          "replacement": "player.role.name !== \"actor\"",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "19",
            "20",
            "30",
            "31",
            "32",
            "369",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 78
            },
            "start": {
              "column": 71,
              "line": 78
            }
          }
        },
        {
          "id": "1695",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(78,71): error TS2367: This comparison appears to be unintentional because the types '\"werewolf\" | \"big-bad-wolf\" | \"accursed-wolf-father\" | \"white-werewolf\" | \"villager\" | \"villager-villager\" | \"seer\" | \"cupid\" | \"witch\" | \"hunter\" | \"little-girl\" | \"defender\" | ... 18 more ... | undefined' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "19",
            "20",
            "30",
            "31",
            "32",
            "369",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 78
            },
            "start": {
              "column": 92,
              "line": 78
            }
          }
        },
        {
          "id": "1696",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "20"
          ],
          "coveredBy": [
            "19",
            "20",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 129,
              "line": 79
            },
            "start": {
              "column": 43,
              "line": 79
            }
          }
        },
        {
          "id": "1697",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "19",
            "20",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 129,
              "line": 79
            },
            "start": {
              "column": 43,
              "line": 79
            }
          }
        },
        {
          "id": "1698",
          "mutatorName": "EqualityOperator",
          "replacement": "createGameDto.value.additionalCards?.some(card => card.recipient === \"actor\") !== true",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "19",
            "20",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 129,
              "line": 79
            },
            "start": {
              "column": 43,
              "line": 79
            }
          }
        },
        {
          "id": "1699",
          "mutatorName": "MethodExpression",
          "replacement": "createGameDto.value.additionalCards?.every(card => card.recipient === \"actor\")",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "19",
            "20",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 120,
              "line": 79
            },
            "start": {
              "column": 43,
              "line": 79
            }
          }
        },
        {
          "id": "1700",
          "mutatorName": "OptionalChaining",
          "replacement": "createGameDto.value.additionalCards.some",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(79,43): error TS18048: 'createGameDto.value.additionalCards' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "19",
            "20",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 84,
              "line": 79
            },
            "start": {
              "column": 43,
              "line": 79
            }
          }
        },
        {
          "id": "1701",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "19",
            "20"
          ],
          "location": {
            "end": {
              "column": 119,
              "line": 79
            },
            "start": {
              "column": 85,
              "line": 79
            }
          }
        },
        {
          "id": "1702",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "20"
          ],
          "coveredBy": [
            "19",
            "20"
          ],
          "location": {
            "end": {
              "column": 119,
              "line": 79
            },
            "start": {
              "column": 93,
              "line": 79
            }
          }
        },
        {
          "id": "1703",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "19",
            "20"
          ],
          "location": {
            "end": {
              "column": 119,
              "line": 79
            },
            "start": {
              "column": 93,
              "line": 79
            }
          }
        },
        {
          "id": "1704",
          "mutatorName": "EqualityOperator",
          "replacement": "card.recipient !== \"actor\"",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "20"
          ],
          "coveredBy": [
            "19",
            "20"
          ],
          "location": {
            "end": {
              "column": 119,
              "line": 79
            },
            "start": {
              "column": 93,
              "line": 79
            }
          }
        },
        {
          "id": "1705",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(79,93): error TS2367: This comparison appears to be unintentional because the types '\"thief\" | \"actor\"' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "19",
            "20"
          ],
          "location": {
            "end": {
              "column": 119,
              "line": 79
            },
            "start": {
              "column": 112,
              "line": 79
            }
          }
        },
        {
          "id": "1706",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "19",
            "20",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 129,
              "line": 79
            },
            "start": {
              "column": 125,
              "line": 79
            }
          }
        },
        {
          "id": "1707",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "19",
            "20",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 80
            },
            "start": {
              "column": 9,
              "line": 80
            }
          }
        },
        {
          "id": "1708",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "20"
          ],
          "coveredBy": [
            "19",
            "20",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 80
            },
            "start": {
              "column": 9,
              "line": 80
            }
          }
        },
        {
          "id": "1709",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "20"
          ],
          "coveredBy": [
            "19",
            "20",
            "31"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 82
            },
            "start": {
              "column": 25,
              "line": 80
            }
          }
        },
        {
          "id": "1710",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "19",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 16,
              "line": 83
            },
            "start": {
              "column": 12,
              "line": 83
            }
          }
        },
        {
          "id": "1711",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(86,81): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'ComputedGetter<boolean>'.\n      Type 'void' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'WritableComputedOptions<boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "21",
            "22",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 93
            },
            "start": {
              "column": 87,
              "line": 86
            }
          }
        },
        {
          "id": "1712",
          "mutatorName": "MethodExpression",
          "replacement": "createGameDto.value.players.every(player => player.role.name === \"prejudiced-manipulator\")",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "22"
          ],
          "coveredBy": [
            "21",
            "22",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 133,
              "line": 87
            },
            "start": {
              "column": 44,
              "line": 87
            }
          }
        },
        {
          "id": "1713",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "22"
          ],
          "coveredBy": [
            "21",
            "22",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 132,
              "line": 87
            },
            "start": {
              "column": 77,
              "line": 87
            }
          }
        },
        {
          "id": "1714",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "30"
          ],
          "coveredBy": [
            "21",
            "22",
            "30",
            "31",
            "32",
            "369",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 132,
              "line": 87
            },
            "start": {
              "column": 87,
              "line": 87
            }
          }
        },
        {
          "id": "1715",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "22"
          ],
          "coveredBy": [
            "21",
            "22",
            "30",
            "31",
            "32",
            "369",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 132,
              "line": 87
            },
            "start": {
              "column": 87,
              "line": 87
            }
          }
        },
        {
          "id": "1716",
          "mutatorName": "EqualityOperator",
          "replacement": "player.role.name !== \"prejudiced-manipulator\"",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "30"
          ],
          "coveredBy": [
            "21",
            "22",
            "30",
            "31",
            "32",
            "369",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 132,
              "line": 87
            },
            "start": {
              "column": 87,
              "line": 87
            }
          }
        },
        {
          "id": "1717",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(87,87): error TS2367: This comparison appears to be unintentional because the types '\"werewolf\" | \"big-bad-wolf\" | \"accursed-wolf-father\" | \"white-werewolf\" | \"villager\" | \"villager-villager\" | \"seer\" | \"cupid\" | \"witch\" | \"hunter\" | \"little-girl\" | \"defender\" | ... 18 more ... | undefined' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "21",
            "22",
            "30",
            "31",
            "32",
            "369",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 132,
              "line": 87
            },
            "start": {
              "column": 108,
              "line": 87
            }
          }
        },
        {
          "id": "1718",
          "mutatorName": "MethodExpression",
          "replacement": "createGameDto.value.players.some(player => player.group)",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "22"
          ],
          "coveredBy": [
            "21",
            "22",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 89,
              "line": 88
            },
            "start": {
              "column": 32,
              "line": 88
            }
          }
        },
        {
          "id": "1719",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "21"
          ],
          "coveredBy": [
            "21",
            "22",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 88,
              "line": 88
            },
            "start": {
              "column": 66,
              "line": 88
            }
          }
        },
        {
          "id": "1720",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "30"
          ],
          "coveredBy": [
            "21",
            "22",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 89
            },
            "start": {
              "column": 9,
              "line": 89
            }
          }
        },
        {
          "id": "1721",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "22"
          ],
          "coveredBy": [
            "21",
            "22",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 89
            },
            "start": {
              "column": 9,
              "line": 89
            }
          }
        },
        {
          "id": "1722",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "22"
          ],
          "coveredBy": [
            "21",
            "22",
            "31"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 91
            },
            "start": {
              "column": 41,
              "line": 89
            }
          }
        },
        {
          "id": "1723",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "21"
          ],
          "coveredBy": [
            "21",
            "30",
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 16,
              "line": 92
            },
            "start": {
              "column": 12,
              "line": 92
            }
          }
        },
        {
          "id": "1724",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(95,25): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Type 'undefined' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean>', gave the following error.\n    Argument of type '() => undefined' is not assignable to parameter of type 'WritableComputedOptions<boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 102
            },
            "start": {
              "column": 43,
              "line": 95
            }
          }
        },
        {
          "id": "1725",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "23"
          ],
          "coveredBy": [
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 102
            },
            "start": {
              "column": 49,
              "line": 95
            }
          }
        },
        {
          "id": "1726",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 9,
          "static": false,
          "killedBy": [
            "30"
          ],
          "coveredBy": [
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 102
            },
            "start": {
              "column": 49,
              "line": 95
            }
          }
        },
        {
          "id": "1727",
          "mutatorName": "LogicalOperator",
          "replacement": "isMinimumPlayersReached.value && areAllRolesSet.value && doesContainOneVillagerSidedRole.value && doesContainOneWerewolfSidedRole.value && areRolesMinimumPlayersReached.value && areAdditionalCardsSetForThiefIfPresent.value && areAdditionalCardsSetForActorIfPresent.value || arePlayerGroupsSetForPrejudicedManipulatorIfPresent.value",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "23"
          ],
          "coveredBy": [
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 102
            },
            "start": {
              "column": 49,
              "line": 95
            }
          }
        },
        {
          "id": "1728",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "23"
          ],
          "coveredBy": [
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 49,
              "line": 101
            },
            "start": {
              "column": 49,
              "line": 95
            }
          }
        },
        {
          "id": "1729",
          "mutatorName": "LogicalOperator",
          "replacement": "isMinimumPlayersReached.value && areAllRolesSet.value && doesContainOneVillagerSidedRole.value && doesContainOneWerewolfSidedRole.value && areRolesMinimumPlayersReached.value && areAdditionalCardsSetForThiefIfPresent.value || areAdditionalCardsSetForActorIfPresent.value",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "23"
          ],
          "coveredBy": [
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 49,
              "line": 101
            },
            "start": {
              "column": 49,
              "line": 95
            }
          }
        },
        {
          "id": "1730",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "23"
          ],
          "coveredBy": [
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 49,
              "line": 100
            },
            "start": {
              "column": 49,
              "line": 95
            }
          }
        },
        {
          "id": "1731",
          "mutatorName": "LogicalOperator",
          "replacement": "isMinimumPlayersReached.value && areAllRolesSet.value && doesContainOneVillagerSidedRole.value && doesContainOneWerewolfSidedRole.value && areRolesMinimumPlayersReached.value || areAdditionalCardsSetForThiefIfPresent.value",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "23"
          ],
          "coveredBy": [
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 49,
              "line": 100
            },
            "start": {
              "column": 49,
              "line": 95
            }
          }
        },
        {
          "id": "1732",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "23"
          ],
          "coveredBy": [
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 99
            },
            "start": {
              "column": 49,
              "line": 95
            }
          }
        },
        {
          "id": "1733",
          "mutatorName": "LogicalOperator",
          "replacement": "isMinimumPlayersReached.value && areAllRolesSet.value && doesContainOneVillagerSidedRole.value && doesContainOneWerewolfSidedRole.value || areRolesMinimumPlayersReached.value",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "23"
          ],
          "coveredBy": [
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 99
            },
            "start": {
              "column": 49,
              "line": 95
            }
          }
        },
        {
          "id": "1734",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "23"
          ],
          "coveredBy": [
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 98
            },
            "start": {
              "column": 49,
              "line": 95
            }
          }
        },
        {
          "id": "1735",
          "mutatorName": "LogicalOperator",
          "replacement": "isMinimumPlayersReached.value && areAllRolesSet.value && doesContainOneVillagerSidedRole.value || doesContainOneWerewolfSidedRole.value",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "23"
          ],
          "coveredBy": [
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 98
            },
            "start": {
              "column": 49,
              "line": 95
            }
          }
        },
        {
          "id": "1736",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "23"
          ],
          "coveredBy": [
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 97
            },
            "start": {
              "column": 49,
              "line": 95
            }
          }
        },
        {
          "id": "1737",
          "mutatorName": "LogicalOperator",
          "replacement": "isMinimumPlayersReached.value && areAllRolesSet.value || doesContainOneVillagerSidedRole.value",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "23"
          ],
          "coveredBy": [
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 97
            },
            "start": {
              "column": 49,
              "line": 95
            }
          }
        },
        {
          "id": "1738",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "23"
          ],
          "coveredBy": [
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 96
            },
            "start": {
              "column": 49,
              "line": 95
            }
          }
        },
        {
          "id": "1739",
          "mutatorName": "LogicalOperator",
          "replacement": "isMinimumPlayersReached.value || areAllRolesSet.value",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "23"
          ],
          "coveredBy": [
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 96
            },
            "start": {
              "column": 49,
              "line": 95
            }
          }
        },
        {
          "id": "1740",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(104,59): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<string[]>, debugOptions?: DebuggerOptions | undefined): ComputedRef<string[]>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'ComputedGetter<string[]>'.\n      Type 'void' is not assignable to type 'string[]'.\n  Overload 2 of 2, '(options: WritableComputedOptions<string[]>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<string[]>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'WritableComputedOptions<string[]>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 118
            },
            "start": {
              "column": 65,
              "line": 104
            }
          }
        },
        {
          "id": "1741",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected [] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "31"
          ],
          "coveredBy": [
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 115
            },
            "start": {
              "column": 45,
              "line": 105
            }
          }
        },
        {
          "id": "1742",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected [ '' ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "31"
          ],
          "coveredBy": [
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 77,
              "line": 106
            },
            "start": {
              "column": 10,
              "line": 106
            }
          }
        },
        {
          "id": "1743",
          "mutatorName": "BooleanLiteral",
          "replacement": "isMinimumPlayersReached.value",
          "statusReason": "expected [] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "31"
          ],
          "coveredBy": [
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 111,
              "line": 106
            },
            "start": {
              "column": 81,
              "line": 106
            }
          }
        },
        {
          "id": "1744",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected [ '', …(2) ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "31"
          ],
          "coveredBy": [
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 68,
              "line": 107
            },
            "start": {
              "column": 10,
              "line": 107
            }
          }
        },
        {
          "id": "1745",
          "mutatorName": "BooleanLiteral",
          "replacement": "areAllRolesSet.value",
          "statusReason": "expected [ …(2) ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "31"
          ],
          "coveredBy": [
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 93,
              "line": 107
            },
            "start": {
              "column": 72,
              "line": 107
            }
          }
        },
        {
          "id": "1746",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected [ '' ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "31"
          ],
          "coveredBy": [
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 70,
              "line": 108
            },
            "start": {
              "column": 10,
              "line": 108
            }
          }
        },
        {
          "id": "1747",
          "mutatorName": "BooleanLiteral",
          "replacement": "doesContainOneVillagerSidedRole.value",
          "statusReason": "expected [] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "31"
          ],
          "coveredBy": [
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 112,
              "line": 108
            },
            "start": {
              "column": 74,
              "line": 108
            }
          }
        },
        {
          "id": "1748",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected [ '' ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "31"
          ],
          "coveredBy": [
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 70,
              "line": 109
            },
            "start": {
              "column": 10,
              "line": 109
            }
          }
        },
        {
          "id": "1749",
          "mutatorName": "BooleanLiteral",
          "replacement": "doesContainOneWerewolfSidedRole.value",
          "statusReason": "expected [] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "31"
          ],
          "coveredBy": [
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 112,
              "line": 109
            },
            "start": {
              "column": 74,
              "line": 109
            }
          }
        },
        {
          "id": "1750",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected [ …(3) ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "31"
          ],
          "coveredBy": [
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 85,
              "line": 110
            },
            "start": {
              "column": 10,
              "line": 110
            }
          }
        },
        {
          "id": "1751",
          "mutatorName": "BooleanLiteral",
          "replacement": "isTwoSistersRolePresentAndMinimumPlayersReached.value",
          "statusReason": "expected [ …(2) ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "31"
          ],
          "coveredBy": [
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 143,
              "line": 110
            },
            "start": {
              "column": 89,
              "line": 110
            }
          }
        },
        {
          "id": "1752",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected [ …(3) ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "31"
          ],
          "coveredBy": [
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 88,
              "line": 111
            },
            "start": {
              "column": 10,
              "line": 111
            }
          }
        },
        {
          "id": "1753",
          "mutatorName": "BooleanLiteral",
          "replacement": "isThreeBrothersRolePresentAndMinimumPlayersReached.value",
          "statusReason": "expected [ …(2) ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "31"
          ],
          "coveredBy": [
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 149,
              "line": 111
            },
            "start": {
              "column": 92,
              "line": 111
            }
          }
        },
        {
          "id": "1754",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected [ …(3) ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "31"
          ],
          "coveredBy": [
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 77,
              "line": 112
            },
            "start": {
              "column": 10,
              "line": 112
            }
          }
        },
        {
          "id": "1755",
          "mutatorName": "BooleanLiteral",
          "replacement": "areAdditionalCardsSetForThiefIfPresent.value",
          "statusReason": "expected [ …(2) ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "31"
          ],
          "coveredBy": [
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 126,
              "line": 112
            },
            "start": {
              "column": 81,
              "line": 112
            }
          }
        },
        {
          "id": "1756",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected [ …(3) ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 8,
          "static": false,
          "killedBy": [
            "31"
          ],
          "coveredBy": [
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 77,
              "line": 113
            },
            "start": {
              "column": 10,
              "line": 113
            }
          }
        },
        {
          "id": "1757",
          "mutatorName": "BooleanLiteral",
          "replacement": "areAdditionalCardsSetForActorIfPresent.value",
          "statusReason": "expected [ …(2) ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 8,
          "static": false,
          "killedBy": [
            "31"
          ],
          "coveredBy": [
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 126,
              "line": 113
            },
            "start": {
              "column": 81,
              "line": 113
            }
          }
        },
        {
          "id": "1758",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected [ …(3) ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 9,
          "static": false,
          "killedBy": [
            "31"
          ],
          "coveredBy": [
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 84,
              "line": 114
            },
            "start": {
              "column": 10,
              "line": 114
            }
          }
        },
        {
          "id": "1759",
          "mutatorName": "BooleanLiteral",
          "replacement": "arePlayerGroupsSetForPrejudicedManipulatorIfPresent.value",
          "statusReason": "expected [ …(2) ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 9,
          "static": false,
          "killedBy": [
            "31"
          ],
          "coveredBy": [
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 146,
              "line": 114
            },
            "start": {
              "column": 88,
              "line": 114
            }
          }
        },
        {
          "id": "1760",
          "mutatorName": "MethodExpression",
          "replacement": "Object.keys(errors)",
          "statusReason": "expected [ …(9) ] to strictly equal []",
          "status": "Killed",
          "testsCompleted": 10,
          "static": false,
          "killedBy": [
            "32"
          ],
          "coveredBy": [
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 81,
              "line": 117
            },
            "start": {
              "column": 12,
              "line": 117
            }
          }
        },
        {
          "id": "1761",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected [] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "31"
          ],
          "coveredBy": [
            "31",
            "32",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 80,
              "line": 117
            },
            "start": {
              "column": 39,
              "line": 117
            }
          }
        },
        {
          "id": "1762",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(120,76): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "9",
            "10",
            "12",
            "13",
            "15",
            "16",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 125
            },
            "start": {
              "column": 84,
              "line": 120
            }
          }
        },
        {
          "id": "1763",
          "mutatorName": "MethodExpression",
          "replacement": "createGameDto.value.players",
          "statusReason": "expected [ …(2) ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 12,
          "static": false,
          "killedBy": [
            "31"
          ],
          "coveredBy": [
            "9",
            "10",
            "12",
            "13",
            "15",
            "16",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 105,
              "line": 121
            },
            "start": {
              "column": 29,
              "line": 121
            }
          }
        },
        {
          "id": "1764",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "10"
          ],
          "coveredBy": [
            "9",
            "10",
            "12",
            "13",
            "15",
            "16",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 104,
              "line": 121
            },
            "start": {
              "column": 64,
              "line": 121
            }
          }
        },
        {
          "id": "1765",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected [ …(2) ] to include 'composables.useCreateGameDtoValidatio…'",
          "status": "Killed",
          "testsCompleted": 12,
          "static": false,
          "killedBy": [
            "31"
          ],
          "coveredBy": [
            "9",
            "10",
            "12",
            "13",
            "15",
            "16",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "369",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 104,
              "line": 121
            },
            "start": {
              "column": 74,
              "line": 121
            }
          }
        },
        {
          "id": "1766",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "10"
          ],
          "coveredBy": [
            "9",
            "10",
            "12",
            "13",
            "15",
            "16",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "369",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 104,
              "line": 121
            },
            "start": {
              "column": 74,
              "line": 121
            }
          }
        },
        {
          "id": "1767",
          "mutatorName": "EqualityOperator",
          "replacement": "player.role.name !== role.name",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "13"
          ],
          "coveredBy": [
            "9",
            "10",
            "12",
            "13",
            "15",
            "16",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "369",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 104,
              "line": 121
            },
            "start": {
              "column": 74,
              "line": 121
            }
          }
        },
        {
          "id": "1768",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "10"
          ],
          "coveredBy": [
            "9",
            "10",
            "12",
            "13",
            "15",
            "16",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 80,
              "line": 124
            },
            "start": {
              "column": 12,
              "line": 124
            }
          }
        },
        {
          "id": "1769",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "9"
          ],
          "coveredBy": [
            "9",
            "10",
            "12",
            "13",
            "15",
            "16",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 80,
              "line": 124
            },
            "start": {
              "column": 12,
              "line": 124
            }
          }
        },
        {
          "id": "1770",
          "mutatorName": "LogicalOperator",
          "replacement": "playersWithRoleCount === 0 && playersWithRoleCount >= role.minInGame",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "9"
          ],
          "coveredBy": [
            "9",
            "10",
            "12",
            "13",
            "15",
            "16",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 80,
              "line": 124
            },
            "start": {
              "column": 12,
              "line": 124
            }
          }
        },
        {
          "id": "1771",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "9"
          ],
          "coveredBy": [
            "9",
            "10",
            "12",
            "13",
            "15",
            "16",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 124
            },
            "start": {
              "column": 12,
              "line": 124
            }
          }
        },
        {
          "id": "1772",
          "mutatorName": "EqualityOperator",
          "replacement": "playersWithRoleCount !== 0",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "9"
          ],
          "coveredBy": [
            "9",
            "10",
            "12",
            "13",
            "15",
            "16",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 124
            },
            "start": {
              "column": 12,
              "line": 124
            }
          }
        },
        {
          "id": "1773",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "9"
          ],
          "coveredBy": [
            "9",
            "10",
            "12",
            "13",
            "15",
            "16",
            "31",
            "33",
            "34"
          ],
          "location": {
            "end": {
              "column": 80,
              "line": 124
            },
            "start": {
              "column": 42,
              "line": 124
            }
          }
        },
        {
          "id": "1774",
          "mutatorName": "EqualityOperator",
          "replacement": "playersWithRoleCount > role.minInGame",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "9"
          ],
          "coveredBy": [
            "9",
            "10",
            "12",
            "13",
            "15",
            "16",
            "31",
            "33",
            "34"
          ],
          "location": {
            "end": {
              "column": 80,
              "line": 124
            },
            "start": {
              "column": 42,
              "line": 124
            }
          }
        },
        {
          "id": "1775",
          "mutatorName": "EqualityOperator",
          "replacement": "playersWithRoleCount < role.minInGame",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "9"
          ],
          "coveredBy": [
            "9",
            "10",
            "12",
            "13",
            "15",
            "16",
            "31",
            "33",
            "34"
          ],
          "location": {
            "end": {
              "column": 80,
              "line": 124
            },
            "start": {
              "column": 42,
              "line": 124
            }
          }
        },
        {
          "id": "1776",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(126,3): error TS2740: Type '{}' is missing the following properties from type 'UseCreateGameDtoValidation': isMinimumPlayersReached, areAllRolesSet, doesContainOneVillagerSidedRole, doesContainOneWerewolfSidedRole, and 9 more.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 140
            },
            "start": {
              "column": 10,
              "line": 126
            }
          }
        }
      ],
      "source": "import type { ComputedRef, Ref } from \"vue\";\nimport { storeToRefs } from \"pinia\";\n\nimport { MIN_PLAYERS_IN_GAME } from \"~/composables/api/game/constants/game.constants\";\nimport type { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport type { Role } from \"~/composables/api/role/types/role.class\";\nimport { useRolesStore } from \"~/stores/role/useRolesStore\";\n\ntype RoleWithMinInGame = Role & { minInGame: number };\n\ntype UseCreateGameDtoValidation = {\n  isMinimumPlayersReached: ComputedRef<boolean>;\n  areAllRolesSet: ComputedRef<boolean>;\n  doesContainOneVillagerSidedRole: ComputedRef<boolean>;\n  doesContainOneWerewolfSidedRole: ComputedRef<boolean>;\n  areRolesMinimumPlayersReached: ComputedRef<boolean>;\n  isTwoSistersRolePresentAndMinimumPlayersReached: ComputedRef<boolean>;\n  isThreeBrothersRolePresentAndMinimumPlayersReached: ComputedRef<boolean>;\n  areAdditionalCardsSetForThiefIfPresent: ComputedRef<boolean>;\n  areAdditionalCardsSetForActorIfPresent: ComputedRef<boolean>;\n  arePlayerGroupsSetForPrejudicedManipulatorIfPresent: ComputedRef<boolean>;\n  canCreateGame: ComputedRef<boolean>;\n  gameCreationValidationErrors: ComputedRef<string[]>;\n  isRolePresentAndMinimumPlayersReached: (role: RoleWithMinInGame) => boolean;\n};\n\nfunction useCreateGameDtoValidation(createGameDto: Ref<CreateGameDto>): UseCreateGameDtoValidation {\n  const rolesStore = useRolesStore();\n  const { roles } = storeToRefs(rolesStore);\n\n  const { t } = useI18n();\n\n  const isMinimumPlayersReached = computed<boolean>(() => createGameDto.value.players.length >= MIN_PLAYERS_IN_GAME);\n\n  const areAllRolesSet = computed<boolean>(() => createGameDto.value.players.every(player => player.role.name !== undefined));\n\n  const doesContainOneVillagerSidedRole = computed<boolean>(() => createGameDto.value.players.some(player => player.side.current === \"villagers\"));\n\n  const doesContainOneWerewolfSidedRole = computed<boolean>(() => createGameDto.value.players.some(player => player.side.current === \"werewolves\"));\n\n  const areRolesMinimumPlayersReached = computed<boolean>(() => {\n    if (!roles.value) {\n      return false;\n    }\n    const rolesWithMinimumPlayers = roles.value.filter((role): role is RoleWithMinInGame => role.minInGame !== undefined);\n\n    return rolesWithMinimumPlayers.every(role => isRolePresentAndMinimumPlayersReached(role));\n  });\n\n  const isTwoSistersRolePresentAndMinimumPlayersReached = computed<boolean>(() => {\n    if (!roles.value) {\n      return false;\n    }\n    const role = roles.value.find(({ name }) => name === \"two-sisters\") as RoleWithMinInGame;\n\n    return isRolePresentAndMinimumPlayersReached(role);\n  });\n\n  const isThreeBrothersRolePresentAndMinimumPlayersReached = computed<boolean>(() => {\n    if (!roles.value) {\n      return false;\n    }\n    const role = roles.value.find(({ name }) => name === \"three-brothers\") as RoleWithMinInGame;\n\n    return isRolePresentAndMinimumPlayersReached(role);\n  });\n\n  const areAdditionalCardsSetForThiefIfPresent = computed<boolean>(() => {\n    const isThiefPresent = createGameDto.value.players.some(player => player.role.name === \"thief\");\n    const areAdditionalCardsSetForThief = createGameDto.value.additionalCards?.some(card => card.recipient === \"thief\") === true;\n    if (isThiefPresent) {\n      return areAdditionalCardsSetForThief;\n    }\n    return true;\n  });\n\n  const areAdditionalCardsSetForActorIfPresent = computed<boolean>(() => {\n    const isActorPresent = createGameDto.value.players.some(player => player.role.name === \"actor\");\n    const areAdditionalCardsSetForActor = createGameDto.value.additionalCards?.some(card => card.recipient === \"actor\") === true;\n    if (isActorPresent) {\n      return areAdditionalCardsSetForActor;\n    }\n    return true;\n  });\n\n  const arePlayerGroupsSetForPrejudicedManipulatorIfPresent = computed<boolean>(() => {\n    const isPrejudicedManipulatorPresent = createGameDto.value.players.some(player => player.role.name === \"prejudiced-manipulator\");\n    const arePlayerGroupsSet = createGameDto.value.players.every(player => player.group);\n    if (isPrejudicedManipulatorPresent) {\n      return arePlayerGroupsSet;\n    }\n    return true;\n  });\n\n  const canCreateGame = computed<boolean>(() => isMinimumPlayersReached.value &&\n    areAllRolesSet.value &&\n    doesContainOneVillagerSidedRole.value &&\n    doesContainOneWerewolfSidedRole.value &&\n    areRolesMinimumPlayersReached.value &&\n    areAdditionalCardsSetForThiefIfPresent.value &&\n    areAdditionalCardsSetForActorIfPresent.value &&\n    arePlayerGroupsSetForPrejudicedManipulatorIfPresent.value);\n\n  const gameCreationValidationErrors = computed<string[]>(() => {\n    const errors: Record<string, boolean> = {\n      [t(\"composables.useCreateGameDtoValidation.minimumOfPlayersNotReached\")]: !isMinimumPlayersReached.value,\n      [t(\"composables.useCreateGameDtoValidation.notAllRolesAreSet\")]: !areAllRolesSet.value,\n      [t(\"composables.useCreateGameDtoValidation.noVillagerSidedRole\")]: !doesContainOneVillagerSidedRole.value,\n      [t(\"composables.useCreateGameDtoValidation.noWerewolfSidedRole\")]: !doesContainOneWerewolfSidedRole.value,\n      [t(\"composables.useCreateGameDtoValidation.twoSistersMinimumPlayersNotReached\")]: !isTwoSistersRolePresentAndMinimumPlayersReached.value,\n      [t(\"composables.useCreateGameDtoValidation.threeBrothersMinimumPlayersNotReached\")]: !isThreeBrothersRolePresentAndMinimumPlayersReached.value,\n      [t(\"composables.useCreateGameDtoValidation.thiefAdditionalCardsNotSet\")]: !areAdditionalCardsSetForThiefIfPresent.value,\n      [t(\"composables.useCreateGameDtoValidation.actorAdditionalCardsNotSet\")]: !areAdditionalCardsSetForActorIfPresent.value,\n      [t(\"composables.useCreateGameDtoValidation.prejudicedManipulatorGroupsNotSet\")]: !arePlayerGroupsSetForPrejudicedManipulatorIfPresent.value,\n    };\n\n    return Object.keys(errors).filter((key: keyof typeof errors) => errors[key]);\n  });\n\n  function isRolePresentAndMinimumPlayersReached(role: RoleWithMinInGame): boolean {\n    const playersWithRole = createGameDto.value.players.filter(player => player.role.name === role.name);\n    const playersWithRoleCount = playersWithRole.length;\n\n    return playersWithRoleCount === 0 || playersWithRoleCount >= role.minInGame;\n  }\n  return {\n    isMinimumPlayersReached,\n    areAllRolesSet,\n    doesContainOneVillagerSidedRole,\n    doesContainOneWerewolfSidedRole,\n    areRolesMinimumPlayersReached,\n    isTwoSistersRolePresentAndMinimumPlayersReached,\n    isThreeBrothersRolePresentAndMinimumPlayersReached,\n    areAdditionalCardsSetForThiefIfPresent,\n    areAdditionalCardsSetForActorIfPresent,\n    arePlayerGroupsSetForPrejudicedManipulatorIfPresent,\n    canCreateGame,\n    gameCreationValidationErrors,\n    isRolePresentAndMinimumPlayersReached,\n  };\n}\n\nexport { useCreateGameDtoValidation };"
    },
    "composables/api/game/useFetchGames.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1777",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useFetchGames.ts(13,27): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213",
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242",
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "310",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "319",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327",
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468",
            "479",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "488",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "596",
            "597",
            "598",
            "599",
            "600",
            "601",
            "602",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634",
            "665",
            "666",
            "667",
            "668",
            "669",
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677",
            "678",
            "679",
            "680",
            "681",
            "682",
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713",
            "726",
            "727",
            "728",
            "729",
            "730",
            "731",
            "732",
            "733",
            "734",
            "735",
            "736",
            "737",
            "738",
            "739",
            "740",
            "816",
            "817",
            "818",
            "819",
            "820",
            "821",
            "822",
            "823",
            "845",
            "846",
            "847",
            "848",
            "926",
            "927",
            "928",
            "929",
            "939",
            "957",
            "958",
            "959",
            "991"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 59
            },
            "start": {
              "column": 41,
              "line": 13
            }
          }
        },
        {
          "id": "1778",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useFetchGames.ts(16,60): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "816",
            "817"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 25
            },
            "start": {
              "column": 108,
              "line": 16
            }
          }
        },
        {
          "id": "1779",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useFetchGames.ts(16,60): error TS2366: Function lacks ending return statement and return type does not include 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "816",
            "817"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 22
            },
            "start": {
              "column": 9,
              "line": 17
            }
          }
        },
        {
          "id": "1780",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games\",\n  Object {\n    \"body\": \"{\"players\":[],\"options\":{\"composition\":{\"isHidden\":true},\"votes\":{\"canBeSkipped\":false},\"roles\":{\"doSkipCallIfNoTarget\":true,\"areRevealedOnDeath\":true,\"sheriff\":{\"isEnabled\":true,\"electedAt\":{\"turn\":4839493823627264,\"phaseName\":\"day\"},\"hasDoubledVote\":true,\"mustSettleTieInVotes\":true},\"bigBadWolf\":{\"isPowerlessIfWerewolfDies\":true},\"whiteWerewolf\":{\"wakingUpInterval\":4},\"seer\":{\"isTalkative\":false,\"canSeeRoles\":false},\"cupid\":{\"lovers\":{\"doRevealRoleToEachOther\":true},\"mustWinWithLovers\":true},\"littleGirl\":{\"isProtectedByDefender\":false},\"defender\":{\"canProtectTwice\":false},\"elder\":{\"livesCountAgainstWerewolves\":2,\"doesTakeHisRevenge\":true},\"idiot\":{\"doesDieOnElderDeath\":false},\"twoSisters\":{\"wakingUpInterval\":3},\"threeBrothers\":{\"wakingUpInterval\":3},\"fox\":{\"isPowerlessIfMissesWerewolf\":true},\"bearTamer\":{\"doesGrowlOnWerewolvesSide\":true},\"stutteringJudge\":{\"voteRequestsCount\":2},\"wildChild\":{\"isTransformationRevealed\":true},\"wolfHound\":{\"isChosenSideRevealed\":false,\"isSideRandomlyChosen\":true},\"thief\":{\"mustChooseBetweenWerewolves\":false,\"isChosenCardRevealed\":true,\"additionalCardsCount\":4},\"piedPiper\":{\"charmedPeopleCountPerNight\":1,\"isPowerlessOnWerewolvesSide\":true},\"scandalmonger\":{\"markPenalty\":2},\"witch\":{\"doesKnowWerewolvesTargets\":false},\"prejudicedManipulator\":{\"isPowerlessOnWerewolvesSide\":true},\"actor\":{\"isPowerlessOnWerewolvesSide\":true,\"additionalCardsCount\":5}}}}\",\n    \"method\": \"POST\",\n  },\n], but it was called with \"\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "816"
          ],
          "coveredBy": [
            "816",
            "817"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 18
            },
            "start": {
              "column": 54,
              "line": 18
            }
          }
        },
        {
          "id": "1781",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games\",\n  Object {\n    \"body\": \"{\"players\":[],\"options\":{\"composition\":{\"isHidden\":true},\"votes\":{\"canBeSkipped\":false},\"roles\":{\"doSkipCallIfNoTarget\":false,\"areRevealedOnDeath\":true,\"sheriff\":{\"isEnabled\":true,\"electedAt\":{\"turn\":5445468096036864,\"phaseName\":\"night\"},\"hasDoubledVote\":false,\"mustSettleTieInVotes\":true},\"bigBadWolf\":{\"isPowerlessIfWerewolfDies\":true},\"whiteWerewolf\":{\"wakingUpInterval\":1},\"seer\":{\"isTalkative\":true,\"canSeeRoles\":false},\"cupid\":{\"lovers\":{\"doRevealRoleToEachOther\":false},\"mustWinWithLovers\":false},\"littleGirl\":{\"isProtectedByDefender\":true},\"defender\":{\"canProtectTwice\":true},\"elder\":{\"livesCountAgainstWerewolves\":1,\"doesTakeHisRevenge\":false},\"idiot\":{\"doesDieOnElderDeath\":true},\"twoSisters\":{\"wakingUpInterval\":1},\"threeBrothers\":{\"wakingUpInterval\":2},\"fox\":{\"isPowerlessIfMissesWerewolf\":false},\"bearTamer\":{\"doesGrowlOnWerewolvesSide\":false},\"stutteringJudge\":{\"voteRequestsCount\":2},\"wildChild\":{\"isTransformationRevealed\":false},\"wolfHound\":{\"isChosenSideRevealed\":false,\"isSideRandomlyChosen\":true},\"thief\":{\"mustChooseBetweenWerewolves\":true,\"isChosenCardRevealed\":true,\"additionalCardsCount\":1},\"piedPiper\":{\"charmedPeopleCountPerNight\":4,\"isPowerlessOnWerewolvesSide\":false},\"scandalmonger\":{\"markPenalty\":2},\"witch\":{\"doesKnowWerewolvesTargets\":false},\"prejudicedManipulator\":{\"isPowerlessOnWerewolvesSide\":true},\"actor\":{\"isPowerlessOnWerewolvesSide\":false,\"additionalCardsCount\":2}}}}\",\n    \"method\": \"POST\",\n  },\n], but it was called with \"/games\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "816"
          ],
          "coveredBy": [
            "816",
            "817"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 21
            },
            "start": {
              "column": 64,
              "line": 18
            }
          }
        },
        {
          "id": "1782",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "composables/api/game/useFetchGames.ts(19,9): error TS2322: Type '\"\"' is not assignable to type '\"delete\" | \"get\" | \"GET\" | \"HEAD\" | \"PATCH\" | \"POST\" | \"PUT\" | \"DELETE\" | \"CONNECT\" | \"OPTIONS\" | \"TRACE\" | \"head\" | \"patch\" | \"post\" | \"put\" | \"connect\" | \"options\" | \"trace\" | undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "816",
            "817"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 19
            },
            "start": {
              "column": 17,
              "line": 19
            }
          }
        },
        {
          "id": "1783",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useFetchGames.ts(16,60): error TS2366: Function lacks ending return statement and return type does not include 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "817"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 24
            },
            "start": {
              "column": 21,
              "line": 22
            }
          }
        },
        {
          "id": "1784",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useFetchGames.ts(27,43): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "818",
            "819"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 33
            },
            "start": {
              "column": 91,
              "line": 27
            }
          }
        },
        {
          "id": "1785",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useFetchGames.ts(27,43): error TS2366: Function lacks ending return statement and return type does not include 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "818",
            "819"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 30
            },
            "start": {
              "column": 9,
              "line": 28
            }
          }
        },
        {
          "id": "1786",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games/game-id\",\n  Object {\n    \"method\": \"GET\",\n  },\n], but it was called with \"\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "818"
          ],
          "coveredBy": [
            "818",
            "819"
          ],
          "location": {
            "end": {
              "column": 72,
              "line": 29
            },
            "start": {
              "column": 54,
              "line": 29
            }
          }
        },
        {
          "id": "1787",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games/game-id\",\n  Object {\n    \"method\": \"GET\",\n  },\n], but it was called with \"/games/game-id\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "818"
          ],
          "coveredBy": [
            "818",
            "819"
          ],
          "location": {
            "end": {
              "column": 91,
              "line": 29
            },
            "start": {
              "column": 74,
              "line": 29
            }
          }
        },
        {
          "id": "1788",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "composables/api/game/useFetchGames.ts(29,76): error TS2322: Type '\"\"' is not assignable to type '\"delete\" | \"get\" | \"GET\" | \"HEAD\" | \"PATCH\" | \"POST\" | \"PUT\" | \"DELETE\" | \"CONNECT\" | \"OPTIONS\" | \"TRACE\" | \"head\" | \"patch\" | \"post\" | \"put\" | \"connect\" | \"options\" | \"trace\" | undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "818",
            "819"
          ],
          "location": {
            "end": {
              "column": 89,
              "line": 29
            },
            "start": {
              "column": 84,
              "line": 29
            }
          }
        },
        {
          "id": "1789",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useFetchGames.ts(27,43): error TS2366: Function lacks ending return statement and return type does not include 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "819"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 32
            },
            "start": {
              "column": 21,
              "line": 30
            }
          }
        },
        {
          "id": "1790",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useFetchGames.ts(35,46): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "820",
            "821"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 41
            },
            "start": {
              "column": 94,
              "line": 35
            }
          }
        },
        {
          "id": "1791",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useFetchGames.ts(35,46): error TS2366: Function lacks ending return statement and return type does not include 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "820",
            "821"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 38
            },
            "start": {
              "column": 9,
              "line": 36
            }
          }
        },
        {
          "id": "1792",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games/game-id\",\n  Object {\n    \"method\": \"DELETE\",\n  },\n], but it was called with \"\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "820"
          ],
          "coveredBy": [
            "820",
            "821"
          ],
          "location": {
            "end": {
              "column": 72,
              "line": 37
            },
            "start": {
              "column": 54,
              "line": 37
            }
          }
        },
        {
          "id": "1793",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games/game-id\",\n  Object {\n    \"method\": \"DELETE\",\n  },\n], but it was called with \"/games/game-id\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "820"
          ],
          "coveredBy": [
            "820",
            "821"
          ],
          "location": {
            "end": {
              "column": 94,
              "line": 37
            },
            "start": {
              "column": 74,
              "line": 37
            }
          }
        },
        {
          "id": "1794",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "composables/api/game/useFetchGames.ts(37,76): error TS2322: Type '\"\"' is not assignable to type '\"delete\" | \"get\" | \"GET\" | \"HEAD\" | \"PATCH\" | \"POST\" | \"PUT\" | \"DELETE\" | \"CONNECT\" | \"OPTIONS\" | \"TRACE\" | \"head\" | \"patch\" | \"post\" | \"put\" | \"connect\" | \"options\" | \"trace\" | undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "820",
            "821"
          ],
          "location": {
            "end": {
              "column": 92,
              "line": 37
            },
            "start": {
              "column": 84,
              "line": 37
            }
          }
        },
        {
          "id": "1795",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useFetchGames.ts(35,46): error TS2366: Function lacks ending return statement and return type does not include 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "821"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 40
            },
            "start": {
              "column": 21,
              "line": 38
            }
          }
        },
        {
          "id": "1796",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useFetchGames.ts(43,82): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "822",
            "823"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 52
            },
            "start": {
              "column": 130,
              "line": 43
            }
          }
        },
        {
          "id": "1797",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useFetchGames.ts(43,82): error TS2366: Function lacks ending return statement and return type does not include 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "822",
            "823"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 49
            },
            "start": {
              "column": 9,
              "line": 44
            }
          }
        },
        {
          "id": "1798",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games/game-id/play\",\n  Object {\n    \"body\": \"{}\",\n    \"method\": \"POST\",\n  },\n], but it was called with \"\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "822"
          ],
          "coveredBy": [
            "822",
            "823"
          ],
          "location": {
            "end": {
              "column": 77,
              "line": 45
            },
            "start": {
              "column": 54,
              "line": 45
            }
          }
        },
        {
          "id": "1799",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games/game-id/play\",\n  Object {\n    \"body\": \"{}\",\n    \"method\": \"POST\",\n  },\n], but it was called with \"/games/game-id/play\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "822"
          ],
          "coveredBy": [
            "822",
            "823"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 48
            },
            "start": {
              "column": 79,
              "line": 45
            }
          }
        },
        {
          "id": "1800",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "composables/api/game/useFetchGames.ts(46,9): error TS2322: Type '\"\"' is not assignable to type '\"delete\" | \"get\" | \"GET\" | \"HEAD\" | \"PATCH\" | \"POST\" | \"PUT\" | \"DELETE\" | \"CONNECT\" | \"OPTIONS\" | \"TRACE\" | \"head\" | \"patch\" | \"post\" | \"put\" | \"connect\" | \"options\" | \"trace\" | undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "822",
            "823"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 46
            },
            "start": {
              "column": 17,
              "line": 46
            }
          }
        },
        {
          "id": "1801",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useFetchGames.ts(43,82): error TS2366: Function lacks ending return statement and return type does not include 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "823"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 51
            },
            "start": {
              "column": 21,
              "line": 49
            }
          }
        },
        {
          "id": "1802",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "composables/api/game/useFetchGames.ts(53,3): error TS2739: Type '{}' is missing the following properties from type 'UseFetchGames': createGame, getGame, cancelGame, makeGamePlay\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213",
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242",
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "310",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "319",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327",
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468",
            "479",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "488",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "596",
            "597",
            "598",
            "599",
            "600",
            "601",
            "602",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634",
            "665",
            "666",
            "667",
            "668",
            "669",
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677",
            "678",
            "679",
            "680",
            "681",
            "682",
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713",
            "726",
            "727",
            "728",
            "729",
            "730",
            "731",
            "732",
            "733",
            "734",
            "735",
            "736",
            "737",
            "738",
            "739",
            "740",
            "816",
            "817",
            "818",
            "819",
            "820",
            "821",
            "822",
            "823",
            "845",
            "846",
            "847",
            "848",
            "926",
            "927",
            "928",
            "929",
            "939",
            "957",
            "958",
            "959",
            "991"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 58
            },
            "start": {
              "column": 10,
              "line": 53
            }
          }
        }
      ],
      "source": "import type { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport type { MakeGamePlayDto } from \"~/composables/api/game/dto/make-game-play/make-game-play.dto\";\nimport type { Game } from \"~/composables/api/game/types/game.class\";\nimport { useWerewolvesAssistantApi } from \"~/composables/api/useWerewolvesAssistantApi\";\n\ntype UseFetchGames = {\n  createGame: (createGameDto: CreateGameDto) => Promise<ReturnType<typeof $fetch<Game>> | null>;\n  getGame: (gameId: string) => Promise<ReturnType<typeof $fetch<Game>> | null>;\n  cancelGame: (gameId: string) => Promise<ReturnType<typeof $fetch<Game>> | null>;\n  makeGamePlay: (gameId: string, makeGamePlayDto: MakeGamePlayDto) => Promise<ReturnType<typeof $fetch<Game>> | null>;\n};\n\nfunction useFetchGames(): UseFetchGames {\n  const { fetchWerewolvesAssistantApi } = useWerewolvesAssistantApi();\n\n  async function createGame(createGameDto: CreateGameDto): Promise<ReturnType<typeof $fetch<Game>> | null> {\n    try {\n      return await fetchWerewolvesAssistantApi<Game>(`/games`, {\n        method: \"POST\",\n        body: JSON.stringify(createGameDto),\n      });\n    } catch (error) {\n      return null;\n    }\n  }\n\n  async function getGame(gameId: string): Promise<ReturnType<typeof $fetch<Game>> | null> {\n    try {\n      return await fetchWerewolvesAssistantApi<Game>(`/games/${gameId}`, { method: \"GET\" });\n    } catch (error) {\n      return null;\n    }\n  }\n\n  async function cancelGame(gameId: string): Promise<ReturnType<typeof $fetch<Game>> | null> {\n    try {\n      return await fetchWerewolvesAssistantApi<Game>(`/games/${gameId}`, { method: \"DELETE\" });\n    } catch (error) {\n      return null;\n    }\n  }\n\n  async function makeGamePlay(gameId: string, makeGamePlayDto: MakeGamePlayDto): Promise<ReturnType<typeof $fetch<Game>> | null> {\n    try {\n      return await fetchWerewolvesAssistantApi<Game>(`/games/${gameId}/play`, {\n        method: \"POST\",\n        body: JSON.stringify(makeGamePlayDto),\n      });\n    } catch (error) {\n      return null;\n    }\n  }\n  return {\n    createGame,\n    getGame,\n    cancelGame,\n    makeGamePlay,\n  };\n}\n\nexport { useFetchGames };"
    },
    "composables/api/game/useFetchRandomGameComposition.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1803",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useFetchRandomGameComposition.ts(18,43): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "1012"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 27
            },
            "start": {
              "column": 73,
              "line": 18
            }
          }
        },
        {
          "id": "1804",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useFetchRandomGameComposition.ts(21,84): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "1012"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 25
            },
            "start": {
              "column": 149,
              "line": 21
            }
          }
        },
        {
          "id": "1805",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games/random-composition?stringifiedQuery\",\n  Object {\n    \"method\": \"GET\",\n  },\n], but it was called with \"\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "1012"
          ],
          "coveredBy": [
            "1012"
          ],
          "location": {
            "end": {
              "column": 117,
              "line": 24
            },
            "start": {
              "column": 70,
              "line": 24
            }
          }
        },
        {
          "id": "1806",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/games/random-composition?stringifiedQuery\",\n  Object {\n    \"method\": \"GET\",\n  },\n], but it was called with \"/games/random-composition?stringifiedQuery\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "1012"
          ],
          "coveredBy": [
            "1012"
          ],
          "location": {
            "end": {
              "column": 136,
              "line": 24
            },
            "start": {
              "column": 119,
              "line": 24
            }
          }
        },
        {
          "id": "1807",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "composables/api/game/useFetchRandomGameComposition.ts(24,121): error TS2322: Type '\"\"' is not assignable to type '\"delete\" | \"get\" | \"GET\" | \"HEAD\" | \"PATCH\" | \"POST\" | \"PUT\" | \"DELETE\" | \"CONNECT\" | \"OPTIONS\" | \"TRACE\" | \"head\" | \"patch\" | \"post\" | \"put\" | \"connect\" | \"options\" | \"trace\" | undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "1012"
          ],
          "location": {
            "end": {
              "column": 134,
              "line": 24
            },
            "start": {
              "column": 129,
              "line": 24
            }
          }
        },
        {
          "id": "1808",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "composables/api/game/useFetchRandomGameComposition.ts(26,3): error TS2741: Property 'fetchRandomGameComposition' is missing in type '{}' but required in type 'UseFetchRandomGameComposition'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "1012"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 26
            },
            "start": {
              "column": 10,
              "line": 26
            }
          }
        }
      ],
      "source": "import { stringify } from \"qs\";\n\nimport type { CreateGamePlayerDto } from \"~/composables/api/game/dto/create-game/create-game-player/create-game-player.dto\";\nimport type { RoleName } from \"~/composables/api/role/types/role.types\";\nimport { useWerewolvesAssistantApi } from \"~/composables/api/useWerewolvesAssistantApi\";\n\ntype GetRandomGameCompositionQuery = {\n  players: { name: string }[];\n  excludedRoles?: RoleName[];\n};\n\ntype UseFetchRandomGameComposition = {\n  fetchRandomGameComposition: (\n    query: GetRandomGameCompositionQuery,\n  ) => Promise<ReturnType<typeof $fetch<CreateGamePlayerDto[] | null>>>;\n};\n\nfunction useFetchRandomGameComposition(): UseFetchRandomGameComposition {\n  const { fetchWerewolvesAssistantApi } = useWerewolvesAssistantApi();\n\n  async function fetchRandomGameComposition(query: GetRandomGameCompositionQuery): Promise<ReturnType<typeof $fetch<CreateGamePlayerDto[] | null>>> {\n    const stringifiedQuery = stringify(query);\n\n    return fetchWerewolvesAssistantApi<CreateGamePlayerDto[] | null>(`/games/random-composition?${stringifiedQuery}`, { method: \"GET\" });\n  }\n  return { fetchRandomGameComposition };\n}\n\nexport { useFetchRandomGameComposition };"
    },
    "composables/api/game/useGameSource.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1809",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useGameSource.ts(11,31): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "683",
            "684",
            "685",
            "686",
            "687",
            "1010",
            "1011"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 25
            },
            "start": {
              "column": 49,
              "line": 11
            }
          }
        },
        {
          "id": "1810",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useGameSource.ts(15,83): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "683",
            "684",
            "685",
            "686",
            "687",
            "1010",
            "1011"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 23
            },
            "start": {
              "column": 90,
              "line": 15
            }
          }
        },
        {
          "id": "1811",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Game Over History Record Source Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "683"
          ],
          "coveredBy": [
            "683",
            "684",
            "685",
            "686",
            "687",
            "1010",
            "1011"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 16
            },
            "start": {
              "column": 9,
              "line": 16
            }
          }
        },
        {
          "id": "1812",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected 'shared.role.definiteName.sheriff, 1' to be 'shared.game.player.attribute.definite…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "1010"
          ],
          "coveredBy": [
            "683",
            "684",
            "685",
            "686",
            "687",
            "1010",
            "1011"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 16
            },
            "start": {
              "column": 9,
              "line": 16
            }
          }
        },
        {
          "id": "1813",
          "mutatorName": "EqualityOperator",
          "replacement": "gameSource !== \"sheriff\"",
          "statusReason": "Snapshot `Game Over History Record Source Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "683"
          ],
          "coveredBy": [
            "683",
            "684",
            "685",
            "686",
            "687",
            "1010",
            "1011"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 16
            },
            "start": {
              "column": 9,
              "line": 16
            }
          }
        },
        {
          "id": "1814",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "composables/api/game/useGameSource.ts(16,9): error TS2367: This comparison appears to be unintentional because the types '\"werewolf\" | \"big-bad-wolf\" | \"accursed-wolf-father\" | \"white-werewolf\" | \"villager\" | \"villager-villager\" | \"seer\" | \"cupid\" | \"witch\" | \"hunter\" | \"little-girl\" | \"defender\" | ... 23 more ... | \"lovers\"' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "683",
            "684",
            "685",
            "686",
            "687",
            "1010",
            "1011"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 16
            },
            "start": {
              "column": 24,
              "line": 16
            }
          }
        },
        {
          "id": "1815",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected 'shared.role.definiteName.sheriff, 1' to be 'shared.game.player.attribute.definite…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "1010"
          ],
          "coveredBy": [
            "1010"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 18
            },
            "start": {
              "column": 35,
              "line": 16
            }
          }
        },
        {
          "id": "1816",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected ', 1' to be 'shared.game.player.attribute.definite…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "1010"
          ],
          "coveredBy": [
            "1010"
          ],
          "location": {
            "end": {
              "column": 67,
              "line": 17
            },
            "start": {
              "column": 16,
              "line": 17
            }
          }
        },
        {
          "id": "1817",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'shared.game.player.group.definiteName…' to be 'shared.role.definiteName.werewolf, 1' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 9,
          "static": false,
          "killedBy": [
            "1011"
          ],
          "coveredBy": [
            "683",
            "684",
            "685",
            "686",
            "687",
            "1010",
            "1011"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 19
            },
            "start": {
              "column": 9,
              "line": 19
            }
          }
        },
        {
          "id": "1818",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected 'shared.role.definiteName.werewolves, 1' to be 'shared.game.player.group.definiteName…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "1010"
          ],
          "coveredBy": [
            "683",
            "684",
            "685",
            "686",
            "687",
            "1010",
            "1011"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 19
            },
            "start": {
              "column": 9,
              "line": 19
            }
          }
        },
        {
          "id": "1819",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Game Over History Record Source Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "683"
          ],
          "coveredBy": [
            "683",
            "684",
            "685",
            "686",
            "687",
            "1010"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 21
            },
            "start": {
              "column": 60,
              "line": 19
            }
          }
        },
        {
          "id": "1820",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Over History Record Source Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "683"
          ],
          "coveredBy": [
            "683",
            "684",
            "685",
            "686",
            "687",
            "1010"
          ],
          "location": {
            "end": {
              "column": 69,
              "line": 20
            },
            "start": {
              "column": 16,
              "line": 20
            }
          }
        },
        {
          "id": "1821",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "composables/api/game/useGameSource.ts(24,3): error TS2741: Property 'getDefiniteGameSourceNameLabel' is missing in type '{}' but required in type 'UseGameSourceName'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "683",
            "684",
            "685",
            "686",
            "687",
            "1010",
            "1011"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 24
            },
            "start": {
              "column": 10,
              "line": 24
            }
          }
        }
      ],
      "source": "import { PLAYER_GROUPS } from \"~/composables/api/game/constants/player/player.constants\";\nimport type { GameSource } from \"~/composables/api/game/types/game.types\";\nimport type { PlayerGroup } from \"~/composables/api/game/types/players/player.types\";\nimport type { RoleName } from \"~/composables/api/role/types/role.types\";\nimport { useRoleName } from \"~/composables/api/role/useRoleName\";\n\ntype UseGameSourceName = {\n  getDefiniteGameSourceNameLabel: (gameSource: GameSource, count: number) => string;\n};\n\nfunction useGameSourceName(): UseGameSourceName {\n  const { t } = useI18n();\n  const { getDefiniteRoleNameLabel } = useRoleName();\n\n  function getDefiniteGameSourceNameLabel(gameSource: GameSource, count: number): string {\n    if (gameSource === \"sheriff\") {\n      return t(`shared.game.player.attribute.definiteName.sheriff`, count);\n    }\n    if (PLAYER_GROUPS.includes(gameSource as PlayerGroup)) {\n      return t(`shared.game.player.group.definiteName.${gameSource}`, count);\n    }\n    return getDefiniteRoleNameLabel(gameSource as RoleName, count);\n  }\n  return { getDefiniteGameSourceNameLabel };\n}\n\nexport { useGameSourceName };"
    },
    "composables/api/game/useMakeGamePlayDtoValidation.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1822",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(15,96): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "90",
            "91",
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99",
            "100",
            "101",
            "102",
            "103",
            "104",
            "105",
            "106",
            "107",
            "108",
            "109",
            "110",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 63
            },
            "start": {
              "column": 125,
              "line": 15
            }
          }
        },
        {
          "id": "1823",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(16,63): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'ComputedGetter<boolean>'.\n      Type 'void' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'WritableComputedOptions<boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "90",
            "91",
            "92",
            "93",
            "94",
            "95",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 27
            },
            "start": {
              "column": 69,
              "line": 16
            }
          }
        },
        {
          "id": "1824",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(20,29): error TS18047: 'game.value.currentPlay' is possibly 'null'.\ncomposables/api/game/useMakeGamePlayDtoValidation.ts(26,12): error TS18048: 'votes' is possibly 'undefined'.\ncomposables/api/game/useMakeGamePlayDtoValidation.ts(26,28): error TS18048: 'voteInteraction' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "90",
            "91",
            "92",
            "93",
            "94",
            "95",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 93,
              "line": 17
            },
            "start": {
              "column": 9,
              "line": 17
            }
          }
        },
        {
          "id": "1825",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(20,29): error TS18047: 'game.value.currentPlay' is possibly 'null'.\ncomposables/api/game/useMakeGamePlayDtoValidation.ts(26,12): error TS18048: 'votes' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "90",
            "91",
            "92",
            "93",
            "94",
            "95",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 93,
              "line": 17
            },
            "start": {
              "column": 9,
              "line": 17
            }
          }
        },
        {
          "id": "1826",
          "mutatorName": "LogicalOperator",
          "replacement": "game.value.currentPlay?.type !== \"vote\" && makeGamePlayDto.value.votes === undefined",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(20,29): error TS18047: 'game.value.currentPlay' is possibly 'null'.\ncomposables/api/game/useMakeGamePlayDtoValidation.ts(26,12): error TS18048: 'votes' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "90",
            "91",
            "92",
            "93",
            "94",
            "95",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 93,
              "line": 17
            },
            "start": {
              "column": 9,
              "line": 17
            }
          }
        },
        {
          "id": "1827",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(20,29): error TS18047: 'game.value.currentPlay' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "90",
            "91",
            "92",
            "93",
            "94",
            "95",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 17
            },
            "start": {
              "column": 9,
              "line": 17
            }
          }
        },
        {
          "id": "1828",
          "mutatorName": "EqualityOperator",
          "replacement": "game.value.currentPlay?.type === \"vote\"",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(20,29): error TS18047: 'game.value.currentPlay' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "90",
            "91",
            "92",
            "93",
            "94",
            "95",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 17
            },
            "start": {
              "column": 9,
              "line": 17
            }
          }
        },
        {
          "id": "1829",
          "mutatorName": "OptionalChaining",
          "replacement": "game.value.currentPlay.type",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(17,9): error TS18047: 'game.value.currentPlay' is possibly 'null'.\ncomposables/api/game/useMakeGamePlayDtoValidation.ts(20,29): error TS18047: 'game.value.currentPlay' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "90",
            "91",
            "92",
            "93",
            "94",
            "95",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 17
            },
            "start": {
              "column": 9,
              "line": 17
            }
          }
        },
        {
          "id": "1830",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(17,9): error TS2367: This comparison appears to be unintentional because the types '\"no-action\" | \"vote\" | \"target\" | \"choose-card\" | \"choose-side\" | \"request-another-vote\" | \"bury-dead-bodies\" | undefined' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "90",
            "91",
            "92",
            "93",
            "94",
            "95",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 17
            },
            "start": {
              "column": 42,
              "line": 17
            }
          }
        },
        {
          "id": "1831",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(26,12): error TS18048: 'votes' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "91",
            "92",
            "93",
            "94",
            "95",
            "111"
          ],
          "location": {
            "end": {
              "column": 93,
              "line": 17
            },
            "start": {
              "column": 52,
              "line": 17
            }
          }
        },
        {
          "id": "1832",
          "mutatorName": "EqualityOperator",
          "replacement": "makeGamePlayDto.value.votes !== undefined",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(26,12): error TS18048: 'votes' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "91",
            "92",
            "93",
            "94",
            "95",
            "111"
          ],
          "location": {
            "end": {
              "column": 93,
              "line": 17
            },
            "start": {
              "column": 52,
              "line": 17
            }
          }
        },
        {
          "id": "1833",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(18,29): error TS18047: 'game.value.currentPlay' is possibly 'null'.\ncomposables/api/game/useMakeGamePlayDtoValidation.ts(24,12): error TS18048: 'votes' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "90",
            "92",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 19
            },
            "start": {
              "column": 95,
              "line": 17
            }
          }
        },
        {
          "id": "1834",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "90"
          ],
          "coveredBy": [
            "90",
            "92",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 18
            },
            "start": {
              "column": 14,
              "line": 18
            }
          }
        },
        {
          "id": "1835",
          "mutatorName": "OptionalChaining",
          "replacement": "game.value.currentPlay.source.interactions[0]",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(20,29): error TS18048: 'game.value.currentPlay.source.interactions' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "91",
            "93",
            "94",
            "95",
            "111"
          ],
          "location": {
            "end": {
              "column": 76,
              "line": 20
            },
            "start": {
              "column": 29,
              "line": 20
            }
          }
        },
        {
          "id": "1836",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(26,12): error TS18048: 'votes' is possibly 'undefined'.\ncomposables/api/game/useMakeGamePlayDtoValidation.ts(26,28): error TS18048: 'voteInteraction' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "91",
            "93",
            "94",
            "95",
            "111"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 21
            },
            "start": {
              "column": 9,
              "line": 21
            }
          }
        },
        {
          "id": "1837",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(26,28): error TS18048: 'voteInteraction' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "91",
            "93",
            "94",
            "95",
            "111"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 21
            },
            "start": {
              "column": 9,
              "line": 21
            }
          }
        },
        {
          "id": "1838",
          "mutatorName": "EqualityOperator",
          "replacement": "voteInteraction !== undefined",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(26,28): error TS18048: 'voteInteraction' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "91",
            "93",
            "94",
            "95",
            "111"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 21
            },
            "start": {
              "column": 9,
              "line": 21
            }
          }
        },
        {
          "id": "1839",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(24,28): error TS18048: 'voteInteraction' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "91"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 23
            },
            "start": {
              "column": 40,
              "line": 21
            }
          }
        },
        {
          "id": "1840",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "91"
          ],
          "coveredBy": [
            "91"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 22
            },
            "start": {
              "column": 14,
              "line": 22
            }
          }
        },
        {
          "id": "1841",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "93"
          ],
          "coveredBy": [
            "93",
            "94",
            "95",
            "111"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 26
            },
            "start": {
              "column": 12,
              "line": 26
            }
          }
        },
        {
          "id": "1842",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "94"
          ],
          "coveredBy": [
            "93",
            "94",
            "95",
            "111"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 26
            },
            "start": {
              "column": 12,
              "line": 26
            }
          }
        },
        {
          "id": "1843",
          "mutatorName": "EqualityOperator",
          "replacement": "votes.length > voteInteraction.boundaries.min",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "94"
          ],
          "coveredBy": [
            "93",
            "94",
            "95",
            "111"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 26
            },
            "start": {
              "column": 12,
              "line": 26
            }
          }
        },
        {
          "id": "1844",
          "mutatorName": "EqualityOperator",
          "replacement": "votes.length < voteInteraction.boundaries.min",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "93"
          ],
          "coveredBy": [
            "93",
            "94",
            "95",
            "111"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 26
            },
            "start": {
              "column": 12,
              "line": 26
            }
          }
        },
        {
          "id": "1845",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(29,65): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'ComputedGetter<boolean>'.\n      Type 'void' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean>', gave the following error.\n    Argument of type '() => void' is not assignable to parameter of type 'WritableComputedOptions<boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "96",
            "97",
            "98",
            "99",
            "100",
            "101",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 41
            },
            "start": {
              "column": 71,
              "line": 29
            }
          }
        },
        {
          "id": "1846",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(34,31): error TS18047: 'game.value.currentPlay' is possibly 'null'.\ncomposables/api/game/useMakeGamePlayDtoValidation.ts(40,12): error TS18048: 'targets' is possibly 'undefined'.\ncomposables/api/game/useMakeGamePlayDtoValidation.ts(40,30): error TS18048: 'targetInteraction' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "96",
            "97",
            "98",
            "99",
            "100",
            "101",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 97,
              "line": 30
            },
            "start": {
              "column": 9,
              "line": 30
            }
          }
        },
        {
          "id": "1847",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(34,31): error TS18047: 'game.value.currentPlay' is possibly 'null'.\ncomposables/api/game/useMakeGamePlayDtoValidation.ts(40,12): error TS18048: 'targets' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "96",
            "97",
            "98",
            "99",
            "100",
            "101",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 97,
              "line": 30
            },
            "start": {
              "column": 9,
              "line": 30
            }
          }
        },
        {
          "id": "1848",
          "mutatorName": "LogicalOperator",
          "replacement": "game.value.currentPlay?.type !== \"target\" && makeGamePlayDto.value.targets === undefined",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(34,31): error TS18047: 'game.value.currentPlay' is possibly 'null'.\ncomposables/api/game/useMakeGamePlayDtoValidation.ts(40,12): error TS18048: 'targets' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "96",
            "97",
            "98",
            "99",
            "100",
            "101",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 97,
              "line": 30
            },
            "start": {
              "column": 9,
              "line": 30
            }
          }
        },
        {
          "id": "1849",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(34,31): error TS18047: 'game.value.currentPlay' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "96",
            "97",
            "98",
            "99",
            "100",
            "101",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 30
            },
            "start": {
              "column": 9,
              "line": 30
            }
          }
        },
        {
          "id": "1850",
          "mutatorName": "EqualityOperator",
          "replacement": "game.value.currentPlay?.type === \"target\"",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(34,31): error TS18047: 'game.value.currentPlay' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "96",
            "97",
            "98",
            "99",
            "100",
            "101",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 30
            },
            "start": {
              "column": 9,
              "line": 30
            }
          }
        },
        {
          "id": "1851",
          "mutatorName": "OptionalChaining",
          "replacement": "game.value.currentPlay.type",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(30,9): error TS18047: 'game.value.currentPlay' is possibly 'null'.\ncomposables/api/game/useMakeGamePlayDtoValidation.ts(34,31): error TS18047: 'game.value.currentPlay' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "96",
            "97",
            "98",
            "99",
            "100",
            "101",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 30
            },
            "start": {
              "column": 9,
              "line": 30
            }
          }
        },
        {
          "id": "1852",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(30,9): error TS2367: This comparison appears to be unintentional because the types '\"no-action\" | \"vote\" | \"target\" | \"choose-card\" | \"choose-side\" | \"request-another-vote\" | \"bury-dead-bodies\" | undefined' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "96",
            "97",
            "98",
            "99",
            "100",
            "101",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 30
            },
            "start": {
              "column": 42,
              "line": 30
            }
          }
        },
        {
          "id": "1853",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(40,12): error TS18048: 'targets' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "97",
            "98",
            "99",
            "100",
            "101",
            "111"
          ],
          "location": {
            "end": {
              "column": 97,
              "line": 30
            },
            "start": {
              "column": 54,
              "line": 30
            }
          }
        },
        {
          "id": "1854",
          "mutatorName": "EqualityOperator",
          "replacement": "makeGamePlayDto.value.targets !== undefined",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(40,12): error TS18048: 'targets' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "97",
            "98",
            "99",
            "100",
            "101",
            "111"
          ],
          "location": {
            "end": {
              "column": 97,
              "line": 30
            },
            "start": {
              "column": 54,
              "line": 30
            }
          }
        },
        {
          "id": "1855",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(32,31): error TS18047: 'game.value.currentPlay' is possibly 'null'.\ncomposables/api/game/useMakeGamePlayDtoValidation.ts(38,12): error TS18048: 'targets' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "96",
            "98",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 32
            },
            "start": {
              "column": 99,
              "line": 30
            }
          }
        },
        {
          "id": "1856",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "96"
          ],
          "coveredBy": [
            "96",
            "98",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 31
            },
            "start": {
              "column": 14,
              "line": 31
            }
          }
        },
        {
          "id": "1857",
          "mutatorName": "OptionalChaining",
          "replacement": "game.value.currentPlay.source.interactions[0]",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(34,31): error TS18048: 'game.value.currentPlay.source.interactions' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "97",
            "99",
            "100",
            "101",
            "111"
          ],
          "location": {
            "end": {
              "column": 78,
              "line": 34
            },
            "start": {
              "column": 31,
              "line": 34
            }
          }
        },
        {
          "id": "1858",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(40,12): error TS18048: 'targets' is possibly 'undefined'.\ncomposables/api/game/useMakeGamePlayDtoValidation.ts(40,30): error TS18048: 'targetInteraction' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "97",
            "99",
            "100",
            "101",
            "111"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 35
            },
            "start": {
              "column": 9,
              "line": 35
            }
          }
        },
        {
          "id": "1859",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(40,30): error TS18048: 'targetInteraction' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "97",
            "99",
            "100",
            "101",
            "111"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 35
            },
            "start": {
              "column": 9,
              "line": 35
            }
          }
        },
        {
          "id": "1860",
          "mutatorName": "EqualityOperator",
          "replacement": "targetInteraction !== undefined",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(40,30): error TS18048: 'targetInteraction' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "97",
            "99",
            "100",
            "101",
            "111"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 35
            },
            "start": {
              "column": 9,
              "line": 35
            }
          }
        },
        {
          "id": "1861",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(38,30): error TS18048: 'targetInteraction' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "97"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 37
            },
            "start": {
              "column": 42,
              "line": 35
            }
          }
        },
        {
          "id": "1862",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "97"
          ],
          "coveredBy": [
            "97"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 36
            },
            "start": {
              "column": 14,
              "line": 36
            }
          }
        },
        {
          "id": "1863",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "99"
          ],
          "coveredBy": [
            "99",
            "100",
            "101",
            "111"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 40
            },
            "start": {
              "column": 12,
              "line": 40
            }
          }
        },
        {
          "id": "1864",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "100"
          ],
          "coveredBy": [
            "99",
            "100",
            "101",
            "111"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 40
            },
            "start": {
              "column": 12,
              "line": 40
            }
          }
        },
        {
          "id": "1865",
          "mutatorName": "EqualityOperator",
          "replacement": "targets.length > targetInteraction.boundaries.min",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "100"
          ],
          "coveredBy": [
            "99",
            "100",
            "101",
            "111"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 40
            },
            "start": {
              "column": 12,
              "line": 40
            }
          }
        },
        {
          "id": "1866",
          "mutatorName": "EqualityOperator",
          "replacement": "targets.length < targetInteraction.boundaries.min",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "99"
          ],
          "coveredBy": [
            "99",
            "100",
            "101",
            "111"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 40
            },
            "start": {
              "column": 12,
              "line": 40
            }
          }
        },
        {
          "id": "1867",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(43,51): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Type 'undefined' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean>', gave the following error.\n    Argument of type '() => undefined' is not assignable to parameter of type 'WritableComputedOptions<boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "90",
            "91",
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99",
            "100",
            "101",
            "102",
            "103",
            "104",
            "105",
            "106",
            "107",
            "108",
            "109",
            "110",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 173,
              "line": 43
            },
            "start": {
              "column": 69,
              "line": 43
            }
          }
        },
        {
          "id": "1868",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "102"
          ],
          "coveredBy": [
            "102",
            "103",
            "104",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 173,
              "line": 43
            },
            "start": {
              "column": 75,
              "line": 43
            }
          }
        },
        {
          "id": "1869",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "104"
          ],
          "coveredBy": [
            "102",
            "103",
            "104",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 173,
              "line": 43
            },
            "start": {
              "column": 75,
              "line": 43
            }
          }
        },
        {
          "id": "1870",
          "mutatorName": "LogicalOperator",
          "replacement": "game.value.currentPlay?.type === \"choose-card\" || makeGamePlayDto.value.chosenCardId !== undefined",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 9,
          "static": false,
          "killedBy": [
            "102"
          ],
          "coveredBy": [
            "102",
            "103",
            "104",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 173,
              "line": 43
            },
            "start": {
              "column": 75,
              "line": 43
            }
          }
        },
        {
          "id": "1871",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "102"
          ],
          "coveredBy": [
            "102",
            "103",
            "104",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 121,
              "line": 43
            },
            "start": {
              "column": 75,
              "line": 43
            }
          }
        },
        {
          "id": "1872",
          "mutatorName": "EqualityOperator",
          "replacement": "game.value.currentPlay?.type !== \"choose-card\"",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "102"
          ],
          "coveredBy": [
            "102",
            "103",
            "104",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 121,
              "line": 43
            },
            "start": {
              "column": 75,
              "line": 43
            }
          }
        },
        {
          "id": "1873",
          "mutatorName": "OptionalChaining",
          "replacement": "game.value.currentPlay.type",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(43,75): error TS18047: 'game.value.currentPlay' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "102",
            "103",
            "104",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 103,
              "line": 43
            },
            "start": {
              "column": 75,
              "line": 43
            }
          }
        },
        {
          "id": "1874",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(43,75): error TS2367: This comparison appears to be unintentional because the types '\"no-action\" | \"vote\" | \"target\" | \"choose-card\" | \"choose-side\" | \"request-another-vote\" | \"bury-dead-bodies\" | undefined' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "102",
            "103",
            "104",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 121,
              "line": 43
            },
            "start": {
              "column": 108,
              "line": 43
            }
          }
        },
        {
          "id": "1875",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "103"
          ],
          "coveredBy": [
            "103",
            "104",
            "111"
          ],
          "location": {
            "end": {
              "column": 173,
              "line": 43
            },
            "start": {
              "column": 125,
              "line": 43
            }
          }
        },
        {
          "id": "1876",
          "mutatorName": "EqualityOperator",
          "replacement": "makeGamePlayDto.value.chosenCardId === undefined",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "103"
          ],
          "coveredBy": [
            "103",
            "104",
            "111"
          ],
          "location": {
            "end": {
              "column": 173,
              "line": 43
            },
            "start": {
              "column": 125,
              "line": 43
            }
          }
        },
        {
          "id": "1877",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(45,51): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Type 'undefined' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean>', gave the following error.\n    Argument of type '() => undefined' is not assignable to parameter of type 'WritableComputedOptions<boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "90",
            "91",
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99",
            "100",
            "101",
            "102",
            "103",
            "104",
            "105",
            "106",
            "107",
            "108",
            "109",
            "110",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 171,
              "line": 45
            },
            "start": {
              "column": 69,
              "line": 45
            }
          }
        },
        {
          "id": "1878",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "105"
          ],
          "coveredBy": [
            "105",
            "106",
            "107",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 171,
              "line": 45
            },
            "start": {
              "column": 75,
              "line": 45
            }
          }
        },
        {
          "id": "1879",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "107"
          ],
          "coveredBy": [
            "105",
            "106",
            "107",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 171,
              "line": 45
            },
            "start": {
              "column": 75,
              "line": 45
            }
          }
        },
        {
          "id": "1880",
          "mutatorName": "LogicalOperator",
          "replacement": "game.value.currentPlay?.type === \"choose-side\" || makeGamePlayDto.value.chosenSide !== undefined",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "105"
          ],
          "coveredBy": [
            "105",
            "106",
            "107",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 171,
              "line": 45
            },
            "start": {
              "column": 75,
              "line": 45
            }
          }
        },
        {
          "id": "1881",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "105"
          ],
          "coveredBy": [
            "105",
            "106",
            "107",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 121,
              "line": 45
            },
            "start": {
              "column": 75,
              "line": 45
            }
          }
        },
        {
          "id": "1882",
          "mutatorName": "EqualityOperator",
          "replacement": "game.value.currentPlay?.type !== \"choose-side\"",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "105"
          ],
          "coveredBy": [
            "105",
            "106",
            "107",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 121,
              "line": 45
            },
            "start": {
              "column": 75,
              "line": 45
            }
          }
        },
        {
          "id": "1883",
          "mutatorName": "OptionalChaining",
          "replacement": "game.value.currentPlay.type",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(45,75): error TS18047: 'game.value.currentPlay' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "105",
            "106",
            "107",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 103,
              "line": 45
            },
            "start": {
              "column": 75,
              "line": 45
            }
          }
        },
        {
          "id": "1884",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(45,75): error TS2367: This comparison appears to be unintentional because the types '\"no-action\" | \"vote\" | \"target\" | \"choose-card\" | \"choose-side\" | \"request-another-vote\" | \"bury-dead-bodies\" | undefined' and '\"\"' have no overlap.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "105",
            "106",
            "107",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 121,
              "line": 45
            },
            "start": {
              "column": 108,
              "line": 45
            }
          }
        },
        {
          "id": "1885",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "106"
          ],
          "coveredBy": [
            "106",
            "107",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 171,
              "line": 45
            },
            "start": {
              "column": 125,
              "line": 45
            }
          }
        },
        {
          "id": "1886",
          "mutatorName": "EqualityOperator",
          "replacement": "makeGamePlayDto.value.chosenSide === undefined",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "106"
          ],
          "coveredBy": [
            "106",
            "107",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 171,
              "line": 45
            },
            "start": {
              "column": 125,
              "line": 45
            }
          }
        },
        {
          "id": "1887",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(47,35): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Type 'undefined' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean>', gave the following error.\n    Argument of type '() => undefined' is not assignable to parameter of type 'WritableComputedOptions<boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "90",
            "91",
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99",
            "100",
            "101",
            "102",
            "103",
            "104",
            "105",
            "106",
            "107",
            "108",
            "109",
            "110",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 104,
              "line": 47
            },
            "start": {
              "column": 53,
              "line": 47
            }
          }
        },
        {
          "id": "1888",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be falsy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "108"
          ],
          "coveredBy": [
            "108",
            "109",
            "110",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 104,
              "line": 47
            },
            "start": {
              "column": 59,
              "line": 47
            }
          }
        },
        {
          "id": "1889",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected 'true' to be 'false' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "629"
          ],
          "coveredBy": [
            "108",
            "109",
            "110",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 104,
              "line": 47
            },
            "start": {
              "column": 59,
              "line": 47
            }
          }
        },
        {
          "id": "1890",
          "mutatorName": "EqualityOperator",
          "replacement": "game.value.currentPlay?.canBeSkipped !== true",
          "statusReason": "expected true to be falsy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "108"
          ],
          "coveredBy": [
            "108",
            "109",
            "110",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 104,
              "line": 47
            },
            "start": {
              "column": 59,
              "line": 47
            }
          }
        },
        {
          "id": "1891",
          "mutatorName": "OptionalChaining",
          "replacement": "game.value.currentPlay.canBeSkipped",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(47,59): error TS18047: 'game.value.currentPlay' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "108",
            "109",
            "110",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 95,
              "line": 47
            },
            "start": {
              "column": 59,
              "line": 47
            }
          }
        },
        {
          "id": "1892",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "expected true to be falsy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "108"
          ],
          "coveredBy": [
            "108",
            "109",
            "110",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 104,
              "line": 47
            },
            "start": {
              "column": 100,
              "line": 47
            }
          }
        },
        {
          "id": "1893",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(49,27): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(getter: ComputedGetter<boolean>, debugOptions?: DebuggerOptions | undefined): ComputedRef<boolean>', gave the following error.\n    Type 'undefined' is not assignable to type 'boolean'.\n  Overload 2 of 2, '(options: WritableComputedOptions<boolean>, debugOptions?: DebuggerOptions | undefined): WritableComputedRef<boolean>', gave the following error.\n    Argument of type '() => undefined' is not assignable to parameter of type 'WritableComputedOptions<boolean>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "90",
            "91",
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99",
            "100",
            "101",
            "102",
            "103",
            "104",
            "105",
            "106",
            "107",
            "108",
            "109",
            "110",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 53
            },
            "start": {
              "column": 45,
              "line": 49
            }
          }
        },
        {
          "id": "1894",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "112"
          ],
          "coveredBy": [
            "110",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 53
            },
            "start": {
              "column": 51,
              "line": 49
            }
          }
        },
        {
          "id": "1895",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "110"
          ],
          "coveredBy": [
            "110",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 53
            },
            "start": {
              "column": 51,
              "line": 49
            }
          }
        },
        {
          "id": "1896",
          "mutatorName": "LogicalOperator",
          "replacement": "(canCurrentPlayBeSkipped.value || isCurrentGamePlayVoteTypeAndValid.value || isCurrentGamePlayTargetTypeAndValid.value || isCurrentGamePlayChooseCardTypeAndValid.value) && isCurrentGamePlayChooseSideTypeAndValid.value",
          "statusReason": "expected 'true' to be 'false' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "629"
          ],
          "coveredBy": [
            "110",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 53
            },
            "start": {
              "column": 51,
              "line": 49
            }
          }
        },
        {
          "id": "1897",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "110"
          ],
          "coveredBy": [
            "110",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 52
            },
            "start": {
              "column": 51,
              "line": 49
            }
          }
        },
        {
          "id": "1898",
          "mutatorName": "LogicalOperator",
          "replacement": "(canCurrentPlayBeSkipped.value || isCurrentGamePlayVoteTypeAndValid.value || isCurrentGamePlayTargetTypeAndValid.value) && isCurrentGamePlayChooseCardTypeAndValid.value",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "110"
          ],
          "coveredBy": [
            "110",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 52
            },
            "start": {
              "column": 51,
              "line": 49
            }
          }
        },
        {
          "id": "1899",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "110"
          ],
          "coveredBy": [
            "110",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 46,
              "line": 51
            },
            "start": {
              "column": 51,
              "line": 49
            }
          }
        },
        {
          "id": "1900",
          "mutatorName": "LogicalOperator",
          "replacement": "(canCurrentPlayBeSkipped.value || isCurrentGamePlayVoteTypeAndValid.value) && isCurrentGamePlayTargetTypeAndValid.value",
          "statusReason": "expected 'true' to be 'false' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "629"
          ],
          "coveredBy": [
            "110",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 46,
              "line": 51
            },
            "start": {
              "column": 51,
              "line": 49
            }
          }
        },
        {
          "id": "1901",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "110"
          ],
          "coveredBy": [
            "110",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 50
            },
            "start": {
              "column": 51,
              "line": 49
            }
          }
        },
        {
          "id": "1902",
          "mutatorName": "LogicalOperator",
          "replacement": "canCurrentPlayBeSkipped.value && isCurrentGamePlayVoteTypeAndValid.value",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "110"
          ],
          "coveredBy": [
            "110",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 50
            },
            "start": {
              "column": 51,
              "line": 49
            }
          }
        },
        {
          "id": "1903",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "composables/api/game/useMakeGamePlayDtoValidation.ts(55,3): error TS2740: Type '{}' is missing the following properties from type 'UseMakeGamePlayDtoValidation': isCurrentGamePlayVoteTypeAndValid, isCurrentGamePlayTargetTypeAndValid, isCurrentGamePlayChooseCardTypeAndValid, isCurrentGamePlayChooseSideTypeAndValid, and 2 more.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "90",
            "91",
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99",
            "100",
            "101",
            "102",
            "103",
            "104",
            "105",
            "106",
            "107",
            "108",
            "109",
            "110",
            "111",
            "112",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 62
            },
            "start": {
              "column": 10,
              "line": 55
            }
          }
        }
      ],
      "source": "import type { ComputedRef, Ref } from \"vue\";\n\nimport type { MakeGamePlayDto } from \"~/composables/api/game/dto/make-game-play/make-game-play.dto\";\nimport type { Game } from \"~/composables/api/game/types/game.class\";\n\ntype UseMakeGamePlayDtoValidation = {\n  isCurrentGamePlayVoteTypeAndValid: ComputedRef<boolean>;\n  isCurrentGamePlayTargetTypeAndValid: ComputedRef<boolean>;\n  isCurrentGamePlayChooseCardTypeAndValid: ComputedRef<boolean>;\n  isCurrentGamePlayChooseSideTypeAndValid: ComputedRef<boolean>;\n  canCurrentPlayBeSkipped: ComputedRef<boolean>;\n  canMakeGamePlay: ComputedRef<boolean>;\n};\n\nfunction useMakeGamePlayDtoValidation(makeGamePlayDto: Ref<MakeGamePlayDto>, game: Ref<Game>): UseMakeGamePlayDtoValidation {\n  const isCurrentGamePlayVoteTypeAndValid = computed<boolean>(() => {\n    if (game.value.currentPlay?.type !== \"vote\" || makeGamePlayDto.value.votes === undefined) {\n      return false;\n    }\n    const voteInteraction = game.value.currentPlay.source.interactions?.[0];\n    if (voteInteraction === undefined) {\n      return false;\n    }\n    const { votes } = makeGamePlayDto.value;\n\n    return votes.length >= voteInteraction.boundaries.min;\n  });\n\n  const isCurrentGamePlayTargetTypeAndValid = computed<boolean>(() => {\n    if (game.value.currentPlay?.type !== \"target\" || makeGamePlayDto.value.targets === undefined) {\n      return false;\n    }\n\n    const targetInteraction = game.value.currentPlay.source.interactions?.[0];\n    if (targetInteraction === undefined) {\n      return false;\n    }\n    const { targets } = makeGamePlayDto.value;\n\n    return targets.length >= targetInteraction.boundaries.min;\n  });\n\n  const isCurrentGamePlayChooseCardTypeAndValid = computed<boolean>(() => game.value.currentPlay?.type === \"choose-card\" && makeGamePlayDto.value.chosenCardId !== undefined);\n\n  const isCurrentGamePlayChooseSideTypeAndValid = computed<boolean>(() => game.value.currentPlay?.type === \"choose-side\" && makeGamePlayDto.value.chosenSide !== undefined);\n\n  const canCurrentPlayBeSkipped = computed<boolean>(() => game.value.currentPlay?.canBeSkipped === true);\n\n  const canMakeGamePlay = computed<boolean>(() => canCurrentPlayBeSkipped.value ||\n    isCurrentGamePlayVoteTypeAndValid.value ||\n    isCurrentGamePlayTargetTypeAndValid.value ||\n    isCurrentGamePlayChooseCardTypeAndValid.value ||\n    isCurrentGamePlayChooseSideTypeAndValid.value);\n\n  return {\n    isCurrentGamePlayVoteTypeAndValid,\n    isCurrentGamePlayTargetTypeAndValid,\n    isCurrentGamePlayChooseCardTypeAndValid,\n    isCurrentGamePlayChooseSideTypeAndValid,\n    canCurrentPlayBeSkipped,\n    canMakeGamePlay,\n  };\n}\n\nexport { useMakeGamePlayDtoValidation };"
    },
    "composables/api/role/types/role.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1904",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/role/types/role.class.ts(32,37): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "259",
            "262",
            "263",
            "338",
            "341",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "445",
            "844",
            "942",
            "945",
            "946",
            "947",
            "1064"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 34
            },
            "start": {
              "column": 42,
              "line": 32
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\n\nimport type { GameAdditionalCardRecipientRoleName } from \"~/composables/api/game/types/game-additional-card/game-additional-card.types\";\nimport type { RoleName, RoleOrigin, RoleSide, RoleType } from \"~/composables/api/role/types/role.types\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass Role {\n  @Expose()\n  public name: RoleName;\n\n  @Expose()\n  public side: RoleSide;\n\n  @Expose()\n  public type: RoleType;\n\n  @Expose()\n  public origin: RoleOrigin;\n\n  @Expose()\n  public additionalCardsEligibleRecipients?: GameAdditionalCardRecipientRoleName[];\n\n  @Expose()\n  public minInGame?: number;\n\n  @Expose()\n  public maxInGame: number;\n\n  @Expose()\n  public recommendedMinPlayers?: number;\n\n  public static create(role: Role): Role {\n    return plainToInstance(Role, role, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { Role };"
    },
    "composables/api/role/useFetchRoles.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1906",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/role/useFetchRoles.ts(11,32): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "1020",
            "1021"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 17
            },
            "start": {
              "column": 82,
              "line": 11
            }
          }
        },
        {
          "id": "1907",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/role/useFetchRoles.ts(11,32): error TS2366: Function lacks ending return statement and return type does not include 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "1020",
            "1021"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 14
            },
            "start": {
              "column": 9,
              "line": 12
            }
          }
        },
        {
          "id": "1908",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/roles\",\n  Object {\n    \"method\": \"GET\",\n  },\n], but it was called with \"\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "1020"
          ],
          "coveredBy": [
            "1020",
            "1021"
          ],
          "location": {
            "end": {
              "column": 64,
              "line": 13
            },
            "start": {
              "column": 56,
              "line": 13
            }
          }
        },
        {
          "id": "1909",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"/roles\",\n  Object {\n    \"method\": \"GET\",\n  },\n], but it was called with \"/roles\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "1020"
          ],
          "coveredBy": [
            "1020",
            "1021"
          ],
          "location": {
            "end": {
              "column": 83,
              "line": 13
            },
            "start": {
              "column": 66,
              "line": 13
            }
          }
        },
        {
          "id": "1910",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "composables/api/role/useFetchRoles.ts(13,68): error TS2322: Type '\"\"' is not assignable to type '\"GET\" | \"HEAD\" | \"PATCH\" | \"POST\" | \"PUT\" | \"DELETE\" | \"CONNECT\" | \"OPTIONS\" | \"TRACE\" | \"get\" | \"head\" | \"patch\" | \"post\" | \"put\" | \"delete\" | \"connect\" | \"options\" | \"trace\" | undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "1020",
            "1021"
          ],
          "location": {
            "end": {
              "column": 81,
              "line": 13
            },
            "start": {
              "column": 76,
              "line": 13
            }
          }
        },
        {
          "id": "1911",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/role/useFetchRoles.ts(11,32): error TS2366: Function lacks ending return statement and return type does not include 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "1021"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 16
            },
            "start": {
              "column": 21,
              "line": 14
            }
          }
        },
        {
          "id": "1912",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "composables/api/role/useFetchRoles.ts(18,3): error TS2741: Property 'fetchRoles' is missing in type '{}' but required in type 'UseFetchRoles'.\n",
          "status": "CompileError",
          "static": false,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265",
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387",
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428",
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448",
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "469",
            "470",
            "471",
            "472",
            "473",
            "474",
            "475",
            "476",
            "477",
            "478",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511",
            "512",
            "513",
            "514",
            "515",
            "516",
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "603",
            "604",
            "605",
            "606",
            "607",
            "608",
            "609",
            "610",
            "611",
            "612",
            "613",
            "614",
            "615",
            "616",
            "635",
            "636",
            "637",
            "638",
            "639",
            "640",
            "641",
            "651",
            "652",
            "653",
            "654",
            "655",
            "656",
            "657",
            "658",
            "659",
            "660",
            "661",
            "662",
            "663",
            "664",
            "714",
            "715",
            "716",
            "717",
            "718",
            "719",
            "720",
            "721",
            "722",
            "723",
            "724",
            "725",
            "741",
            "742",
            "743",
            "744",
            "745",
            "746",
            "747",
            "748",
            "749",
            "750",
            "751",
            "766",
            "767",
            "768",
            "769",
            "770",
            "771",
            "772",
            "773",
            "774",
            "775",
            "776",
            "777",
            "778",
            "779",
            "780",
            "781",
            "782",
            "783",
            "784",
            "785",
            "786",
            "787",
            "788",
            "789",
            "790",
            "791",
            "792",
            "793",
            "794",
            "795",
            "796",
            "797",
            "798",
            "799",
            "800",
            "801",
            "802",
            "803",
            "804",
            "805",
            "806",
            "807",
            "808",
            "809",
            "810",
            "811",
            "812",
            "813",
            "814",
            "815",
            "923",
            "924",
            "925",
            "973",
            "974",
            "975",
            "976",
            "990",
            "991",
            "992",
            "993",
            "1020",
            "1021"
          ],
          "location": {
            "end": {
              "column": 24,
              "line": 18
            },
            "start": {
              "column": 10,
              "line": 18
            }
          }
        },
        {
          "id": "1905",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/role/useFetchRoles.ts(8,27): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265",
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387",
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428",
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448",
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "469",
            "470",
            "471",
            "472",
            "473",
            "474",
            "475",
            "476",
            "477",
            "478",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511",
            "512",
            "513",
            "514",
            "515",
            "516",
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "603",
            "604",
            "605",
            "606",
            "607",
            "608",
            "609",
            "610",
            "611",
            "612",
            "613",
            "614",
            "615",
            "616",
            "635",
            "636",
            "637",
            "638",
            "639",
            "640",
            "641",
            "651",
            "652",
            "653",
            "654",
            "655",
            "656",
            "657",
            "658",
            "659",
            "660",
            "661",
            "662",
            "663",
            "664",
            "714",
            "715",
            "716",
            "717",
            "718",
            "719",
            "720",
            "721",
            "722",
            "723",
            "724",
            "725",
            "741",
            "742",
            "743",
            "744",
            "745",
            "746",
            "747",
            "748",
            "749",
            "750",
            "751",
            "766",
            "767",
            "768",
            "769",
            "770",
            "771",
            "772",
            "773",
            "774",
            "775",
            "776",
            "777",
            "778",
            "779",
            "780",
            "781",
            "782",
            "783",
            "784",
            "785",
            "786",
            "787",
            "788",
            "789",
            "790",
            "791",
            "792",
            "793",
            "794",
            "795",
            "796",
            "797",
            "798",
            "799",
            "800",
            "801",
            "802",
            "803",
            "804",
            "805",
            "806",
            "807",
            "808",
            "809",
            "810",
            "811",
            "812",
            "813",
            "814",
            "815",
            "923",
            "924",
            "925",
            "973",
            "974",
            "975",
            "976",
            "990",
            "991",
            "992",
            "993",
            "1020",
            "1021"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 19
            },
            "start": {
              "column": 41,
              "line": 8
            }
          }
        }
      ],
      "source": "import type { Role } from \"~/composables/api/role/types/role.class\";\nimport { useWerewolvesAssistantApi } from \"~/composables/api/useWerewolvesAssistantApi\";\n\ntype UseFetchRoles = {\n  fetchRoles: () => Promise<ReturnType<typeof $fetch<Role[]>> | null>;\n};\n\nfunction useFetchRoles(): UseFetchRoles {\n  const { fetchWerewolvesAssistantApi } = useWerewolvesAssistantApi();\n\n  async function fetchRoles(): Promise<ReturnType<typeof $fetch<Role[]>> | null> {\n    try {\n      return await fetchWerewolvesAssistantApi<Role[]>(`/roles`, { method: \"GET\" });\n    } catch (error) {\n      return null;\n    }\n  }\n  return { fetchRoles };\n}\n\nexport { useFetchRoles };"
    },
    "composables/api/role/useRoleName.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1913",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/role/useRoleName.ts(8,25): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428",
            "683",
            "684",
            "685",
            "686",
            "687",
            "857",
            "858",
            "859",
            "860",
            "861",
            "862",
            "863",
            "892",
            "893",
            "894",
            "895",
            "896",
            "897",
            "968",
            "969",
            "1010",
            "1011",
            "1053",
            "1054"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 22
            },
            "start": {
              "column": 37,
              "line": 8
            }
          }
        },
        {
          "id": "1914",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/role/useRoleName.ts(11,50): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428",
            "857",
            "858",
            "859",
            "860",
            "861",
            "862",
            "863",
            "892",
            "893",
            "894",
            "895",
            "896",
            "897",
            "968",
            "969",
            "1053"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 13
            },
            "start": {
              "column": 57,
              "line": 11
            }
          }
        },
        {
          "id": "1915",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Game Lobby Role Picker Grid Element Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "415"
          ],
          "coveredBy": [
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428",
            "857",
            "858",
            "859",
            "860",
            "861",
            "862",
            "863",
            "892",
            "893",
            "894",
            "895",
            "896",
            "897",
            "968",
            "969",
            "1053"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 12
            },
            "start": {
              "column": 14,
              "line": 12
            }
          }
        },
        {
          "id": "1916",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/role/useRoleName.ts(15,73): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "1011",
            "1054"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 17
            },
            "start": {
              "column": 80,
              "line": 15
            }
          }
        },
        {
          "id": "1917",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected ', 1' to be 'shared.role.definiteName.werewolf, 1' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "1011"
          ],
          "coveredBy": [
            "1011",
            "1054"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 16
            },
            "start": {
              "column": 14,
              "line": 16
            }
          }
        },
        {
          "id": "1918",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "composables/api/role/useRoleName.ts(18,3): error TS2739: Type '{}' is missing the following properties from type 'UseRoleName': getRoleNameLabel, getDefiniteRoleNameLabel\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428",
            "683",
            "684",
            "685",
            "686",
            "687",
            "857",
            "858",
            "859",
            "860",
            "861",
            "862",
            "863",
            "892",
            "893",
            "894",
            "895",
            "896",
            "897",
            "968",
            "969",
            "1010",
            "1011",
            "1053",
            "1054"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 21
            },
            "start": {
              "column": 10,
              "line": 18
            }
          }
        }
      ],
      "source": "import type { RoleName } from \"~/composables/api/role/types/role.types\";\n\ntype UseRoleName = {\n  getRoleNameLabel: (roleName: RoleName) => string;\n  getDefiniteRoleNameLabel: (roleName: RoleName, count: number) => string;\n};\n\nfunction useRoleName(): UseRoleName {\n  const { t } = useI18n();\n\n  function getRoleNameLabel(roleName: RoleName): string {\n    return t(`shared.role.name.${roleName}`);\n  }\n\n  function getDefiniteRoleNameLabel(roleName: RoleName, count: number): string {\n    return t(`shared.role.definiteName.${roleName}`, count);\n  }\n  return {\n    getRoleNameLabel,\n    getDefiniteRoleNameLabel,\n  };\n}\n\nexport { useRoleName };"
    },
    "composables/api/useWerewolvesAssistantApi.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1920",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"baseURL\": \"http://127.0.0.1\",\n    \"headers\": Object {\n      \"Content-Type\": \"application/json\",\n    },\n    \"onResponseError\": Any<Function>,\n  },\n], but it was called with Object {}",
          "status": "Killed",
          "testsCompleted": 687,
          "static": true,
          "killedBy": [
            "1079"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213",
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242",
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265",
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "310",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "319",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327",
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387",
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428",
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448",
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468",
            "469",
            "470",
            "471",
            "472",
            "473",
            "474",
            "475",
            "476",
            "477",
            "478",
            "479",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "488",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511",
            "512",
            "513",
            "514",
            "515",
            "516",
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "596",
            "597",
            "598",
            "599",
            "600",
            "601",
            "602",
            "603",
            "604",
            "605",
            "606",
            "607",
            "608",
            "609",
            "610",
            "611",
            "612",
            "613",
            "614",
            "615",
            "616",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634",
            "635",
            "636",
            "637",
            "638",
            "639",
            "640",
            "641",
            "651",
            "652",
            "653",
            "654",
            "655",
            "656",
            "657",
            "658",
            "659",
            "660",
            "661",
            "662",
            "663",
            "664",
            "665",
            "666",
            "667",
            "668",
            "669",
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677",
            "678",
            "679",
            "680",
            "681",
            "682",
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713",
            "714",
            "715",
            "716",
            "717",
            "718",
            "719",
            "720",
            "721",
            "722",
            "723",
            "724",
            "725",
            "726",
            "727",
            "728",
            "729",
            "730",
            "731",
            "732",
            "733",
            "734",
            "735",
            "736",
            "737",
            "738",
            "739",
            "740",
            "741",
            "742",
            "743",
            "744",
            "745",
            "746",
            "747",
            "748",
            "749",
            "750",
            "751",
            "766",
            "767",
            "768",
            "769",
            "770",
            "771",
            "772",
            "773",
            "774",
            "775",
            "776",
            "777",
            "778",
            "779",
            "780",
            "781",
            "782",
            "783",
            "784",
            "785",
            "786",
            "787",
            "788",
            "789",
            "790",
            "791",
            "792",
            "793",
            "794",
            "795",
            "796",
            "797",
            "798",
            "799",
            "800",
            "801",
            "802",
            "803",
            "804",
            "805",
            "806",
            "807",
            "808",
            "809",
            "810",
            "811",
            "812",
            "813",
            "814",
            "815",
            "845",
            "846",
            "847",
            "848",
            "864",
            "865",
            "866",
            "904",
            "905",
            "906",
            "907",
            "908",
            "909",
            "923",
            "924",
            "925",
            "926",
            "927",
            "928",
            "929",
            "939",
            "957",
            "958",
            "959",
            "973",
            "974",
            "975",
            "976",
            "990",
            "991",
            "992",
            "993",
            "1079"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 19
            },
            "start": {
              "column": 60,
              "line": 15
            }
          }
        },
        {
          "id": "1921",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"baseURL\": \"http://127.0.0.1\",\n    \"headers\": Object {\n      \"Content-Type\": \"application/json\",\n    },\n    \"onResponseError\": Any<Function>,\n  },\n], but it was called with Object {\n  \"baseURL\": \"http://127.0.0.1\",\n  \"headers\": Object {},\n  \"onResponseError\": [Function handleWerewolvesAssistantApiError],\n}",
          "status": "Killed",
          "testsCompleted": 687,
          "static": true,
          "killedBy": [
            "1079"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213",
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242",
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265",
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "310",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "319",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327",
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387",
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428",
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448",
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468",
            "469",
            "470",
            "471",
            "472",
            "473",
            "474",
            "475",
            "476",
            "477",
            "478",
            "479",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "488",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511",
            "512",
            "513",
            "514",
            "515",
            "516",
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "596",
            "597",
            "598",
            "599",
            "600",
            "601",
            "602",
            "603",
            "604",
            "605",
            "606",
            "607",
            "608",
            "609",
            "610",
            "611",
            "612",
            "613",
            "614",
            "615",
            "616",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634",
            "635",
            "636",
            "637",
            "638",
            "639",
            "640",
            "641",
            "651",
            "652",
            "653",
            "654",
            "655",
            "656",
            "657",
            "658",
            "659",
            "660",
            "661",
            "662",
            "663",
            "664",
            "665",
            "666",
            "667",
            "668",
            "669",
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677",
            "678",
            "679",
            "680",
            "681",
            "682",
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713",
            "714",
            "715",
            "716",
            "717",
            "718",
            "719",
            "720",
            "721",
            "722",
            "723",
            "724",
            "725",
            "726",
            "727",
            "728",
            "729",
            "730",
            "731",
            "732",
            "733",
            "734",
            "735",
            "736",
            "737",
            "738",
            "739",
            "740",
            "741",
            "742",
            "743",
            "744",
            "745",
            "746",
            "747",
            "748",
            "749",
            "750",
            "751",
            "766",
            "767",
            "768",
            "769",
            "770",
            "771",
            "772",
            "773",
            "774",
            "775",
            "776",
            "777",
            "778",
            "779",
            "780",
            "781",
            "782",
            "783",
            "784",
            "785",
            "786",
            "787",
            "788",
            "789",
            "790",
            "791",
            "792",
            "793",
            "794",
            "795",
            "796",
            "797",
            "798",
            "799",
            "800",
            "801",
            "802",
            "803",
            "804",
            "805",
            "806",
            "807",
            "808",
            "809",
            "810",
            "811",
            "812",
            "813",
            "814",
            "815",
            "845",
            "846",
            "847",
            "848",
            "864",
            "865",
            "866",
            "904",
            "905",
            "906",
            "907",
            "908",
            "909",
            "923",
            "924",
            "925",
            "926",
            "927",
            "928",
            "929",
            "939",
            "957",
            "958",
            "959",
            "973",
            "974",
            "975",
            "976",
            "990",
            "991",
            "992",
            "993",
            "1079"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 17
            },
            "start": {
              "column": 14,
              "line": 17
            }
          }
        },
        {
          "id": "1922",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"baseURL\": \"http://127.0.0.1\",\n    \"headers\": Object {\n      \"Content-Type\": \"application/json\",\n    },\n    \"onResponseError\": Any<Function>,\n  },\n], but it was called with Object {\n  \"baseURL\": \"http://127.0.0.1\",\n  \"headers\": Object {\n    \"Content-Type\": \"\",\n  },\n  \"onResponseError\": [Function handleWerewolvesAssistantApiError],\n}",
          "status": "Killed",
          "testsCompleted": 597,
          "static": true,
          "killedBy": [
            "1079"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213",
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242",
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265",
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "310",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "319",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327",
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387",
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428",
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448",
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468",
            "469",
            "470",
            "471",
            "472",
            "473",
            "474",
            "475",
            "476",
            "477",
            "478",
            "479",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "488",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511",
            "512",
            "513",
            "514",
            "515",
            "516",
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "596",
            "597",
            "598",
            "599",
            "600",
            "601",
            "602",
            "603",
            "604",
            "605",
            "606",
            "607",
            "608",
            "609",
            "610",
            "611",
            "612",
            "613",
            "614",
            "615",
            "616",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634",
            "635",
            "636",
            "637",
            "638",
            "639",
            "640",
            "641",
            "651",
            "652",
            "653",
            "654",
            "655",
            "656",
            "657",
            "658",
            "659",
            "660",
            "661",
            "662",
            "663",
            "664",
            "665",
            "666",
            "667",
            "668",
            "669",
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677",
            "678",
            "679",
            "680",
            "681",
            "682",
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713",
            "714",
            "715",
            "716",
            "717",
            "718",
            "719",
            "720",
            "721",
            "722",
            "723",
            "724",
            "725",
            "726",
            "727",
            "728",
            "729",
            "730",
            "731",
            "732",
            "733",
            "734",
            "735",
            "736",
            "737",
            "738",
            "739",
            "740",
            "741",
            "742",
            "743",
            "744",
            "745",
            "746",
            "747",
            "748",
            "749",
            "750",
            "751",
            "766",
            "767",
            "768",
            "769",
            "770",
            "771",
            "772",
            "773",
            "774",
            "775",
            "776",
            "777",
            "778",
            "779",
            "780",
            "781",
            "782",
            "783",
            "784",
            "785",
            "786",
            "787",
            "788",
            "789",
            "790",
            "791",
            "792",
            "793",
            "794",
            "795",
            "796",
            "797",
            "798",
            "799",
            "800",
            "801",
            "802",
            "803",
            "804",
            "805",
            "806",
            "807",
            "808",
            "809",
            "810",
            "811",
            "812",
            "813",
            "814",
            "815",
            "845",
            "846",
            "847",
            "848",
            "864",
            "865",
            "866",
            "904",
            "905",
            "906",
            "907",
            "908",
            "909",
            "923",
            "924",
            "925",
            "926",
            "927",
            "928",
            "929",
            "939",
            "957",
            "958",
            "959",
            "973",
            "974",
            "975",
            "976",
            "990",
            "991",
            "992",
            "993",
            "1079"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 17
            },
            "start": {
              "column": 32,
              "line": 17
            }
          }
        },
        {
          "id": "1919",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/useWerewolvesAssistantApi.ts(10,39): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213",
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242",
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265",
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "310",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "319",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327",
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387",
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428",
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448",
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468",
            "469",
            "470",
            "471",
            "472",
            "473",
            "474",
            "475",
            "476",
            "477",
            "478",
            "479",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "488",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511",
            "512",
            "513",
            "514",
            "515",
            "516",
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "596",
            "597",
            "598",
            "599",
            "600",
            "601",
            "602",
            "603",
            "604",
            "605",
            "606",
            "607",
            "608",
            "609",
            "610",
            "611",
            "612",
            "613",
            "614",
            "615",
            "616",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634",
            "635",
            "636",
            "637",
            "638",
            "639",
            "640",
            "641",
            "651",
            "652",
            "653",
            "654",
            "655",
            "656",
            "657",
            "658",
            "659",
            "660",
            "661",
            "662",
            "663",
            "664",
            "665",
            "666",
            "667",
            "668",
            "669",
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677",
            "678",
            "679",
            "680",
            "681",
            "682",
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713",
            "714",
            "715",
            "716",
            "717",
            "718",
            "719",
            "720",
            "721",
            "722",
            "723",
            "724",
            "725",
            "726",
            "727",
            "728",
            "729",
            "730",
            "731",
            "732",
            "733",
            "734",
            "735",
            "736",
            "737",
            "738",
            "739",
            "740",
            "741",
            "742",
            "743",
            "744",
            "745",
            "746",
            "747",
            "748",
            "749",
            "750",
            "751",
            "766",
            "767",
            "768",
            "769",
            "770",
            "771",
            "772",
            "773",
            "774",
            "775",
            "776",
            "777",
            "778",
            "779",
            "780",
            "781",
            "782",
            "783",
            "784",
            "785",
            "786",
            "787",
            "788",
            "789",
            "790",
            "791",
            "792",
            "793",
            "794",
            "795",
            "796",
            "797",
            "798",
            "799",
            "800",
            "801",
            "802",
            "803",
            "804",
            "805",
            "806",
            "807",
            "808",
            "809",
            "810",
            "811",
            "812",
            "813",
            "814",
            "815",
            "845",
            "846",
            "847",
            "848",
            "864",
            "865",
            "866",
            "904",
            "905",
            "906",
            "907",
            "908",
            "909",
            "923",
            "924",
            "925",
            "926",
            "927",
            "928",
            "929",
            "939",
            "957",
            "958",
            "959",
            "973",
            "974",
            "975",
            "976",
            "990",
            "991",
            "992",
            "993",
            "1079"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 22
            },
            "start": {
              "column": 65,
              "line": 10
            }
          }
        },
        {
          "id": "1923",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "composables/api/useWerewolvesAssistantApi.ts(21,3): error TS2741: Property 'fetchWerewolvesAssistantApi' is missing in type '{}' but required in type 'UseWerewolvesAssistantApi'.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213",
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242",
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265",
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "310",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "319",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327",
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387",
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428",
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448",
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468",
            "469",
            "470",
            "471",
            "472",
            "473",
            "474",
            "475",
            "476",
            "477",
            "478",
            "479",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "488",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511",
            "512",
            "513",
            "514",
            "515",
            "516",
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "596",
            "597",
            "598",
            "599",
            "600",
            "601",
            "602",
            "603",
            "604",
            "605",
            "606",
            "607",
            "608",
            "609",
            "610",
            "611",
            "612",
            "613",
            "614",
            "615",
            "616",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634",
            "635",
            "636",
            "637",
            "638",
            "639",
            "640",
            "641",
            "651",
            "652",
            "653",
            "654",
            "655",
            "656",
            "657",
            "658",
            "659",
            "660",
            "661",
            "662",
            "663",
            "664",
            "665",
            "666",
            "667",
            "668",
            "669",
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677",
            "678",
            "679",
            "680",
            "681",
            "682",
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713",
            "714",
            "715",
            "716",
            "717",
            "718",
            "719",
            "720",
            "721",
            "722",
            "723",
            "724",
            "725",
            "726",
            "727",
            "728",
            "729",
            "730",
            "731",
            "732",
            "733",
            "734",
            "735",
            "736",
            "737",
            "738",
            "739",
            "740",
            "741",
            "742",
            "743",
            "744",
            "745",
            "746",
            "747",
            "748",
            "749",
            "750",
            "751",
            "766",
            "767",
            "768",
            "769",
            "770",
            "771",
            "772",
            "773",
            "774",
            "775",
            "776",
            "777",
            "778",
            "779",
            "780",
            "781",
            "782",
            "783",
            "784",
            "785",
            "786",
            "787",
            "788",
            "789",
            "790",
            "791",
            "792",
            "793",
            "794",
            "795",
            "796",
            "797",
            "798",
            "799",
            "800",
            "801",
            "802",
            "803",
            "804",
            "805",
            "806",
            "807",
            "808",
            "809",
            "810",
            "811",
            "812",
            "813",
            "814",
            "815",
            "845",
            "846",
            "847",
            "848",
            "864",
            "865",
            "866",
            "904",
            "905",
            "906",
            "907",
            "908",
            "909",
            "923",
            "924",
            "925",
            "926",
            "927",
            "928",
            "929",
            "939",
            "957",
            "958",
            "959",
            "973",
            "974",
            "975",
            "976",
            "990",
            "991",
            "992",
            "993",
            "1079"
          ],
          "location": {
            "end": {
              "column": 41,
              "line": 21
            },
            "start": {
              "column": 10,
              "line": 21
            }
          }
        }
      ],
      "source": "import { createFetch } from \"ofetch\";\n\nimport { useWerewolvesAssistantApiError } from \"~/composables/api/error/useWerewolvesAssistantApiError\";\nimport { removeTrailingSlashes } from \"~/utils/url.utils\";\n\ntype UseWerewolvesAssistantApi = {\n  fetchWerewolvesAssistantApi: typeof $fetch;\n};\n\nfunction useWerewolvesAssistantApi(): UseWerewolvesAssistantApi {\n  const config = useRuntimeConfig();\n  const { baseUrl } = config.public.werewolvesAssistantApi;\n  const { handleWerewolvesAssistantApiError } = useWerewolvesAssistantApiError();\n\n  const fetchWerewolvesAssistantApi = createFetch().create({\n    baseURL: removeTrailingSlashes(baseUrl),\n    headers: { \"Content-Type\": \"application/json\" },\n    onResponseError: handleWerewolvesAssistantApiError,\n  });\n\n  return { fetchWerewolvesAssistantApi };\n}\n\nexport { useWerewolvesAssistantApi };"
    },
    "composables/misc/useStrings.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1926",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab General Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "517"
          ],
          "coveredBy": [
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "499",
            "503",
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "557",
            "561",
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "721",
            "722",
            "723",
            "724",
            "725",
            "743",
            "766",
            "767",
            "768",
            "769",
            "770",
            "771",
            "772",
            "773",
            "774",
            "775",
            "776",
            "777",
            "778",
            "779",
            "780",
            "781",
            "782",
            "783",
            "784",
            "785",
            "786",
            "787",
            "788",
            "789",
            "790",
            "793",
            "798",
            "801",
            "802",
            "803",
            "804",
            "805",
            "806",
            "807",
            "808",
            "809",
            "810",
            "813",
            "973",
            "974",
            "975",
            "976",
            "1102"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 7
            },
            "start": {
              "column": 20,
              "line": 7
            }
          }
        },
        {
          "id": "1927",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Game Lobby Options Hub Roles Tab Wolf Hound Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "497"
          ],
          "coveredBy": [
            "268",
            "272",
            "276",
            "280",
            "438",
            "458",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "567",
            "571",
            "724",
            "741",
            "742",
            "743",
            "744",
            "745",
            "769",
            "774",
            "779",
            "784",
            "789",
            "791",
            "792",
            "793",
            "794",
            "795",
            "796",
            "797",
            "798",
            "799",
            "800",
            "804",
            "809",
            "811",
            "812",
            "813",
            "814",
            "815",
            "973",
            "974",
            "975",
            "976",
            "1103"
          ],
          "location": {
            "end": {
              "column": 32,
              "line": 7
            },
            "start": {
              "column": 28,
              "line": 7
            }
          }
        },
        {
          "id": "1924",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/misc/useStrings.ts(5,24): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "coveredBy": [
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "721",
            "722",
            "723",
            "724",
            "725",
            "741",
            "742",
            "743",
            "744",
            "745",
            "766",
            "767",
            "768",
            "769",
            "770",
            "771",
            "772",
            "773",
            "774",
            "775",
            "776",
            "777",
            "778",
            "779",
            "780",
            "781",
            "782",
            "783",
            "784",
            "785",
            "786",
            "787",
            "788",
            "789",
            "790",
            "791",
            "792",
            "793",
            "794",
            "795",
            "796",
            "797",
            "798",
            "799",
            "800",
            "801",
            "802",
            "803",
            "804",
            "805",
            "806",
            "807",
            "808",
            "809",
            "810",
            "811",
            "812",
            "813",
            "814",
            "815",
            "973",
            "974",
            "975",
            "976",
            "1102",
            "1103"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 10
            },
            "start": {
              "column": 35,
              "line": 5
            }
          }
        },
        {
          "id": "1928",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "composables/misc/useStrings.ts(9,3): error TS2741: Property 'convertBooleanAsAffirmativeString' is missing in type '{}' but required in type 'UseStrings'.\n",
          "status": "CompileError",
          "static": false,
          "coveredBy": [
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "721",
            "722",
            "723",
            "724",
            "725",
            "741",
            "742",
            "743",
            "744",
            "745",
            "766",
            "767",
            "768",
            "769",
            "770",
            "771",
            "772",
            "773",
            "774",
            "775",
            "776",
            "777",
            "778",
            "779",
            "780",
            "781",
            "782",
            "783",
            "784",
            "785",
            "786",
            "787",
            "788",
            "789",
            "790",
            "791",
            "792",
            "793",
            "794",
            "795",
            "796",
            "797",
            "798",
            "799",
            "800",
            "801",
            "802",
            "803",
            "804",
            "805",
            "806",
            "807",
            "808",
            "809",
            "810",
            "811",
            "812",
            "813",
            "814",
            "815",
            "973",
            "974",
            "975",
            "976",
            "1102",
            "1103"
          ],
          "location": {
            "end": {
              "column": 47,
              "line": 9
            },
            "start": {
              "column": 10,
              "line": 9
            }
          }
        },
        {
          "id": "1925",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/misc/useStrings.ts(6,63): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "coveredBy": [
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "721",
            "722",
            "723",
            "724",
            "725",
            "741",
            "742",
            "743",
            "744",
            "745",
            "766",
            "767",
            "768",
            "769",
            "770",
            "771",
            "772",
            "773",
            "774",
            "775",
            "776",
            "777",
            "778",
            "779",
            "780",
            "781",
            "782",
            "783",
            "784",
            "785",
            "786",
            "787",
            "788",
            "789",
            "790",
            "791",
            "792",
            "793",
            "794",
            "795",
            "796",
            "797",
            "798",
            "799",
            "800",
            "801",
            "802",
            "803",
            "804",
            "805",
            "806",
            "807",
            "808",
            "809",
            "810",
            "811",
            "812",
            "813",
            "814",
            "815",
            "973",
            "974",
            "975",
            "976",
            "1102",
            "1103"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 8
            },
            "start": {
              "column": 70,
              "line": 6
            }
          }
        }
      ],
      "source": "type UseStrings = {\n  convertBooleanAsAffirmativeString: (value: boolean) => string;\n};\n\nfunction useStrings(): UseStrings {\n  function convertBooleanAsAffirmativeString(value: boolean): string {\n    return value ? \"yes\" : \"no\";\n  }\n  return { convertBooleanAsAffirmativeString };\n}\n\nexport { useStrings };"
    },
    "composables/vue-prime/constants/vue-prime.constants.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1929",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 2,
              "line": 6
            },
            "start": {
              "column": 62,
              "line": 3
            }
          }
        },
        {
          "id": "1930",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 17,
              "line": 5
            },
            "start": {
              "column": 13,
              "line": 5
            }
          }
        }
      ],
      "source": "import type { ToastMessageOptions } from \"primevue/toast\";\n\nconst DEFAULT_VUE_PRIME_TOAST_OPTIONS: ToastMessageOptions = {\n  life: 4000,\n  closable: true,\n};\n\nexport { DEFAULT_VUE_PRIME_TOAST_OPTIONS };"
    },
    "composables/vue-prime/useVuePrimeToasts.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1932",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "877"
          ],
          "coveredBy": [
            "877",
            "878",
            "879",
            "880",
            "881"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 22
            },
            "start": {
              "column": 57,
              "line": 17
            }
          }
        },
        {
          "id": "1933",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"closable\": true,\n    \"detail\": \"detail\",\n    \"life\": 4000,\n    \"summary\": \"summary\",\n  },\n], but it was called with Object {}",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "877"
          ],
          "coveredBy": [
            "877",
            "878",
            "879",
            "880",
            "881"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 21
            },
            "start": {
              "column": 15,
              "line": 18
            }
          }
        },
        {
          "id": "1934",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "878"
          ],
          "coveredBy": [
            "878"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 26
            },
            "start": {
              "column": 64,
              "line": 24
            }
          }
        },
        {
          "id": "1935",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"closable\": true,\n    \"detail\": \"detail\",\n    \"life\": 4000,\n    \"severity\": \"success\",\n    \"summary\": \"summary\",\n  },\n], but it was called with Object {\n  \"closable\": true,\n  \"life\": 4000,\n}",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "878"
          ],
          "coveredBy": [
            "878"
          ],
          "location": {
            "end": {
              "column": 49,
              "line": 25
            },
            "start": {
              "column": 14,
              "line": 25
            }
          }
        },
        {
          "id": "1936",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "composables/vue-prime/useVuePrimeToasts.ts(25,16): error TS2322: Type '\"\"' is not assignable to type '\"success\" | \"info\" | \"warn\" | \"error\" | \"secondary\" | \"contrast\" | undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "878"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 25
            },
            "start": {
              "column": 26,
              "line": 25
            }
          }
        },
        {
          "id": "1937",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "879"
          ],
          "coveredBy": [
            "879"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 30
            },
            "start": {
              "column": 61,
              "line": 28
            }
          }
        },
        {
          "id": "1938",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"closable\": true,\n    \"detail\": \"detail\",\n    \"life\": 4000,\n    \"severity\": \"info\",\n    \"summary\": \"summary\",\n  },\n], but it was called with Object {\n  \"closable\": true,\n  \"life\": 4000,\n}",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "879"
          ],
          "coveredBy": [
            "879"
          ],
          "location": {
            "end": {
              "column": 46,
              "line": 29
            },
            "start": {
              "column": 14,
              "line": 29
            }
          }
        },
        {
          "id": "1939",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "composables/vue-prime/useVuePrimeToasts.ts(29,16): error TS2322: Type '\"\"' is not assignable to type '\"success\" | \"info\" | \"warn\" | \"error\" | \"secondary\" | \"contrast\" | undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "879"
          ],
          "location": {
            "end": {
              "column": 32,
              "line": 29
            },
            "start": {
              "column": 26,
              "line": 29
            }
          }
        },
        {
          "id": "1940",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "880"
          ],
          "coveredBy": [
            "880"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 34
            },
            "start": {
              "column": 61,
              "line": 32
            }
          }
        },
        {
          "id": "1941",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"closable\": true,\n    \"detail\": \"detail\",\n    \"life\": 4000,\n    \"severity\": \"warn\",\n    \"summary\": \"summary\",\n  },\n], but it was called with Object {\n  \"closable\": true,\n  \"life\": 4000,\n}",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "880"
          ],
          "coveredBy": [
            "880"
          ],
          "location": {
            "end": {
              "column": 46,
              "line": 33
            },
            "start": {
              "column": 14,
              "line": 33
            }
          }
        },
        {
          "id": "1942",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "composables/vue-prime/useVuePrimeToasts.ts(33,16): error TS2322: Type '\"\"' is not assignable to type '\"success\" | \"info\" | \"warn\" | \"error\" | \"secondary\" | \"contrast\" | undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "880"
          ],
          "location": {
            "end": {
              "column": 32,
              "line": 33
            },
            "start": {
              "column": 26,
              "line": 33
            }
          }
        },
        {
          "id": "1943",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "881"
          ],
          "coveredBy": [
            "881"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 38
            },
            "start": {
              "column": 62,
              "line": 36
            }
          }
        },
        {
          "id": "1944",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"closable\": true,\n    \"detail\": \"detail\",\n    \"life\": 4000,\n    \"severity\": \"error\",\n    \"summary\": \"summary\",\n  },\n], but it was called with Object {\n  \"closable\": true,\n  \"life\": 4000,\n}",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "881"
          ],
          "coveredBy": [
            "881"
          ],
          "location": {
            "end": {
              "column": 47,
              "line": 37
            },
            "start": {
              "column": 14,
              "line": 37
            }
          }
        },
        {
          "id": "1945",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "composables/vue-prime/useVuePrimeToasts.ts(37,16): error TS2322: Type '\"\"' is not assignable to type '\"success\" | \"info\" | \"warn\" | \"error\" | \"secondary\" | \"contrast\" | undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "881"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 37
            },
            "start": {
              "column": 26,
              "line": 37
            }
          }
        },
        {
          "id": "1946",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "composables/vue-prime/useVuePrimeToasts.ts(39,3): error TS2739: Type '{}' is missing the following properties from type 'UseVuePrimeToasts': addToast, addSuccessToast, addInfoToast, addWarnToast, addErrorToast\n",
          "status": "CompileError",
          "static": false,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213",
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242",
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265",
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "310",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "319",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327",
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387",
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428",
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448",
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468",
            "469",
            "470",
            "471",
            "472",
            "473",
            "474",
            "475",
            "476",
            "477",
            "478",
            "479",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "488",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511",
            "512",
            "513",
            "514",
            "515",
            "516",
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "596",
            "597",
            "598",
            "599",
            "600",
            "601",
            "602",
            "603",
            "604",
            "605",
            "606",
            "607",
            "608",
            "609",
            "610",
            "611",
            "612",
            "613",
            "614",
            "615",
            "616",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634",
            "635",
            "636",
            "637",
            "638",
            "639",
            "640",
            "641",
            "651",
            "652",
            "653",
            "654",
            "655",
            "656",
            "657",
            "658",
            "659",
            "660",
            "661",
            "662",
            "663",
            "664",
            "665",
            "666",
            "667",
            "668",
            "669",
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677",
            "678",
            "679",
            "680",
            "681",
            "682",
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713",
            "714",
            "715",
            "716",
            "717",
            "718",
            "719",
            "720",
            "721",
            "722",
            "723",
            "724",
            "725",
            "726",
            "727",
            "728",
            "729",
            "730",
            "731",
            "732",
            "733",
            "734",
            "735",
            "736",
            "737",
            "738",
            "739",
            "740",
            "741",
            "742",
            "743",
            "744",
            "745",
            "746",
            "747",
            "748",
            "749",
            "750",
            "751",
            "766",
            "767",
            "768",
            "769",
            "770",
            "771",
            "772",
            "773",
            "774",
            "775",
            "776",
            "777",
            "778",
            "779",
            "780",
            "781",
            "782",
            "783",
            "784",
            "785",
            "786",
            "787",
            "788",
            "789",
            "790",
            "791",
            "792",
            "793",
            "794",
            "795",
            "796",
            "797",
            "798",
            "799",
            "800",
            "801",
            "802",
            "803",
            "804",
            "805",
            "806",
            "807",
            "808",
            "809",
            "810",
            "811",
            "812",
            "813",
            "814",
            "815",
            "845",
            "846",
            "847",
            "848",
            "864",
            "865",
            "866",
            "877",
            "878",
            "879",
            "880",
            "881",
            "904",
            "905",
            "906",
            "907",
            "908",
            "909",
            "923",
            "924",
            "925",
            "926",
            "927",
            "928",
            "929",
            "939",
            "957",
            "958",
            "959",
            "973",
            "974",
            "975",
            "976",
            "990",
            "991",
            "992",
            "993",
            "1079"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 45
            },
            "start": {
              "column": 10,
              "line": 39
            }
          }
        },
        {
          "id": "1931",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/vue-prime/useVuePrimeToasts.ts(14,31): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213",
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242",
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265",
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "310",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "319",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327",
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387",
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428",
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448",
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468",
            "469",
            "470",
            "471",
            "472",
            "473",
            "474",
            "475",
            "476",
            "477",
            "478",
            "479",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "488",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511",
            "512",
            "513",
            "514",
            "515",
            "516",
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "596",
            "597",
            "598",
            "599",
            "600",
            "601",
            "602",
            "603",
            "604",
            "605",
            "606",
            "607",
            "608",
            "609",
            "610",
            "611",
            "612",
            "613",
            "614",
            "615",
            "616",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634",
            "635",
            "636",
            "637",
            "638",
            "639",
            "640",
            "641",
            "651",
            "652",
            "653",
            "654",
            "655",
            "656",
            "657",
            "658",
            "659",
            "660",
            "661",
            "662",
            "663",
            "664",
            "665",
            "666",
            "667",
            "668",
            "669",
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677",
            "678",
            "679",
            "680",
            "681",
            "682",
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713",
            "714",
            "715",
            "716",
            "717",
            "718",
            "719",
            "720",
            "721",
            "722",
            "723",
            "724",
            "725",
            "726",
            "727",
            "728",
            "729",
            "730",
            "731",
            "732",
            "733",
            "734",
            "735",
            "736",
            "737",
            "738",
            "739",
            "740",
            "741",
            "742",
            "743",
            "744",
            "745",
            "746",
            "747",
            "748",
            "749",
            "750",
            "751",
            "766",
            "767",
            "768",
            "769",
            "770",
            "771",
            "772",
            "773",
            "774",
            "775",
            "776",
            "777",
            "778",
            "779",
            "780",
            "781",
            "782",
            "783",
            "784",
            "785",
            "786",
            "787",
            "788",
            "789",
            "790",
            "791",
            "792",
            "793",
            "794",
            "795",
            "796",
            "797",
            "798",
            "799",
            "800",
            "801",
            "802",
            "803",
            "804",
            "805",
            "806",
            "807",
            "808",
            "809",
            "810",
            "811",
            "812",
            "813",
            "814",
            "815",
            "845",
            "846",
            "847",
            "848",
            "864",
            "865",
            "866",
            "877",
            "878",
            "879",
            "880",
            "881",
            "904",
            "905",
            "906",
            "907",
            "908",
            "909",
            "923",
            "924",
            "925",
            "926",
            "927",
            "928",
            "929",
            "939",
            "957",
            "958",
            "959",
            "973",
            "974",
            "975",
            "976",
            "990",
            "991",
            "992",
            "993",
            "1079"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 46
            },
            "start": {
              "column": 49,
              "line": 14
            }
          }
        }
      ],
      "source": "import type { ToastMessageOptions } from \"primevue/toast\";\nimport { useToast } from \"primevue/usetoast\";\n\nimport { DEFAULT_VUE_PRIME_TOAST_OPTIONS } from \"~/composables/vue-prime/constants/vue-prime.constants\";\n\ntype UseVuePrimeToasts = {\n  addToast: (options: ToastMessageOptions) => void;\n  addSuccessToast: (options: ToastMessageOptions) => void;\n  addInfoToast: (options: ToastMessageOptions) => void;\n  addWarnToast: (options: ToastMessageOptions) => void;\n  addErrorToast: (options: ToastMessageOptions) => void;\n};\n\nfunction useVuePrimeToasts(): UseVuePrimeToasts {\n  const toast = useToast();\n\n  function addToast(options: ToastMessageOptions): void {\n    toast.add({\n      ...DEFAULT_VUE_PRIME_TOAST_OPTIONS,\n      ...options,\n    });\n  }\n\n  function addSuccessToast(options: ToastMessageOptions): void {\n    addToast({ severity: \"success\", ...options });\n  }\n\n  function addInfoToast(options: ToastMessageOptions): void {\n    addToast({ severity: \"info\", ...options });\n  }\n\n  function addWarnToast(options: ToastMessageOptions): void {\n    addToast({ severity: \"warn\", ...options });\n  }\n\n  function addErrorToast(options: ToastMessageOptions): void {\n    addToast({ severity: \"error\", ...options });\n  }\n  return {\n    addToast,\n    addSuccessToast,\n    addInfoToast,\n    addWarnToast,\n    addErrorToast,\n  };\n}\n\nexport { useVuePrimeToasts };"
    },
    "pages/about.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1947",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"pages.about.seoDescription\",\n        \"name\": \"description\",\n      },\n    ],\n    \"title\": \"pages.about.whyAnAssistant\",\n  },\n], but it was called with Object {}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "1014"
          ],
          "coveredBy": [
            "1013",
            "1014",
            "1015",
            "1016"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 56
            },
            "start": {
              "column": 9,
              "line": 53
            }
          }
        },
        {
          "id": "1948",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"pages.about.seoDescription\",\n        \"name\": \"description\",\n      },\n    ],\n    \"title\": \"pages.about.whyAnAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"pages.about.seoDescription\",\n      \"name\": \"description\",\n    },\n  ],\n  \"title\": \"\",\n}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "1014"
          ],
          "coveredBy": [
            "1013",
            "1014",
            "1015",
            "1016"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 54
            },
            "start": {
              "column": 12,
              "line": 54
            }
          }
        },
        {
          "id": "1949",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"pages.about.seoDescription\",\n        \"name\": \"description\",\n      },\n    ],\n    \"title\": \"pages.about.whyAnAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [],\n  \"title\": \"pages.about.whyAnAssistant\",\n}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "1014"
          ],
          "coveredBy": [
            "1013",
            "1014",
            "1015",
            "1016"
          ],
          "location": {
            "end": {
              "column": 76,
              "line": 55
            },
            "start": {
              "column": 9,
              "line": 55
            }
          }
        },
        {
          "id": "1950",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"pages.about.seoDescription\",\n        \"name\": \"description\",\n      },\n    ],\n    \"title\": \"pages.about.whyAnAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {},\n  ],\n  \"title\": \"pages.about.whyAnAssistant\",\n}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "1014"
          ],
          "coveredBy": [
            "1013",
            "1014",
            "1015",
            "1016"
          ],
          "location": {
            "end": {
              "column": 75,
              "line": 55
            },
            "start": {
              "column": 10,
              "line": 55
            }
          }
        },
        {
          "id": "1951",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"pages.about.seoDescription\",\n        \"name\": \"description\",\n      },\n    ],\n    \"title\": \"pages.about.whyAnAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"pages.about.seoDescription\",\n      \"name\": \"\",\n    },\n  ],\n  \"title\": \"pages.about.whyAnAssistant\",\n}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "1014"
          ],
          "coveredBy": [
            "1013",
            "1014",
            "1015",
            "1016"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 55
            },
            "start": {
              "column": 18,
              "line": 55
            }
          }
        },
        {
          "id": "1952",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"pages.about.seoDescription\",\n        \"name\": \"description\",\n      },\n    ],\n    \"title\": \"pages.about.whyAnAssistant\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"\",\n      \"name\": \"description\",\n    },\n  ],\n  \"title\": \"pages.about.whyAnAssistant\",\n}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "1014"
          ],
          "coveredBy": [
            "1013",
            "1014",
            "1015",
            "1016"
          ],
          "location": {
            "end": {
              "column": 72,
              "line": 55
            },
            "start": {
              "column": 44,
              "line": 55
            }
          }
        }
      ],
      "source": "<template>\n  <div class=\"container h-full\">\n    <div class=\"flex items-center justify-center\">\n      <RoleImage\n        id=\"about-role-image-title\"\n        :alt=\"$t('pages.about.imageTitle')\"\n        definition=\"small\"\n        role-name=\"werewolf\"\n        sizes=\"75\"\n      />\n\n      <h1\n        id=\"about-title\"\n        class=\"ms-4\"\n      >\n        {{ $t(\"pages.about.whyAnAssistant\") }}\n      </h1>\n    </div>\n\n    <VuePrimeDivider/>\n\n    <AboutWerewolvesGame/>\n\n    <AboutWerewolvesAssistant class=\"mt-5\"/>\n\n    <AboutAvailableRoles class=\"mt-5\"/>\n\n    <AboutHowToContribute class=\"mt-5\"/>\n\n    <AboutCreator class=\"mt-5\"/>\n\n    <VuePrimeDivider/>\n\n    <div class=\"flex justify-center pb-3\">\n      <BackToHomeButton/>\n    </div>\n\n    <VuePrimeScrollTop/>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport AboutAvailableRoles from \"~/components/pages/about/AboutAvailableRoles/AboutAvailableRoles.vue\";\nimport AboutCreator from \"~/components/pages/about/AboutCreator.vue\";\nimport AboutHowToContribute from \"~/components/pages/about/AboutHowToContribute.vue\";\nimport AboutWerewolvesAssistant from \"~/components/pages/about/AboutWerewolvesAssistant.vue\";\nimport AboutWerewolvesGame from \"~/components/pages/about/AboutWerewolvesGame.vue\";\nimport BackToHomeButton from \"~/components/shared/buttons/BackToHomeButton/BackToHomeButton.vue\";\nimport RoleImage from \"~/components/shared/role/RoleImage/RoleImage.vue\";\n\nconst { t } = useI18n();\n\nuseHead({\n  title: t(\"pages.about.whyAnAssistant\"),\n  meta: [{ name: \"description\", content: t(\"pages.about.seoDescription\") }],\n});\n</script>"
    },
    "pages/game/[id].vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1953",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"noindex, nofollow\",\n        \"name\": \"robots\",\n      },\n    ],\n    \"title\": \"pages.game.playingGame\",\n  },\n], but it was called with Object {}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "732"
          ],
          "coveredBy": [
            "731",
            "732",
            "733",
            "734",
            "735",
            "736",
            "737",
            "738",
            "739",
            "740"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 54
            },
            "start": {
              "column": 9,
              "line": 51
            }
          }
        },
        {
          "id": "1954",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"noindex, nofollow\",\n        \"name\": \"robots\",\n      },\n    ],\n    \"title\": \"pages.game.playingGame\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"noindex, nofollow\",\n      \"name\": \"robots\",\n    },\n  ],\n  \"title\": \"\",\n}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "732"
          ],
          "coveredBy": [
            "731",
            "732",
            "733",
            "734",
            "735",
            "736",
            "737",
            "738",
            "739",
            "740"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 52
            },
            "start": {
              "column": 12,
              "line": 52
            }
          }
        },
        {
          "id": "1955",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"noindex, nofollow\",\n        \"name\": \"robots\",\n      },\n    ],\n    \"title\": \"pages.game.playingGame\",\n  },\n], but it was called with Object {\n  \"meta\": Array [],\n  \"title\": \"pages.game.playingGame\",\n}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "732"
          ],
          "coveredBy": [
            "731",
            "732",
            "733",
            "734",
            "735",
            "736",
            "737",
            "738",
            "739",
            "740"
          ],
          "location": {
            "end": {
              "column": 59,
              "line": 53
            },
            "start": {
              "column": 9,
              "line": 53
            }
          }
        },
        {
          "id": "1956",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"noindex, nofollow\",\n        \"name\": \"robots\",\n      },\n    ],\n    \"title\": \"pages.game.playingGame\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {},\n  ],\n  \"title\": \"pages.game.playingGame\",\n}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "732"
          ],
          "coveredBy": [
            "731",
            "732",
            "733",
            "734",
            "735",
            "736",
            "737",
            "738",
            "739",
            "740"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 53
            },
            "start": {
              "column": 10,
              "line": 53
            }
          }
        },
        {
          "id": "1957",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"noindex, nofollow\",\n        \"name\": \"robots\",\n      },\n    ],\n    \"title\": \"pages.game.playingGame\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"noindex, nofollow\",\n      \"name\": \"\",\n    },\n  ],\n  \"title\": \"pages.game.playingGame\",\n}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "732"
          ],
          "coveredBy": [
            "731",
            "732",
            "733",
            "734",
            "735",
            "736",
            "737",
            "738",
            "739",
            "740"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 53
            },
            "start": {
              "column": 18,
              "line": 53
            }
          }
        },
        {
          "id": "1958",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"noindex, nofollow\",\n        \"name\": \"robots\",\n      },\n    ],\n    \"title\": \"pages.game.playingGame\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"\",\n      \"name\": \"robots\",\n    },\n  ],\n  \"title\": \"pages.game.playingGame\",\n}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "732"
          ],
          "coveredBy": [
            "731",
            "732",
            "733",
            "734",
            "735",
            "736",
            "737",
            "738",
            "739",
            "740"
          ],
          "location": {
            "end": {
              "column": 56,
              "line": 53
            },
            "start": {
              "column": 37,
              "line": 53
            }
          }
        },
        {
          "id": "1959",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 8,
          "static": false,
          "killedBy": [
            "738"
          ],
          "coveredBy": [
            "731",
            "732",
            "733",
            "734",
            "735",
            "736",
            "737",
            "738",
            "739",
            "740"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 66
            },
            "start": {
              "column": 73,
              "line": 58
            }
          }
        },
        {
          "id": "1960",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 8,
          "static": false,
          "killedBy": [
            "738"
          ],
          "coveredBy": [
            "731",
            "732",
            "733",
            "734",
            "735",
            "736",
            "737",
            "738",
            "739",
            "740"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 63
            },
            "start": {
              "column": 73,
              "line": 59
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"game-page\"\n    class=\"container-fluid\"\n  >\n    <div\n      v-if=\"fetchingGameStatus === 'pending'\"\n      id=\"loading-game-container\"\n      class=\"flex flex-col h-full items-center justify-center\"\n    >\n      <TextProgressSpinner\n        id=\"loading-game-spinner\"\n        :text=\"$t('pages.game.loadingGame')\"\n      />\n    </div>\n\n    <GameNotFound\n      v-else-if=\"fetchingGameStatus === 'error'\"\n      id=\"game-not-found\"\n      class=\"h-full\"\n    />\n\n    <Component\n      :is=\"gameStatusComponentToRender\"\n      v-else\n      class=\"h-full\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from \"pinia\";\n\nimport GameCanceled from \"~/components/pages/game/GameCanceled/GameCanceled.vue\";\nimport GameNotFound from \"~/components/pages/game/GameNotFound/GameNotFound.vue\";\nimport GameOver from \"~/components/pages/game/GameOver/GameOver.vue\";\nimport GamePlaying from \"~/components/pages/game/GamePlaying/GamePlaying.vue\";\nimport TextProgressSpinner from \"~/components/shared/misc/TextProgressSpinner/TextProgressSpinner.vue\";\nimport type { GameStatus } from \"~/composables/api/game/types/game.types\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\n\ntype GameStatusComponent = typeof GameCanceled | typeof GameOver | typeof GamePlaying;\n\nconst route = useRoute();\nconst gameStore = useGameStore();\nconst { fetchAndSetGame } = gameStore;\nconst { game, fetchingGameStatus } = storeToRefs(gameStore);\n\nconst { t } = useI18n();\n\nuseHead({\n  title: t(\"pages.game.playingGame\"),\n  meta: [{ name: \"robots\", content: \"noindex, nofollow\" }],\n});\n\nconst { id } = route.params;\n\nconst gameStatusComponentToRender = computed<GameStatusComponent>(() => {\n  const gameStatusComponents: Record<GameStatus, GameStatusComponent> = {\n    playing: GamePlaying,\n    over: GameOver,\n    canceled: GameCanceled,\n  };\n\n  return gameStatusComponents[game.value.status];\n});\n\nconst gameId = Array.isArray(id) ? id[0] : id;\nvoid fetchAndSetGame(gameId);\n</script>"
    },
    "pages/game-lobby.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1961",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"pages.gameLobby.seoDescription\",\n        \"name\": \"description\",\n      },\n    ],\n    \"title\": \"pages.gameLobby.startGame\",\n  },\n], but it was called with Object {}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "579"
          ],
          "coveredBy": [
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 51
            },
            "start": {
              "column": 9,
              "line": 48
            }
          }
        },
        {
          "id": "1962",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"pages.gameLobby.seoDescription\",\n        \"name\": \"description\",\n      },\n    ],\n    \"title\": \"pages.gameLobby.startGame\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"pages.gameLobby.seoDescription\",\n      \"name\": \"description\",\n    },\n  ],\n  \"title\": \"\",\n}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "579"
          ],
          "coveredBy": [
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 49
            },
            "start": {
              "column": 12,
              "line": 49
            }
          }
        },
        {
          "id": "1963",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"pages.gameLobby.seoDescription\",\n        \"name\": \"description\",\n      },\n    ],\n    \"title\": \"pages.gameLobby.startGame\",\n  },\n], but it was called with Object {\n  \"meta\": Array [],\n  \"title\": \"pages.gameLobby.startGame\",\n}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "579"
          ],
          "coveredBy": [
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586"
          ],
          "location": {
            "end": {
              "column": 80,
              "line": 50
            },
            "start": {
              "column": 9,
              "line": 50
            }
          }
        },
        {
          "id": "1964",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"pages.gameLobby.seoDescription\",\n        \"name\": \"description\",\n      },\n    ],\n    \"title\": \"pages.gameLobby.startGame\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {},\n  ],\n  \"title\": \"pages.gameLobby.startGame\",\n}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "579"
          ],
          "coveredBy": [
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586"
          ],
          "location": {
            "end": {
              "column": 79,
              "line": 50
            },
            "start": {
              "column": 10,
              "line": 50
            }
          }
        },
        {
          "id": "1965",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"pages.gameLobby.seoDescription\",\n        \"name\": \"description\",\n      },\n    ],\n    \"title\": \"pages.gameLobby.startGame\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"pages.gameLobby.seoDescription\",\n      \"name\": \"\",\n    },\n  ],\n  \"title\": \"pages.gameLobby.startGame\",\n}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "579"
          ],
          "coveredBy": [
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 50
            },
            "start": {
              "column": 18,
              "line": 50
            }
          }
        },
        {
          "id": "1966",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  Object {\n    \"meta\": Array [\n      Object {\n        \"content\": \"pages.gameLobby.seoDescription\",\n        \"name\": \"description\",\n      },\n    ],\n    \"title\": \"pages.gameLobby.startGame\",\n  },\n], but it was called with Object {\n  \"meta\": Array [\n    Object {\n      \"content\": \"\",\n      \"name\": \"description\",\n    },\n  ],\n  \"title\": \"pages.gameLobby.startGame\",\n}",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "579"
          ],
          "coveredBy": [
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586"
          ],
          "location": {
            "end": {
              "column": 76,
              "line": 50
            },
            "start": {
              "column": 44,
              "line": 50
            }
          }
        },
        {
          "id": "1967",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "582"
          ],
          "coveredBy": [
            "582",
            "583",
            "584"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 61
            },
            "start": {
              "column": 64,
              "line": 53
            }
          }
        },
        {
          "id": "1968",
          "mutatorName": "BooleanLiteral",
          "replacement": "gameLobbyRolePicker.value",
          "statusReason": "Mocked error",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "582"
          ],
          "coveredBy": [
            "582",
            "583",
            "584"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 54
            },
            "start": {
              "column": 7,
              "line": 54
            }
          }
        },
        {
          "id": "1969",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Mocked error",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "582"
          ],
          "coveredBy": [
            "582",
            "583",
            "584"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 54
            },
            "start": {
              "column": 7,
              "line": 54
            }
          }
        },
        {
          "id": "1970",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "584"
          ],
          "coveredBy": [
            "582",
            "583",
            "584"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 54
            },
            "start": {
              "column": 7,
              "line": 54
            }
          }
        },
        {
          "id": "1971",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "584"
          ],
          "coveredBy": [
            "584"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 56
            },
            "start": {
              "column": 35,
              "line": 54
            }
          }
        },
        {
          "id": "1972",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"Game Lobby Role Picker is not defined\",\n], but it was called with \"\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "584"
          ],
          "coveredBy": [
            "584"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 55
            },
            "start": {
              "column": 23,
              "line": 55
            }
          }
        },
        {
          "id": "1973",
          "mutatorName": "BooleanLiteral",
          "replacement": "player",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "582"
          ],
          "coveredBy": [
            "582",
            "583"
          ],
          "location": {
            "end": {
              "column": 14,
              "line": 57
            },
            "start": {
              "column": 7,
              "line": 57
            }
          }
        },
        {
          "id": "1974",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "582"
          ],
          "coveredBy": [
            "582",
            "583"
          ],
          "location": {
            "end": {
              "column": 14,
              "line": 57
            },
            "start": {
              "column": 7,
              "line": 57
            }
          }
        },
        {
          "id": "1975",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      undefined,\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "583"
          ],
          "coveredBy": [
            "582",
            "583"
          ],
          "location": {
            "end": {
              "column": 14,
              "line": 57
            },
            "start": {
              "column": 7,
              "line": 57
            }
          }
        },
        {
          "id": "1976",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected \"spy\" to not be called at all, but actually been called 1 times\n\nReceived: \n\n  1st spy call:\n\n    Array [\n      undefined,\n    ]\n\n\nNumber of calls: 1\n",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "583"
          ],
          "coveredBy": [
            "583"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 59
            },
            "start": {
              "column": 16,
              "line": 57
            }
          }
        },
        {
          "id": "1977",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "585"
          ],
          "coveredBy": [
            "585",
            "586"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 68
            },
            "start": {
              "column": 37,
              "line": 63
            }
          }
        },
        {
          "id": "1978",
          "mutatorName": "BooleanLiteral",
          "replacement": "gameLobbyOptionsHub.value",
          "statusReason": "Mocked error",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "585"
          ],
          "coveredBy": [
            "585",
            "586"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 64
            },
            "start": {
              "column": 7,
              "line": 64
            }
          }
        },
        {
          "id": "1979",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Mocked error",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "585"
          ],
          "coveredBy": [
            "585",
            "586"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 64
            },
            "start": {
              "column": 7,
              "line": 64
            }
          }
        },
        {
          "id": "1980",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "586"
          ],
          "coveredBy": [
            "585",
            "586"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 64
            },
            "start": {
              "column": 7,
              "line": 64
            }
          }
        },
        {
          "id": "1981",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "586"
          ],
          "coveredBy": [
            "586"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 66
            },
            "start": {
              "column": 35,
              "line": 64
            }
          }
        },
        {
          "id": "1982",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once with Array [\n  \"Game Lobby Options Hub is not defined\",\n], but it was called with \"\"",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "586"
          ],
          "coveredBy": [
            "586"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 65
            },
            "start": {
              "column": 23,
              "line": 65
            }
          }
        }
      ],
      "source": "<template>\n  <div class=\"flex flex-col\">\n    <GameLobbyHeader\n      id=\"game-lobby-header\"\n      @game-options-button-click=\"openGameOptionsHub\"\n    />\n\n    <VuePrimeDivider/>\n\n    <GameLobbyPlayersParty\n      id=\"game-lobby-players-party\"\n      class=\"flex-auto overflow-y-auto\"\n      @pick-role-for-player=\"pickRoleForPlayer\"\n    />\n\n    <VuePrimeDivider/>\n\n    <GameLobbyFooter/>\n\n    <GameLobbyRolePicker ref=\"gameLobbyRolePicker\"/>\n\n    <GameLobbyOptionsHub ref=\"gameLobbyOptionsHub\"/>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport GameLobbyFooter from \"~/components/pages/game-lobby/GameLobbyFooter/GameLobbyFooter.vue\";\nimport GameLobbyHeader from \"~/components/pages/game-lobby/GameLobbyHeader/GameLobbyHeader.vue\";\nimport type { GameLobbyOptionsHubExposed } from \"~/components/pages/game-lobby/GameLobbyOptionsHub/game-lobby-options-hub.types\";\nimport GameLobbyOptionsHub from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHub.vue\";\nimport GameLobbyPlayersParty from \"~/components/pages/game-lobby/GameLobbyPlayersParty/GameLobbyPlayersParty.vue\";\nimport type { GameLobbyRolePickerExposed } from \"~/components/pages/game-lobby/GameLobbyRolePicker/game-lobby-role-picker.types\";\nimport GameLobbyRolePicker from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePicker.vue\";\nimport type { CreateGamePlayerDto } from \"~/composables/api/game/dto/create-game/create-game-player/create-game-player.dto\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\n\nconst createGameDtoStore = useCreateGameDtoStore();\nconst { resetCreateGameDto } = createGameDtoStore;\nconst gameStore = useGameStore();\nconst { resetGame } = gameStore;\n\nconst { t } = useI18n();\n\nconst gameLobbyRolePicker = ref<GameLobbyRolePickerExposed | null>(null);\nconst gameLobbyOptionsHub = ref<GameLobbyOptionsHubExposed | null>(null);\n\nuseHead({\n  title: t(\"pages.gameLobby.startGame\"),\n  meta: [{ name: \"description\", content: t(\"pages.gameLobby.seoDescription\") }],\n});\n\nfunction pickRoleForPlayer(player?: CreateGamePlayerDto): void {\n  if (!gameLobbyRolePicker.value) {\n    throw createError(\"Game Lobby Role Picker is not defined\");\n  }\n  if (!player) {\n    return;\n  }\n  gameLobbyRolePicker.value.openToPickRoleForPlayer(player);\n}\n\nfunction openGameOptionsHub(): void {\n  if (!gameLobbyOptionsHub.value) {\n    throw createError(\"Game Lobby Options Hub is not defined\");\n  }\n  gameLobbyOptionsHub.value.open();\n}\n\nresetCreateGameDto();\nresetGame();\n</script>"
    },
    "pages/index.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "1983",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "The macro definePageMeta from Nuxt is breaking Stryker, so we ignore it.",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 33,
              "line": 55
            },
            "start": {
              "column": 16,
              "line": 55
            }
          }
        },
        {
          "id": "1984",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "The macro definePageMeta from Nuxt is breaking Stryker, so we ignore it.",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 31,
              "line": 55
            },
            "start": {
              "column": 26,
              "line": 55
            }
          }
        }
      ],
      "source": "<template>\n  <div class=\"flex flex-col\">\n    <div class=\"flex flex-col grow items-center justify-center\">\n      <div class=\"flex justify-center w-full\">\n        <NuxtImg\n          :alt=\"$t('pages.index.werewolvesAssistantLogo')\"\n          sizes=\"lg:200\"\n          src=\"/img/logo/square/werewolves-logo.png\"\n        />\n      </div>\n\n      <div class=\"my-6 text-center w-full\">\n        <h1\n          id=\"title\"\n          class=\"mt-0\"\n        >\n          {{ $t('shared.werewolvesAssistant') }}\n        </h1>\n      </div>\n\n      <NuxtLink\n        id=\"play-button\"\n        class=\"p-button p-button-raised w-3/12\"\n        to=\"/game-lobby\"\n      >\n        <span class=\"fa fa-2x fa-play-circle me-2\"/>\n\n        <span class=\"bold fs-3 fw-bold text-2xl uppercase\">\n          {{ $t('pages.index.play') }}\n        </span>\n      </NuxtLink>\n\n      <NuxtLink\n        id=\"about-button\"\n        class=\"mt-4 p-button p-button-secondary w-3/12\"\n        to=\"/about\"\n      >\n        <span class=\"fa fa-question me-2\"/>\n\n        <span>\n          {{ $t('pages.index.about') }}\n        </span>\n      </NuxtLink>\n    </div>\n\n    <VuePrimeDivider/>\n\n    <IndexFooter class=\"mt-1\"/>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport IndexFooter from \"~/components/pages/index/IndexFooter.vue\";\n\ndefinePageMeta({ layout: false });\n</script>\n\n<style scoped lang=\"scss\">\n#title {\n  font-size: 4rem;\n}\n</style>"
    },
    "stores/game/create-game-dto/useCreateGameDtoStore.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1988",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected _CreateGameDto{ players: [], …(2) } to strictly equal _CreateGameDto{ …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "114"
          ],
          "coveredBy": [
            "114"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 24
            },
            "start": {
              "column": 70,
              "line": 22
            }
          }
        },
        {
          "id": "1989",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected _CreateGameDto{ …(3) } to strictly equal _CreateGameDto{ players: [], …(2) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "115"
          ],
          "coveredBy": [
            "115"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 28
            },
            "start": {
              "column": 39,
              "line": 26
            }
          }
        },
        {
          "id": "1990",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected _CreateGameDto{ players: [], …(2) } to strictly equal _CreateGameDto{ …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "116"
          ],
          "coveredBy": [
            "116"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 32
            },
            "start": {
              "column": 72,
              "line": 30
            }
          }
        },
        {
          "id": "1991",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected _CreateGameDto{ …(3) } to strictly equal _CreateGameDto{ …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "117"
          ],
          "coveredBy": [
            "117",
            "118"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 39
            },
            "start": {
              "column": 75,
              "line": 34
            }
          }
        },
        {
          "id": "1992",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected _CreateGameDto{ …(3) } to strictly equal _CreateGameDto{ …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "117"
          ],
          "coveredBy": [
            "117",
            "118"
          ],
          "location": {
            "end": {
              "column": 97,
              "line": 35
            },
            "start": {
              "column": 63,
              "line": 35
            }
          }
        },
        {
          "id": "1993",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected _CreateGameDto{ …(3) } to strictly equal _CreateGameDto{ …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "117"
          ],
          "coveredBy": [
            "117",
            "118"
          ],
          "location": {
            "end": {
              "column": 97,
              "line": 35
            },
            "start": {
              "column": 77,
              "line": 35
            }
          }
        },
        {
          "id": "1994",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected _CreateGameDto{ …(3) } to strictly equal _CreateGameDto{ …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "117"
          ],
          "coveredBy": [
            "117",
            "118"
          ],
          "location": {
            "end": {
              "column": 97,
              "line": 35
            },
            "start": {
              "column": 77,
              "line": 35
            }
          }
        },
        {
          "id": "1995",
          "mutatorName": "EqualityOperator",
          "replacement": "name !== player.name",
          "statusReason": "expected _CreateGameDto{ …(3) } to strictly equal _CreateGameDto{ …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "117"
          ],
          "coveredBy": [
            "117",
            "118"
          ],
          "location": {
            "end": {
              "column": 97,
              "line": 35
            },
            "start": {
              "column": 77,
              "line": 35
            }
          }
        },
        {
          "id": "1996",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected _CreateGameDto{ …(3) } to strictly equal _CreateGameDto{ …(3) }",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "118"
          ],
          "coveredBy": [
            "117",
            "118"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 36
            },
            "start": {
              "column": 9,
              "line": 36
            }
          }
        },
        {
          "id": "1997",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected _CreateGameDto{ …(3) } to strictly equal _CreateGameDto{ …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "117"
          ],
          "coveredBy": [
            "117",
            "118"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 36
            },
            "start": {
              "column": 9,
              "line": 36
            }
          }
        },
        {
          "id": "1998",
          "mutatorName": "EqualityOperator",
          "replacement": "playerIndex === -1",
          "statusReason": "expected _CreateGameDto{ …(3) } to strictly equal _CreateGameDto{ …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "117"
          ],
          "coveredBy": [
            "117",
            "118"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 36
            },
            "start": {
              "column": 9,
              "line": 36
            }
          }
        },
        {
          "id": "1999",
          "mutatorName": "UnaryOperator",
          "replacement": "+1",
          "statusReason": "expected _CreateGameDto{ …(3) } to strictly equal _CreateGameDto{ …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "117"
          ],
          "coveredBy": [
            "117",
            "118"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 36
            },
            "start": {
              "column": 25,
              "line": 36
            }
          }
        },
        {
          "id": "2000",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected _CreateGameDto{ …(3) } to strictly equal _CreateGameDto{ …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "117"
          ],
          "coveredBy": [
            "117"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 38
            },
            "start": {
              "column": 29,
              "line": 36
            }
          }
        },
        {
          "id": "2001",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected [] to strictly equal [ _CreateGamePlayerDto{ …(4) }, …(2) ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "119"
          ],
          "coveredBy": [
            "119"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 43
            },
            "start": {
              "column": 76,
              "line": 41
            }
          }
        },
        {
          "id": "2002",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "stores/game/create-game-dto/useCreateGameDtoStore.ts(42,5): error TS2322: Type 'undefined[]' is not assignable to type '{ name: string; role: { name?: \"werewolf\" | \"big-bad-wolf\" | \"accursed-wolf-father\" | \"white-werewolf\" | \"villager\" | \"villager-villager\" | \"seer\" | \"cupid\" | \"witch\" | \"hunter\" | \"little-girl\" | ... 19 more ... | undefined; }; side: { ...; }; group?: string | undefined; }[]'.\n  Type 'undefined' is not assignable to type '{ name: string; role: { name?: \"werewolf\" | \"big-bad-wolf\" | \"accursed-wolf-father\" | \"white-werewolf\" | \"villager\" | \"villager-villager\" | \"seer\" | \"cupid\" | \"witch\" | \"hunter\" | \"little-girl\" | ... 19 more ... | undefined; }; side: { ...; }; group?: string | undefined; }'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "119"
          ],
          "location": {
            "end": {
              "column": 91,
              "line": 42
            },
            "start": {
              "column": 47,
              "line": 42
            }
          }
        },
        {
          "id": "2003",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected _CreateGameDto{ …(3) } to strictly equal _CreateGameDto{ …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "120"
          ],
          "coveredBy": [
            "120",
            "121"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 50
            },
            "start": {
              "column": 68,
              "line": 45
            }
          }
        },
        {
          "id": "2004",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected _CreateGameDto{ …(3) } to strictly equal _CreateGameDto{ …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "120"
          ],
          "coveredBy": [
            "120",
            "121"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 46
            },
            "start": {
              "column": 63,
              "line": 46
            }
          }
        },
        {
          "id": "2005",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected _CreateGameDto{ …(3) } to strictly equal _CreateGameDto{ …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "120"
          ],
          "coveredBy": [
            "120",
            "121"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 46
            },
            "start": {
              "column": 73,
              "line": 46
            }
          }
        },
        {
          "id": "2006",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected _CreateGameDto{ …(3) } to strictly equal _CreateGameDto{ …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "120"
          ],
          "coveredBy": [
            "120",
            "121"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 46
            },
            "start": {
              "column": 73,
              "line": 46
            }
          }
        },
        {
          "id": "2007",
          "mutatorName": "EqualityOperator",
          "replacement": "player.name !== playerName",
          "statusReason": "expected _CreateGameDto{ …(3) } to strictly equal _CreateGameDto{ …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "120"
          ],
          "coveredBy": [
            "120",
            "121"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 46
            },
            "start": {
              "column": 73,
              "line": 46
            }
          }
        },
        {
          "id": "2008",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected _CreateGameDto{ …(3) } to strictly equal _CreateGameDto{ …(3) }",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "121"
          ],
          "coveredBy": [
            "120",
            "121"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 47
            },
            "start": {
              "column": 9,
              "line": 47
            }
          }
        },
        {
          "id": "2009",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected _CreateGameDto{ …(3) } to strictly equal _CreateGameDto{ …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "120"
          ],
          "coveredBy": [
            "120",
            "121"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 47
            },
            "start": {
              "column": 9,
              "line": 47
            }
          }
        },
        {
          "id": "2010",
          "mutatorName": "EqualityOperator",
          "replacement": "playerIndex === -1",
          "statusReason": "expected _CreateGameDto{ …(3) } to strictly equal _CreateGameDto{ …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "120"
          ],
          "coveredBy": [
            "120",
            "121"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 47
            },
            "start": {
              "column": 9,
              "line": 47
            }
          }
        },
        {
          "id": "2011",
          "mutatorName": "UnaryOperator",
          "replacement": "+1",
          "statusReason": "expected _CreateGameDto{ …(3) } to strictly equal _CreateGameDto{ …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "120"
          ],
          "coveredBy": [
            "120",
            "121"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 47
            },
            "start": {
              "column": 25,
              "line": 47
            }
          }
        },
        {
          "id": "2012",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected _CreateGameDto{ …(3) } to strictly equal _CreateGameDto{ …(3) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "120"
          ],
          "coveredBy": [
            "120"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 49
            },
            "start": {
              "column": 29,
              "line": 47
            }
          }
        },
        {
          "id": "2013",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "stores/game/create-game-dto/useCreateGameDtoStore.ts(52,71): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 54
            },
            "start": {
              "column": 93,
              "line": 52
            }
          }
        },
        {
          "id": "2014",
          "mutatorName": "MethodExpression",
          "replacement": "createGameDto.value.players",
          "statusReason": "expected [ _CreateGamePlayerDto{ …(4) }, …(2) ] to strictly equal [ _CreateGamePlayerDto{ …(4) }, …(1) ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "122"
          ],
          "coveredBy": [
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132"
          ],
          "location": {
            "end": {
              "column": 87,
              "line": 53
            },
            "start": {
              "column": 12,
              "line": 53
            }
          }
        },
        {
          "id": "2015",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected [] to strictly equal [ _CreateGamePlayerDto{ …(4) }, …(1) ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "122"
          ],
          "coveredBy": [
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132"
          ],
          "location": {
            "end": {
              "column": 86,
              "line": 53
            },
            "start": {
              "column": 47,
              "line": 53
            }
          }
        },
        {
          "id": "2016",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected [ _CreateGamePlayerDto{ …(4) }, …(2) ] to strictly equal [ _CreateGamePlayerDto{ …(4) }, …(1) ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "122"
          ],
          "coveredBy": [
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132"
          ],
          "location": {
            "end": {
              "column": 86,
              "line": 53
            },
            "start": {
              "column": 57,
              "line": 53
            }
          }
        },
        {
          "id": "2017",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected [] to strictly equal [ _CreateGamePlayerDto{ …(4) }, …(1) ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "122"
          ],
          "coveredBy": [
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132"
          ],
          "location": {
            "end": {
              "column": 86,
              "line": 53
            },
            "start": {
              "column": 57,
              "line": 53
            }
          }
        },
        {
          "id": "2018",
          "mutatorName": "EqualityOperator",
          "replacement": "player.role.name !== roleName",
          "statusReason": "expected [ _CreateGamePlayerDto{ …(4) } ] to strictly equal [ _CreateGamePlayerDto{ …(4) }, …(1) ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "122"
          ],
          "coveredBy": [
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132"
          ],
          "location": {
            "end": {
              "column": 86,
              "line": 53
            },
            "start": {
              "column": 57,
              "line": 53
            }
          }
        },
        {
          "id": "2019",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "stores/game/create-game-dto/useCreateGameDtoStore.ts(56,65): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "123",
            "124",
            "125",
            "126"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 61
            },
            "start": {
              "column": 73,
              "line": 56
            }
          }
        },
        {
          "id": "2020",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "124"
          ],
          "coveredBy": [
            "123",
            "124",
            "125",
            "126"
          ],
          "location": {
            "end": {
              "column": 100,
              "line": 60
            },
            "start": {
              "column": 12,
              "line": 60
            }
          }
        },
        {
          "id": "2021",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "123"
          ],
          "coveredBy": [
            "123",
            "124",
            "125",
            "126"
          ],
          "location": {
            "end": {
              "column": 100,
              "line": 60
            },
            "start": {
              "column": 12,
              "line": 60
            }
          }
        },
        {
          "id": "2022",
          "mutatorName": "LogicalOperator",
          "replacement": "!!role || role.minInGame === undefined || playersWithRoleName.length >= role.minInGame",
          "statusReason": "stores/game/create-game-dto/useCreateGameDtoStore.ts(60,22): error TS18048: 'role' is possibly 'undefined'.\nstores/game/create-game-dto/useCreateGameDtoStore.ts(60,84): error TS18048: 'role' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "123",
            "124",
            "125",
            "126"
          ],
          "location": {
            "end": {
              "column": 100,
              "line": 60
            },
            "start": {
              "column": 12,
              "line": 60
            }
          }
        },
        {
          "id": "2023",
          "mutatorName": "BooleanLiteral",
          "replacement": "!role",
          "statusReason": "stores/game/create-game-dto/useCreateGameDtoStore.ts(60,22): error TS18048: 'role' is possibly 'undefined'.\nstores/game/create-game-dto/useCreateGameDtoStore.ts(60,84): error TS18048: 'role' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "123",
            "124",
            "125",
            "126"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 60
            },
            "start": {
              "column": 12,
              "line": 60
            }
          }
        },
        {
          "id": "2024",
          "mutatorName": "BooleanLiteral",
          "replacement": "role",
          "statusReason": "stores/game/create-game-dto/useCreateGameDtoStore.ts(60,22): error TS18048: 'role' is possibly 'undefined'.\nstores/game/create-game-dto/useCreateGameDtoStore.ts(60,84): error TS18048: 'role' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "123",
            "124",
            "125",
            "126"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 60
            },
            "start": {
              "column": 13,
              "line": 60
            }
          }
        },
        {
          "id": "2025",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "124"
          ],
          "coveredBy": [
            "123",
            "124",
            "125",
            "126"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 60
            },
            "start": {
              "column": 23,
              "line": 60
            }
          }
        },
        {
          "id": "2026",
          "mutatorName": "LogicalOperator",
          "replacement": "role.minInGame === undefined && playersWithRoleName.length >= role.minInGame",
          "statusReason": "stores/game/create-game-dto/useCreateGameDtoStore.ts(60,85): error TS18048: 'role.minInGame' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "123",
            "124",
            "125",
            "126"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 60
            },
            "start": {
              "column": 23,
              "line": 60
            }
          }
        },
        {
          "id": "2027",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "stores/game/create-game-dto/useCreateGameDtoStore.ts(60,62): error TS18048: 'role.minInGame' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "123",
            "124",
            "125",
            "126"
          ],
          "location": {
            "end": {
              "column": 51,
              "line": 60
            },
            "start": {
              "column": 23,
              "line": 60
            }
          }
        },
        {
          "id": "2028",
          "mutatorName": "EqualityOperator",
          "replacement": "role.minInGame !== undefined",
          "statusReason": "stores/game/create-game-dto/useCreateGameDtoStore.ts(60,85): error TS18048: 'role.minInGame' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "123",
            "124",
            "125",
            "126"
          ],
          "location": {
            "end": {
              "column": 51,
              "line": 60
            },
            "start": {
              "column": 23,
              "line": 60
            }
          }
        },
        {
          "id": "2029",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "123"
          ],
          "coveredBy": [
            "123",
            "124",
            "125"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 60
            },
            "start": {
              "column": 55,
              "line": 60
            }
          }
        },
        {
          "id": "2030",
          "mutatorName": "EqualityOperator",
          "replacement": "playersWithRoleName.length > role.minInGame",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "123"
          ],
          "coveredBy": [
            "123",
            "124",
            "125"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 60
            },
            "start": {
              "column": 55,
              "line": 60
            }
          }
        },
        {
          "id": "2031",
          "mutatorName": "EqualityOperator",
          "replacement": "playersWithRoleName.length < role.minInGame",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "123"
          ],
          "coveredBy": [
            "123",
            "124",
            "125"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 60
            },
            "start": {
              "column": 55,
              "line": 60
            }
          }
        },
        {
          "id": "2032",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "stores/game/create-game-dto/useCreateGameDtoStore.ts(63,65): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "127",
            "128",
            "129"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 68
            },
            "start": {
              "column": 73,
              "line": 63
            }
          }
        },
        {
          "id": "2033",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "128"
          ],
          "coveredBy": [
            "127",
            "128",
            "129"
          ],
          "location": {
            "end": {
              "column": 66,
              "line": 67
            },
            "start": {
              "column": 12,
              "line": 67
            }
          }
        },
        {
          "id": "2034",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "127"
          ],
          "coveredBy": [
            "127",
            "128",
            "129"
          ],
          "location": {
            "end": {
              "column": 66,
              "line": 67
            },
            "start": {
              "column": 12,
              "line": 67
            }
          }
        },
        {
          "id": "2035",
          "mutatorName": "LogicalOperator",
          "replacement": "!!role || playersWithRoleName.length >= role.maxInGame",
          "statusReason": "stores/game/create-game-dto/useCreateGameDtoStore.ts(67,52): error TS18048: 'role' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "127",
            "128",
            "129"
          ],
          "location": {
            "end": {
              "column": 66,
              "line": 67
            },
            "start": {
              "column": 12,
              "line": 67
            }
          }
        },
        {
          "id": "2036",
          "mutatorName": "BooleanLiteral",
          "replacement": "!role",
          "statusReason": "stores/game/create-game-dto/useCreateGameDtoStore.ts(67,51): error TS18048: 'role' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "127",
            "128",
            "129"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 67
            },
            "start": {
              "column": 12,
              "line": 67
            }
          }
        },
        {
          "id": "2037",
          "mutatorName": "BooleanLiteral",
          "replacement": "role",
          "statusReason": "stores/game/create-game-dto/useCreateGameDtoStore.ts(67,51): error TS18048: 'role' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "127",
            "128",
            "129"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 67
            },
            "start": {
              "column": 13,
              "line": 67
            }
          }
        },
        {
          "id": "2038",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "128"
          ],
          "coveredBy": [
            "127",
            "128"
          ],
          "location": {
            "end": {
              "column": 66,
              "line": 67
            },
            "start": {
              "column": 22,
              "line": 67
            }
          }
        },
        {
          "id": "2039",
          "mutatorName": "EqualityOperator",
          "replacement": "playersWithRoleName.length > role.maxInGame",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "127"
          ],
          "coveredBy": [
            "127",
            "128"
          ],
          "location": {
            "end": {
              "column": 66,
              "line": 67
            },
            "start": {
              "column": 22,
              "line": 67
            }
          }
        },
        {
          "id": "2040",
          "mutatorName": "EqualityOperator",
          "replacement": "playersWithRoleName.length < role.maxInGame",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "127"
          ],
          "coveredBy": [
            "127",
            "128"
          ],
          "location": {
            "end": {
              "column": 66,
              "line": 67
            },
            "start": {
              "column": 22,
              "line": 67
            }
          }
        },
        {
          "id": "2041",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "stores/game/create-game-dto/useCreateGameDtoStore.ts(70,75): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "130",
            "131",
            "132"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 79
            },
            "start": {
              "column": 82,
              "line": 70
            }
          }
        },
        {
          "id": "2042",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "stores/game/create-game-dto/useCreateGameDtoStore.ts(76,23): error TS18048: 'role' is possibly 'undefined'.\nstores/game/create-game-dto/useCreateGameDtoStore.ts(76,23): error TS18048: 'role.minInGame' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "130",
            "131",
            "132"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 73
            },
            "start": {
              "column": 9,
              "line": 73
            }
          }
        },
        {
          "id": "2043",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "stores/game/create-game-dto/useCreateGameDtoStore.ts(76,23): error TS18048: 'role' is possibly 'undefined'.\nstores/game/create-game-dto/useCreateGameDtoStore.ts(76,23): error TS18048: 'role.minInGame' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "130",
            "131",
            "132"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 73
            },
            "start": {
              "column": 9,
              "line": 73
            }
          }
        },
        {
          "id": "2044",
          "mutatorName": "EqualityOperator",
          "replacement": "role?.minInGame !== undefined",
          "statusReason": "stores/game/create-game-dto/useCreateGameDtoStore.ts(76,23): error TS18048: 'role' is possibly 'undefined'.\nstores/game/create-game-dto/useCreateGameDtoStore.ts(76,23): error TS18048: 'role.minInGame' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "130",
            "131",
            "132"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 73
            },
            "start": {
              "column": 9,
              "line": 73
            }
          }
        },
        {
          "id": "2045",
          "mutatorName": "OptionalChaining",
          "replacement": "role.minInGame",
          "statusReason": "stores/game/create-game-dto/useCreateGameDtoStore.ts(73,9): error TS18048: 'role' is possibly 'undefined'.\nstores/game/create-game-dto/useCreateGameDtoStore.ts(76,23): error TS18048: 'role' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "130",
            "131",
            "132"
          ],
          "location": {
            "end": {
              "column": 24,
              "line": 73
            },
            "start": {
              "column": 9,
              "line": 73
            }
          }
        },
        {
          "id": "2046",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "stores/game/create-game-dto/useCreateGameDtoStore.ts(74,23): error TS18048: 'role' is possibly 'undefined'.\nstores/game/create-game-dto/useCreateGameDtoStore.ts(74,23): error TS18048: 'role.minInGame' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "132"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 75
            },
            "start": {
              "column": 40,
              "line": 73
            }
          }
        },
        {
          "id": "2047",
          "mutatorName": "ArithmeticOperator",
          "replacement": "role.minInGame + playersWithRoleName.length",
          "statusReason": "expected 2 to be +0 // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "130"
          ],
          "coveredBy": [
            "130",
            "131"
          ],
          "location": {
            "end": {
              "column": 66,
              "line": 76
            },
            "start": {
              "column": 23,
              "line": 76
            }
          }
        },
        {
          "id": "2048",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected +0 to be 1 // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "131"
          ],
          "coveredBy": [
            "130",
            "131"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 78
            },
            "start": {
              "column": 12,
              "line": 78
            }
          }
        },
        {
          "id": "2049",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected -1 to be +0 // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "130"
          ],
          "coveredBy": [
            "130",
            "131"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 78
            },
            "start": {
              "column": 12,
              "line": 78
            }
          }
        },
        {
          "id": "2050",
          "mutatorName": "EqualityOperator",
          "replacement": "leftCount < -1",
          "statusReason": "expected -1 to be +0 // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "130"
          ],
          "coveredBy": [
            "130",
            "131"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 78
            },
            "start": {
              "column": 12,
              "line": 78
            }
          }
        },
        {
          "id": "2051",
          "mutatorName": "EqualityOperator",
          "replacement": "leftCount > -1",
          "statusReason": "expected -1 to be +0 // Object.is equality",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "130"
          ],
          "coveredBy": [
            "130",
            "131"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 78
            },
            "start": {
              "column": 12,
              "line": 78
            }
          }
        },
        {
          "id": "2052",
          "mutatorName": "UnaryOperator",
          "replacement": "+1",
          "statusReason": "expected +0 to be 1 // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "131"
          ],
          "coveredBy": [
            "130",
            "131"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 78
            },
            "start": {
              "column": 25,
              "line": 78
            }
          }
        },
        {
          "id": "2053",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "tests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyRandomCompositionButton/GameLobbyRandomCompositionButton.nuxt.spec.ts(42,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyRandomCompositionButton/GameLobbyRandomCompositionButton.nuxt.spec.ts(53,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyRandomCompositionButton/GameLobbyRandomCompositionButton.nuxt.spec.ts(69,28): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyRandomCompositionButton/GameLobbyRandomCompositionButton.nuxt.spec.ts(78,28): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyRandomCompositionButton/GameLobbyRandomCompositionButton.nuxt.spec.ts(95,30): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyRandomCompositionButton/GameLobbyRandomCompositionButton.nuxt.spec.ts(112,41): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyRandomCompositionButton/GameLobbyRandomCompositionButton.nuxt.spec.ts(135,37): error TS2339: Property 'setPlayersToCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyRandomCompositionButton/GameLobbyRandomCompositionButton.nuxt.spec.ts(140,30): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyRandomCompositionButton/GameLobbyRandomCompositionButton.nuxt.spec.ts(154,37): error TS2339: Property 'setPlayersToCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyStartGameButton/GameLobbyStartGameButton.nuxt.spec.ts(78,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyStartGameButton/GameLobbyStartGameButton.nuxt.spec.ts(94,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyStartGameButton/GameLobbyStartGameButton.nuxt.spec.ts(112,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyStartGameButton/GameLobbyStartGameButton.nuxt.spec.ts(121,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyStartGameButton/GameLobbyStartGameButton.nuxt.spec.ts(131,28): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyStartGameButton/GameLobbyStartGameButton.nuxt.spec.ts(146,111): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyHeader/GameLobbyHeader.nuxt.spec.ts(90,35): error TS2339: Property 'addPlayerToCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyHeader/GameLobbyHeader.nuxt.spec.ts(104,35): error TS2339: Property 'addPlayerToCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyHeader/GameLobbyPlayerInput/GameLobbyPlayerInput.nuxt.spec.ts(41,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyHeader/GameLobbyPlayerInput/GameLobbyPlayerInput.nuxt.spec.ts(50,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyHeader/GameLobbyPlayerInput/GameLobbyPlayerInput.nuxt.spec.ts(63,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyHeader/GameLobbyPlayerInput/GameLobbyPlayerInput.nuxt.spec.ts(80,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyHeader/GameLobbyPlayerInput/GameLobbyPlayerInput.nuxt.spec.ts(89,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyHeader/GameLobbyPlayerInput/GameLobbyPlayerInput.nuxt.spec.ts(103,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyHeader/GameLobbyPlayerInput/GameLobbyPlayerInput.nuxt.spec.ts(117,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyHeader/GameLobbyPlayerInput/GameLobbyPlayerInput.nuxt.spec.ts(144,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyHeader/GameLobbyPlayerInput/GameLobbyPlayerInput.nuxt.spec.ts(153,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubCompositionTab/GameLobbyOptionsHubCompositionTab.nuxt.spec.ts(46,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubCompositionTab/GameLobbyOptionsHubCompositionTab.nuxt.spec.ts(56,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubCompositionTab/GameLobbyOptionsHubCompositionTab.nuxt.spec.ts(69,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubCompositionTab/GameLobbyOptionsHubCompositionTab.nuxt.spec.ts(72,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabActor/GameLobbyOptionsHubRolesTabActor.nuxt.spec.ts(46,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabActor/GameLobbyOptionsHubRolesTabActor.nuxt.spec.ts(55,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabActor/GameLobbyOptionsHubRolesTabActor.nuxt.spec.ts(67,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabActor/GameLobbyOptionsHubRolesTabActor.nuxt.spec.ts(70,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabBearTamer/GameLobbyOptionsHubRolesTabBearTamer.nuxt.spec.ts(46,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabBearTamer/GameLobbyOptionsHubRolesTabBearTamer.nuxt.spec.ts(55,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabBearTamer/GameLobbyOptionsHubRolesTabBearTamer.nuxt.spec.ts(67,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabBearTamer/GameLobbyOptionsHubRolesTabBearTamer.nuxt.spec.ts(70,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabBigBadWolf/GameLobbyOptionsHubRolesTabBigBadWolf.nuxt.spec.ts(46,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabBigBadWolf/GameLobbyOptionsHubRolesTabBigBadWolf.nuxt.spec.ts(55,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabBigBadWolf/GameLobbyOptionsHubRolesTabBigBadWolf.nuxt.spec.ts(67,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabBigBadWolf/GameLobbyOptionsHubRolesTabBigBadWolf.nuxt.spec.ts(70,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabCupid/GameLobbyOptionsHubRolesTabCupid.nuxt.spec.ts(46,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabCupid/GameLobbyOptionsHubRolesTabCupid.nuxt.spec.ts(64,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabCupid/GameLobbyOptionsHubRolesTabCupid.nuxt.spec.ts(67,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabCupid/GameLobbyOptionsHubRolesTabCupid.nuxt.spec.ts(80,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabCupid/GameLobbyOptionsHubRolesTabCupid.nuxt.spec.ts(98,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabCupid/GameLobbyOptionsHubRolesTabCupid.nuxt.spec.ts(101,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabDefender/GameLobbyOptionsHubRolesTabDefender.nuxt.spec.ts(46,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabDefender/GameLobbyOptionsHubRolesTabDefender.nuxt.spec.ts(64,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabDefender/GameLobbyOptionsHubRolesTabDefender.nuxt.spec.ts(67,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabElder/GameLobbyOptionsHubRolesTabElder.nuxt.spec.ts(65,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabElder/GameLobbyOptionsHubRolesTabElder.nuxt.spec.ts(68,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabElder/GameLobbyOptionsHubRolesTabElder.nuxt.spec.ts(76,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabElder/GameLobbyOptionsHubRolesTabElder.nuxt.spec.ts(79,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabElder/GameLobbyOptionsHubRolesTabElder.nuxt.spec.ts(88,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabElder/GameLobbyOptionsHubRolesTabElder.nuxt.spec.ts(101,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabElder/GameLobbyOptionsHubRolesTabElder.nuxt.spec.ts(110,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabElder/GameLobbyOptionsHubRolesTabElder.nuxt.spec.ts(122,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabElder/GameLobbyOptionsHubRolesTabElder.nuxt.spec.ts(125,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabFox/GameLobbyOptionsHubRolesTabFox.nuxt.spec.ts(52,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabFox/GameLobbyOptionsHubRolesTabFox.nuxt.spec.ts(64,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabFox/GameLobbyOptionsHubRolesTabFox.nuxt.spec.ts(67,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabGeneral/GameLobbyOptionsHubRolesTabGeneral.nuxt.spec.ts(54,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabGeneral/GameLobbyOptionsHubRolesTabGeneral.nuxt.spec.ts(72,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabGeneral/GameLobbyOptionsHubRolesTabGeneral.nuxt.spec.ts(75,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabGeneral/GameLobbyOptionsHubRolesTabGeneral.nuxt.spec.ts(88,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabGeneral/GameLobbyOptionsHubRolesTabGeneral.nuxt.spec.ts(97,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabGeneral/GameLobbyOptionsHubRolesTabGeneral.nuxt.spec.ts(109,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabGeneral/GameLobbyOptionsHubRolesTabGeneral.nuxt.spec.ts(112,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabIdiot/GameLobbyOptionsHubRolesTabIdiot.nuxt.spec.ts(46,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabIdiot/GameLobbyOptionsHubRolesTabIdiot.nuxt.spec.ts(55,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabIdiot/GameLobbyOptionsHubRolesTabIdiot.nuxt.spec.ts(67,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabIdiot/GameLobbyOptionsHubRolesTabIdiot.nuxt.spec.ts(70,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabLittleGirl/GameLobbyOptionsHubRolesTabLittleGirl.nuxt.spec.ts(47,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabLittleGirl/GameLobbyOptionsHubRolesTabLittleGirl.nuxt.spec.ts(64,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabLittleGirl/GameLobbyOptionsHubRolesTabLittleGirl.nuxt.spec.ts(67,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabPiedPiper/GameLobbyOptionsHubRolesTabPiedPiper.nuxt.spec.ts(65,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabPiedPiper/GameLobbyOptionsHubRolesTabPiedPiper.nuxt.spec.ts(68,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabPiedPiper/GameLobbyOptionsHubRolesTabPiedPiper.nuxt.spec.ts(77,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabPiedPiper/GameLobbyOptionsHubRolesTabPiedPiper.nuxt.spec.ts(80,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabPiedPiper/GameLobbyOptionsHubRolesTabPiedPiper.nuxt.spec.ts(90,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabPiedPiper/GameLobbyOptionsHubRolesTabPiedPiper.nuxt.spec.ts(109,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabPiedPiper/GameLobbyOptionsHubRolesTabPiedPiper.nuxt.spec.ts(121,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabPiedPiper/GameLobbyOptionsHubRolesTabPiedPiper.nuxt.spec.ts(124,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabPrejudicedManipulator/GameLobbyOptionsHubRolesTabPrejudicedManipulator.nuxt.spec.ts(55,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabPrejudicedManipulator/GameLobbyOptionsHubRolesTabPrejudicedManipulator.nuxt.spec.ts(70,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabPrejudicedManipulator/GameLobbyOptionsHubRolesTabPrejudicedManipulator.nuxt.spec.ts(73,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabScandalmonger/GameLobbyOptionsHubRolesTabScandalmonger.nuxt.spec.ts(64,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabScandalmonger/GameLobbyOptionsHubRolesTabScandalmonger.nuxt.spec.ts(67,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabScandalmonger/GameLobbyOptionsHubRolesTabScandalmonger.nuxt.spec.ts(76,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabScandalmonger/GameLobbyOptionsHubRolesTabScandalmonger.nuxt.spec.ts(79,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabScandalmonger/GameLobbyOptionsHubRolesTabScandalmonger.nuxt.spec.ts(89,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSeer/GameLobbyOptionsHubRolesTabSeer.nuxt.spec.ts(53,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSeer/GameLobbyOptionsHubRolesTabSeer.nuxt.spec.ts(66,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSeer/GameLobbyOptionsHubRolesTabSeer.nuxt.spec.ts(69,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSeer/GameLobbyOptionsHubRolesTabSeer.nuxt.spec.ts(89,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSeer/GameLobbyOptionsHubRolesTabSeer.nuxt.spec.ts(102,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSeer/GameLobbyOptionsHubRolesTabSeer.nuxt.spec.ts(105,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriff.nuxt.spec.ts(47,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriff.nuxt.spec.ts(77,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriff.nuxt.spec.ts(90,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriff.nuxt.spec.ts(93,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriff.nuxt.spec.ts(106,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriff.nuxt.spec.ts(115,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriff.nuxt.spec.ts(127,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriff.nuxt.spec.ts(130,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriff.nuxt.spec.ts(143,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriff.nuxt.spec.ts(152,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriff.nuxt.spec.ts(164,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriff.nuxt.spec.ts(167,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.nuxt.spec.ts(55,26): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.nuxt.spec.ts(55,86): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.nuxt.spec.ts(56,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.nuxt.spec.ts(57,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.nuxt.spec.ts(67,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.nuxt.spec.ts(77,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.nuxt.spec.ts(90,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.nuxt.spec.ts(93,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.nuxt.spec.ts(101,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.nuxt.spec.ts(105,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.nuxt.spec.ts(120,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.nuxt.spec.ts(123,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.nuxt.spec.ts(132,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.nuxt.spec.ts(135,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.nuxt.spec.ts(145,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabStutteringJudge/GameLobbyOptionsHubRolesTabStutteringJudge.nuxt.spec.ts(64,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabStutteringJudge/GameLobbyOptionsHubRolesTabStutteringJudge.nuxt.spec.ts(67,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabStutteringJudge/GameLobbyOptionsHubRolesTabStutteringJudge.nuxt.spec.ts(75,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabStutteringJudge/GameLobbyOptionsHubRolesTabStutteringJudge.nuxt.spec.ts(78,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabStutteringJudge/GameLobbyOptionsHubRolesTabStutteringJudge.nuxt.spec.ts(87,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabThief/GameLobbyOptionsHubRolesTabThief.nuxt.spec.ts(53,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabThief/GameLobbyOptionsHubRolesTabThief.nuxt.spec.ts(66,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabThief/GameLobbyOptionsHubRolesTabThief.nuxt.spec.ts(69,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabThief/GameLobbyOptionsHubRolesTabThief.nuxt.spec.ts(82,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabThief/GameLobbyOptionsHubRolesTabThief.nuxt.spec.ts(91,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabThief/GameLobbyOptionsHubRolesTabThief.nuxt.spec.ts(103,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabThief/GameLobbyOptionsHubRolesTabThief.nuxt.spec.ts(106,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabThreeBrothers/GameLobbyOptionsHubRolesTabThreeBrothers.nuxt.spec.ts(65,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabThreeBrothers/GameLobbyOptionsHubRolesTabThreeBrothers.nuxt.spec.ts(68,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabThreeBrothers/GameLobbyOptionsHubRolesTabThreeBrothers.nuxt.spec.ts(78,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabThreeBrothers/GameLobbyOptionsHubRolesTabThreeBrothers.nuxt.spec.ts(81,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabThreeBrothers/GameLobbyOptionsHubRolesTabThreeBrothers.nuxt.spec.ts(91,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabTwoSisters/GameLobbyOptionsHubRolesTabTwoSisters.nuxt.spec.ts(65,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabTwoSisters/GameLobbyOptionsHubRolesTabTwoSisters.nuxt.spec.ts(68,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabTwoSisters/GameLobbyOptionsHubRolesTabTwoSisters.nuxt.spec.ts(78,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabTwoSisters/GameLobbyOptionsHubRolesTabTwoSisters.nuxt.spec.ts(81,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabTwoSisters/GameLobbyOptionsHubRolesTabTwoSisters.nuxt.spec.ts(91,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWhiteWerewolf/GameLobbyOptionsHubRolesTabWhiteWerewolf.nuxt.spec.ts(65,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWhiteWerewolf/GameLobbyOptionsHubRolesTabWhiteWerewolf.nuxt.spec.ts(68,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWhiteWerewolf/GameLobbyOptionsHubRolesTabWhiteWerewolf.nuxt.spec.ts(78,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWhiteWerewolf/GameLobbyOptionsHubRolesTabWhiteWerewolf.nuxt.spec.ts(81,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWhiteWerewolf/GameLobbyOptionsHubRolesTabWhiteWerewolf.nuxt.spec.ts(91,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWildChild/GameLobbyOptionsHubRolesTabWildChild.nuxt.spec.ts(46,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWildChild/GameLobbyOptionsHubRolesTabWildChild.nuxt.spec.ts(56,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWildChild/GameLobbyOptionsHubRolesTabWildChild.nuxt.spec.ts(70,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWildChild/GameLobbyOptionsHubRolesTabWildChild.nuxt.spec.ts(73,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWitch/GameLobbyOptionsHubRolesTabWitch.nuxt.spec.ts(53,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWitch/GameLobbyOptionsHubRolesTabWitch.nuxt.spec.ts(67,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWitch/GameLobbyOptionsHubRolesTabWitch.nuxt.spec.ts(70,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWolfHound/GameLobbyOptionsHubRolesTabWolfHound.nuxt.spec.ts(46,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWolfHound/GameLobbyOptionsHubRolesTabWolfHound.nuxt.spec.ts(56,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWolfHound/GameLobbyOptionsHubRolesTabWolfHound.nuxt.spec.ts(69,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWolfHound/GameLobbyOptionsHubRolesTabWolfHound.nuxt.spec.ts(72,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWolfHound/GameLobbyOptionsHubRolesTabWolfHound.nuxt.spec.ts(85,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWolfHound/GameLobbyOptionsHubRolesTabWolfHound.nuxt.spec.ts(95,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWolfHound/GameLobbyOptionsHubRolesTabWolfHound.nuxt.spec.ts(108,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWolfHound/GameLobbyOptionsHubRolesTabWolfHound.nuxt.spec.ts(111,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubVotesTab/GameLobbyOptionsHubVotesTab.nuxt.spec.ts(46,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubVotesTab/GameLobbyOptionsHubVotesTab.nuxt.spec.ts(56,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubVotesTab/GameLobbyOptionsHubVotesTab.nuxt.spec.ts(69,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubVotesTab/GameLobbyOptionsHubVotesTab.nuxt.spec.ts(72,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyPlayersParty/GameLobbyPlayersParty.nuxt.spec.ts(38,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyPlayersParty/GameLobbyPlayersParty.nuxt.spec.ts(54,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyPlayersParty/GameLobbyPlayersParty.nuxt.spec.ts(61,48): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyPlayersParty/GameLobbyPlayersParty.nuxt.spec.ts(73,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyPlayersParty/GameLobbyPlayerCard/GameLobbyPlayerCard.nuxt.spec.ts(71,33): error TS2339: Property 'removePlayerFromCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/GameLobbyRolePickerDescriptionBoundaries.nuxt.spec.ts(38,24): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/GameLobbyRolePickerDescriptionBoundaries.nuxt.spec.ts(62,26): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/GameLobbyRolePickerDescriptionBoundaries.nuxt.spec.ts(63,26): error TS2339: Property 'isRoleMaxReachedInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/GameLobbyRolePickerDescriptionBoundaries.nuxt.spec.ts(87,26): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/GameLobbyRolePickerDescriptionBoundaries.nuxt.spec.ts(105,26): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/GameLobbyRolePickerDescriptionBoundaries.nuxt.spec.ts(106,26): error TS2339: Property 'getRoleLeftCountToReachMinInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/GameLobbyRolePickerDescriptionBoundaries.nuxt.spec.ts(107,26): error TS2339: Property 'isRoleMinReachedInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/GameLobbyRolePickerDescriptionBoundaries.nuxt.spec.ts(117,26): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/GameLobbyRolePickerDescriptionBoundaries.nuxt.spec.ts(118,26): error TS2339: Property 'getRoleLeftCountToReachMinInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/GameLobbyRolePickerDescriptionBoundaries.nuxt.spec.ts(119,26): error TS2339: Property 'isRoleMinReachedInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/GameLobbyRolePickerDescriptionBoundaries.nuxt.spec.ts(129,26): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/GameLobbyRolePickerDescriptionBoundaries.nuxt.spec.ts(130,26): error TS2339: Property 'getRoleLeftCountToReachMinInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/GameLobbyRolePickerDescriptionBoundaries.nuxt.spec.ts(131,26): error TS2339: Property 'isRoleMinReachedInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerFooter/GameLobbyRolePickerFooter.nuxt.spec.ts(103,28): error TS2339: Property 'isRoleMaxReachedInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerFooter/GameLobbyRolePickerFooter.nuxt.spec.ts(104,28): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerFooter/GameLobbyRolePickerFooter.nuxt.spec.ts(121,35): error TS2339: Property 'updatePlayerInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerFooter/GameLobbyRolePickerFooter.nuxt.spec.ts(136,28): error TS2339: Property 'isRoleMaxReachedInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerFooter/GameLobbyRolePickerFooter.nuxt.spec.ts(137,28): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerFooter/GameLobbyRolePickerFooter.nuxt.spec.ts(164,35): error TS2339: Property 'updatePlayerInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerFooter/GameLobbyRolePickerFooter.nuxt.spec.ts(165,35): error TS2339: Property 'updatePlayerInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerFooter/GameLobbyRolePickerFooter.nuxt.spec.ts(175,28): error TS2339: Property 'isRoleMaxReachedInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerFooter/GameLobbyRolePickerFooter.nuxt.spec.ts(176,28): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerFooter/GameLobbyRolePickerFooter.nuxt.spec.ts(198,35): error TS2339: Property 'updatePlayerInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.nuxt.spec.ts(31,24): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.nuxt.spec.ts(32,24): error TS2339: Property 'getRoleLeftCountToReachMinInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.nuxt.spec.ts(56,26): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.nuxt.spec.ts(57,26): error TS2339: Property 'getRoleLeftCountToReachMinInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.nuxt.spec.ts(71,26): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.nuxt.spec.ts(81,26): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.nuxt.spec.ts(82,26): error TS2339: Property 'getRoleLeftCountToReachMinInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.nuxt.spec.ts(105,26): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.nuxt.spec.ts(106,26): error TS2339: Property 'getRoleLeftCountToReachMinInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.nuxt.spec.ts(120,26): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.nuxt.spec.ts(121,26): error TS2339: Property 'getRoleLeftCountToReachMinInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.nuxt.spec.ts(131,26): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.nuxt.spec.ts(132,26): error TS2339: Property 'getRoleLeftCountToReachMinInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.nuxt.spec.ts(142,26): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.nuxt.spec.ts(143,26): error TS2339: Property 'getRoleLeftCountToReachMinInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, {}>'.\ntests/unit/specs/pages/game-lobby/game-lobby.nuxt.spec.ts(76,33): error TS2339: Property 'resetCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(23,31): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(38,26): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(40,33): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(47,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(58,26): error TS2339: Property 'resetCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(60,33): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(73,26): error TS2339: Property 'addPlayerToCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(75,33): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(87,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(98,26): error TS2339: Property 'updatePlayerInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(100,33): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(110,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(117,26): error TS2339: Property 'updatePlayerInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(119,33): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(131,26): error TS2339: Property 'setPlayersToCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(133,33): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(145,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(153,26): error TS2339: Property 'removePlayerFromCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(155,33): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(165,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(171,26): error TS2339: Property 'removePlayerFromCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(173,33): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(185,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(188,41): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(264,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(266,33): error TS2339: Property 'isRoleMinReachedInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(321,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(323,33): error TS2339: Property 'isRoleMaxReachedInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(385,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(387,33): error TS2339: Property 'getRoleLeftCountToReachMinInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\n",
          "status": "CompileError",
          "static": false,
          "coveredBy": [
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265",
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387",
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448",
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511",
            "512",
            "513",
            "514",
            "515",
            "516",
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "603",
            "604",
            "605",
            "606",
            "607",
            "608",
            "609",
            "610",
            "611",
            "612",
            "613",
            "614",
            "615",
            "616",
            "635",
            "636",
            "637",
            "638",
            "639",
            "640",
            "641",
            "651",
            "652",
            "653",
            "654",
            "655",
            "656",
            "657",
            "658",
            "659",
            "660",
            "661",
            "662",
            "663",
            "664",
            "714",
            "715",
            "716",
            "717",
            "718",
            "719",
            "720",
            "721",
            "722",
            "723",
            "724",
            "725",
            "741",
            "742",
            "743",
            "744",
            "745",
            "746",
            "747",
            "748",
            "749",
            "750",
            "751",
            "766",
            "767",
            "768",
            "769",
            "770",
            "771",
            "772",
            "773",
            "774",
            "775",
            "776",
            "777",
            "778",
            "779",
            "780",
            "781",
            "782",
            "783",
            "784",
            "785",
            "786",
            "787",
            "788",
            "789",
            "790",
            "791",
            "792",
            "793",
            "794",
            "795",
            "796",
            "797",
            "798",
            "799",
            "800",
            "801",
            "802",
            "803",
            "804",
            "805",
            "806",
            "807",
            "808",
            "809",
            "810",
            "811",
            "812",
            "813",
            "814",
            "815",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 92
            },
            "start": {
              "column": 10,
              "line": 80
            }
          }
        },
        {
          "id": "1986",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "stores/game/create-game-dto/useCreateGameDtoStore.ts(15,53): error TS2345: Argument of type '{}' is not assignable to parameter of type 'CreateGameDto'.\n  Type '{}' is missing the following properties from type 'CreateGameDto': players, options\n",
          "status": "CompileError",
          "static": false,
          "coveredBy": [
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265",
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387",
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448",
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511",
            "512",
            "513",
            "514",
            "515",
            "516",
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "603",
            "604",
            "605",
            "606",
            "607",
            "608",
            "609",
            "610",
            "611",
            "612",
            "613",
            "614",
            "615",
            "616",
            "635",
            "636",
            "637",
            "638",
            "639",
            "640",
            "641",
            "651",
            "652",
            "653",
            "654",
            "655",
            "656",
            "657",
            "658",
            "659",
            "660",
            "661",
            "662",
            "663",
            "664",
            "714",
            "715",
            "716",
            "717",
            "718",
            "719",
            "720",
            "721",
            "722",
            "723",
            "724",
            "725",
            "741",
            "742",
            "743",
            "744",
            "745",
            "746",
            "747",
            "748",
            "749",
            "750",
            "751",
            "766",
            "767",
            "768",
            "769",
            "770",
            "771",
            "772",
            "773",
            "774",
            "775",
            "776",
            "777",
            "778",
            "779",
            "780",
            "781",
            "782",
            "783",
            "784",
            "785",
            "786",
            "787",
            "788",
            "789",
            "790",
            "791",
            "792",
            "793",
            "794",
            "795",
            "796",
            "797",
            "798",
            "799",
            "800",
            "801",
            "802",
            "803",
            "804",
            "805",
            "806",
            "807",
            "808",
            "809",
            "810",
            "811",
            "812",
            "813",
            "814",
            "815",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 18
            },
            "start": {
              "column": 53,
              "line": 15
            }
          }
        },
        {
          "id": "1985",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "tests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyRandomCompositionButton/GameLobbyRandomCompositionButton.nuxt.spec.ts(42,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyRandomCompositionButton/GameLobbyRandomCompositionButton.nuxt.spec.ts(53,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyRandomCompositionButton/GameLobbyRandomCompositionButton.nuxt.spec.ts(69,28): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyRandomCompositionButton/GameLobbyRandomCompositionButton.nuxt.spec.ts(78,28): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyRandomCompositionButton/GameLobbyRandomCompositionButton.nuxt.spec.ts(95,30): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyRandomCompositionButton/GameLobbyRandomCompositionButton.nuxt.spec.ts(112,41): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyRandomCompositionButton/GameLobbyRandomCompositionButton.nuxt.spec.ts(135,37): error TS2339: Property 'setPlayersToCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyRandomCompositionButton/GameLobbyRandomCompositionButton.nuxt.spec.ts(140,30): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyRandomCompositionButton/GameLobbyRandomCompositionButton.nuxt.spec.ts(154,37): error TS2339: Property 'setPlayersToCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyStartGameButton/GameLobbyStartGameButton.nuxt.spec.ts(78,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyStartGameButton/GameLobbyStartGameButton.nuxt.spec.ts(94,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyStartGameButton/GameLobbyStartGameButton.nuxt.spec.ts(112,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyStartGameButton/GameLobbyStartGameButton.nuxt.spec.ts(121,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyStartGameButton/GameLobbyStartGameButton.nuxt.spec.ts(131,28): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyStartGameButton/GameLobbyStartGameButton.nuxt.spec.ts(146,111): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyHeader/GameLobbyHeader.nuxt.spec.ts(90,35): error TS2339: Property 'addPlayerToCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyHeader/GameLobbyHeader.nuxt.spec.ts(104,35): error TS2339: Property 'addPlayerToCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyHeader/GameLobbyPlayerInput/GameLobbyPlayerInput.nuxt.spec.ts(41,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyHeader/GameLobbyPlayerInput/GameLobbyPlayerInput.nuxt.spec.ts(50,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyHeader/GameLobbyPlayerInput/GameLobbyPlayerInput.nuxt.spec.ts(63,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyHeader/GameLobbyPlayerInput/GameLobbyPlayerInput.nuxt.spec.ts(80,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyHeader/GameLobbyPlayerInput/GameLobbyPlayerInput.nuxt.spec.ts(89,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyHeader/GameLobbyPlayerInput/GameLobbyPlayerInput.nuxt.spec.ts(103,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyHeader/GameLobbyPlayerInput/GameLobbyPlayerInput.nuxt.spec.ts(117,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyHeader/GameLobbyPlayerInput/GameLobbyPlayerInput.nuxt.spec.ts(144,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyHeader/GameLobbyPlayerInput/GameLobbyPlayerInput.nuxt.spec.ts(153,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubCompositionTab/GameLobbyOptionsHubCompositionTab.nuxt.spec.ts(46,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubCompositionTab/GameLobbyOptionsHubCompositionTab.nuxt.spec.ts(56,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubCompositionTab/GameLobbyOptionsHubCompositionTab.nuxt.spec.ts(69,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubCompositionTab/GameLobbyOptionsHubCompositionTab.nuxt.spec.ts(72,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabActor/GameLobbyOptionsHubRolesTabActor.nuxt.spec.ts(46,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabActor/GameLobbyOptionsHubRolesTabActor.nuxt.spec.ts(55,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabActor/GameLobbyOptionsHubRolesTabActor.nuxt.spec.ts(67,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabActor/GameLobbyOptionsHubRolesTabActor.nuxt.spec.ts(70,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabBearTamer/GameLobbyOptionsHubRolesTabBearTamer.nuxt.spec.ts(46,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabBearTamer/GameLobbyOptionsHubRolesTabBearTamer.nuxt.spec.ts(55,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabBearTamer/GameLobbyOptionsHubRolesTabBearTamer.nuxt.spec.ts(67,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabBearTamer/GameLobbyOptionsHubRolesTabBearTamer.nuxt.spec.ts(70,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabBigBadWolf/GameLobbyOptionsHubRolesTabBigBadWolf.nuxt.spec.ts(46,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabBigBadWolf/GameLobbyOptionsHubRolesTabBigBadWolf.nuxt.spec.ts(55,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabBigBadWolf/GameLobbyOptionsHubRolesTabBigBadWolf.nuxt.spec.ts(67,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabBigBadWolf/GameLobbyOptionsHubRolesTabBigBadWolf.nuxt.spec.ts(70,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabCupid/GameLobbyOptionsHubRolesTabCupid.nuxt.spec.ts(46,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabCupid/GameLobbyOptionsHubRolesTabCupid.nuxt.spec.ts(64,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabCupid/GameLobbyOptionsHubRolesTabCupid.nuxt.spec.ts(67,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabCupid/GameLobbyOptionsHubRolesTabCupid.nuxt.spec.ts(80,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabCupid/GameLobbyOptionsHubRolesTabCupid.nuxt.spec.ts(98,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabCupid/GameLobbyOptionsHubRolesTabCupid.nuxt.spec.ts(101,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabDefender/GameLobbyOptionsHubRolesTabDefender.nuxt.spec.ts(46,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabDefender/GameLobbyOptionsHubRolesTabDefender.nuxt.spec.ts(64,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabDefender/GameLobbyOptionsHubRolesTabDefender.nuxt.spec.ts(67,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabElder/GameLobbyOptionsHubRolesTabElder.nuxt.spec.ts(65,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabElder/GameLobbyOptionsHubRolesTabElder.nuxt.spec.ts(68,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabElder/GameLobbyOptionsHubRolesTabElder.nuxt.spec.ts(76,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabElder/GameLobbyOptionsHubRolesTabElder.nuxt.spec.ts(79,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabElder/GameLobbyOptionsHubRolesTabElder.nuxt.spec.ts(88,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabElder/GameLobbyOptionsHubRolesTabElder.nuxt.spec.ts(101,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabElder/GameLobbyOptionsHubRolesTabElder.nuxt.spec.ts(110,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabElder/GameLobbyOptionsHubRolesTabElder.nuxt.spec.ts(122,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabElder/GameLobbyOptionsHubRolesTabElder.nuxt.spec.ts(125,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabFox/GameLobbyOptionsHubRolesTabFox.nuxt.spec.ts(52,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabFox/GameLobbyOptionsHubRolesTabFox.nuxt.spec.ts(64,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabFox/GameLobbyOptionsHubRolesTabFox.nuxt.spec.ts(67,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabGeneral/GameLobbyOptionsHubRolesTabGeneral.nuxt.spec.ts(54,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabGeneral/GameLobbyOptionsHubRolesTabGeneral.nuxt.spec.ts(72,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabGeneral/GameLobbyOptionsHubRolesTabGeneral.nuxt.spec.ts(75,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabGeneral/GameLobbyOptionsHubRolesTabGeneral.nuxt.spec.ts(88,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabGeneral/GameLobbyOptionsHubRolesTabGeneral.nuxt.spec.ts(97,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabGeneral/GameLobbyOptionsHubRolesTabGeneral.nuxt.spec.ts(109,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabGeneral/GameLobbyOptionsHubRolesTabGeneral.nuxt.spec.ts(112,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabIdiot/GameLobbyOptionsHubRolesTabIdiot.nuxt.spec.ts(46,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabIdiot/GameLobbyOptionsHubRolesTabIdiot.nuxt.spec.ts(55,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabIdiot/GameLobbyOptionsHubRolesTabIdiot.nuxt.spec.ts(67,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabIdiot/GameLobbyOptionsHubRolesTabIdiot.nuxt.spec.ts(70,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabLittleGirl/GameLobbyOptionsHubRolesTabLittleGirl.nuxt.spec.ts(47,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabLittleGirl/GameLobbyOptionsHubRolesTabLittleGirl.nuxt.spec.ts(64,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabLittleGirl/GameLobbyOptionsHubRolesTabLittleGirl.nuxt.spec.ts(67,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabPiedPiper/GameLobbyOptionsHubRolesTabPiedPiper.nuxt.spec.ts(65,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabPiedPiper/GameLobbyOptionsHubRolesTabPiedPiper.nuxt.spec.ts(68,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabPiedPiper/GameLobbyOptionsHubRolesTabPiedPiper.nuxt.spec.ts(77,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabPiedPiper/GameLobbyOptionsHubRolesTabPiedPiper.nuxt.spec.ts(80,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabPiedPiper/GameLobbyOptionsHubRolesTabPiedPiper.nuxt.spec.ts(90,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabPiedPiper/GameLobbyOptionsHubRolesTabPiedPiper.nuxt.spec.ts(109,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabPiedPiper/GameLobbyOptionsHubRolesTabPiedPiper.nuxt.spec.ts(121,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabPiedPiper/GameLobbyOptionsHubRolesTabPiedPiper.nuxt.spec.ts(124,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabPrejudicedManipulator/GameLobbyOptionsHubRolesTabPrejudicedManipulator.nuxt.spec.ts(55,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabPrejudicedManipulator/GameLobbyOptionsHubRolesTabPrejudicedManipulator.nuxt.spec.ts(70,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabPrejudicedManipulator/GameLobbyOptionsHubRolesTabPrejudicedManipulator.nuxt.spec.ts(73,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabScandalmonger/GameLobbyOptionsHubRolesTabScandalmonger.nuxt.spec.ts(64,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabScandalmonger/GameLobbyOptionsHubRolesTabScandalmonger.nuxt.spec.ts(67,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabScandalmonger/GameLobbyOptionsHubRolesTabScandalmonger.nuxt.spec.ts(76,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabScandalmonger/GameLobbyOptionsHubRolesTabScandalmonger.nuxt.spec.ts(79,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabScandalmonger/GameLobbyOptionsHubRolesTabScandalmonger.nuxt.spec.ts(89,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSeer/GameLobbyOptionsHubRolesTabSeer.nuxt.spec.ts(53,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSeer/GameLobbyOptionsHubRolesTabSeer.nuxt.spec.ts(66,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSeer/GameLobbyOptionsHubRolesTabSeer.nuxt.spec.ts(69,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSeer/GameLobbyOptionsHubRolesTabSeer.nuxt.spec.ts(89,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSeer/GameLobbyOptionsHubRolesTabSeer.nuxt.spec.ts(102,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSeer/GameLobbyOptionsHubRolesTabSeer.nuxt.spec.ts(105,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriff.nuxt.spec.ts(47,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriff.nuxt.spec.ts(77,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriff.nuxt.spec.ts(90,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriff.nuxt.spec.ts(93,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriff.nuxt.spec.ts(106,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriff.nuxt.spec.ts(115,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriff.nuxt.spec.ts(127,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriff.nuxt.spec.ts(130,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriff.nuxt.spec.ts(143,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriff.nuxt.spec.ts(152,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriff.nuxt.spec.ts(164,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriff.nuxt.spec.ts(167,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.nuxt.spec.ts(55,26): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.nuxt.spec.ts(55,86): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.nuxt.spec.ts(56,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.nuxt.spec.ts(57,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.nuxt.spec.ts(67,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.nuxt.spec.ts(77,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.nuxt.spec.ts(90,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.nuxt.spec.ts(93,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.nuxt.spec.ts(101,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.nuxt.spec.ts(105,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.nuxt.spec.ts(120,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.nuxt.spec.ts(123,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.nuxt.spec.ts(132,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.nuxt.spec.ts(135,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.nuxt.spec.ts(145,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabStutteringJudge/GameLobbyOptionsHubRolesTabStutteringJudge.nuxt.spec.ts(64,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabStutteringJudge/GameLobbyOptionsHubRolesTabStutteringJudge.nuxt.spec.ts(67,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabStutteringJudge/GameLobbyOptionsHubRolesTabStutteringJudge.nuxt.spec.ts(75,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabStutteringJudge/GameLobbyOptionsHubRolesTabStutteringJudge.nuxt.spec.ts(78,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabStutteringJudge/GameLobbyOptionsHubRolesTabStutteringJudge.nuxt.spec.ts(87,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabThief/GameLobbyOptionsHubRolesTabThief.nuxt.spec.ts(53,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabThief/GameLobbyOptionsHubRolesTabThief.nuxt.spec.ts(66,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabThief/GameLobbyOptionsHubRolesTabThief.nuxt.spec.ts(69,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabThief/GameLobbyOptionsHubRolesTabThief.nuxt.spec.ts(82,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabThief/GameLobbyOptionsHubRolesTabThief.nuxt.spec.ts(91,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabThief/GameLobbyOptionsHubRolesTabThief.nuxt.spec.ts(103,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabThief/GameLobbyOptionsHubRolesTabThief.nuxt.spec.ts(106,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabThreeBrothers/GameLobbyOptionsHubRolesTabThreeBrothers.nuxt.spec.ts(65,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabThreeBrothers/GameLobbyOptionsHubRolesTabThreeBrothers.nuxt.spec.ts(68,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabThreeBrothers/GameLobbyOptionsHubRolesTabThreeBrothers.nuxt.spec.ts(78,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabThreeBrothers/GameLobbyOptionsHubRolesTabThreeBrothers.nuxt.spec.ts(81,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabThreeBrothers/GameLobbyOptionsHubRolesTabThreeBrothers.nuxt.spec.ts(91,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabTwoSisters/GameLobbyOptionsHubRolesTabTwoSisters.nuxt.spec.ts(65,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabTwoSisters/GameLobbyOptionsHubRolesTabTwoSisters.nuxt.spec.ts(68,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabTwoSisters/GameLobbyOptionsHubRolesTabTwoSisters.nuxt.spec.ts(78,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabTwoSisters/GameLobbyOptionsHubRolesTabTwoSisters.nuxt.spec.ts(81,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabTwoSisters/GameLobbyOptionsHubRolesTabTwoSisters.nuxt.spec.ts(91,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWhiteWerewolf/GameLobbyOptionsHubRolesTabWhiteWerewolf.nuxt.spec.ts(65,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWhiteWerewolf/GameLobbyOptionsHubRolesTabWhiteWerewolf.nuxt.spec.ts(68,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWhiteWerewolf/GameLobbyOptionsHubRolesTabWhiteWerewolf.nuxt.spec.ts(78,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWhiteWerewolf/GameLobbyOptionsHubRolesTabWhiteWerewolf.nuxt.spec.ts(81,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWhiteWerewolf/GameLobbyOptionsHubRolesTabWhiteWerewolf.nuxt.spec.ts(91,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWildChild/GameLobbyOptionsHubRolesTabWildChild.nuxt.spec.ts(46,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWildChild/GameLobbyOptionsHubRolesTabWildChild.nuxt.spec.ts(56,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWildChild/GameLobbyOptionsHubRolesTabWildChild.nuxt.spec.ts(70,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWildChild/GameLobbyOptionsHubRolesTabWildChild.nuxt.spec.ts(73,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWitch/GameLobbyOptionsHubRolesTabWitch.nuxt.spec.ts(53,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWitch/GameLobbyOptionsHubRolesTabWitch.nuxt.spec.ts(67,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWitch/GameLobbyOptionsHubRolesTabWitch.nuxt.spec.ts(70,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWolfHound/GameLobbyOptionsHubRolesTabWolfHound.nuxt.spec.ts(46,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWolfHound/GameLobbyOptionsHubRolesTabWolfHound.nuxt.spec.ts(56,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWolfHound/GameLobbyOptionsHubRolesTabWolfHound.nuxt.spec.ts(69,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWolfHound/GameLobbyOptionsHubRolesTabWolfHound.nuxt.spec.ts(72,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWolfHound/GameLobbyOptionsHubRolesTabWolfHound.nuxt.spec.ts(85,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWolfHound/GameLobbyOptionsHubRolesTabWolfHound.nuxt.spec.ts(95,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWolfHound/GameLobbyOptionsHubRolesTabWolfHound.nuxt.spec.ts(108,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWolfHound/GameLobbyOptionsHubRolesTabWolfHound.nuxt.spec.ts(111,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubVotesTab/GameLobbyOptionsHubVotesTab.nuxt.spec.ts(46,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubVotesTab/GameLobbyOptionsHubVotesTab.nuxt.spec.ts(56,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubVotesTab/GameLobbyOptionsHubVotesTab.nuxt.spec.ts(69,80): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubVotesTab/GameLobbyOptionsHubVotesTab.nuxt.spec.ts(72,33): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyPlayersParty/GameLobbyPlayersParty.nuxt.spec.ts(38,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyPlayersParty/GameLobbyPlayersParty.nuxt.spec.ts(54,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyPlayersParty/GameLobbyPlayersParty.nuxt.spec.ts(61,48): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyPlayersParty/GameLobbyPlayersParty.nuxt.spec.ts(73,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyPlayersParty/GameLobbyPlayerCard/GameLobbyPlayerCard.nuxt.spec.ts(71,33): error TS2339: Property 'removePlayerFromCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/GameLobbyRolePickerDescriptionBoundaries.nuxt.spec.ts(38,24): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/GameLobbyRolePickerDescriptionBoundaries.nuxt.spec.ts(62,26): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/GameLobbyRolePickerDescriptionBoundaries.nuxt.spec.ts(63,26): error TS2339: Property 'isRoleMaxReachedInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/GameLobbyRolePickerDescriptionBoundaries.nuxt.spec.ts(87,26): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/GameLobbyRolePickerDescriptionBoundaries.nuxt.spec.ts(105,26): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/GameLobbyRolePickerDescriptionBoundaries.nuxt.spec.ts(106,26): error TS2339: Property 'getRoleLeftCountToReachMinInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/GameLobbyRolePickerDescriptionBoundaries.nuxt.spec.ts(107,26): error TS2339: Property 'isRoleMinReachedInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/GameLobbyRolePickerDescriptionBoundaries.nuxt.spec.ts(117,26): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/GameLobbyRolePickerDescriptionBoundaries.nuxt.spec.ts(118,26): error TS2339: Property 'getRoleLeftCountToReachMinInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/GameLobbyRolePickerDescriptionBoundaries.nuxt.spec.ts(119,26): error TS2339: Property 'isRoleMinReachedInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/GameLobbyRolePickerDescriptionBoundaries.nuxt.spec.ts(129,26): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/GameLobbyRolePickerDescriptionBoundaries.nuxt.spec.ts(130,26): error TS2339: Property 'getRoleLeftCountToReachMinInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/GameLobbyRolePickerDescriptionBoundaries.nuxt.spec.ts(131,26): error TS2339: Property 'isRoleMinReachedInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerFooter/GameLobbyRolePickerFooter.nuxt.spec.ts(103,28): error TS2339: Property 'isRoleMaxReachedInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerFooter/GameLobbyRolePickerFooter.nuxt.spec.ts(104,28): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerFooter/GameLobbyRolePickerFooter.nuxt.spec.ts(121,35): error TS2339: Property 'updatePlayerInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerFooter/GameLobbyRolePickerFooter.nuxt.spec.ts(136,28): error TS2339: Property 'isRoleMaxReachedInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerFooter/GameLobbyRolePickerFooter.nuxt.spec.ts(137,28): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerFooter/GameLobbyRolePickerFooter.nuxt.spec.ts(164,35): error TS2339: Property 'updatePlayerInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerFooter/GameLobbyRolePickerFooter.nuxt.spec.ts(165,35): error TS2339: Property 'updatePlayerInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerFooter/GameLobbyRolePickerFooter.nuxt.spec.ts(175,28): error TS2339: Property 'isRoleMaxReachedInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerFooter/GameLobbyRolePickerFooter.nuxt.spec.ts(176,28): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerFooter/GameLobbyRolePickerFooter.nuxt.spec.ts(198,35): error TS2339: Property 'updatePlayerInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.nuxt.spec.ts(31,24): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.nuxt.spec.ts(32,24): error TS2339: Property 'getRoleLeftCountToReachMinInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.nuxt.spec.ts(56,26): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.nuxt.spec.ts(57,26): error TS2339: Property 'getRoleLeftCountToReachMinInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.nuxt.spec.ts(71,26): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.nuxt.spec.ts(81,26): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.nuxt.spec.ts(82,26): error TS2339: Property 'getRoleLeftCountToReachMinInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.nuxt.spec.ts(105,26): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.nuxt.spec.ts(106,26): error TS2339: Property 'getRoleLeftCountToReachMinInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.nuxt.spec.ts(120,26): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.nuxt.spec.ts(121,26): error TS2339: Property 'getRoleLeftCountToReachMinInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.nuxt.spec.ts(131,26): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.nuxt.spec.ts(132,26): error TS2339: Property 'getRoleLeftCountToReachMinInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.nuxt.spec.ts(142,26): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.nuxt.spec.ts(143,26): error TS2339: Property 'getRoleLeftCountToReachMinInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/pages/game-lobby/game-lobby.nuxt.spec.ts(76,33): error TS2339: Property 'resetCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(23,31): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(38,26): error TS2339: Property 'setCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(40,33): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(47,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(58,26): error TS2339: Property 'resetCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(60,33): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(73,26): error TS2339: Property 'addPlayerToCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(75,33): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(87,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(98,26): error TS2339: Property 'updatePlayerInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(100,33): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(110,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(117,26): error TS2339: Property 'updatePlayerInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(119,33): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(131,26): error TS2339: Property 'setPlayersToCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(133,33): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(145,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(153,26): error TS2339: Property 'removePlayerFromCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(155,33): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(165,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(171,26): error TS2339: Property 'removePlayerFromCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(173,33): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(185,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(188,41): error TS2339: Property 'getPlayersWithRoleNameInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(264,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(266,33): error TS2339: Property 'isRoleMinReachedInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(321,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(323,33): error TS2339: Property 'isRoleMaxReachedInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(385,26): error TS2339: Property 'createGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(387,33): error TS2339: Property 'getRoleLeftCountToReachMinInCreateGameDto' does not exist on type 'Store<StoreIds.CREATE_GAME_DTO, {}, {}, {}>'.\n",
          "status": "CompileError",
          "static": false,
          "coveredBy": [
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265",
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387",
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448",
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511",
            "512",
            "513",
            "514",
            "515",
            "516",
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "603",
            "604",
            "605",
            "606",
            "607",
            "608",
            "609",
            "610",
            "611",
            "612",
            "613",
            "614",
            "615",
            "616",
            "635",
            "636",
            "637",
            "638",
            "639",
            "640",
            "641",
            "651",
            "652",
            "653",
            "654",
            "655",
            "656",
            "657",
            "658",
            "659",
            "660",
            "661",
            "662",
            "663",
            "664",
            "714",
            "715",
            "716",
            "717",
            "718",
            "719",
            "720",
            "721",
            "722",
            "723",
            "724",
            "725",
            "741",
            "742",
            "743",
            "744",
            "745",
            "746",
            "747",
            "748",
            "749",
            "750",
            "751",
            "766",
            "767",
            "768",
            "769",
            "770",
            "771",
            "772",
            "773",
            "774",
            "775",
            "776",
            "777",
            "778",
            "779",
            "780",
            "781",
            "782",
            "783",
            "784",
            "785",
            "786",
            "787",
            "788",
            "789",
            "790",
            "791",
            "792",
            "793",
            "794",
            "795",
            "796",
            "797",
            "798",
            "799",
            "800",
            "801",
            "802",
            "803",
            "804",
            "805",
            "806",
            "807",
            "808",
            "809",
            "810",
            "811",
            "812",
            "813",
            "814",
            "815",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 93
            },
            "start": {
              "column": 75,
              "line": 11
            }
          }
        },
        {
          "id": "1987",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "stores/game/create-game-dto/useCreateGameDtoStore.ts(16,15): error TS2322: Type 'string' is not assignable to type 'CreateGamePlayerDto'.\n",
          "status": "CompileError",
          "static": false,
          "coveredBy": [
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265",
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387",
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448",
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511",
            "512",
            "513",
            "514",
            "515",
            "516",
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "603",
            "604",
            "605",
            "606",
            "607",
            "608",
            "609",
            "610",
            "611",
            "612",
            "613",
            "614",
            "615",
            "616",
            "635",
            "636",
            "637",
            "638",
            "639",
            "640",
            "641",
            "651",
            "652",
            "653",
            "654",
            "655",
            "656",
            "657",
            "658",
            "659",
            "660",
            "661",
            "662",
            "663",
            "664",
            "714",
            "715",
            "716",
            "717",
            "718",
            "719",
            "720",
            "721",
            "722",
            "723",
            "724",
            "725",
            "741",
            "742",
            "743",
            "744",
            "745",
            "746",
            "747",
            "748",
            "749",
            "750",
            "751",
            "766",
            "767",
            "768",
            "769",
            "770",
            "771",
            "772",
            "773",
            "774",
            "775",
            "776",
            "777",
            "778",
            "779",
            "780",
            "781",
            "782",
            "783",
            "784",
            "785",
            "786",
            "787",
            "788",
            "789",
            "790",
            "791",
            "792",
            "793",
            "794",
            "795",
            "796",
            "797",
            "798",
            "799",
            "800",
            "801",
            "802",
            "803",
            "804",
            "805",
            "806",
            "807",
            "808",
            "809",
            "810",
            "811",
            "812",
            "813",
            "814",
            "815",
            "973",
            "974",
            "975",
            "976"
          ],
          "location": {
            "end": {
              "column": 16,
              "line": 16
            },
            "start": {
              "column": 14,
              "line": 16
            }
          }
        }
      ],
      "source": "import { defineStore } from \"pinia\";\nimport { ref } from \"vue\";\nimport { DEFAULT_GAME_OPTIONS } from \"~/composables/api/game/constants/game-options/game-options.constants\";\n\nimport { CreateGamePlayerDto } from \"~/composables/api/game/dto/create-game/create-game-player/create-game-player.dto\";\nimport { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport type { RoleName } from \"~/composables/api/role/types/role.types\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\nimport { useRolesStore } from \"~/stores/role/useRolesStore\";\n\nconst useCreateGameDtoStore = defineStore(StoreIds.CREATE_GAME_DTO, () => {\n  const rolesStore = useRolesStore();\n  const { getRoleWithNameInRoles } = rolesStore;\n\n  const defaultCreateGameDto = CreateGameDto.create({\n    players: [],\n    options: DEFAULT_GAME_OPTIONS,\n  });\n\n  const createGameDto = ref<CreateGameDto>(CreateGameDto.create(defaultCreateGameDto));\n\n  function setCreateGameDto(createGameDtoValue: CreateGameDto): void {\n    createGameDto.value = CreateGameDto.create(createGameDtoValue);\n  }\n\n  function resetCreateGameDto(): void {\n    createGameDto.value = CreateGameDto.create(defaultCreateGameDto);\n  }\n\n  function addPlayerToCreateGameDto(player: CreateGamePlayerDto): void {\n    createGameDto.value.players.push(CreateGamePlayerDto.create(player));\n  }\n\n  function updatePlayerInCreateGameDto(player: CreateGamePlayerDto): void {\n    const playerIndex = createGameDto.value.players.findIndex(({ name }) => name === player.name);\n    if (playerIndex !== -1) {\n      createGameDto.value.players.splice(playerIndex, 1, CreateGamePlayerDto.create(player));\n    }\n  }\n\n  function setPlayersToCreateGameDto(players: CreateGamePlayerDto[]): void {\n    createGameDto.value.players = players.map(player => CreateGamePlayerDto.create(player));\n  }\n\n  function removePlayerFromCreateGameDto(playerName: string): void {\n    const playerIndex = createGameDto.value.players.findIndex(player => player.name === playerName);\n    if (playerIndex !== -1) {\n      createGameDto.value.players = createGameDto.value.players.toSpliced(playerIndex, 1);\n    }\n  }\n\n  function getPlayersWithRoleNameInCreateGameDto(roleName: RoleName): CreateGamePlayerDto[] {\n    return createGameDto.value.players.filter(player => player.role.name === roleName);\n  }\n\n  function isRoleMinReachedInCreateGameDto(roleName: RoleName): boolean {\n    const playersWithRoleName = getPlayersWithRoleNameInCreateGameDto(roleName);\n    const role = getRoleWithNameInRoles(roleName);\n\n    return !!role && (role.minInGame === undefined || playersWithRoleName.length >= role.minInGame);\n  }\n\n  function isRoleMaxReachedInCreateGameDto(roleName: RoleName): boolean {\n    const playersWithRoleName = getPlayersWithRoleNameInCreateGameDto(roleName);\n    const role = getRoleWithNameInRoles(roleName);\n\n    return !!role && playersWithRoleName.length >= role.maxInGame;\n  }\n\n  function getRoleLeftCountToReachMinInCreateGameDto(roleName: RoleName): number {\n    const playersWithRoleName = getPlayersWithRoleNameInCreateGameDto(roleName);\n    const role = getRoleWithNameInRoles(roleName);\n    if (role?.minInGame === undefined) {\n      return 0;\n    }\n    const leftCount = role.minInGame - playersWithRoleName.length;\n\n    return leftCount <= -1 ? 0 : leftCount;\n  }\n  return {\n    createGameDto,\n    setCreateGameDto,\n    resetCreateGameDto,\n    addPlayerToCreateGameDto,\n    updatePlayerInCreateGameDto,\n    setPlayersToCreateGameDto,\n    removePlayerFromCreateGameDto,\n    getPlayersWithRoleNameInCreateGameDto,\n    isRoleMinReachedInCreateGameDto,\n    isRoleMaxReachedInCreateGameDto,\n    getRoleLeftCountToReachMinInCreateGameDto,\n  };\n});\n\nexport { useCreateGameDtoStore };"
    },
    "stores/game/game-history-record/useGameHistoryRecordsStore.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "2054",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "tests/unit/specs/components/pages/game/GameOver/GameOverActions/GameOverActions.nuxt.spec.ts(49,31): error TS2339: Property 'gameHistoryRecords' does not exist on type 'Store<StoreIds.GAME_HISTORY_RECORDS, {}, {}, {}>'.\ntests/unit/specs/stores/game/game-history-record/useGameHistoryRecordsStore.spec.ts(25,36): error TS2339: Property 'gameHistoryRecords' does not exist on type 'Store<StoreIds.GAME_HISTORY_RECORDS, {}, {}, {}>'.\ntests/unit/specs/stores/game/game-history-record/useGameHistoryRecordsStore.spec.ts(26,36): error TS2339: Property 'fetchingGameHistoryRecordsStatus' does not exist on type 'Store<StoreIds.GAME_HISTORY_RECORDS, {}, {}, {}>'.\ntests/unit/specs/stores/game/game-history-record/useGameHistoryRecordsStore.spec.ts(32,37): error TS2339: Property 'fetchAndSetGameHistoryRecords' does not exist on type 'Store<StoreIds.GAME_HISTORY_RECORDS, {}, {}, {}>'.\ntests/unit/specs/stores/game/game-history-record/useGameHistoryRecordsStore.spec.ts(45,37): error TS2339: Property 'fetchAndSetGameHistoryRecords' does not exist on type 'Store<StoreIds.GAME_HISTORY_RECORDS, {}, {}, {}>'.\ntests/unit/specs/stores/game/game-history-record/useGameHistoryRecordsStore.spec.ts(47,38): error TS2339: Property 'gameHistoryRecords' does not exist on type 'Store<StoreIds.GAME_HISTORY_RECORDS, {}, {}, {}>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677",
            "864",
            "865",
            "866",
            "904",
            "905",
            "906",
            "907",
            "908",
            "909",
            "949",
            "950",
            "951"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 30
            },
            "start": {
              "column": 85,
              "line": 8
            }
          }
        },
        {
          "id": "2055",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "stores/game/game-history-record/useGameHistoryRecordsStore.ts(11,56): error TS2322: Type 'string' is not assignable to type 'GameHistoryRecord'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677",
            "864",
            "865",
            "866",
            "904",
            "905",
            "906",
            "907",
            "908",
            "909",
            "949",
            "950",
            "951"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 11
            },
            "start": {
              "column": 55,
              "line": 11
            }
          }
        },
        {
          "id": "2056",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "stores/game/game-history-record/useGameHistoryRecordsStore.ts(12,72): error TS2345: Argument of type '\"\"' is not assignable to parameter of type 'AsyncDataRequestStatus'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677",
            "864",
            "865",
            "866",
            "904",
            "905",
            "906",
            "907",
            "908",
            "909",
            "949",
            "950",
            "951"
          ],
          "location": {
            "end": {
              "column": 78,
              "line": 12
            },
            "start": {
              "column": 72,
              "line": 12
            }
          }
        },
        {
          "id": "2057",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "950"
          ],
          "coveredBy": [
            "950",
            "951"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 24
            },
            "start": {
              "column": 79,
              "line": 14
            }
          }
        },
        {
          "id": "2058",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "stores/game/game-history-record/useGameHistoryRecordsStore.ts(15,5): error TS2322: Type '\"\"' is not assignable to type 'AsyncDataRequestStatus'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "950",
            "951"
          ],
          "location": {
            "end": {
              "column": 55,
              "line": 15
            },
            "start": {
              "column": 46,
              "line": 15
            }
          }
        },
        {
          "id": "2059",
          "mutatorName": "BooleanLiteral",
          "replacement": "fetchedGameHistoryRecords",
          "statusReason": "stores/game/game-history-record/useGameHistoryRecordsStore.ts(22,5): error TS2322: Type 'null' is not assignable to type '{ _id: string; gameId: string; turn: number; phase: { name: \"day\" | \"night\"; tick: number; }; tick: number; play: { type: \"no-action\" | \"vote\" | \"target\" | \"choose-card\" | \"choose-side\" | \"request-another-vote\" | \"bury-dead-bodies\"; ... 8 more ...; chosenSide?: \"villagers\" | ... 1 more ... | undefined; }; revealedPl...'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "950",
            "951"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 17
            },
            "start": {
              "column": 9,
              "line": 17
            }
          }
        },
        {
          "id": "2060",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "stores/game/game-history-record/useGameHistoryRecordsStore.ts(22,5): error TS2322: Type 'GameHistoryRecord[] | null' is not assignable to type '{ _id: string; gameId: string; turn: number; phase: { name: \"day\" | \"night\"; tick: number; }; tick: number; play: { type: \"no-action\" | \"vote\" | \"target\" | \"choose-card\" | \"choose-side\" | \"request-another-vote\" | \"bury-dead-bodies\"; ... 8 more ...; chosenSide?: \"villagers\" | ... 1 more ... | undefined; }; revealedPl...'.\n  Type 'null' is not assignable to type '{ _id: string; gameId: string; turn: number; phase: { name: \"day\" | \"night\"; tick: number; }; tick: number; play: { type: \"no-action\" | \"vote\" | \"target\" | \"choose-card\" | \"choose-side\" | \"request-another-vote\" | \"bury-dead-bodies\"; ... 8 more ...; chosenSide?: \"villagers\" | ... 1 more ... | undefined; }; revealedPl...'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "950",
            "951"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 17
            },
            "start": {
              "column": 9,
              "line": 17
            }
          }
        },
        {
          "id": "2061",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "stores/game/game-history-record/useGameHistoryRecordsStore.ts(22,5): error TS2322: Type 'GameHistoryRecord[] | null' is not assignable to type '{ _id: string; gameId: string; turn: number; phase: { name: \"day\" | \"night\"; tick: number; }; tick: number; play: { type: \"no-action\" | \"vote\" | \"target\" | \"choose-card\" | \"choose-side\" | \"request-another-vote\" | \"bury-dead-bodies\"; ... 8 more ...; chosenSide?: \"villagers\" | ... 1 more ... | undefined; }; revealedPl...'.\n  Type 'null' is not assignable to type '{ _id: string; gameId: string; turn: number; phase: { name: \"day\" | \"night\"; tick: number; }; tick: number; play: { type: \"no-action\" | \"vote\" | \"target\" | \"choose-card\" | \"choose-side\" | \"request-another-vote\" | \"bury-dead-bodies\"; ... 8 more ...; chosenSide?: \"villagers\" | ... 1 more ... | undefined; }; revealedPl...'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "950",
            "951"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 17
            },
            "start": {
              "column": 9,
              "line": 17
            }
          }
        },
        {
          "id": "2062",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "stores/game/game-history-record/useGameHistoryRecordsStore.ts(18,5): error TS2322: Type 'GameHistoryRecord[] | null' is not assignable to type '{ _id: string; gameId: string; turn: number; phase: { name: \"day\" | \"night\"; tick: number; }; tick: number; play: { type: \"no-action\" | \"vote\" | \"target\" | \"choose-card\" | \"choose-side\" | \"request-another-vote\" | \"bury-dead-bodies\"; ... 8 more ...; chosenSide?: \"villagers\" | ... 1 more ... | undefined; }; revealedPl...'.\n  Type 'null' is not assignable to type '{ _id: string; gameId: string; turn: number; phase: { name: \"day\" | \"night\"; tick: number; }; tick: number; play: { type: \"no-action\" | \"vote\" | \"target\" | \"choose-card\" | \"choose-side\" | \"request-another-vote\" | \"bury-dead-bodies\"; ... 8 more ...; chosenSide?: \"villagers\" | ... 1 more ... | undefined; }; revealedPl...'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "950"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 21
            },
            "start": {
              "column": 37,
              "line": 17
            }
          }
        },
        {
          "id": "2063",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "stores/game/game-history-record/useGameHistoryRecordsStore.ts(18,7): error TS2322: Type '\"\"' is not assignable to type 'AsyncDataRequestStatus'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "950"
          ],
          "location": {
            "end": {
              "column": 55,
              "line": 18
            },
            "start": {
              "column": 48,
              "line": 18
            }
          }
        },
        {
          "id": "2064",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "stores/game/game-history-record/useGameHistoryRecordsStore.ts(23,5): error TS2322: Type '\"\"' is not assignable to type 'AsyncDataRequestStatus'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "951"
          ],
          "location": {
            "end": {
              "column": 55,
              "line": 23
            },
            "start": {
              "column": 46,
              "line": 23
            }
          }
        },
        {
          "id": "2065",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "tests/unit/specs/components/pages/game/GameOver/GameOverActions/GameOverActions.nuxt.spec.ts(49,31): error TS2339: Property 'gameHistoryRecords' does not exist on type 'Store<StoreIds.GAME_HISTORY_RECORDS, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/game-history-record/useGameHistoryRecordsStore.spec.ts(25,36): error TS2339: Property 'gameHistoryRecords' does not exist on type 'Store<StoreIds.GAME_HISTORY_RECORDS, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/game-history-record/useGameHistoryRecordsStore.spec.ts(26,36): error TS2339: Property 'fetchingGameHistoryRecordsStatus' does not exist on type 'Store<StoreIds.GAME_HISTORY_RECORDS, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/game-history-record/useGameHistoryRecordsStore.spec.ts(32,37): error TS2339: Property 'fetchAndSetGameHistoryRecords' does not exist on type 'Store<StoreIds.GAME_HISTORY_RECORDS, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/game-history-record/useGameHistoryRecordsStore.spec.ts(45,37): error TS2339: Property 'fetchAndSetGameHistoryRecords' does not exist on type 'Store<StoreIds.GAME_HISTORY_RECORDS, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/game-history-record/useGameHistoryRecordsStore.spec.ts(47,38): error TS2339: Property 'gameHistoryRecords' does not exist on type 'Store<StoreIds.GAME_HISTORY_RECORDS, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677",
            "864",
            "865",
            "866",
            "904",
            "905",
            "906",
            "907",
            "908",
            "909",
            "949",
            "950",
            "951"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 29
            },
            "start": {
              "column": 10,
              "line": 25
            }
          }
        }
      ],
      "source": "import type { AsyncDataRequestStatus } from \"#app/composables/asyncData\";\nimport { defineStore } from \"pinia\";\n\nimport { useFetchGameHistoryRecords } from \"~/composables/api/game/game-history-record/useFetchGameHistoryRecords\";\nimport type { GameHistoryRecord } from \"~/composables/api/game/types/game-history-record/game-history-record.class\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\n\nconst useGameHistoryRecordsStore = defineStore(StoreIds.GAME_HISTORY_RECORDS, () => {\n  const { getGameHistoryRecords } = useFetchGameHistoryRecords();\n\n  const gameHistoryRecords = ref<GameHistoryRecord[]>([]);\n  const fetchingGameHistoryRecordsStatus = ref<AsyncDataRequestStatus>(\"idle\");\n\n  async function fetchAndSetGameHistoryRecords(gameId: string): Promise<void> {\n    fetchingGameHistoryRecordsStatus.value = \"pending\";\n    const fetchedGameHistoryRecords = await getGameHistoryRecords(gameId);\n    if (!fetchedGameHistoryRecords) {\n      fetchingGameHistoryRecordsStatus.value = \"error\";\n\n      return;\n    }\n    gameHistoryRecords.value = fetchedGameHistoryRecords;\n    fetchingGameHistoryRecordsStatus.value = \"success\";\n  }\n  return {\n    gameHistoryRecords,\n    fetchingGameHistoryRecordsStatus,\n    fetchAndSetGameHistoryRecords,\n  };\n});\n\nexport { useGameHistoryRecordsStore };"
    },
    "stores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "2066",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "tests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameChooseSidePlayground/GameChooseSidePlayground.nuxt.spec.ts(40,35): error TS2339: Property 'setChosenSide' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameChooseSidePlayground/GameChooseSidePlayground.nuxt.spec.ts(45,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameChooseSidePlayground/GameChooseSidePlayground.nuxt.spec.ts(55,30): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameChooseSidePlayground/GameChooseSidePlayground.nuxt.spec.ts(67,30): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameChooseSidePlayground/GameChooseSidePlayground.nuxt.spec.ts(82,35): error TS2339: Property 'setChosenSide' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameChooseSidePlayground/GameChooseSidePlayground.nuxt.spec.ts(87,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameChooseSidePlayground/GameChooseSidePlayground.nuxt.spec.ts(97,30): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameChooseSidePlayground/GameChooseSidePlayground.nuxt.spec.ts(109,30): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameRequestAnotherVotePlayground/GameRequestAnotherVotePlayground.nuxt.spec.ts(55,35): error TS2339: Property 'setDoesJudgeRequestAnotherVote' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameRequestAnotherVotePlayground/GameRequestAnotherVotePlayground.nuxt.spec.ts(65,35): error TS2339: Property 'setDoesJudgeRequestAnotherVote' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameRequestAnotherVotePlayground/GameRequestAnotherVotePlayground.nuxt.spec.ts(66,35): error TS2339: Property 'setDoesJudgeRequestAnotherVote' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(19,33): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(32,28): error TS2339: Property 'setMakeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(34,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(41,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(49,28): error TS2339: Property 'resetMakeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(51,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(58,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(60,28): error TS2339: Property 'addMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(62,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(68,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(70,28): error TS2339: Property 'addMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(73,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(80,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(81,28): error TS2339: Property 'removeMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(83,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(89,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(90,28): error TS2339: Property 'removeMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(92,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(102,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(103,28): error TS2339: Property 'removeMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(106,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(113,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(114,28): error TS2339: Property 'removeMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(116,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(123,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(124,28): error TS2339: Property 'removeFirstMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(126,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(131,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(132,28): error TS2339: Property 'removeFirstMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(134,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(144,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(145,28): error TS2339: Property 'removeFirstMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(148,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(155,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(156,28): error TS2339: Property 'removeFirstMakeGamePlayTargetDtoWithPotion' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(158,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(163,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(164,28): error TS2339: Property 'removeFirstMakeGamePlayTargetDtoWithPotion' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(166,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(176,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(177,28): error TS2339: Property 'removeFirstMakeGamePlayTargetDtoWithPotion' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(179,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(189,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(190,28): error TS2339: Property 'removeFirstMakeGamePlayTargetDtoWithPotion' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(193,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(200,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(202,28): error TS2339: Property 'addMakeGamePlayVoteDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(204,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(210,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(212,28): error TS2339: Property 'addMakeGamePlayVoteDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(215,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(222,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(223,28): error TS2339: Property 'removeMakeGamePlayVoteDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(225,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(231,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(232,28): error TS2339: Property 'removeMakeGamePlayVoteDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(234,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(244,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(245,28): error TS2339: Property 'removeMakeGamePlayVoteDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(248,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(255,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(256,28): error TS2339: Property 'removeMakeGamePlayVoteDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(258,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(265,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(266,28): error TS2339: Property 'setDoesJudgeRequestAnotherVote' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(268,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(275,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(276,28): error TS2339: Property 'setChosenCardId' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(278,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(285,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(286,28): error TS2339: Property 'setChosenSide' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(288,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, {}, {}, {}>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "160",
            "161",
            "162",
            "163",
            "164",
            "165",
            "166",
            "167",
            "168",
            "169",
            "170",
            "171",
            "172",
            "173",
            "174",
            "175",
            "176",
            "177",
            "178",
            "179",
            "180",
            "181",
            "182",
            "183",
            "184",
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634",
            "642",
            "643",
            "644",
            "645",
            "646",
            "647",
            "648",
            "649",
            "650",
            "832",
            "833",
            "834",
            "835",
            "836"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 101
            },
            "start": {
              "column": 80,
              "line": 10
            }
          }
        },
        {
          "id": "2067",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected _MakeGamePlayDto{ …(5) } to strictly equal _MakeGamePlayDto{ targets: [], …(4) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "161"
          ],
          "coveredBy": [
            "161"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 15
            },
            "start": {
              "column": 76,
              "line": 13
            }
          }
        },
        {
          "id": "2068",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected _MakeGamePlayDto{ targets: [], …(4) } to strictly equal _MakeGamePlayDto{ …(5) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "162"
          ],
          "coveredBy": [
            "162"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 19
            },
            "start": {
              "column": 41,
              "line": 17
            }
          }
        },
        {
          "id": "2069",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected undefined to strictly equal [ _MakeGamePlayTargetDto{ …(2) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "163"
          ],
          "coveredBy": [
            "163",
            "164"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 26
            },
            "start": {
              "column": 74,
              "line": 21
            }
          }
        },
        {
          "id": "2070",
          "mutatorName": "BooleanLiteral",
          "replacement": "makeGamePlayDto.value.targets",
          "statusReason": "stores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(25,5): error TS18048: 'makeGamePlayDto.value.targets' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "163",
            "164"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 22
            },
            "start": {
              "column": 9,
              "line": 22
            }
          }
        },
        {
          "id": "2071",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected [ _MakeGamePlayTargetDto{ …(2) } ] to strictly equal [ Array(2) ]",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "164"
          ],
          "coveredBy": [
            "163",
            "164"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 22
            },
            "start": {
              "column": 9,
              "line": 22
            }
          }
        },
        {
          "id": "2072",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "stores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(25,5): error TS18048: 'makeGamePlayDto.value.targets' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "163",
            "164"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 22
            },
            "start": {
              "column": 9,
              "line": 22
            }
          }
        },
        {
          "id": "2073",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "stores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(23,5): error TS18048: 'makeGamePlayDto.value.targets' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "163"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 24
            },
            "start": {
              "column": 41,
              "line": 22
            }
          }
        },
        {
          "id": "2074",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "stores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(23,40): error TS2322: Type 'string' is not assignable to type '{ playerId: string; drankPotion?: \"life\" | \"death\" | undefined; }'.\nstores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(25,5): error TS18048: 'makeGamePlayDto.value.targets' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "163"
          ],
          "location": {
            "end": {
              "column": 41,
              "line": 23
            },
            "start": {
              "column": 39,
              "line": 23
            }
          }
        },
        {
          "id": "2075",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected [ Array(3) ] to strictly equal [ Array(2) ]",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "167"
          ],
          "coveredBy": [
            "165",
            "166",
            "167",
            "168",
            "171",
            "175"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 39
            },
            "start": {
              "column": 64,
              "line": 28
            }
          }
        },
        {
          "id": "2076",
          "mutatorName": "BooleanLiteral",
          "replacement": "makeGamePlayDto.value.targets",
          "statusReason": "stores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(32,25): error TS18048: 'makeGamePlayDto.value.targets' is possibly 'undefined'.\nstores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(32,65): error TS7006: Parameter 'target' implicitly has an 'any' type.\nstores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(34,39): error TS18048: 'makeGamePlayDto.value.targets' is possibly 'undefined'.\nstores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(36,9): error TS18048: 'makeGamePlayDto.value.targets' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "165",
            "166",
            "167",
            "168",
            "171",
            "175"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 29
            },
            "start": {
              "column": 9,
              "line": 29
            }
          }
        },
        {
          "id": "2077",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "stores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(32,25): error TS18048: 'makeGamePlayDto.value.targets' is possibly 'undefined'.\nstores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(34,39): error TS18048: 'makeGamePlayDto.value.targets' is possibly 'undefined'.\nstores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(36,9): error TS18048: 'makeGamePlayDto.value.targets' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "165",
            "166",
            "167",
            "168",
            "171",
            "175"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 29
            },
            "start": {
              "column": 9,
              "line": 29
            }
          }
        },
        {
          "id": "2078",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "stores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(32,25): error TS18048: 'makeGamePlayDto.value.targets' is possibly 'undefined'.\nstores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(34,39): error TS18048: 'makeGamePlayDto.value.targets' is possibly 'undefined'.\nstores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(36,9): error TS18048: 'makeGamePlayDto.value.targets' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "165",
            "166",
            "167",
            "168",
            "171",
            "175"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 29
            },
            "start": {
              "column": 9,
              "line": 29
            }
          }
        },
        {
          "id": "2079",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "stores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(30,25): error TS18048: 'makeGamePlayDto.value.targets' is possibly 'undefined'.\nstores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(32,39): error TS18048: 'makeGamePlayDto.value.targets' is possibly 'undefined'.\nstores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(34,9): error TS18048: 'makeGamePlayDto.value.targets' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "165"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 31
            },
            "start": {
              "column": 41,
              "line": 29
            }
          }
        },
        {
          "id": "2080",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected [ Array(3) ] to strictly equal [ Array(2) ]",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "167"
          ],
          "coveredBy": [
            "166",
            "167",
            "168",
            "171",
            "175"
          ],
          "location": {
            "end": {
              "column": 103,
              "line": 32
            },
            "start": {
              "column": 65,
              "line": 32
            }
          }
        },
        {
          "id": "2081",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected undefined to strictly equal [ _MakeGamePlayTargetDto{ …(2) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "166"
          ],
          "coveredBy": [
            "166",
            "167",
            "168",
            "171",
            "175"
          ],
          "location": {
            "end": {
              "column": 103,
              "line": 32
            },
            "start": {
              "column": 75,
              "line": 32
            }
          }
        },
        {
          "id": "2082",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected [ Array(3) ] to strictly equal [ Array(2) ]",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "167"
          ],
          "coveredBy": [
            "166",
            "167",
            "168",
            "171",
            "175"
          ],
          "location": {
            "end": {
              "column": 103,
              "line": 32
            },
            "start": {
              "column": 75,
              "line": 32
            }
          }
        },
        {
          "id": "2083",
          "mutatorName": "EqualityOperator",
          "replacement": "target.playerId !== targetId",
          "statusReason": "expected undefined to strictly equal [ _MakeGamePlayTargetDto{ …(2) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "166"
          ],
          "coveredBy": [
            "166",
            "167",
            "168",
            "171",
            "175"
          ],
          "location": {
            "end": {
              "column": 103,
              "line": 32
            },
            "start": {
              "column": 75,
              "line": 32
            }
          }
        },
        {
          "id": "2084",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected undefined to strictly equal [ _MakeGamePlayTargetDto{ …(2) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "166"
          ],
          "coveredBy": [
            "166",
            "167",
            "168",
            "171",
            "175"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 33
            },
            "start": {
              "column": 9,
              "line": 33
            }
          }
        },
        {
          "id": "2085",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "stores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(34,39): error TS18048: 'makeGamePlayDto.value.targets' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "166",
            "167",
            "168",
            "171",
            "175"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 33
            },
            "start": {
              "column": 9,
              "line": 33
            }
          }
        },
        {
          "id": "2086",
          "mutatorName": "EqualityOperator",
          "replacement": "targetIndex === -1",
          "statusReason": "expected undefined to strictly equal [ _MakeGamePlayTargetDto{ …(2) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "166"
          ],
          "coveredBy": [
            "166",
            "167",
            "168",
            "171",
            "175"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 33
            },
            "start": {
              "column": 9,
              "line": 33
            }
          }
        },
        {
          "id": "2087",
          "mutatorName": "UnaryOperator",
          "replacement": "+1",
          "statusReason": "expected undefined to strictly equal [ _MakeGamePlayTargetDto{ …(2) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "166"
          ],
          "coveredBy": [
            "166",
            "167",
            "168",
            "171",
            "175"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 33
            },
            "start": {
              "column": 25,
              "line": 33
            }
          }
        },
        {
          "id": "2088",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected [ Array(3) ] to strictly equal [ Array(2) ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "167"
          ],
          "coveredBy": [
            "167",
            "168",
            "171",
            "175"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 35
            },
            "start": {
              "column": 29,
              "line": 33
            }
          }
        },
        {
          "id": "2089",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected undefined to strictly equal [ _MakeGamePlayTargetDto{ …(2) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "166"
          ],
          "coveredBy": [
            "166",
            "167",
            "168",
            "171",
            "175"
          ],
          "location": {
            "end": {
              "column": 51,
              "line": 36
            },
            "start": {
              "column": 9,
              "line": 36
            }
          }
        },
        {
          "id": "2090",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected [] to be undefined",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "168"
          ],
          "coveredBy": [
            "166",
            "167",
            "168",
            "171",
            "175"
          ],
          "location": {
            "end": {
              "column": 51,
              "line": 36
            },
            "start": {
              "column": 9,
              "line": 36
            }
          }
        },
        {
          "id": "2091",
          "mutatorName": "EqualityOperator",
          "replacement": "makeGamePlayDto.value.targets.length !== 0",
          "statusReason": "expected undefined to strictly equal [ _MakeGamePlayTargetDto{ …(2) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "166"
          ],
          "coveredBy": [
            "166",
            "167",
            "168",
            "171",
            "175"
          ],
          "location": {
            "end": {
              "column": 51,
              "line": 36
            },
            "start": {
              "column": 9,
              "line": 36
            }
          }
        },
        {
          "id": "2092",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected [] to be undefined",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "168"
          ],
          "coveredBy": [
            "168"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 38
            },
            "start": {
              "column": 53,
              "line": 36
            }
          }
        },
        {
          "id": "2093",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected [ Array(3) ] to strictly equal [ Array(2) ]",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "171"
          ],
          "coveredBy": [
            "169",
            "170",
            "171"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 47
            },
            "start": {
              "column": 53,
              "line": 41
            }
          }
        },
        {
          "id": "2094",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "stores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(45,25): error TS18048: 'makeGamePlayDto.value.targets' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "169",
            "170",
            "171"
          ],
          "location": {
            "end": {
              "column": 85,
              "line": 42
            },
            "start": {
              "column": 9,
              "line": 42
            }
          }
        },
        {
          "id": "2095",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "stores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(45,25): error TS18048: 'makeGamePlayDto.value.targets' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "169",
            "170",
            "171"
          ],
          "location": {
            "end": {
              "column": 85,
              "line": 42
            },
            "start": {
              "column": 9,
              "line": 42
            }
          }
        },
        {
          "id": "2096",
          "mutatorName": "LogicalOperator",
          "replacement": "!makeGamePlayDto.value.targets && makeGamePlayDto.value.targets.length === 0",
          "statusReason": "stores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(42,43): error TS18048: 'makeGamePlayDto.value.targets' is possibly 'undefined'.\nstores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(45,25): error TS18048: 'makeGamePlayDto.value.targets' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "169",
            "170",
            "171"
          ],
          "location": {
            "end": {
              "column": 85,
              "line": 42
            },
            "start": {
              "column": 9,
              "line": 42
            }
          }
        },
        {
          "id": "2097",
          "mutatorName": "BooleanLiteral",
          "replacement": "makeGamePlayDto.value.targets",
          "statusReason": "stores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(42,42): error TS18048: 'makeGamePlayDto.value.targets' is possibly 'undefined'.\nstores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(45,25): error TS18048: 'makeGamePlayDto.value.targets' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "169",
            "170",
            "171"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 42
            },
            "start": {
              "column": 9,
              "line": 42
            }
          }
        },
        {
          "id": "2098",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Cannot read properties of undefined (reading 'playerId')",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "170"
          ],
          "coveredBy": [
            "170",
            "171"
          ],
          "location": {
            "end": {
              "column": 85,
              "line": 42
            },
            "start": {
              "column": 43,
              "line": 42
            }
          }
        },
        {
          "id": "2099",
          "mutatorName": "EqualityOperator",
          "replacement": "makeGamePlayDto.value.targets.length !== 0",
          "statusReason": "Cannot read properties of undefined (reading 'playerId')",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "170"
          ],
          "coveredBy": [
            "170",
            "171"
          ],
          "location": {
            "end": {
              "column": 85,
              "line": 42
            },
            "start": {
              "column": 43,
              "line": 42
            }
          }
        },
        {
          "id": "2100",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "stores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(43,25): error TS18048: 'makeGamePlayDto.value.targets' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "169",
            "170"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 44
            },
            "start": {
              "column": 87,
              "line": 42
            }
          }
        },
        {
          "id": "2101",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected [ Array(3) ] to strictly equal [ Array(2) ]",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "175"
          ],
          "coveredBy": [
            "172",
            "173",
            "174",
            "175"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 54
            },
            "start": {
              "column": 87,
              "line": 49
            }
          }
        },
        {
          "id": "2102",
          "mutatorName": "OptionalChaining",
          "replacement": "makeGamePlayDto.value.targets.find",
          "statusReason": "stores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(50,36): error TS18048: 'makeGamePlayDto.value.targets' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "172",
            "173",
            "174",
            "175"
          ],
          "location": {
            "end": {
              "column": 71,
              "line": 50
            },
            "start": {
              "column": 36,
              "line": 50
            }
          }
        },
        {
          "id": "2103",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected [ Array(3) ] to strictly equal [ Array(2) ]",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "175"
          ],
          "coveredBy": [
            "173",
            "174",
            "175"
          ],
          "location": {
            "end": {
              "column": 116,
              "line": 50
            },
            "start": {
              "column": 72,
              "line": 50
            }
          }
        },
        {
          "id": "2104",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected [ Array(2) ] to strictly equal [ Array(3) ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "174"
          ],
          "coveredBy": [
            "174",
            "175"
          ],
          "location": {
            "end": {
              "column": 116,
              "line": 50
            },
            "start": {
              "column": 82,
              "line": 50
            }
          }
        },
        {
          "id": "2105",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected [ Array(3) ] to strictly equal [ Array(2) ]",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "175"
          ],
          "coveredBy": [
            "174",
            "175"
          ],
          "location": {
            "end": {
              "column": 116,
              "line": 50
            },
            "start": {
              "column": 82,
              "line": 50
            }
          }
        },
        {
          "id": "2106",
          "mutatorName": "EqualityOperator",
          "replacement": "target.drankPotion !== drankPotion",
          "statusReason": "expected [ Array(2) ] to strictly equal [ Array(3) ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "174"
          ],
          "coveredBy": [
            "174",
            "175"
          ],
          "location": {
            "end": {
              "column": 116,
              "line": 50
            },
            "start": {
              "column": 82,
              "line": 50
            }
          }
        },
        {
          "id": "2107",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "stores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(52,35): error TS18048: 'firstDrankPotionTarget' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "172",
            "173",
            "174",
            "175"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 51
            },
            "start": {
              "column": 9,
              "line": 51
            }
          }
        },
        {
          "id": "2108",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "stores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(52,35): error TS18048: 'firstDrankPotionTarget' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "172",
            "173",
            "174",
            "175"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 51
            },
            "start": {
              "column": 9,
              "line": 51
            }
          }
        },
        {
          "id": "2109",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected [ Array(3) ] to strictly equal [ Array(2) ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "175"
          ],
          "coveredBy": [
            "175"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 53
            },
            "start": {
              "column": 33,
              "line": 51
            }
          }
        },
        {
          "id": "2110",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected undefined to strictly equal [ _MakeGamePlayVoteDto{ …(2) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "176"
          ],
          "coveredBy": [
            "176",
            "177"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 61
            },
            "start": {
              "column": 68,
              "line": 56
            }
          }
        },
        {
          "id": "2111",
          "mutatorName": "BooleanLiteral",
          "replacement": "makeGamePlayDto.value.votes",
          "statusReason": "stores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(60,5): error TS18048: 'makeGamePlayDto.value.votes' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "176",
            "177"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 57
            },
            "start": {
              "column": 9,
              "line": 57
            }
          }
        },
        {
          "id": "2112",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected [ _MakeGamePlayVoteDto{ …(2) } ] to strictly equal [ _MakeGamePlayVoteDto{ …(2) }, …(1) ]",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "177"
          ],
          "coveredBy": [
            "176",
            "177"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 57
            },
            "start": {
              "column": 9,
              "line": 57
            }
          }
        },
        {
          "id": "2113",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "stores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(60,5): error TS18048: 'makeGamePlayDto.value.votes' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "176",
            "177"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 57
            },
            "start": {
              "column": 9,
              "line": 57
            }
          }
        },
        {
          "id": "2114",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "stores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(58,5): error TS18048: 'makeGamePlayDto.value.votes' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "176"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 59
            },
            "start": {
              "column": 39,
              "line": 57
            }
          }
        },
        {
          "id": "2115",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "stores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(58,38): error TS2322: Type 'string' is not assignable to type '{ sourceId: string; targetId: string; }'.\nstores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(60,5): error TS18048: 'makeGamePlayDto.value.votes' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "176"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 58
            },
            "start": {
              "column": 37,
              "line": 58
            }
          }
        },
        {
          "id": "2116",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected [ _MakeGamePlayVoteDto{ …(2) }, …(2) ] to strictly equal [ _MakeGamePlayVoteDto{ …(2) }, …(1) ]",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "180"
          ],
          "coveredBy": [
            "178",
            "179",
            "180",
            "181"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 74
            },
            "start": {
              "column": 62,
              "line": 63
            }
          }
        },
        {
          "id": "2117",
          "mutatorName": "BooleanLiteral",
          "replacement": "makeGamePlayDto.value.votes",
          "statusReason": "stores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(67,23): error TS18048: 'makeGamePlayDto.value.votes' is possibly 'undefined'.\nstores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(67,61): error TS7006: Parameter 'vote' implicitly has an 'any' type.\nstores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(69,37): error TS18048: 'makeGamePlayDto.value.votes' is possibly 'undefined'.\nstores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(71,9): error TS18048: 'makeGamePlayDto.value.votes' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "178",
            "179",
            "180",
            "181"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 64
            },
            "start": {
              "column": 9,
              "line": 64
            }
          }
        },
        {
          "id": "2118",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "stores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(67,23): error TS18048: 'makeGamePlayDto.value.votes' is possibly 'undefined'.\nstores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(69,37): error TS18048: 'makeGamePlayDto.value.votes' is possibly 'undefined'.\nstores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(71,9): error TS18048: 'makeGamePlayDto.value.votes' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "178",
            "179",
            "180",
            "181"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 64
            },
            "start": {
              "column": 9,
              "line": 64
            }
          }
        },
        {
          "id": "2119",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "stores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(67,23): error TS18048: 'makeGamePlayDto.value.votes' is possibly 'undefined'.\nstores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(69,37): error TS18048: 'makeGamePlayDto.value.votes' is possibly 'undefined'.\nstores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(71,9): error TS18048: 'makeGamePlayDto.value.votes' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "178",
            "179",
            "180",
            "181"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 64
            },
            "start": {
              "column": 9,
              "line": 64
            }
          }
        },
        {
          "id": "2120",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "stores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(65,23): error TS18048: 'makeGamePlayDto.value.votes' is possibly 'undefined'.\nstores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(67,37): error TS18048: 'makeGamePlayDto.value.votes' is possibly 'undefined'.\nstores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(69,9): error TS18048: 'makeGamePlayDto.value.votes' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "178"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 66
            },
            "start": {
              "column": 39,
              "line": 64
            }
          }
        },
        {
          "id": "2121",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected [ _MakeGamePlayVoteDto{ …(2) }, …(2) ] to strictly equal [ _MakeGamePlayVoteDto{ …(2) }, …(1) ]",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "180"
          ],
          "coveredBy": [
            "179",
            "180",
            "181"
          ],
          "location": {
            "end": {
              "column": 95,
              "line": 67
            },
            "start": {
              "column": 61,
              "line": 67
            }
          }
        },
        {
          "id": "2122",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected undefined to strictly equal [ _MakeGamePlayVoteDto{ …(2) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "179"
          ],
          "coveredBy": [
            "179",
            "180",
            "181"
          ],
          "location": {
            "end": {
              "column": 95,
              "line": 67
            },
            "start": {
              "column": 69,
              "line": 67
            }
          }
        },
        {
          "id": "2123",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected [ _MakeGamePlayVoteDto{ …(2) }, …(2) ] to strictly equal [ _MakeGamePlayVoteDto{ …(2) }, …(1) ]",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "180"
          ],
          "coveredBy": [
            "179",
            "180",
            "181"
          ],
          "location": {
            "end": {
              "column": 95,
              "line": 67
            },
            "start": {
              "column": 69,
              "line": 67
            }
          }
        },
        {
          "id": "2124",
          "mutatorName": "EqualityOperator",
          "replacement": "vote.sourceId !== sourceId",
          "statusReason": "expected undefined to strictly equal [ _MakeGamePlayVoteDto{ …(2) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "179"
          ],
          "coveredBy": [
            "179",
            "180",
            "181"
          ],
          "location": {
            "end": {
              "column": 95,
              "line": 67
            },
            "start": {
              "column": 69,
              "line": 67
            }
          }
        },
        {
          "id": "2125",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected undefined to strictly equal [ _MakeGamePlayVoteDto{ …(2) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "179"
          ],
          "coveredBy": [
            "179",
            "180",
            "181"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 68
            },
            "start": {
              "column": 9,
              "line": 68
            }
          }
        },
        {
          "id": "2126",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "stores/game/make-game-play-dto/useMakeGamePlayDtoStore.ts(69,37): error TS18048: 'makeGamePlayDto.value.votes' is possibly 'undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "179",
            "180",
            "181"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 68
            },
            "start": {
              "column": 9,
              "line": 68
            }
          }
        },
        {
          "id": "2127",
          "mutatorName": "EqualityOperator",
          "replacement": "voteIndex === -1",
          "statusReason": "expected undefined to strictly equal [ _MakeGamePlayVoteDto{ …(2) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "179"
          ],
          "coveredBy": [
            "179",
            "180",
            "181"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 68
            },
            "start": {
              "column": 9,
              "line": 68
            }
          }
        },
        {
          "id": "2128",
          "mutatorName": "UnaryOperator",
          "replacement": "+1",
          "statusReason": "expected undefined to strictly equal [ _MakeGamePlayVoteDto{ …(2) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "179"
          ],
          "coveredBy": [
            "179",
            "180",
            "181"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 68
            },
            "start": {
              "column": 23,
              "line": 68
            }
          }
        },
        {
          "id": "2129",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected [ _MakeGamePlayVoteDto{ …(2) }, …(2) ] to strictly equal [ _MakeGamePlayVoteDto{ …(2) }, …(1) ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "180"
          ],
          "coveredBy": [
            "180",
            "181"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 70
            },
            "start": {
              "column": 27,
              "line": 68
            }
          }
        },
        {
          "id": "2130",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected undefined to strictly equal [ _MakeGamePlayVoteDto{ …(2) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "179"
          ],
          "coveredBy": [
            "179",
            "180",
            "181"
          ],
          "location": {
            "end": {
              "column": 49,
              "line": 71
            },
            "start": {
              "column": 9,
              "line": 71
            }
          }
        },
        {
          "id": "2131",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected [] to be undefined",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "181"
          ],
          "coveredBy": [
            "179",
            "180",
            "181"
          ],
          "location": {
            "end": {
              "column": 49,
              "line": 71
            },
            "start": {
              "column": 9,
              "line": 71
            }
          }
        },
        {
          "id": "2132",
          "mutatorName": "EqualityOperator",
          "replacement": "makeGamePlayDto.value.votes.length !== 0",
          "statusReason": "expected undefined to strictly equal [ _MakeGamePlayVoteDto{ …(2) } ]",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "179"
          ],
          "coveredBy": [
            "179",
            "180",
            "181"
          ],
          "location": {
            "end": {
              "column": 49,
              "line": 71
            },
            "start": {
              "column": 9,
              "line": 71
            }
          }
        },
        {
          "id": "2133",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected [] to be undefined",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "181"
          ],
          "coveredBy": [
            "181"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 73
            },
            "start": {
              "column": 51,
              "line": 71
            }
          }
        },
        {
          "id": "2134",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected undefined to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "182"
          ],
          "coveredBy": [
            "182"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 78
            },
            "start": {
              "column": 99,
              "line": 76
            }
          }
        },
        {
          "id": "2135",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected undefined to be 'cardId' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "183"
          ],
          "coveredBy": [
            "183"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 82
            },
            "start": {
              "column": 68,
              "line": 80
            }
          }
        },
        {
          "id": "2136",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected undefined to be 'werewolves' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "184"
          ],
          "coveredBy": [
            "184"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 86
            },
            "start": {
              "column": 66,
              "line": 84
            }
          }
        },
        {
          "id": "2137",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "tests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameChooseSidePlayground/GameChooseSidePlayground.nuxt.spec.ts(40,35): error TS2339: Property 'setChosenSide' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameChooseSidePlayground/GameChooseSidePlayground.nuxt.spec.ts(45,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameChooseSidePlayground/GameChooseSidePlayground.nuxt.spec.ts(55,30): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameChooseSidePlayground/GameChooseSidePlayground.nuxt.spec.ts(67,30): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameChooseSidePlayground/GameChooseSidePlayground.nuxt.spec.ts(82,35): error TS2339: Property 'setChosenSide' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameChooseSidePlayground/GameChooseSidePlayground.nuxt.spec.ts(87,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameChooseSidePlayground/GameChooseSidePlayground.nuxt.spec.ts(97,30): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameChooseSidePlayground/GameChooseSidePlayground.nuxt.spec.ts(109,30): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(65,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(79,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(99,37): error TS2339: Property 'addMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(119,37): error TS2339: Property 'addMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(139,37): error TS2339: Property 'addMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(150,37): error TS2339: Property 'removeFirstMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(181,30): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(186,37): error TS2339: Property 'removeFirstMakeGamePlayTargetDtoWithPotion' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(208,30): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(213,37): error TS2339: Property 'addMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(214,37): error TS2339: Property 'removeFirstMakeGamePlayTargetDtoWithPotion' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(236,30): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(241,37): error TS2339: Property 'addMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(242,37): error TS2339: Property 'removeFirstMakeGamePlayTargetDtoWithPotion' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(273,30): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(278,37): error TS2339: Property 'removeFirstMakeGamePlayTargetDtoWithPotion' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(300,30): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(305,37): error TS2339: Property 'addMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(306,37): error TS2339: Property 'removeFirstMakeGamePlayTargetDtoWithPotion' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(328,30): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(333,37): error TS2339: Property 'addMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(334,37): error TS2339: Property 'removeFirstMakeGamePlayTargetDtoWithPotion' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(355,37): error TS2339: Property 'addMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(356,37): error TS2339: Property 'removeFirstMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(367,37): error TS2339: Property 'removeFirstMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(388,30): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(397,37): error TS2339: Property 'removeMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(398,37): error TS2339: Property 'addMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(399,37): error TS2339: Property 'removeFirstMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(424,30): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(429,37): error TS2339: Property 'removeFirstMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts(430,37): error TS2339: Property 'addMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCardVoteInput/GamePlaygroundPlayerCardVoteInput.nuxt.spec.ts(182,35): error TS2339: Property 'removeMakeGamePlayVoteDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCardVoteInput/GamePlaygroundPlayerCardVoteInput.nuxt.spec.ts(183,35): error TS2339: Property 'addMakeGamePlayVoteDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCardVoteInput/GamePlaygroundPlayerCardVoteInput.nuxt.spec.ts(193,35): error TS2339: Property 'removeMakeGamePlayVoteDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCardVoteInput/GamePlaygroundPlayerCardVoteInput.nuxt.spec.ts(203,35): error TS2339: Property 'removeMakeGamePlayVoteDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCardVoteInput/GamePlaygroundPlayerCardVoteInput.nuxt.spec.ts(213,35): error TS2339: Property 'addMakeGamePlayVoteDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameRequestAnotherVotePlayground/GameRequestAnotherVotePlayground.nuxt.spec.ts(55,35): error TS2339: Property 'setDoesJudgeRequestAnotherVote' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameRequestAnotherVotePlayground/GameRequestAnotherVotePlayground.nuxt.spec.ts(65,35): error TS2339: Property 'setDoesJudgeRequestAnotherVote' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameRequestAnotherVotePlayground/GameRequestAnotherVotePlayground.nuxt.spec.ts(66,35): error TS2339: Property 'setDoesJudgeRequestAnotherVote' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundFooter/GamePlaygroundFooterMakePlayButton/GamePlaygroundFooterMakePlayButton.nuxt.spec.ts(78,30): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundFooter/GamePlaygroundFooterMakePlayButton/GamePlaygroundFooterMakePlayButton.nuxt.spec.ts(89,30): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundFooter/GamePlaygroundFooterMakePlayButton/GamePlaygroundFooterMakePlayButton.nuxt.spec.ts(93,37): error TS2339: Property 'resetMakeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(19,33): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(32,28): error TS2339: Property 'setMakeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(34,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(41,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(49,28): error TS2339: Property 'resetMakeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(51,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(58,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(60,28): error TS2339: Property 'addMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(62,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(68,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(70,28): error TS2339: Property 'addMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(73,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(80,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(81,28): error TS2339: Property 'removeMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(83,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(89,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(90,28): error TS2339: Property 'removeMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(92,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(102,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(103,28): error TS2339: Property 'removeMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(106,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(113,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(114,28): error TS2339: Property 'removeMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(116,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(123,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(124,28): error TS2339: Property 'removeFirstMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(126,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(131,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(132,28): error TS2339: Property 'removeFirstMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(134,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(144,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(145,28): error TS2339: Property 'removeFirstMakeGamePlayTargetDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(148,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(155,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(156,28): error TS2339: Property 'removeFirstMakeGamePlayTargetDtoWithPotion' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(158,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(163,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(164,28): error TS2339: Property 'removeFirstMakeGamePlayTargetDtoWithPotion' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(166,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(176,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(177,28): error TS2339: Property 'removeFirstMakeGamePlayTargetDtoWithPotion' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(179,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(189,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(190,28): error TS2339: Property 'removeFirstMakeGamePlayTargetDtoWithPotion' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(193,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(200,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(202,28): error TS2339: Property 'addMakeGamePlayVoteDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(204,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(210,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(212,28): error TS2339: Property 'addMakeGamePlayVoteDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(215,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(222,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(223,28): error TS2339: Property 'removeMakeGamePlayVoteDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(225,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(231,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(232,28): error TS2339: Property 'removeMakeGamePlayVoteDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(234,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(244,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(245,28): error TS2339: Property 'removeMakeGamePlayVoteDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(248,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(255,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(256,28): error TS2339: Property 'removeMakeGamePlayVoteDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(258,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(265,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(266,28): error TS2339: Property 'setDoesJudgeRequestAnotherVote' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(268,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(275,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(276,28): error TS2339: Property 'setChosenCardId' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(278,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(285,28): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(286,28): error TS2339: Property 'setChosenSide' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts(288,35): error TS2339: Property 'makeGamePlayDto' does not exist on type 'Store<StoreIds.MAKE_GAME_PLAY_DTO, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "160",
            "161",
            "162",
            "163",
            "164",
            "165",
            "166",
            "167",
            "168",
            "169",
            "170",
            "171",
            "172",
            "173",
            "174",
            "175",
            "176",
            "177",
            "178",
            "179",
            "180",
            "181",
            "182",
            "183",
            "184",
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634",
            "642",
            "643",
            "644",
            "645",
            "646",
            "647",
            "648",
            "649",
            "650",
            "832",
            "833",
            "834",
            "835",
            "836"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 100
            },
            "start": {
              "column": 10,
              "line": 87
            }
          }
        }
      ],
      "source": "import { defineStore } from \"pinia\";\n\nimport { MakeGamePlayTargetDto } from \"~/composables/api/game/dto/make-game-play/make-game-play-target/make-game-play-target.dto\";\nimport { MakeGamePlayVoteDto } from \"~/composables/api/game/dto/make-game-play/make-game-play-vote/make-game-play-vote.dto\";\nimport { MakeGamePlayDto } from \"~/composables/api/game/dto/make-game-play/make-game-play.dto\";\nimport type { WitchPotion } from \"~/composables/api/game/types/game-play/game-play.types\";\nimport type { RoleSide } from \"~/composables/api/role/types/role.types\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\n\nconst useMakeGamePlayDtoStore = defineStore(StoreIds.MAKE_GAME_PLAY_DTO, () => {\n  const makeGamePlayDto = ref<MakeGamePlayDto>(MakeGamePlayDto.create({}));\n\n  function setMakeGamePlayDto(makeGamePlayDtoValue: MakeGamePlayDto): void {\n    makeGamePlayDto.value = MakeGamePlayDto.create(makeGamePlayDtoValue);\n  }\n\n  function resetMakeGamePlayDto(): void {\n    makeGamePlayDto.value = MakeGamePlayDto.create({});\n  }\n\n  function addMakeGamePlayTargetDto(target: MakeGamePlayTargetDto): void {\n    if (!makeGamePlayDto.value.targets) {\n      makeGamePlayDto.value.targets = [];\n    }\n    makeGamePlayDto.value.targets.push(MakeGamePlayTargetDto.create(target));\n  }\n\n  function removeMakeGamePlayTargetDto(targetId: string): void {\n    if (!makeGamePlayDto.value.targets) {\n      return;\n    }\n    const targetIndex = makeGamePlayDto.value.targets.findIndex(target => target.playerId === targetId);\n    if (targetIndex !== -1) {\n      makeGamePlayDto.value.targets = makeGamePlayDto.value.targets.toSpliced(targetIndex, 1);\n    }\n    if (makeGamePlayDto.value.targets.length === 0) {\n      makeGamePlayDto.value.targets = undefined;\n    }\n  }\n\n  function removeFirstMakeGamePlayTargetDto(): void {\n    if (!makeGamePlayDto.value.targets || makeGamePlayDto.value.targets.length === 0) {\n      return;\n    }\n    const firstTarget = makeGamePlayDto.value.targets[0];\n    removeMakeGamePlayTargetDto(firstTarget.playerId);\n  }\n\n  function removeFirstMakeGamePlayTargetDtoWithPotion(drankPotion: WitchPotion): void {\n    const firstDrankPotionTarget = makeGamePlayDto.value.targets?.find(target => target.drankPotion === drankPotion);\n    if (firstDrankPotionTarget) {\n      removeMakeGamePlayTargetDto(firstDrankPotionTarget.playerId);\n    }\n  }\n\n  function addMakeGamePlayVoteDto(vote: MakeGamePlayVoteDto): void {\n    if (!makeGamePlayDto.value.votes) {\n      makeGamePlayDto.value.votes = [];\n    }\n    makeGamePlayDto.value.votes.push(MakeGamePlayVoteDto.create(vote));\n  }\n\n  function removeMakeGamePlayVoteDto(sourceId: string): void {\n    if (!makeGamePlayDto.value.votes) {\n      return;\n    }\n    const voteIndex = makeGamePlayDto.value.votes.findIndex(vote => vote.sourceId === sourceId);\n    if (voteIndex !== -1) {\n      makeGamePlayDto.value.votes = makeGamePlayDto.value.votes.toSpliced(voteIndex, 1);\n    }\n    if (makeGamePlayDto.value.votes.length === 0) {\n      makeGamePlayDto.value.votes = undefined;\n    }\n  }\n\n  function setDoesJudgeRequestAnotherVote(doesJudgeRequestAnotherVote: boolean | undefined): void {\n    makeGamePlayDto.value.doesJudgeRequestAnotherVote = doesJudgeRequestAnotherVote;\n  }\n\n  function setChosenCardId(chosenCardId: string | undefined): void {\n    makeGamePlayDto.value.chosenCardId = chosenCardId;\n  }\n\n  function setChosenSide(chosenSide: RoleSide | undefined): void {\n    makeGamePlayDto.value.chosenSide = chosenSide;\n  }\n  return {\n    makeGamePlayDto,\n    setMakeGamePlayDto,\n    resetMakeGamePlayDto,\n    addMakeGamePlayTargetDto,\n    removeMakeGamePlayTargetDto,\n    removeFirstMakeGamePlayTargetDto,\n    removeFirstMakeGamePlayTargetDtoWithPotion,\n    addMakeGamePlayVoteDto,\n    removeMakeGamePlayVoteDto,\n    setDoesJudgeRequestAnotherVote,\n    setChosenCardId,\n    setChosenSide,\n  };\n});\n\nexport { useMakeGamePlayDtoStore };"
    },
    "stores/game/useGameStore.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "2138",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "tests/unit/specs/components/layouts/default/ParametersMenu/ParametersMenu.nuxt.spec.ts(101,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/layouts/default/ParametersMenu/ParametersMenu.nuxt.spec.ts(109,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/layouts/default/ParametersMenu/ParametersMenu.nuxt.spec.ts(136,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/layouts/default/ParametersMenu/ParametersMenu.nuxt.spec.ts(164,13): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/layouts/default/ParametersMenu/ParametersMenu.nuxt.spec.ts(191,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/layouts/default/ParametersMenu/ParametersMenu.nuxt.spec.ts(195,24): error TS2339: Property 'cancelGame' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GameOver/GameOver.nuxt.spec.ts(82,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GameOver/GameOver.nuxt.spec.ts(91,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GameOver/GameOverVictoryText/GameOverVictoryText.nuxt.spec.ts(87,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GameOver/GameOverVictoryText/GameOverVictoryText.nuxt.spec.ts(148,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GameOver/GameOverVictoryText/GameOverVictoryText.nuxt.spec.ts(209,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GameOver/GameOverWinners/GameOverWinners.nuxt.spec.ts(52,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GameOver/GameOverWinners/GameOverWinners.nuxt.spec.ts(61,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/CurrentPlayExpectedPlayersToAct/CurrentPlayExpectedPlayersToAct.nuxt.spec.ts(52,15): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/CurrentPlayExpectedPlayersToAct/CurrentPlayExpectedPlayersToAct.nuxt.spec.ts(61,15): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/CurrentPlayQuestion/CurrentPlayQuestion.nuxt.spec.ts(211,15): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundContent.nuxt.spec.ts(39,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundContent.nuxt.spec.ts(48,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundContent.nuxt.spec.ts(57,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundContent.nuxt.spec.ts(66,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundContent.nuxt.spec.ts(75,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundContent.nuxt.spec.ts(84,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundContent.nuxt.spec.ts(93,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundContent.nuxt.spec.ts(102,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundContent.nuxt.spec.ts(111,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameBuryDeadBodiesPlayground/GameBuryDeadBodiesPlayground.nuxt.spec.ts(36,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameBuryDeadBodiesPlayground/GameBuryDeadBodiesPlayground.nuxt.spec.ts(58,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameBuryDeadBodiesPlayground/GameBuryDeadBodiesPlayground.nuxt.spec.ts(69,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameBuryDeadBodiesPlayground/GameBuryDeadBodiesPlayground.nuxt.spec.ts(78,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameBuryDeadBodiesPlayground/GameDevotedServantStealsRolePlayground/GameDevotedServantStealsRolePlayground.nuxt.spec.ts(70,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameBuryDeadBodiesPlayground/GameDevotedServantStealsRolePlayground/GameDevotedServantStealsRolePlayground.nuxt.spec.ts(89,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameBuryDeadBodiesPlayground/GameDevotedServantStealsRolePlayground/GameDevotedServantStealsRolePlayground.nuxt.spec.ts(98,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameTargetPlayground/GameTargetPlaygroundTargets/GameTargetPlaygroundTargets.nuxt.spec.ts(36,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameTargetPlayground/GameTargetPlaygroundTargets/GameTargetPlaygroundTargets.nuxt.spec.ts(45,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameTargetPlayground/GameTargetPlaygroundTargets/GameTargetPlaygroundTargets.nuxt.spec.ts(54,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameTargetPlayground/GameTargetPlaygroundTargets/GameTargetPlaygroundTargets.nuxt.spec.ts(63,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameTargetPlayground/GameTargetPlaygroundTargets/GameTargetPlaygroundTargets.nuxt.spec.ts(72,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameTargetPlayground/GameTargetPlaygroundTargets/GameTargetPlaygroundTargets.nuxt.spec.ts(88,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/GameUsePotionsPlayground.nuxt.spec.ts(55,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/GameUsePotionsPlayground.nuxt.spec.ts(64,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/GameUsePotionsPlayground.nuxt.spec.ts(75,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/GameUsePotionsPlayground.nuxt.spec.ts(96,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/WitchUsePotionsTabView/WitchUsePotionsTabView.nuxt.spec.ts(72,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/WitchUsePotionsTabView/WitchUsePotionsTabView.nuxt.spec.ts(94,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/WitchUsePotionsTabView/WitchUsePotionsTabView.nuxt.spec.ts(127,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/WitchUsePotionsTabView/WitchUsePotionsTabView.nuxt.spec.ts(159,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/WitchUsePotionsTabView/WitchUsePotionsTabView.nuxt.spec.ts(197,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/WitchUsePotionsTabView/WitchUsePotionsTabView.nuxt.spec.ts(229,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/WitchUsePotionsTabView/WitchUsePotionsTabView.nuxt.spec.ts(261,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/WitchUsePotionsTabView/WitchUsePotionsTabView.nuxt.spec.ts(299,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameVotePlayground/GameVotePlaygroundVoters/GameVotePlaygroundVoters.nuxt.spec.ts(43,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameVotePlayground/GameVotePlaygroundVoters/GameVotePlaygroundVoters.nuxt.spec.ts(52,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameVotePlayground/GameVotePlaygroundVoters/GameVotePlaygroundVoters.nuxt.spec.ts(61,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameVotePlayground/GameVotePlaygroundVoters/GameVotePlaygroundVoters.nuxt.spec.ts(84,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundHeader/GamePlaygroundHeaderCard/GamePlaygroundHeaderCard.nuxt.spec.ts(91,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundHeader/GamePlaygroundHeaderCard/GamePlaygroundHeaderCard.nuxt.spec.ts(100,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundHeader/GamePlaygroundHeaderCurrentPlay/GamePlaygroundHeaderCurrentPlay.nuxt.spec.ts(44,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundHeader/GamePlaygroundHeaderCurrentPlay/GamePlaygroundHeaderCurrentPlay.nuxt.spec.ts(201,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundHeader/GamePlaygroundHeaderCurrentPlay/GamePlaygroundHeaderCurrentPlay.nuxt.spec.ts(370,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundHeader/GamePlaygroundHeaderPhase/GamePlaygroundHeaderPhase.nuxt.spec.ts(40,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundHeader/GamePlaygroundHeaderPhase/GamePlaygroundHeaderPhase.nuxt.spec.ts(41,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundHeader/GamePlaygroundHeaderPhase/GamePlaygroundHeaderPhase.nuxt.spec.ts(50,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundHeader/GamePlaygroundHeaderPhase/GamePlaygroundHeaderPhase.nuxt.spec.ts(51,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GameTeamSide/GameTeamSide.nuxt.spec.ts(74,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GameTeamSide/GameTeamSide.nuxt.spec.ts(92,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GameTeamSide/GameTeamSide.nuxt.spec.ts(112,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GameTeamSide/GameTeamSide.nuxt.spec.ts(125,74): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GameTeamSide/GameTeamSide.nuxt.spec.ts(126,74): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GameTeamSide/GameTeamSide.nuxt.spec.ts(127,74): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GameTeamSide/GameTeamSide.nuxt.spec.ts(128,74): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GameTeamSide/GameTeamSide.nuxt.spec.ts(134,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GameTeamSide/GameTeamSide.nuxt.spec.ts(147,74): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GameTeamSide/GameTeamSide.nuxt.spec.ts(148,74): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/components/pages/game/GamePlaying/GameTeamSide/GameTeamSide.nuxt.spec.ts(149,74): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/pages/game/game-page.nuxt.spec.ts(29,15): error TS2339: Property 'fetchingGameStatus' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/pages/game/game-page.nuxt.spec.ts(50,22): error TS2339: Property 'fetchAndSetGame' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/pages/game/game-page.nuxt.spec.ts(58,22): error TS2339: Property 'fetchAndSetGame' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/pages/game/game-page.nuxt.spec.ts(74,17): error TS2339: Property 'fetchingGameStatus' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/pages/game/game-page.nuxt.spec.ts(82,17): error TS2339: Property 'fetchingGameStatus' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/pages/game/game-page.nuxt.spec.ts(83,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/pages/game/game-page.nuxt.spec.ts(91,17): error TS2339: Property 'fetchingGameStatus' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/pages/game/game-page.nuxt.spec.ts(92,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/pages/game/game-page.nuxt.spec.ts(100,17): error TS2339: Property 'fetchingGameStatus' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/pages/game/game-page.nuxt.spec.ts(101,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(27,22): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(28,22): error TS2339: Property 'fetchingGameStatus' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(34,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(35,17): error TS2339: Property 'resetGame' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(37,24): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(44,23): error TS2339: Property 'fetchAndSetGame' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(53,23): error TS2339: Property 'fetchAndSetGame' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(55,24): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(62,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(63,23): error TS2339: Property 'cancelGame' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(72,23): error TS2339: Property 'cancelGame' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(74,24): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(81,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(83,23): error TS2339: Property 'makeGamePlay' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(93,23): error TS2339: Property 'makeGamePlay' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(95,24): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, {}, {}, {}>'.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213",
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242",
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "310",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "319",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327",
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468",
            "479",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "488",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "596",
            "597",
            "598",
            "599",
            "600",
            "601",
            "602",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634",
            "665",
            "666",
            "667",
            "668",
            "669",
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677",
            "678",
            "679",
            "680",
            "681",
            "682",
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713",
            "726",
            "727",
            "728",
            "729",
            "730",
            "731",
            "732",
            "733",
            "734",
            "735",
            "736",
            "737",
            "738",
            "739",
            "740",
            "845",
            "846",
            "847",
            "848",
            "849",
            "850",
            "851",
            "852",
            "853",
            "854",
            "855",
            "856",
            "926",
            "927",
            "928",
            "929",
            "939",
            "957",
            "958",
            "959",
            "991"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 70
            },
            "start": {
              "column": 55,
              "line": 9
            }
          }
        },
        {
          "id": "2139",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "stores/game/useGameStore.ts(17,58): error TS2345: Argument of type '\"\"' is not assignable to parameter of type 'AsyncDataRequestStatus'.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213",
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242",
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "310",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "319",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327",
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468",
            "479",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "488",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "596",
            "597",
            "598",
            "599",
            "600",
            "601",
            "602",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634",
            "665",
            "666",
            "667",
            "668",
            "669",
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677",
            "678",
            "679",
            "680",
            "681",
            "682",
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713",
            "726",
            "727",
            "728",
            "729",
            "730",
            "731",
            "732",
            "733",
            "734",
            "735",
            "736",
            "737",
            "738",
            "739",
            "740",
            "845",
            "846",
            "847",
            "848",
            "849",
            "850",
            "851",
            "852",
            "853",
            "854",
            "855",
            "856",
            "926",
            "927",
            "928",
            "929",
            "939",
            "957",
            "958",
            "959",
            "991"
          ],
          "location": {
            "end": {
              "column": 64,
              "line": 17
            },
            "start": {
              "column": 58,
              "line": 17
            }
          }
        },
        {
          "id": "2140",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "stores/game/useGameStore.ts(18,59): error TS2345: Argument of type '\"\"' is not assignable to parameter of type 'AsyncDataRequestStatus'.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213",
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242",
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "310",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "319",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327",
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468",
            "479",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "488",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "596",
            "597",
            "598",
            "599",
            "600",
            "601",
            "602",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634",
            "665",
            "666",
            "667",
            "668",
            "669",
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677",
            "678",
            "679",
            "680",
            "681",
            "682",
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713",
            "726",
            "727",
            "728",
            "729",
            "730",
            "731",
            "732",
            "733",
            "734",
            "735",
            "736",
            "737",
            "738",
            "739",
            "740",
            "845",
            "846",
            "847",
            "848",
            "849",
            "850",
            "851",
            "852",
            "853",
            "854",
            "855",
            "856",
            "926",
            "927",
            "928",
            "929",
            "939",
            "957",
            "958",
            "959",
            "991"
          ],
          "location": {
            "end": {
              "column": 65,
              "line": 18
            },
            "start": {
              "column": 59,
              "line": 18
            }
          }
        },
        {
          "id": "2141",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "stores/game/useGameStore.ts(19,60): error TS2345: Argument of type '\"\"' is not assignable to parameter of type 'AsyncDataRequestStatus'.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213",
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242",
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "310",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "319",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327",
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468",
            "479",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "488",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "596",
            "597",
            "598",
            "599",
            "600",
            "601",
            "602",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634",
            "665",
            "666",
            "667",
            "668",
            "669",
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677",
            "678",
            "679",
            "680",
            "681",
            "682",
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713",
            "726",
            "727",
            "728",
            "729",
            "730",
            "731",
            "732",
            "733",
            "734",
            "735",
            "736",
            "737",
            "738",
            "739",
            "740",
            "845",
            "846",
            "847",
            "848",
            "849",
            "850",
            "851",
            "852",
            "853",
            "854",
            "855",
            "856",
            "926",
            "927",
            "928",
            "929",
            "939",
            "957",
            "958",
            "959",
            "991"
          ],
          "location": {
            "end": {
              "column": 66,
              "line": 19
            },
            "start": {
              "column": 60,
              "line": 19
            }
          }
        },
        {
          "id": "2142",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected _Game{ …(12) } to strictly equal _Game{ _id: undefined, …(11) }",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "850"
          ],
          "coveredBy": [
            "850"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 23
            },
            "start": {
              "column": 30,
              "line": 21
            }
          }
        },
        {
          "id": "2143",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "851"
          ],
          "coveredBy": [
            "851",
            "852"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 35
            },
            "start": {
              "column": 65,
              "line": 25
            }
          }
        },
        {
          "id": "2144",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "stores/game/useGameStore.ts(26,5): error TS2322: Type '\"\"' is not assignable to type 'AsyncDataRequestStatus'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "851",
            "852"
          ],
          "location": {
            "end": {
              "column": 41,
              "line": 26
            },
            "start": {
              "column": 32,
              "line": 26
            }
          }
        },
        {
          "id": "2145",
          "mutatorName": "BooleanLiteral",
          "replacement": "fetchedGame",
          "statusReason": "stores/game/useGameStore.ts(33,5): error TS2322: Type 'null' is not assignable to type '{ _id: string; turn: number; phase: { name: \"day\" | \"night\"; tick: number; }; tick: number; status: \"playing\" | \"over\" | \"canceled\"; players: { _id: string; name: string; role: { original: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; current: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; isRevealed: boolean...'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "851",
            "852"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 28
            },
            "start": {
              "column": 9,
              "line": 28
            }
          }
        },
        {
          "id": "2146",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "stores/game/useGameStore.ts(33,5): error TS2322: Type 'Game | null' is not assignable to type '{ _id: string; turn: number; phase: { name: \"day\" | \"night\"; tick: number; }; tick: number; status: \"playing\" | \"over\" | \"canceled\"; players: { _id: string; name: string; role: { original: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; current: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; isRevealed: boolean...'.\n  Type 'null' is not assignable to type '{ _id: string; turn: number; phase: { name: \"day\" | \"night\"; tick: number; }; tick: number; status: \"playing\" | \"over\" | \"canceled\"; players: { _id: string; name: string; role: { original: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; current: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; isRevealed: boolean...'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "851",
            "852"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 28
            },
            "start": {
              "column": 9,
              "line": 28
            }
          }
        },
        {
          "id": "2147",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "stores/game/useGameStore.ts(33,5): error TS2322: Type 'Game | null' is not assignable to type '{ _id: string; turn: number; phase: { name: \"day\" | \"night\"; tick: number; }; tick: number; status: \"playing\" | \"over\" | \"canceled\"; players: { _id: string; name: string; role: { original: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; current: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; isRevealed: boolean...'.\n  Type 'null' is not assignable to type '{ _id: string; turn: number; phase: { name: \"day\" | \"night\"; tick: number; }; tick: number; status: \"playing\" | \"over\" | \"canceled\"; players: { _id: string; name: string; role: { original: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; current: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; isRevealed: boolean...'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "851",
            "852"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 28
            },
            "start": {
              "column": 9,
              "line": 28
            }
          }
        },
        {
          "id": "2148",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "stores/game/useGameStore.ts(29,5): error TS2322: Type 'Game | null' is not assignable to type '{ _id: string; turn: number; phase: { name: \"day\" | \"night\"; tick: number; }; tick: number; status: \"playing\" | \"over\" | \"canceled\"; players: { _id: string; name: string; role: { original: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; current: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; isRevealed: boolean...'.\n  Type 'null' is not assignable to type '{ _id: string; turn: number; phase: { name: \"day\" | \"night\"; tick: number; }; tick: number; status: \"playing\" | \"over\" | \"canceled\"; players: { _id: string; name: string; role: { original: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; current: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; isRevealed: boolean...'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "851"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 32
            },
            "start": {
              "column": 23,
              "line": 28
            }
          }
        },
        {
          "id": "2149",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "stores/game/useGameStore.ts(29,7): error TS2322: Type '\"\"' is not assignable to type 'AsyncDataRequestStatus'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "851"
          ],
          "location": {
            "end": {
              "column": 41,
              "line": 29
            },
            "start": {
              "column": 34,
              "line": 29
            }
          }
        },
        {
          "id": "2150",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "stores/game/useGameStore.ts(34,5): error TS2322: Type '\"\"' is not assignable to type 'AsyncDataRequestStatus'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "852"
          ],
          "location": {
            "end": {
              "column": 41,
              "line": 34
            },
            "start": {
              "column": 32,
              "line": 34
            }
          }
        },
        {
          "id": "2151",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "853"
          ],
          "coveredBy": [
            "853",
            "854"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 47
            },
            "start": {
              "column": 46,
              "line": 37
            }
          }
        },
        {
          "id": "2152",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "stores/game/useGameStore.ts(38,5): error TS2322: Type '\"\"' is not assignable to type 'AsyncDataRequestStatus'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "853",
            "854"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 38
            },
            "start": {
              "column": 33,
              "line": 38
            }
          }
        },
        {
          "id": "2153",
          "mutatorName": "BooleanLiteral",
          "replacement": "canceledGame",
          "statusReason": "stores/game/useGameStore.ts(45,5): error TS2322: Type 'null' is not assignable to type '{ _id: string; turn: number; phase: { name: \"day\" | \"night\"; tick: number; }; tick: number; status: \"playing\" | \"over\" | \"canceled\"; players: { _id: string; name: string; role: { original: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; current: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; isRevealed: boolean...'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "853",
            "854"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 40
            },
            "start": {
              "column": 9,
              "line": 40
            }
          }
        },
        {
          "id": "2154",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "stores/game/useGameStore.ts(45,5): error TS2322: Type 'Game | null' is not assignable to type '{ _id: string; turn: number; phase: { name: \"day\" | \"night\"; tick: number; }; tick: number; status: \"playing\" | \"over\" | \"canceled\"; players: { _id: string; name: string; role: { original: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; current: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; isRevealed: boolean...'.\n  Type 'null' is not assignable to type '{ _id: string; turn: number; phase: { name: \"day\" | \"night\"; tick: number; }; tick: number; status: \"playing\" | \"over\" | \"canceled\"; players: { _id: string; name: string; role: { original: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; current: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; isRevealed: boolean...'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "853",
            "854"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 40
            },
            "start": {
              "column": 9,
              "line": 40
            }
          }
        },
        {
          "id": "2155",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "stores/game/useGameStore.ts(45,5): error TS2322: Type 'Game | null' is not assignable to type '{ _id: string; turn: number; phase: { name: \"day\" | \"night\"; tick: number; }; tick: number; status: \"playing\" | \"over\" | \"canceled\"; players: { _id: string; name: string; role: { original: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; current: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; isRevealed: boolean...'.\n  Type 'null' is not assignable to type '{ _id: string; turn: number; phase: { name: \"day\" | \"night\"; tick: number; }; tick: number; status: \"playing\" | \"over\" | \"canceled\"; players: { _id: string; name: string; role: { original: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; current: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; isRevealed: boolean...'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "853",
            "854"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 40
            },
            "start": {
              "column": 9,
              "line": 40
            }
          }
        },
        {
          "id": "2156",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "stores/game/useGameStore.ts(41,5): error TS2322: Type 'Game | null' is not assignable to type '{ _id: string; turn: number; phase: { name: \"day\" | \"night\"; tick: number; }; tick: number; status: \"playing\" | \"over\" | \"canceled\"; players: { _id: string; name: string; role: { original: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; current: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; isRevealed: boolean...'.\n  Type 'null' is not assignable to type '{ _id: string; turn: number; phase: { name: \"day\" | \"night\"; tick: number; }; tick: number; status: \"playing\" | \"over\" | \"canceled\"; players: { _id: string; name: string; role: { original: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; current: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; isRevealed: boolean...'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "853"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 44
            },
            "start": {
              "column": 24,
              "line": 40
            }
          }
        },
        {
          "id": "2157",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "stores/game/useGameStore.ts(41,7): error TS2322: Type '\"\"' is not assignable to type 'AsyncDataRequestStatus'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "853"
          ],
          "location": {
            "end": {
              "column": 41,
              "line": 41
            },
            "start": {
              "column": 34,
              "line": 41
            }
          }
        },
        {
          "id": "2158",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "stores/game/useGameStore.ts(46,5): error TS2322: Type '\"\"' is not assignable to type 'AsyncDataRequestStatus'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "854"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 46
            },
            "start": {
              "column": 33,
              "line": 46
            }
          }
        },
        {
          "id": "2159",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "855"
          ],
          "coveredBy": [
            "855",
            "856"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 59
            },
            "start": {
              "column": 80,
              "line": 49
            }
          }
        },
        {
          "id": "2160",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "stores/game/useGameStore.ts(50,5): error TS2322: Type '\"\"' is not assignable to type 'AsyncDataRequestStatus'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "855",
            "856"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 50
            },
            "start": {
              "column": 34,
              "line": 50
            }
          }
        },
        {
          "id": "2161",
          "mutatorName": "BooleanLiteral",
          "replacement": "playedGame",
          "statusReason": "stores/game/useGameStore.ts(57,5): error TS2322: Type 'null' is not assignable to type '{ _id: string; turn: number; phase: { name: \"day\" | \"night\"; tick: number; }; tick: number; status: \"playing\" | \"over\" | \"canceled\"; players: { _id: string; name: string; role: { original: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; current: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; isRevealed: boolean...'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "855",
            "856"
          ],
          "location": {
            "end": {
              "column": 20,
              "line": 52
            },
            "start": {
              "column": 9,
              "line": 52
            }
          }
        },
        {
          "id": "2162",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "stores/game/useGameStore.ts(57,5): error TS2322: Type 'Game | null' is not assignable to type '{ _id: string; turn: number; phase: { name: \"day\" | \"night\"; tick: number; }; tick: number; status: \"playing\" | \"over\" | \"canceled\"; players: { _id: string; name: string; role: { original: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; current: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; isRevealed: boolean...'.\n  Type 'null' is not assignable to type '{ _id: string; turn: number; phase: { name: \"day\" | \"night\"; tick: number; }; tick: number; status: \"playing\" | \"over\" | \"canceled\"; players: { _id: string; name: string; role: { original: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; current: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; isRevealed: boolean...'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "855",
            "856"
          ],
          "location": {
            "end": {
              "column": 20,
              "line": 52
            },
            "start": {
              "column": 9,
              "line": 52
            }
          }
        },
        {
          "id": "2163",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "stores/game/useGameStore.ts(57,5): error TS2322: Type 'Game | null' is not assignable to type '{ _id: string; turn: number; phase: { name: \"day\" | \"night\"; tick: number; }; tick: number; status: \"playing\" | \"over\" | \"canceled\"; players: { _id: string; name: string; role: { original: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; current: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; isRevealed: boolean...'.\n  Type 'null' is not assignable to type '{ _id: string; turn: number; phase: { name: \"day\" | \"night\"; tick: number; }; tick: number; status: \"playing\" | \"over\" | \"canceled\"; players: { _id: string; name: string; role: { original: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; current: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; isRevealed: boolean...'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "855",
            "856"
          ],
          "location": {
            "end": {
              "column": 20,
              "line": 52
            },
            "start": {
              "column": 9,
              "line": 52
            }
          }
        },
        {
          "id": "2164",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "stores/game/useGameStore.ts(53,5): error TS2322: Type 'Game | null' is not assignable to type '{ _id: string; turn: number; phase: { name: \"day\" | \"night\"; tick: number; }; tick: number; status: \"playing\" | \"over\" | \"canceled\"; players: { _id: string; name: string; role: { original: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; current: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; isRevealed: boolean...'.\n  Type 'null' is not assignable to type '{ _id: string; turn: number; phase: { name: \"day\" | \"night\"; tick: number; }; tick: number; status: \"playing\" | \"over\" | \"canceled\"; players: { _id: string; name: string; role: { original: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; current: \"werewolf\" | ... 28 more ... | \"devoted-servant\"; isRevealed: boolean...'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "855"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 56
            },
            "start": {
              "column": 22,
              "line": 52
            }
          }
        },
        {
          "id": "2165",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "stores/game/useGameStore.ts(53,7): error TS2322: Type '\"\"' is not assignable to type 'AsyncDataRequestStatus'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "855"
          ],
          "location": {
            "end": {
              "column": 41,
              "line": 53
            },
            "start": {
              "column": 34,
              "line": 53
            }
          }
        },
        {
          "id": "2166",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "stores/game/useGameStore.ts(58,5): error TS2322: Type '\"\"' is not assignable to type 'AsyncDataRequestStatus'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "856"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 58
            },
            "start": {
              "column": 34,
              "line": 58
            }
          }
        },
        {
          "id": "2167",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "tests/unit/specs/components/layouts/default/ParametersMenu/ParametersMenu.nuxt.spec.ts(101,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/layouts/default/ParametersMenu/ParametersMenu.nuxt.spec.ts(109,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/layouts/default/ParametersMenu/ParametersMenu.nuxt.spec.ts(136,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/layouts/default/ParametersMenu/ParametersMenu.nuxt.spec.ts(164,13): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/layouts/default/ParametersMenu/ParametersMenu.nuxt.spec.ts(191,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/layouts/default/ParametersMenu/ParametersMenu.nuxt.spec.ts(195,24): error TS2339: Property 'cancelGame' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GameOver/GameOver.nuxt.spec.ts(82,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GameOver/GameOver.nuxt.spec.ts(91,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GameOver/GameOverVictoryText/GameOverVictoryText.nuxt.spec.ts(87,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GameOver/GameOverVictoryText/GameOverVictoryText.nuxt.spec.ts(148,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GameOver/GameOverVictoryText/GameOverVictoryText.nuxt.spec.ts(209,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GameOver/GameOverWinners/GameOverWinners.nuxt.spec.ts(52,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GameOver/GameOverWinners/GameOverWinners.nuxt.spec.ts(61,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/CurrentPlayExpectedPlayersToAct/CurrentPlayExpectedPlayersToAct.nuxt.spec.ts(52,15): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/CurrentPlayExpectedPlayersToAct/CurrentPlayExpectedPlayersToAct.nuxt.spec.ts(61,15): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/CurrentPlayQuestion/CurrentPlayQuestion.nuxt.spec.ts(211,15): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundContent.nuxt.spec.ts(39,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundContent.nuxt.spec.ts(48,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundContent.nuxt.spec.ts(57,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundContent.nuxt.spec.ts(66,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundContent.nuxt.spec.ts(75,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundContent.nuxt.spec.ts(84,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundContent.nuxt.spec.ts(93,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundContent.nuxt.spec.ts(102,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundContent.nuxt.spec.ts(111,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameBuryDeadBodiesPlayground/GameBuryDeadBodiesPlayground.nuxt.spec.ts(36,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameBuryDeadBodiesPlayground/GameBuryDeadBodiesPlayground.nuxt.spec.ts(58,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameBuryDeadBodiesPlayground/GameBuryDeadBodiesPlayground.nuxt.spec.ts(69,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameBuryDeadBodiesPlayground/GameBuryDeadBodiesPlayground.nuxt.spec.ts(78,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameBuryDeadBodiesPlayground/GameDevotedServantStealsRolePlayground/GameDevotedServantStealsRolePlayground.nuxt.spec.ts(70,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameBuryDeadBodiesPlayground/GameDevotedServantStealsRolePlayground/GameDevotedServantStealsRolePlayground.nuxt.spec.ts(89,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameBuryDeadBodiesPlayground/GameDevotedServantStealsRolePlayground/GameDevotedServantStealsRolePlayground.nuxt.spec.ts(98,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameTargetPlayground/GameTargetPlaygroundTargets/GameTargetPlaygroundTargets.nuxt.spec.ts(36,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameTargetPlayground/GameTargetPlaygroundTargets/GameTargetPlaygroundTargets.nuxt.spec.ts(45,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameTargetPlayground/GameTargetPlaygroundTargets/GameTargetPlaygroundTargets.nuxt.spec.ts(54,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameTargetPlayground/GameTargetPlaygroundTargets/GameTargetPlaygroundTargets.nuxt.spec.ts(63,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameTargetPlayground/GameTargetPlaygroundTargets/GameTargetPlaygroundTargets.nuxt.spec.ts(72,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameTargetPlayground/GameTargetPlaygroundTargets/GameTargetPlaygroundTargets.nuxt.spec.ts(88,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/GameUsePotionsPlayground.nuxt.spec.ts(55,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/GameUsePotionsPlayground.nuxt.spec.ts(64,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/GameUsePotionsPlayground.nuxt.spec.ts(75,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/GameUsePotionsPlayground.nuxt.spec.ts(96,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/WitchUsePotionsTabView/WitchUsePotionsTabView.nuxt.spec.ts(72,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/WitchUsePotionsTabView/WitchUsePotionsTabView.nuxt.spec.ts(94,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/WitchUsePotionsTabView/WitchUsePotionsTabView.nuxt.spec.ts(127,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/WitchUsePotionsTabView/WitchUsePotionsTabView.nuxt.spec.ts(159,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/WitchUsePotionsTabView/WitchUsePotionsTabView.nuxt.spec.ts(197,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/WitchUsePotionsTabView/WitchUsePotionsTabView.nuxt.spec.ts(229,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/WitchUsePotionsTabView/WitchUsePotionsTabView.nuxt.spec.ts(261,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/WitchUsePotionsTabView/WitchUsePotionsTabView.nuxt.spec.ts(299,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameVotePlayground/GameVotePlaygroundVoters/GameVotePlaygroundVoters.nuxt.spec.ts(43,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameVotePlayground/GameVotePlaygroundVoters/GameVotePlaygroundVoters.nuxt.spec.ts(52,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameVotePlayground/GameVotePlaygroundVoters/GameVotePlaygroundVoters.nuxt.spec.ts(61,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameVotePlayground/GameVotePlaygroundVoters/GameVotePlaygroundVoters.nuxt.spec.ts(84,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundHeader/GamePlaygroundHeaderCard/GamePlaygroundHeaderCard.nuxt.spec.ts(91,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundHeader/GamePlaygroundHeaderCard/GamePlaygroundHeaderCard.nuxt.spec.ts(100,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundHeader/GamePlaygroundHeaderCurrentPlay/GamePlaygroundHeaderCurrentPlay.nuxt.spec.ts(44,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundHeader/GamePlaygroundHeaderCurrentPlay/GamePlaygroundHeaderCurrentPlay.nuxt.spec.ts(201,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundHeader/GamePlaygroundHeaderCurrentPlay/GamePlaygroundHeaderCurrentPlay.nuxt.spec.ts(370,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundHeader/GamePlaygroundHeaderPhase/GamePlaygroundHeaderPhase.nuxt.spec.ts(40,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundHeader/GamePlaygroundHeaderPhase/GamePlaygroundHeaderPhase.nuxt.spec.ts(41,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundHeader/GamePlaygroundHeaderPhase/GamePlaygroundHeaderPhase.nuxt.spec.ts(50,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundHeader/GamePlaygroundHeaderPhase/GamePlaygroundHeaderPhase.nuxt.spec.ts(51,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GameTeamSide/GameTeamSide.nuxt.spec.ts(74,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GameTeamSide/GameTeamSide.nuxt.spec.ts(92,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GameTeamSide/GameTeamSide.nuxt.spec.ts(112,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GameTeamSide/GameTeamSide.nuxt.spec.ts(125,74): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GameTeamSide/GameTeamSide.nuxt.spec.ts(126,74): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GameTeamSide/GameTeamSide.nuxt.spec.ts(127,74): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GameTeamSide/GameTeamSide.nuxt.spec.ts(128,74): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GameTeamSide/GameTeamSide.nuxt.spec.ts(134,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GameTeamSide/GameTeamSide.nuxt.spec.ts(147,74): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GameTeamSide/GameTeamSide.nuxt.spec.ts(148,74): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game/GamePlaying/GameTeamSide/GameTeamSide.nuxt.spec.ts(149,74): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/pages/game/game-page.nuxt.spec.ts(29,15): error TS2339: Property 'fetchingGameStatus' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/pages/game/game-page.nuxt.spec.ts(50,22): error TS2339: Property 'fetchAndSetGame' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/pages/game/game-page.nuxt.spec.ts(58,22): error TS2339: Property 'fetchAndSetGame' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/pages/game/game-page.nuxt.spec.ts(74,17): error TS2339: Property 'fetchingGameStatus' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/pages/game/game-page.nuxt.spec.ts(82,17): error TS2339: Property 'fetchingGameStatus' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/pages/game/game-page.nuxt.spec.ts(83,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/pages/game/game-page.nuxt.spec.ts(91,17): error TS2339: Property 'fetchingGameStatus' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/pages/game/game-page.nuxt.spec.ts(92,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/pages/game/game-page.nuxt.spec.ts(100,17): error TS2339: Property 'fetchingGameStatus' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/pages/game/game-page.nuxt.spec.ts(101,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(27,22): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(28,22): error TS2339: Property 'fetchingGameStatus' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(34,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(35,17): error TS2339: Property 'resetGame' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(37,24): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(44,23): error TS2339: Property 'fetchAndSetGame' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(53,23): error TS2339: Property 'fetchAndSetGame' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(55,24): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(62,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(63,23): error TS2339: Property 'cancelGame' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(72,23): error TS2339: Property 'cancelGame' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(74,24): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(81,17): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(83,23): error TS2339: Property 'makeGamePlay' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(93,23): error TS2339: Property 'makeGamePlay' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/useGameStore.spec.ts(95,24): error TS2339: Property 'game' does not exist on type 'Store<StoreIds.GAME, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\n",
          "status": "CompileError",
          "static": true,
          "killedBy": [],
          "coveredBy": [
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213",
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242",
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "310",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "319",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327",
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468",
            "479",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "488",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "596",
            "597",
            "598",
            "599",
            "600",
            "601",
            "602",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634",
            "665",
            "666",
            "667",
            "668",
            "669",
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677",
            "678",
            "679",
            "680",
            "681",
            "682",
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713",
            "726",
            "727",
            "728",
            "729",
            "730",
            "731",
            "732",
            "733",
            "734",
            "735",
            "736",
            "737",
            "738",
            "739",
            "740",
            "845",
            "846",
            "847",
            "848",
            "849",
            "850",
            "851",
            "852",
            "853",
            "854",
            "855",
            "856",
            "926",
            "927",
            "928",
            "929",
            "939",
            "957",
            "958",
            "959",
            "991"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 69
            },
            "start": {
              "column": 10,
              "line": 60
            }
          }
        }
      ],
      "source": "import type { AsyncDataRequestStatus } from \"#app/composables/asyncData\";\nimport { defineStore } from \"pinia\";\n\nimport type { MakeGamePlayDto } from \"~/composables/api/game/dto/make-game-play/make-game-play.dto\";\nimport { Game } from \"~/composables/api/game/types/game.class\";\nimport { useFetchGames } from \"~/composables/api/game/useFetchGames\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\n\nconst useGameStore = defineStore(StoreIds.GAME, () => {\n  const {\n    getGame: fetchGameFromApi,\n    cancelGame: cancelGameFromApi,\n    makeGamePlay: makeGamePlayFromApi,\n  } = useFetchGames();\n\n  const game = ref<Game>(new Game());\n  const fetchingGameStatus = ref<AsyncDataRequestStatus>(\"idle\");\n  const cancelingGameStatus = ref<AsyncDataRequestStatus>(\"idle\");\n  const makingGamePlayStatus = ref<AsyncDataRequestStatus>(\"idle\");\n\n  function resetGame(): void {\n    game.value = new Game();\n  }\n\n  async function fetchAndSetGame(gameId: string): Promise<void> {\n    fetchingGameStatus.value = \"pending\";\n    const fetchedGame = await fetchGameFromApi(gameId);\n    if (!fetchedGame) {\n      fetchingGameStatus.value = \"error\";\n\n      return;\n    }\n    game.value = fetchedGame;\n    fetchingGameStatus.value = \"success\";\n  }\n\n  async function cancelGame(): Promise<void> {\n    cancelingGameStatus.value = \"pending\";\n    const canceledGame = await cancelGameFromApi(game.value._id);\n    if (!canceledGame) {\n      fetchingGameStatus.value = \"error\";\n\n      return;\n    }\n    game.value = canceledGame;\n    cancelingGameStatus.value = \"success\";\n  }\n\n  async function makeGamePlay(makeGamePlayDto: MakeGamePlayDto): Promise<void> {\n    makingGamePlayStatus.value = \"pending\";\n    const playedGame = await makeGamePlayFromApi(game.value._id, makeGamePlayDto);\n    if (!playedGame) {\n      fetchingGameStatus.value = \"error\";\n\n      return;\n    }\n    game.value = playedGame;\n    makingGamePlayStatus.value = \"success\";\n  }\n  return {\n    game,\n    fetchingGameStatus,\n    cancelingGameStatus,\n    makingGamePlayStatus,\n    resetGame,\n    fetchAndSetGame,\n    cancelGame,\n    makeGamePlay,\n  };\n});\n\nexport { useGameStore };"
    },
    "stores/role/useRolesStore.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "2170",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expect(received).toHaveBeenCalledExactlyOnceWith(expected)\n\nExpected mock function to have been called exactly once, but it was called 0 times",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "944"
          ],
          "coveredBy": [
            "944",
            "945"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 20
            },
            "start": {
              "column": 52,
              "line": 16
            }
          }
        },
        {
          "id": "2171",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "stores/role/useRolesStore.ts(17,5): error TS2322: Type '\"\"' is not assignable to type 'AsyncDataRequestStatus'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "944",
            "945"
          ],
          "location": {
            "end": {
              "column": 41,
              "line": 17
            },
            "start": {
              "column": 32,
              "line": 17
            }
          }
        },
        {
          "id": "2172",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "stores/role/useRolesStore.ts(19,5): error TS2322: Type '\"\"' is not assignable to type 'AsyncDataRequestStatus'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "944",
            "945"
          ],
          "location": {
            "end": {
              "column": 41,
              "line": 19
            },
            "start": {
              "column": 32,
              "line": 19
            }
          }
        },
        {
          "id": "2173",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "stores/role/useRolesStore.ts(22,56): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "946",
            "947"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 24
            },
            "start": {
              "column": 73,
              "line": 22
            }
          }
        },
        {
          "id": "2174",
          "mutatorName": "OptionalChaining",
          "replacement": "roles.value.find",
          "statusReason": "stores/role/useRolesStore.ts(23,12): error TS18047: 'roles.value' is possibly 'null'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "946",
            "947"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 23
            },
            "start": {
              "column": 12,
              "line": 23
            }
          }
        },
        {
          "id": "2175",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "123"
          ],
          "coveredBy": [
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "946",
            "947"
          ],
          "location": {
            "end": {
              "column": 60,
              "line": 23
            },
            "start": {
              "column": 30,
              "line": 23
            }
          }
        },
        {
          "id": "2176",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected true to be false // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "124"
          ],
          "coveredBy": [
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "946",
            "947"
          ],
          "location": {
            "end": {
              "column": 60,
              "line": 23
            },
            "start": {
              "column": 38,
              "line": 23
            }
          }
        },
        {
          "id": "2177",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "123"
          ],
          "coveredBy": [
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "946",
            "947"
          ],
          "location": {
            "end": {
              "column": 60,
              "line": 23
            },
            "start": {
              "column": 38,
              "line": 23
            }
          }
        },
        {
          "id": "2178",
          "mutatorName": "EqualityOperator",
          "replacement": "role.name !== roleName",
          "statusReason": "expected false to be true // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "123"
          ],
          "coveredBy": [
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "946",
            "947"
          ],
          "location": {
            "end": {
              "column": 60,
              "line": 23
            },
            "start": {
              "column": 38,
              "line": 23
            }
          }
        },
        {
          "id": "2168",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(29,11): error TS2339: Property 'roles' does not exist on type 'StoreToRefs<Store<StoreIds.ROLES, {}, {}, {}>>'.\ncomposables/api/game/useCreateGameDtoValidation.ts(45,57): error TS7006: Parameter 'role' implicitly has an 'any' type.\ncomposables/api/game/useCreateGameDtoValidation.ts(47,42): error TS7006: Parameter 'role' implicitly has an 'any' type.\ncomposables/api/game/useCreateGameDtoValidation.ts(54,38): error TS7031: Binding element 'name' implicitly has an 'any' type.\ncomposables/api/game/useCreateGameDtoValidation.ts(63,38): error TS7031: Binding element 'name' implicitly has an 'any' type.\nstores/game/create-game-dto/useCreateGameDtoStore.ts(13,11): error TS2339: Property 'getRoleWithNameInRoles' does not exist on type '_StoreWithState<StoreIds.ROLES, {}, {}, {}> & _StoreWithGetters<{}> & PiniaCustomProperties<StoreIds.ROLES, {}, {}, {}> & PiniaCustomStateProperties<...>'.\ntests/unit/specs/app.nuxt.spec.ts(47,23): error TS2339: Property 'fetchAndSetRoles' does not exist on type 'Store<StoreIds.ROLES, {}, {}, {}>'.\ntests/unit/specs/components/pages/about/AboutAvailableRoles/AboutAvailableRoles.nuxt.spec.ts(52,20): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, {}, {}, {}>'.\ntests/unit/specs/components/pages/about/AboutAvailableRoles/AboutAvailableRoles.nuxt.spec.ts(82,20): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyStartGameButton/GameLobbyStartGameButton.nuxt.spec.ts(89,18): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyStartGameButton/GameLobbyStartGameButton.nuxt.spec.ts(104,18): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, {}, {}, {}>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElement.nuxt.spec.ts(180,18): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, {}, {}, {}>'.\ntests/unit/specs/composables/api/game/useCreateGameDtoValidation.spec.ts(23,16): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, {}, {}, {}>'.\ntests/unit/specs/composables/api/game/useCreateGameDtoValidation.spec.ts(231,18): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, {}, {}, {}>'.\ntests/unit/specs/composables/api/game/useCreateGameDtoValidation.spec.ts(275,18): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, {}, {}, {}>'.\ntests/unit/specs/composables/api/game/useCreateGameDtoValidation.spec.ts(326,18): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(197,18): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(273,18): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, {}, {}, {}>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(330,18): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, {}, {}, {}>'.\ntests/unit/specs/stores/role/useRolesStore.spec.ts(28,23): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, {}, {}, {}>'.\ntests/unit/specs/stores/role/useRolesStore.spec.ts(29,23): error TS2339: Property 'fetchingRoleStatus' does not exist on type 'Store<StoreIds.ROLES, {}, {}, {}>'.\ntests/unit/specs/stores/role/useRolesStore.spec.ts(35,24): error TS2339: Property 'fetchAndSetRoles' does not exist on type 'Store<StoreIds.ROLES, {}, {}, {}>'.\ntests/unit/specs/stores/role/useRolesStore.spec.ts(48,24): error TS2339: Property 'fetchAndSetRoles' does not exist on type 'Store<StoreIds.ROLES, {}, {}, {}>'.\ntests/unit/specs/stores/role/useRolesStore.spec.ts(50,25): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, {}, {}, {}>'.\ntests/unit/specs/stores/role/useRolesStore.spec.ts(62,18): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, {}, {}, {}>'.\ntests/unit/specs/stores/role/useRolesStore.spec.ts(63,31): error TS2339: Property 'getRoleWithNameInRoles' does not exist on type 'Store<StoreIds.ROLES, {}, {}, {}>'.\ntests/unit/specs/stores/role/useRolesStore.spec.ts(75,18): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, {}, {}, {}>'.\ntests/unit/specs/stores/role/useRolesStore.spec.ts(76,31): error TS2339: Property 'getRoleWithNameInRoles' does not exist on type 'Store<StoreIds.ROLES, {}, {}, {}>'.\n",
          "status": "CompileError",
          "static": false,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265",
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387",
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428",
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448",
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "469",
            "470",
            "471",
            "472",
            "473",
            "474",
            "475",
            "476",
            "477",
            "478",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511",
            "512",
            "513",
            "514",
            "515",
            "516",
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "603",
            "604",
            "605",
            "606",
            "607",
            "608",
            "609",
            "610",
            "611",
            "612",
            "613",
            "614",
            "615",
            "616",
            "635",
            "636",
            "637",
            "638",
            "639",
            "640",
            "641",
            "651",
            "652",
            "653",
            "654",
            "655",
            "656",
            "657",
            "658",
            "659",
            "660",
            "661",
            "662",
            "663",
            "664",
            "714",
            "715",
            "716",
            "717",
            "718",
            "719",
            "720",
            "721",
            "722",
            "723",
            "724",
            "725",
            "741",
            "742",
            "743",
            "744",
            "745",
            "746",
            "747",
            "748",
            "749",
            "750",
            "751",
            "766",
            "767",
            "768",
            "769",
            "770",
            "771",
            "772",
            "773",
            "774",
            "775",
            "776",
            "777",
            "778",
            "779",
            "780",
            "781",
            "782",
            "783",
            "784",
            "785",
            "786",
            "787",
            "788",
            "789",
            "790",
            "791",
            "792",
            "793",
            "794",
            "795",
            "796",
            "797",
            "798",
            "799",
            "800",
            "801",
            "802",
            "803",
            "804",
            "805",
            "806",
            "807",
            "808",
            "809",
            "810",
            "811",
            "812",
            "813",
            "814",
            "815",
            "923",
            "924",
            "925",
            "943",
            "944",
            "945",
            "946",
            "947",
            "973",
            "974",
            "975",
            "976",
            "990",
            "991",
            "992",
            "993"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 31
            },
            "start": {
              "column": 57,
              "line": 10
            }
          }
        },
        {
          "id": "2169",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "stores/role/useRolesStore.ts(13,58): error TS2345: Argument of type '\"\"' is not assignable to parameter of type 'AsyncDataRequestStatus'.\n",
          "status": "CompileError",
          "static": false,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265",
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387",
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428",
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448",
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "469",
            "470",
            "471",
            "472",
            "473",
            "474",
            "475",
            "476",
            "477",
            "478",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511",
            "512",
            "513",
            "514",
            "515",
            "516",
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "603",
            "604",
            "605",
            "606",
            "607",
            "608",
            "609",
            "610",
            "611",
            "612",
            "613",
            "614",
            "615",
            "616",
            "635",
            "636",
            "637",
            "638",
            "639",
            "640",
            "641",
            "651",
            "652",
            "653",
            "654",
            "655",
            "656",
            "657",
            "658",
            "659",
            "660",
            "661",
            "662",
            "663",
            "664",
            "714",
            "715",
            "716",
            "717",
            "718",
            "719",
            "720",
            "721",
            "722",
            "723",
            "724",
            "725",
            "741",
            "742",
            "743",
            "744",
            "745",
            "746",
            "747",
            "748",
            "749",
            "750",
            "751",
            "766",
            "767",
            "768",
            "769",
            "770",
            "771",
            "772",
            "773",
            "774",
            "775",
            "776",
            "777",
            "778",
            "779",
            "780",
            "781",
            "782",
            "783",
            "784",
            "785",
            "786",
            "787",
            "788",
            "789",
            "790",
            "791",
            "792",
            "793",
            "794",
            "795",
            "796",
            "797",
            "798",
            "799",
            "800",
            "801",
            "802",
            "803",
            "804",
            "805",
            "806",
            "807",
            "808",
            "809",
            "810",
            "811",
            "812",
            "813",
            "814",
            "815",
            "923",
            "924",
            "925",
            "943",
            "944",
            "945",
            "946",
            "947",
            "973",
            "974",
            "975",
            "976",
            "990",
            "991",
            "992",
            "993"
          ],
          "location": {
            "end": {
              "column": 64,
              "line": 13
            },
            "start": {
              "column": 58,
              "line": 13
            }
          }
        },
        {
          "id": "2179",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "composables/api/game/useCreateGameDtoValidation.ts(29,11): error TS2339: Property 'roles' does not exist on type 'StoreToRefs<Store<StoreIds.ROLES, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>>'.\ncomposables/api/game/useCreateGameDtoValidation.ts(45,57): error TS7006: Parameter 'role' implicitly has an 'any' type.\ncomposables/api/game/useCreateGameDtoValidation.ts(47,42): error TS7006: Parameter 'role' implicitly has an 'any' type.\ncomposables/api/game/useCreateGameDtoValidation.ts(54,38): error TS7031: Binding element 'name' implicitly has an 'any' type.\ncomposables/api/game/useCreateGameDtoValidation.ts(63,38): error TS7031: Binding element 'name' implicitly has an 'any' type.\nstores/game/create-game-dto/useCreateGameDtoStore.ts(13,11): error TS2339: Property 'getRoleWithNameInRoles' does not exist on type '_StoreWithState<StoreIds.ROLES, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>> & _UnwrapAll<Pick<{}, never>> & _StoreWithGetters<...> & PiniaCustomProperties<...> & PiniaCustomStateProperties<...>'.\ntests/unit/specs/app.nuxt.spec.ts(47,23): error TS2339: Property 'fetchAndSetRoles' does not exist on type 'Store<StoreIds.ROLES, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/about/AboutAvailableRoles/AboutAvailableRoles.nuxt.spec.ts(52,20): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/about/AboutAvailableRoles/AboutAvailableRoles.nuxt.spec.ts(82,20): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyStartGameButton/GameLobbyStartGameButton.nuxt.spec.ts(89,18): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyStartGameButton/GameLobbyStartGameButton.nuxt.spec.ts(104,18): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElement.nuxt.spec.ts(180,18): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/composables/api/game/useCreateGameDtoValidation.spec.ts(23,16): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/composables/api/game/useCreateGameDtoValidation.spec.ts(231,18): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/composables/api/game/useCreateGameDtoValidation.spec.ts(275,18): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/composables/api/game/useCreateGameDtoValidation.spec.ts(326,18): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(197,18): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(273,18): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts(330,18): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/role/useRolesStore.spec.ts(28,23): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/role/useRolesStore.spec.ts(29,23): error TS2339: Property 'fetchingRoleStatus' does not exist on type 'Store<StoreIds.ROLES, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/role/useRolesStore.spec.ts(35,24): error TS2339: Property 'fetchAndSetRoles' does not exist on type 'Store<StoreIds.ROLES, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/role/useRolesStore.spec.ts(48,24): error TS2339: Property 'fetchAndSetRoles' does not exist on type 'Store<StoreIds.ROLES, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/role/useRolesStore.spec.ts(50,25): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/role/useRolesStore.spec.ts(62,18): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/role/useRolesStore.spec.ts(63,31): error TS2339: Property 'getRoleWithNameInRoles' does not exist on type 'Store<StoreIds.ROLES, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/role/useRolesStore.spec.ts(75,18): error TS2339: Property 'roles' does not exist on type 'Store<StoreIds.ROLES, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\ntests/unit/specs/stores/role/useRolesStore.spec.ts(76,31): error TS2339: Property 'getRoleWithNameInRoles' does not exist on type 'Store<StoreIds.ROLES, _UnwrapAll<Pick<{}, never>>, Pick<{}, never>, Pick<{}, never>>'.\n",
          "status": "CompileError",
          "static": false,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265",
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387",
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428",
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448",
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "469",
            "470",
            "471",
            "472",
            "473",
            "474",
            "475",
            "476",
            "477",
            "478",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511",
            "512",
            "513",
            "514",
            "515",
            "516",
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "603",
            "604",
            "605",
            "606",
            "607",
            "608",
            "609",
            "610",
            "611",
            "612",
            "613",
            "614",
            "615",
            "616",
            "635",
            "636",
            "637",
            "638",
            "639",
            "640",
            "641",
            "651",
            "652",
            "653",
            "654",
            "655",
            "656",
            "657",
            "658",
            "659",
            "660",
            "661",
            "662",
            "663",
            "664",
            "714",
            "715",
            "716",
            "717",
            "718",
            "719",
            "720",
            "721",
            "722",
            "723",
            "724",
            "725",
            "741",
            "742",
            "743",
            "744",
            "745",
            "746",
            "747",
            "748",
            "749",
            "750",
            "751",
            "766",
            "767",
            "768",
            "769",
            "770",
            "771",
            "772",
            "773",
            "774",
            "775",
            "776",
            "777",
            "778",
            "779",
            "780",
            "781",
            "782",
            "783",
            "784",
            "785",
            "786",
            "787",
            "788",
            "789",
            "790",
            "791",
            "792",
            "793",
            "794",
            "795",
            "796",
            "797",
            "798",
            "799",
            "800",
            "801",
            "802",
            "803",
            "804",
            "805",
            "806",
            "807",
            "808",
            "809",
            "810",
            "811",
            "812",
            "813",
            "814",
            "815",
            "923",
            "924",
            "925",
            "943",
            "944",
            "945",
            "946",
            "947",
            "973",
            "974",
            "975",
            "976",
            "990",
            "991",
            "992",
            "993"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 30
            },
            "start": {
              "column": 10,
              "line": 25
            }
          }
        }
      ],
      "source": "import type { AsyncDataRequestStatus } from \"#app/composables/asyncData\";\nimport { defineStore } from \"pinia\";\nimport { ref } from \"vue\";\n\nimport type { Role } from \"~/composables/api/role/types/role.class\";\nimport type { RoleName } from \"~/composables/api/role/types/role.types\";\nimport { useFetchRoles } from \"~/composables/api/role/useFetchRoles\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\n\nconst useRolesStore = defineStore(StoreIds.ROLES, () => {\n  const { fetchRoles } = useFetchRoles();\n\n  const fetchingRoleStatus = ref<AsyncDataRequestStatus>(\"idle\");\n  const roles = ref<Role[] | null>(null);\n\n  async function fetchAndSetRoles(): Promise<void> {\n    fetchingRoleStatus.value = \"pending\";\n    roles.value = await fetchRoles();\n    fetchingRoleStatus.value = \"success\";\n  }\n\n  function getRoleWithNameInRoles(roleName: RoleName): Role | undefined {\n    return roles.value?.find(role => role.name === roleName);\n  }\n  return {\n    roles,\n    fetchingRoleStatus,\n    fetchAndSetRoles,\n    getRoleWithNameInRoles,\n  };\n});\n\nexport { useRolesStore };"
    },
    "utils/url.utils.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "2181",
          "mutatorName": "Regex",
          "replacement": "/\\/+/u",
          "statusReason": "Snapshot `Role Image Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 467,
          "static": true,
          "killedBy": [
            "824"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213",
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242",
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265",
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "288",
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "310",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "319",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327",
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387",
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428",
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448",
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468",
            "469",
            "470",
            "471",
            "472",
            "473",
            "474",
            "475",
            "476",
            "477",
            "478",
            "479",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "488",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511",
            "512",
            "513",
            "514",
            "515",
            "516",
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "596",
            "597",
            "598",
            "599",
            "600",
            "601",
            "602",
            "603",
            "604",
            "605",
            "606",
            "607",
            "608",
            "609",
            "610",
            "611",
            "612",
            "613",
            "614",
            "615",
            "616",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634",
            "635",
            "636",
            "637",
            "638",
            "639",
            "640",
            "641",
            "651",
            "652",
            "653",
            "654",
            "655",
            "656",
            "657",
            "658",
            "659",
            "660",
            "661",
            "662",
            "663",
            "664",
            "665",
            "666",
            "667",
            "668",
            "669",
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677",
            "678",
            "679",
            "680",
            "681",
            "682",
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713",
            "714",
            "715",
            "716",
            "717",
            "718",
            "719",
            "720",
            "721",
            "722",
            "723",
            "724",
            "725",
            "726",
            "727",
            "728",
            "729",
            "730",
            "731",
            "732",
            "733",
            "734",
            "735",
            "736",
            "737",
            "738",
            "739",
            "740",
            "741",
            "742",
            "743",
            "744",
            "745",
            "746",
            "747",
            "748",
            "749",
            "750",
            "751",
            "766",
            "767",
            "768",
            "769",
            "770",
            "771",
            "772",
            "773",
            "774",
            "775",
            "776",
            "777",
            "778",
            "779",
            "780",
            "781",
            "782",
            "783",
            "784",
            "785",
            "786",
            "787",
            "788",
            "789",
            "790",
            "791",
            "792",
            "793",
            "794",
            "795",
            "796",
            "797",
            "798",
            "799",
            "800",
            "801",
            "802",
            "803",
            "804",
            "805",
            "806",
            "807",
            "808",
            "809",
            "810",
            "811",
            "812",
            "813",
            "814",
            "815",
            "824",
            "825",
            "826",
            "827",
            "828",
            "829",
            "830",
            "831",
            "845",
            "846",
            "847",
            "848",
            "864",
            "865",
            "866",
            "904",
            "905",
            "906",
            "907",
            "908",
            "909",
            "923",
            "924",
            "925",
            "926",
            "927",
            "928",
            "929",
            "939",
            "957",
            "958",
            "959",
            "973",
            "974",
            "975",
            "976",
            "990",
            "991",
            "992",
            "993",
            "1079",
            "1106"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 2
            },
            "start": {
              "column": 22,
              "line": 2
            }
          }
        },
        {
          "id": "2182",
          "mutatorName": "Regex",
          "replacement": "/\\/$/u",
          "statusReason": "expected 'https://example.com//' to be 'https://example.com' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 697,
          "static": true,
          "killedBy": [
            "1106"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213",
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242",
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265",
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "288",
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "310",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "319",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327",
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387",
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428",
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448",
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468",
            "469",
            "470",
            "471",
            "472",
            "473",
            "474",
            "475",
            "476",
            "477",
            "478",
            "479",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "488",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511",
            "512",
            "513",
            "514",
            "515",
            "516",
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "596",
            "597",
            "598",
            "599",
            "600",
            "601",
            "602",
            "603",
            "604",
            "605",
            "606",
            "607",
            "608",
            "609",
            "610",
            "611",
            "612",
            "613",
            "614",
            "615",
            "616",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634",
            "635",
            "636",
            "637",
            "638",
            "639",
            "640",
            "641",
            "651",
            "652",
            "653",
            "654",
            "655",
            "656",
            "657",
            "658",
            "659",
            "660",
            "661",
            "662",
            "663",
            "664",
            "665",
            "666",
            "667",
            "668",
            "669",
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677",
            "678",
            "679",
            "680",
            "681",
            "682",
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713",
            "714",
            "715",
            "716",
            "717",
            "718",
            "719",
            "720",
            "721",
            "722",
            "723",
            "724",
            "725",
            "726",
            "727",
            "728",
            "729",
            "730",
            "731",
            "732",
            "733",
            "734",
            "735",
            "736",
            "737",
            "738",
            "739",
            "740",
            "741",
            "742",
            "743",
            "744",
            "745",
            "746",
            "747",
            "748",
            "749",
            "750",
            "751",
            "766",
            "767",
            "768",
            "769",
            "770",
            "771",
            "772",
            "773",
            "774",
            "775",
            "776",
            "777",
            "778",
            "779",
            "780",
            "781",
            "782",
            "783",
            "784",
            "785",
            "786",
            "787",
            "788",
            "789",
            "790",
            "791",
            "792",
            "793",
            "794",
            "795",
            "796",
            "797",
            "798",
            "799",
            "800",
            "801",
            "802",
            "803",
            "804",
            "805",
            "806",
            "807",
            "808",
            "809",
            "810",
            "811",
            "812",
            "813",
            "814",
            "815",
            "824",
            "825",
            "826",
            "827",
            "828",
            "829",
            "830",
            "831",
            "845",
            "846",
            "847",
            "848",
            "864",
            "865",
            "866",
            "904",
            "905",
            "906",
            "907",
            "908",
            "909",
            "923",
            "924",
            "925",
            "926",
            "927",
            "928",
            "929",
            "939",
            "957",
            "958",
            "959",
            "973",
            "974",
            "975",
            "976",
            "990",
            "991",
            "992",
            "993",
            "1079",
            "1106"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 2
            },
            "start": {
              "column": 22,
              "line": 2
            }
          }
        },
        {
          "id": "2183",
          "mutatorName": "StringLiteral",
          "replacement": "\"Stryker was here!\"",
          "statusReason": "expected 'https://example.comStryker was here!' to be 'https://example.com' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 697,
          "static": true,
          "killedBy": [
            "1106"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213",
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242",
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265",
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "288",
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "310",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "319",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327",
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387",
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428",
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448",
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468",
            "469",
            "470",
            "471",
            "472",
            "473",
            "474",
            "475",
            "476",
            "477",
            "478",
            "479",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "488",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511",
            "512",
            "513",
            "514",
            "515",
            "516",
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "596",
            "597",
            "598",
            "599",
            "600",
            "601",
            "602",
            "603",
            "604",
            "605",
            "606",
            "607",
            "608",
            "609",
            "610",
            "611",
            "612",
            "613",
            "614",
            "615",
            "616",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634",
            "635",
            "636",
            "637",
            "638",
            "639",
            "640",
            "641",
            "651",
            "652",
            "653",
            "654",
            "655",
            "656",
            "657",
            "658",
            "659",
            "660",
            "661",
            "662",
            "663",
            "664",
            "665",
            "666",
            "667",
            "668",
            "669",
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677",
            "678",
            "679",
            "680",
            "681",
            "682",
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713",
            "714",
            "715",
            "716",
            "717",
            "718",
            "719",
            "720",
            "721",
            "722",
            "723",
            "724",
            "725",
            "726",
            "727",
            "728",
            "729",
            "730",
            "731",
            "732",
            "733",
            "734",
            "735",
            "736",
            "737",
            "738",
            "739",
            "740",
            "741",
            "742",
            "743",
            "744",
            "745",
            "746",
            "747",
            "748",
            "749",
            "750",
            "751",
            "766",
            "767",
            "768",
            "769",
            "770",
            "771",
            "772",
            "773",
            "774",
            "775",
            "776",
            "777",
            "778",
            "779",
            "780",
            "781",
            "782",
            "783",
            "784",
            "785",
            "786",
            "787",
            "788",
            "789",
            "790",
            "791",
            "792",
            "793",
            "794",
            "795",
            "796",
            "797",
            "798",
            "799",
            "800",
            "801",
            "802",
            "803",
            "804",
            "805",
            "806",
            "807",
            "808",
            "809",
            "810",
            "811",
            "812",
            "813",
            "814",
            "815",
            "824",
            "825",
            "826",
            "827",
            "828",
            "829",
            "830",
            "831",
            "845",
            "846",
            "847",
            "848",
            "864",
            "865",
            "866",
            "904",
            "905",
            "906",
            "907",
            "908",
            "909",
            "923",
            "924",
            "925",
            "926",
            "927",
            "928",
            "929",
            "939",
            "957",
            "958",
            "959",
            "973",
            "974",
            "975",
            "976",
            "990",
            "991",
            "992",
            "993",
            "1079",
            "1106"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 2
            },
            "start": {
              "column": 31,
              "line": 2
            }
          }
        },
        {
          "id": "2180",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "utils/url.utils.ts(1,46): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213",
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242",
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265",
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "288",
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "310",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "319",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327",
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387",
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428",
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448",
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468",
            "469",
            "470",
            "471",
            "472",
            "473",
            "474",
            "475",
            "476",
            "477",
            "478",
            "479",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "488",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511",
            "512",
            "513",
            "514",
            "515",
            "516",
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "596",
            "597",
            "598",
            "599",
            "600",
            "601",
            "602",
            "603",
            "604",
            "605",
            "606",
            "607",
            "608",
            "609",
            "610",
            "611",
            "612",
            "613",
            "614",
            "615",
            "616",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634",
            "635",
            "636",
            "637",
            "638",
            "639",
            "640",
            "641",
            "651",
            "652",
            "653",
            "654",
            "655",
            "656",
            "657",
            "658",
            "659",
            "660",
            "661",
            "662",
            "663",
            "664",
            "665",
            "666",
            "667",
            "668",
            "669",
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677",
            "678",
            "679",
            "680",
            "681",
            "682",
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713",
            "714",
            "715",
            "716",
            "717",
            "718",
            "719",
            "720",
            "721",
            "722",
            "723",
            "724",
            "725",
            "726",
            "727",
            "728",
            "729",
            "730",
            "731",
            "732",
            "733",
            "734",
            "735",
            "736",
            "737",
            "738",
            "739",
            "740",
            "741",
            "742",
            "743",
            "744",
            "745",
            "746",
            "747",
            "748",
            "749",
            "750",
            "751",
            "766",
            "767",
            "768",
            "769",
            "770",
            "771",
            "772",
            "773",
            "774",
            "775",
            "776",
            "777",
            "778",
            "779",
            "780",
            "781",
            "782",
            "783",
            "784",
            "785",
            "786",
            "787",
            "788",
            "789",
            "790",
            "791",
            "792",
            "793",
            "794",
            "795",
            "796",
            "797",
            "798",
            "799",
            "800",
            "801",
            "802",
            "803",
            "804",
            "805",
            "806",
            "807",
            "808",
            "809",
            "810",
            "811",
            "812",
            "813",
            "814",
            "815",
            "824",
            "825",
            "826",
            "827",
            "828",
            "829",
            "830",
            "831",
            "845",
            "846",
            "847",
            "848",
            "864",
            "865",
            "866",
            "904",
            "905",
            "906",
            "907",
            "908",
            "909",
            "923",
            "924",
            "925",
            "926",
            "927",
            "928",
            "929",
            "939",
            "957",
            "958",
            "959",
            "973",
            "974",
            "975",
            "976",
            "990",
            "991",
            "992",
            "993",
            "1079",
            "1106"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 3
            },
            "start": {
              "column": 53,
              "line": 1
            }
          }
        }
      ],
      "source": "function removeTrailingSlashes(url: string): string {\n  return url.replace(/\\/+$/u, \"\");\n}\n\nexport { removeTrailingSlashes };"
    },
    "composables/api/game/dto/create-game/create-game.dto.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1500",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "composables/api/game/dto/create-game/create-game.dto.ts(11,44): error TS2322: Type 'string' is not assignable to type 'CreateGamePlayerDto'.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "32",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265",
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387",
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448",
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511",
            "512",
            "513",
            "514",
            "515",
            "516",
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "603",
            "604",
            "605",
            "606",
            "607",
            "608",
            "609",
            "610",
            "611",
            "612",
            "613",
            "614",
            "615",
            "616",
            "635",
            "636",
            "637",
            "638",
            "639",
            "640",
            "641",
            "651",
            "652",
            "653",
            "654",
            "655",
            "656",
            "657",
            "658",
            "659",
            "660",
            "661",
            "662",
            "663",
            "664",
            "714",
            "715",
            "716",
            "717",
            "718",
            "719",
            "720",
            "721",
            "722",
            "723",
            "724",
            "725",
            "741",
            "742",
            "743",
            "744",
            "745",
            "746",
            "747",
            "748",
            "749",
            "750",
            "751",
            "766",
            "767",
            "768",
            "769",
            "770",
            "771",
            "772",
            "773",
            "774",
            "775",
            "776",
            "777",
            "778",
            "779",
            "780",
            "781",
            "782",
            "783",
            "784",
            "785",
            "786",
            "787",
            "788",
            "789",
            "790",
            "791",
            "792",
            "793",
            "794",
            "795",
            "796",
            "797",
            "798",
            "799",
            "800",
            "801",
            "802",
            "803",
            "804",
            "805",
            "806",
            "807",
            "808",
            "809",
            "810",
            "811",
            "812",
            "813",
            "814",
            "815",
            "816",
            "817",
            "973",
            "974",
            "975",
            "976",
            "1050"
          ],
          "location": {
            "end": {
              "column": 45,
              "line": 11
            },
            "start": {
              "column": 43,
              "line": 11
            }
          }
        },
        {
          "id": "1501",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/dto/create-game/create-game.dto.ts(21,55): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "32",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265",
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387",
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448",
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511",
            "512",
            "513",
            "514",
            "515",
            "516",
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "603",
            "604",
            "605",
            "606",
            "607",
            "608",
            "609",
            "610",
            "611",
            "612",
            "613",
            "614",
            "615",
            "616",
            "635",
            "636",
            "637",
            "638",
            "639",
            "640",
            "641",
            "651",
            "652",
            "653",
            "654",
            "655",
            "656",
            "657",
            "658",
            "659",
            "660",
            "661",
            "662",
            "663",
            "664",
            "714",
            "715",
            "716",
            "717",
            "718",
            "719",
            "720",
            "721",
            "722",
            "723",
            "724",
            "725",
            "741",
            "742",
            "743",
            "744",
            "745",
            "746",
            "747",
            "748",
            "749",
            "750",
            "751",
            "766",
            "767",
            "768",
            "769",
            "770",
            "771",
            "772",
            "773",
            "774",
            "775",
            "776",
            "777",
            "778",
            "779",
            "780",
            "781",
            "782",
            "783",
            "784",
            "785",
            "786",
            "787",
            "788",
            "789",
            "790",
            "791",
            "792",
            "793",
            "794",
            "795",
            "796",
            "797",
            "798",
            "799",
            "800",
            "801",
            "802",
            "803",
            "804",
            "805",
            "806",
            "807",
            "808",
            "809",
            "810",
            "811",
            "812",
            "813",
            "814",
            "815",
            "816",
            "817",
            "973",
            "974",
            "975",
            "976",
            "1050"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 23
            },
            "start": {
              "column": 69,
              "line": 21
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\n\nimport { CreateGameAdditionalCardDto } from \"~/composables/api/game/dto/create-game/create-game-additional-card/create-game-additional-card.dto\";\nimport { CreateGamePlayerDto } from \"~/composables/api/game/dto/create-game/create-game-player/create-game-player.dto\";\nimport { GameOptions } from \"~/composables/api/game/types/game-options/game-options.class\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass CreateGameDto {\n  @Type(() => CreateGamePlayerDto)\n  @Expose()\n  public players: CreateGamePlayerDto[] = [];\n\n  @Type(() => CreateGameAdditionalCardDto)\n  @Expose()\n  public additionalCards?: CreateGameAdditionalCardDto[];\n\n  @Type(() => GameOptions)\n  @Expose()\n  public options: GameOptions;\n\n  public static create(createGameDto: CreateGameDto): CreateGameDto {\n    return plainToInstance(CreateGameDto, createGameDto, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { CreateGameDto };"
    },
    "composables/api/game/types/game-options/game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1577",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-options/game-options.class.ts(20,51): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "32",
            "108",
            "109",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "120",
            "121",
            "273",
            "277",
            "281",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "368",
            "370",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "397",
            "400",
            "401",
            "403",
            "404",
            "409",
            "411",
            "412",
            "413",
            "433",
            "434",
            "439",
            "453",
            "454",
            "459",
            "465",
            "466",
            "467",
            "468",
            "501",
            "505",
            "522",
            "526",
            "531",
            "535",
            "559",
            "563",
            "568",
            "572",
            "607",
            "608",
            "614",
            "615",
            "639",
            "640",
            "655",
            "656",
            "662",
            "663",
            "725",
            "745",
            "770",
            "775",
            "780",
            "785",
            "790",
            "795",
            "800",
            "805",
            "810",
            "815",
            "816",
            "817",
            "850",
            "852",
            "854",
            "856",
            "994",
            "1028",
            "1050"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 22
            },
            "start": {
              "column": 63,
              "line": 20
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\nimport { CompositionGameOptions } from \"~/composables/api/game/types/game-options/composition-game-options/composition-game-options.class\";\nimport { RolesGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/roles-game-options.class\";\nimport { VotesGameOptions } from \"~/composables/api/game/types/game-options/votes-game-options/votes-game-options.class\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass GameOptions {\n  @Type(() => CompositionGameOptions)\n  @Expose()\n  public composition: CompositionGameOptions;\n\n  @Type(() => VotesGameOptions)\n  @Expose()\n  public votes: VotesGameOptions;\n\n  @Type(() => RolesGameOptions)\n  @Expose()\n  public roles: RolesGameOptions;\n\n  public static create(gameOptions: GameOptions): GameOptions {\n    return plainToInstance(GameOptions, gameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { GameOptions };"
    },
    "composables/api/game/types/game-options/composition-game-options/composition-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1576",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-options/composition-game-options/composition-game-options.class.ts(8,73): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "32",
            "108",
            "109",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "120",
            "121",
            "273",
            "277",
            "281",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "368",
            "370",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "397",
            "400",
            "401",
            "403",
            "404",
            "409",
            "411",
            "412",
            "413",
            "433",
            "434",
            "439",
            "453",
            "454",
            "459",
            "465",
            "466",
            "467",
            "468",
            "501",
            "505",
            "522",
            "526",
            "531",
            "535",
            "559",
            "563",
            "568",
            "572",
            "607",
            "608",
            "614",
            "615",
            "639",
            "640",
            "655",
            "656",
            "662",
            "663",
            "725",
            "745",
            "770",
            "775",
            "780",
            "785",
            "790",
            "795",
            "800",
            "805",
            "810",
            "815",
            "816",
            "817",
            "850",
            "852",
            "854",
            "856",
            "994",
            "1028",
            "1050",
            "1090"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 10
            },
            "start": {
              "column": 96,
              "line": 8
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass CompositionGameOptions {\n  @Expose()\n  public isHidden: boolean;\n\n  public static create(compositionGameOptions: CompositionGameOptions): CompositionGameOptions {\n    return plainToInstance(CompositionGameOptions, compositionGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { CompositionGameOptions };"
    },
    "composables/api/game/types/game-options/roles-game-options/actor-game-options/actor-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1578",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-options/roles-game-options/actor-game-options/actor-game-options.class.ts(11,61): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "32",
            "108",
            "109",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "120",
            "121",
            "273",
            "277",
            "281",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "368",
            "370",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "397",
            "400",
            "401",
            "403",
            "404",
            "409",
            "411",
            "412",
            "413",
            "433",
            "434",
            "439",
            "453",
            "454",
            "459",
            "465",
            "466",
            "467",
            "468",
            "501",
            "505",
            "522",
            "526",
            "531",
            "535",
            "559",
            "563",
            "568",
            "572",
            "607",
            "608",
            "614",
            "615",
            "639",
            "640",
            "655",
            "656",
            "662",
            "663",
            "725",
            "745",
            "770",
            "775",
            "780",
            "785",
            "790",
            "795",
            "800",
            "805",
            "810",
            "815",
            "816",
            "817",
            "850",
            "852",
            "854",
            "856",
            "994",
            "1028",
            "1050",
            "1075"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 13
            },
            "start": {
              "column": 78,
              "line": 11
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass ActorGameOptions {\n  @Expose()\n  public isPowerlessOnWerewolvesSide: boolean;\n\n  @Expose()\n  public additionalCardsCount: number;\n\n  public static create(actorGameOptions: ActorGameOptions): ActorGameOptions {\n    return plainToInstance(ActorGameOptions, actorGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { ActorGameOptions };"
    },
    "composables/api/game/types/game-options/roles-game-options/bear-tamer-game-options/bear-tamer-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1579",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-options/roles-game-options/bear-tamer-game-options/bear-tamer-game-options.class.ts(8,69): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "32",
            "108",
            "109",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "120",
            "121",
            "273",
            "277",
            "281",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "368",
            "370",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "397",
            "400",
            "401",
            "403",
            "404",
            "409",
            "411",
            "412",
            "413",
            "433",
            "434",
            "439",
            "453",
            "454",
            "459",
            "465",
            "466",
            "467",
            "468",
            "501",
            "505",
            "522",
            "526",
            "531",
            "535",
            "559",
            "563",
            "568",
            "572",
            "607",
            "608",
            "614",
            "615",
            "639",
            "640",
            "655",
            "656",
            "662",
            "663",
            "725",
            "745",
            "770",
            "775",
            "780",
            "785",
            "790",
            "795",
            "800",
            "805",
            "810",
            "815",
            "816",
            "817",
            "850",
            "852",
            "854",
            "856",
            "994",
            "1028",
            "1050",
            "1085"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 10
            },
            "start": {
              "column": 90,
              "line": 8
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass BearTamerGameOptions {\n  @Expose()\n  public doesGrowlOnWerewolvesSide: boolean;\n\n  public static create(bearTamerGameOptions: BearTamerGameOptions): BearTamerGameOptions {\n    return plainToInstance(BearTamerGameOptions, bearTamerGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { BearTamerGameOptions };"
    },
    "composables/api/game/types/game-options/roles-game-options/big-bad-wolf-options/big-bad-wolf-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1580",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-options/roles-game-options/big-bad-wolf-options/big-bad-wolf-options.class.ts(8,71): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "32",
            "108",
            "109",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "120",
            "121",
            "273",
            "277",
            "281",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "368",
            "370",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "397",
            "400",
            "401",
            "403",
            "404",
            "409",
            "411",
            "412",
            "413",
            "433",
            "434",
            "439",
            "453",
            "454",
            "459",
            "465",
            "466",
            "467",
            "468",
            "501",
            "505",
            "522",
            "526",
            "531",
            "535",
            "559",
            "563",
            "568",
            "572",
            "607",
            "608",
            "614",
            "615",
            "639",
            "640",
            "655",
            "656",
            "662",
            "663",
            "725",
            "745",
            "770",
            "775",
            "780",
            "785",
            "790",
            "795",
            "800",
            "805",
            "810",
            "815",
            "816",
            "817",
            "850",
            "852",
            "854",
            "856",
            "994",
            "1028",
            "1050",
            "1089"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 10
            },
            "start": {
              "column": 93,
              "line": 8
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass BigBadWolfGameOptions {\n  @Expose()\n  public isPowerlessIfWerewolfDies: boolean;\n\n  public static create(bigBadWolfGameOptions: BigBadWolfGameOptions): BigBadWolfGameOptions {\n    return plainToInstance(BigBadWolfGameOptions, bigBadWolfGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { BigBadWolfGameOptions };"
    },
    "composables/api/game/types/game-options/roles-game-options/cupid-game-options/cupid-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1581",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-options/roles-game-options/cupid-game-options/cupid-game-options.class.ts(13,61): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "32",
            "108",
            "109",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "120",
            "121",
            "273",
            "277",
            "281",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "368",
            "370",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "397",
            "400",
            "401",
            "403",
            "404",
            "409",
            "411",
            "412",
            "413",
            "433",
            "434",
            "439",
            "453",
            "454",
            "459",
            "465",
            "466",
            "467",
            "468",
            "501",
            "505",
            "522",
            "526",
            "531",
            "535",
            "559",
            "563",
            "568",
            "572",
            "607",
            "608",
            "614",
            "615",
            "639",
            "640",
            "655",
            "656",
            "662",
            "663",
            "725",
            "745",
            "770",
            "775",
            "780",
            "785",
            "790",
            "795",
            "800",
            "805",
            "810",
            "815",
            "816",
            "817",
            "850",
            "852",
            "854",
            "856",
            "994",
            "1028",
            "1050",
            "1062"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 15
            },
            "start": {
              "column": 78,
              "line": 13
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\nimport { CupidLoversGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/cupid-game-options/cupid-lovers-game-options/cupid-lovers-game-options.class\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass CupidGameOptions {\n  @Type(() => CupidLoversGameOptions)\n  @Expose()\n  public lovers: CupidLoversGameOptions;\n\n  @Expose()\n  public mustWinWithLovers: boolean;\n\n  public static create(cupidGameOptions: CupidGameOptions): CupidGameOptions {\n    return plainToInstance(CupidGameOptions, cupidGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { CupidGameOptions };"
    },
    "composables/api/game/types/game-options/roles-game-options/defender-game-options/defender-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1583",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-options/roles-game-options/defender-game-options/defender-game-options.class.ts(8,67): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "32",
            "108",
            "109",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "120",
            "121",
            "273",
            "277",
            "281",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "368",
            "370",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "397",
            "400",
            "401",
            "403",
            "404",
            "409",
            "411",
            "412",
            "413",
            "433",
            "434",
            "439",
            "453",
            "454",
            "459",
            "465",
            "466",
            "467",
            "468",
            "501",
            "505",
            "522",
            "526",
            "531",
            "535",
            "559",
            "563",
            "568",
            "572",
            "607",
            "608",
            "614",
            "615",
            "639",
            "640",
            "655",
            "656",
            "662",
            "663",
            "725",
            "745",
            "770",
            "775",
            "780",
            "785",
            "790",
            "795",
            "800",
            "805",
            "810",
            "815",
            "816",
            "817",
            "850",
            "852",
            "854",
            "856",
            "994",
            "1028",
            "1050",
            "1091"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 10
            },
            "start": {
              "column": 87,
              "line": 8
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass DefenderGameOptions {\n  @Expose()\n  public canProtectTwice: boolean;\n\n  public static create(defenderGameOptions: DefenderGameOptions): DefenderGameOptions {\n    return plainToInstance(DefenderGameOptions, defenderGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { DefenderGameOptions };"
    },
    "composables/api/game/types/game-options/roles-game-options/elder-game-options/elder-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1584",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-options/roles-game-options/elder-game-options/elder-game-options.class.ts(11,61): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "32",
            "108",
            "109",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "120",
            "121",
            "273",
            "277",
            "281",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "368",
            "370",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "397",
            "400",
            "401",
            "403",
            "404",
            "409",
            "411",
            "412",
            "413",
            "433",
            "434",
            "439",
            "453",
            "454",
            "459",
            "465",
            "466",
            "467",
            "468",
            "501",
            "505",
            "522",
            "526",
            "531",
            "535",
            "559",
            "563",
            "568",
            "572",
            "607",
            "608",
            "614",
            "615",
            "639",
            "640",
            "655",
            "656",
            "662",
            "663",
            "725",
            "745",
            "770",
            "775",
            "780",
            "785",
            "790",
            "795",
            "800",
            "805",
            "810",
            "815",
            "816",
            "817",
            "850",
            "852",
            "854",
            "856",
            "994",
            "1028",
            "1050",
            "1077"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 13
            },
            "start": {
              "column": 78,
              "line": 11
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass ElderGameOptions {\n  @Expose()\n  public livesCountAgainstWerewolves: number;\n\n  @Expose()\n  public doesTakeHisRevenge: boolean;\n\n  public static create(elderGameOptions: ElderGameOptions): ElderGameOptions {\n    return plainToInstance(ElderGameOptions, elderGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { ElderGameOptions };"
    },
    "composables/api/game/types/game-options/roles-game-options/fox-game-options/fox-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1585",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-options/roles-game-options/fox-game-options/fox-game-options.class.ts(8,57): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "32",
            "108",
            "109",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "120",
            "121",
            "273",
            "277",
            "281",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "368",
            "370",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "397",
            "400",
            "401",
            "403",
            "404",
            "409",
            "411",
            "412",
            "413",
            "433",
            "434",
            "439",
            "453",
            "454",
            "459",
            "465",
            "466",
            "467",
            "468",
            "501",
            "505",
            "522",
            "526",
            "531",
            "535",
            "559",
            "563",
            "568",
            "572",
            "607",
            "608",
            "614",
            "615",
            "639",
            "640",
            "655",
            "656",
            "662",
            "663",
            "725",
            "745",
            "770",
            "775",
            "780",
            "785",
            "790",
            "795",
            "800",
            "805",
            "810",
            "815",
            "816",
            "817",
            "850",
            "852",
            "854",
            "856",
            "994",
            "1028",
            "1050",
            "1097"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 10
            },
            "start": {
              "column": 72,
              "line": 8
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass FoxGameOptions {\n  @Expose()\n  public isPowerlessIfMissesWerewolf: boolean;\n\n  public static create(foxGameOptions: FoxGameOptions): FoxGameOptions {\n    return plainToInstance(FoxGameOptions, foxGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { FoxGameOptions };"
    },
    "composables/api/game/types/game-options/roles-game-options/idiot-game-options/idiot-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1586",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-options/roles-game-options/idiot-game-options/idiot-game-options.class.ts(8,61): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "32",
            "108",
            "109",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "120",
            "121",
            "273",
            "277",
            "281",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "368",
            "370",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "397",
            "400",
            "401",
            "403",
            "404",
            "409",
            "411",
            "412",
            "413",
            "433",
            "434",
            "439",
            "453",
            "454",
            "459",
            "465",
            "466",
            "467",
            "468",
            "501",
            "505",
            "522",
            "526",
            "531",
            "535",
            "559",
            "563",
            "568",
            "572",
            "607",
            "608",
            "614",
            "615",
            "639",
            "640",
            "655",
            "656",
            "662",
            "663",
            "725",
            "745",
            "770",
            "775",
            "780",
            "785",
            "790",
            "795",
            "800",
            "805",
            "810",
            "815",
            "816",
            "817",
            "850",
            "852",
            "854",
            "856",
            "994",
            "1028",
            "1050",
            "1096"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 10
            },
            "start": {
              "column": 78,
              "line": 8
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass IdiotGameOptions {\n  @Expose()\n  public doesDieOnElderDeath: boolean;\n\n  public static create(idiotGameOptions: IdiotGameOptions): IdiotGameOptions {\n    return plainToInstance(IdiotGameOptions, idiotGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { IdiotGameOptions };"
    },
    "composables/api/game/types/game-options/roles-game-options/little-girl-game-options/little-girl-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1587",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-options/roles-game-options/little-girl-game-options/little-girl-game-options.class.ts(8,71): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "32",
            "108",
            "109",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "120",
            "121",
            "273",
            "277",
            "281",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "368",
            "370",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "397",
            "400",
            "401",
            "403",
            "404",
            "409",
            "411",
            "412",
            "413",
            "433",
            "434",
            "439",
            "453",
            "454",
            "459",
            "465",
            "466",
            "467",
            "468",
            "501",
            "505",
            "522",
            "526",
            "531",
            "535",
            "559",
            "563",
            "568",
            "572",
            "607",
            "608",
            "614",
            "615",
            "639",
            "640",
            "655",
            "656",
            "662",
            "663",
            "725",
            "745",
            "770",
            "775",
            "780",
            "785",
            "790",
            "795",
            "800",
            "805",
            "810",
            "815",
            "816",
            "817",
            "850",
            "852",
            "854",
            "856",
            "994",
            "1028",
            "1050",
            "1083"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 10
            },
            "start": {
              "column": 93,
              "line": 8
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass LittleGirlGameOptions {\n  @Expose()\n  public isProtectedByDefender: boolean;\n\n  public static create(littleGirlGameOptions: LittleGirlGameOptions): LittleGirlGameOptions {\n    return plainToInstance(LittleGirlGameOptions, littleGirlGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { LittleGirlGameOptions };"
    },
    "composables/api/game/types/game-options/roles-game-options/pied-piper-game-options/pied-piper-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1588",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-options/roles-game-options/pied-piper-game-options/pied-piper-game-options.class.ts(11,69): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "32",
            "108",
            "109",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "120",
            "121",
            "273",
            "277",
            "281",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "368",
            "370",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "397",
            "400",
            "401",
            "403",
            "404",
            "409",
            "411",
            "412",
            "413",
            "433",
            "434",
            "439",
            "453",
            "454",
            "459",
            "465",
            "466",
            "467",
            "468",
            "501",
            "505",
            "522",
            "526",
            "531",
            "535",
            "559",
            "563",
            "568",
            "572",
            "607",
            "608",
            "614",
            "615",
            "639",
            "640",
            "655",
            "656",
            "662",
            "663",
            "725",
            "745",
            "770",
            "775",
            "780",
            "785",
            "790",
            "795",
            "800",
            "805",
            "810",
            "815",
            "816",
            "817",
            "850",
            "852",
            "854",
            "856",
            "994",
            "1028",
            "1050",
            "1071"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 13
            },
            "start": {
              "column": 90,
              "line": 11
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass PiedPiperGameOptions {\n  @Expose()\n  public charmedPeopleCountPerNight: number;\n\n  @Expose()\n  public isPowerlessOnWerewolvesSide: boolean;\n\n  public static create(piedPiperGameOptions: PiedPiperGameOptions): PiedPiperGameOptions {\n    return plainToInstance(PiedPiperGameOptions, piedPiperGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { PiedPiperGameOptions };"
    },
    "composables/api/game/types/game-options/roles-game-options/prejudiced-manipulator-game-options/prejudiced-manipulator-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1589",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-options/roles-game-options/prejudiced-manipulator-game-options/prejudiced-manipulator-game-options.class.ts(8,93): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "32",
            "108",
            "109",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "120",
            "121",
            "273",
            "277",
            "281",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "368",
            "370",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "397",
            "400",
            "401",
            "403",
            "404",
            "409",
            "411",
            "412",
            "413",
            "433",
            "434",
            "439",
            "453",
            "454",
            "459",
            "465",
            "466",
            "467",
            "468",
            "501",
            "505",
            "522",
            "526",
            "531",
            "535",
            "559",
            "563",
            "568",
            "572",
            "607",
            "608",
            "614",
            "615",
            "639",
            "640",
            "655",
            "656",
            "662",
            "663",
            "725",
            "745",
            "770",
            "775",
            "780",
            "785",
            "790",
            "795",
            "800",
            "805",
            "810",
            "815",
            "816",
            "817",
            "850",
            "852",
            "854",
            "856",
            "994",
            "1028",
            "1050"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 10
            },
            "start": {
              "column": 126,
              "line": 8
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass PrejudicedManipulatorGameOptions {\n  @Expose()\n  public isPowerlessOnWerewolvesSide: boolean;\n\n  public static create(prejudicedManipulatorGameOptions: PrejudicedManipulatorGameOptions): PrejudicedManipulatorGameOptions {\n    return plainToInstance(PrejudicedManipulatorGameOptions, prejudicedManipulatorGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { PrejudicedManipulatorGameOptions };"
    },
    "composables/api/game/types/game-options/roles-game-options/scandalmonger-game-options/scandalmongonger-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1591",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-options/roles-game-options/scandalmonger-game-options/scandalmongonger-game-options.class.ts(8,77): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "32",
            "108",
            "109",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "120",
            "121",
            "273",
            "277",
            "281",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "368",
            "370",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "397",
            "400",
            "401",
            "403",
            "404",
            "409",
            "411",
            "412",
            "413",
            "433",
            "434",
            "439",
            "453",
            "454",
            "459",
            "465",
            "466",
            "467",
            "468",
            "501",
            "505",
            "522",
            "526",
            "531",
            "535",
            "559",
            "563",
            "568",
            "572",
            "607",
            "608",
            "614",
            "615",
            "639",
            "640",
            "655",
            "656",
            "662",
            "663",
            "725",
            "745",
            "770",
            "775",
            "780",
            "785",
            "790",
            "795",
            "800",
            "805",
            "810",
            "815",
            "816",
            "817",
            "850",
            "852",
            "854",
            "856",
            "994",
            "1028",
            "1050",
            "1081"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 10
            },
            "start": {
              "column": 102,
              "line": 8
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass ScandalmongerGameOptions {\n  @Expose()\n  public markPenalty: number;\n\n  public static create(scandalmongerGameOptions: ScandalmongerGameOptions): ScandalmongerGameOptions {\n    return plainToInstance(ScandalmongerGameOptions, scandalmongerGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { ScandalmongerGameOptions };"
    },
    "composables/api/game/types/game-options/roles-game-options/seer-game-options/seer-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1592",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-options/roles-game-options/seer-game-options/seer-game-options.class.ts(11,59): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "32",
            "108",
            "109",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "120",
            "121",
            "273",
            "277",
            "281",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "368",
            "370",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "397",
            "400",
            "401",
            "403",
            "404",
            "409",
            "411",
            "412",
            "413",
            "433",
            "434",
            "439",
            "453",
            "454",
            "459",
            "465",
            "466",
            "467",
            "468",
            "501",
            "505",
            "522",
            "526",
            "531",
            "535",
            "559",
            "563",
            "568",
            "572",
            "607",
            "608",
            "614",
            "615",
            "639",
            "640",
            "655",
            "656",
            "662",
            "663",
            "725",
            "745",
            "770",
            "775",
            "780",
            "785",
            "790",
            "795",
            "800",
            "805",
            "810",
            "815",
            "816",
            "817",
            "850",
            "852",
            "854",
            "856",
            "994",
            "1028",
            "1050",
            "1086"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 13
            },
            "start": {
              "column": 75,
              "line": 11
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass SeerGameOptions {\n  @Expose()\n  public isTalkative: boolean;\n\n  @Expose()\n  public canSeeRoles: boolean;\n\n  public static create(seerGameOptions: SeerGameOptions): SeerGameOptions {\n    return plainToInstance(SeerGameOptions, seerGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { SeerGameOptions };"
    },
    "composables/api/game/types/game-options/roles-game-options/sheriff-game-options/sheriff-election-game-options/sheriff-election-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1593",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-options/roles-game-options/sheriff-game-options/sheriff-election-game-options/sheriff-election-game-options.class.ts(12,81): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "32",
            "108",
            "109",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "120",
            "121",
            "273",
            "277",
            "281",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "368",
            "370",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "397",
            "400",
            "401",
            "403",
            "404",
            "409",
            "411",
            "412",
            "413",
            "433",
            "434",
            "439",
            "453",
            "454",
            "459",
            "465",
            "466",
            "467",
            "468",
            "501",
            "505",
            "522",
            "526",
            "531",
            "535",
            "559",
            "563",
            "568",
            "572",
            "607",
            "608",
            "614",
            "615",
            "639",
            "640",
            "655",
            "656",
            "662",
            "663",
            "725",
            "745",
            "770",
            "775",
            "780",
            "785",
            "790",
            "795",
            "800",
            "805",
            "810",
            "815",
            "816",
            "817",
            "850",
            "852",
            "854",
            "856",
            "994",
            "1028",
            "1030",
            "1050",
            "1069"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 14
            },
            "start": {
              "column": 108,
              "line": 12
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\nimport type { GamePhaseName } from \"~/composables/api/game/types/game-phase/game-phase.types\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass SheriffElectionGameOptions {\n  @Expose()\n  public turn: number;\n\n  @Expose()\n  public phaseName: GamePhaseName;\n\n  public static create(sheriffElectionGameOptions: SheriffElectionGameOptions): SheriffElectionGameOptions {\n    return plainToInstance(SheriffElectionGameOptions, sheriffElectionGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { SheriffElectionGameOptions };"
    },
    "composables/api/game/types/game-options/roles-game-options/stuttering-judge-game-options/stuttering-judge-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1595",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-options/roles-game-options/stuttering-judge-game-options/stuttering-judge-game-options.class.ts(8,81): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "32",
            "108",
            "109",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "120",
            "121",
            "273",
            "277",
            "281",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "368",
            "370",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "397",
            "400",
            "401",
            "403",
            "404",
            "409",
            "411",
            "412",
            "413",
            "433",
            "434",
            "439",
            "453",
            "454",
            "459",
            "465",
            "466",
            "467",
            "468",
            "501",
            "505",
            "522",
            "526",
            "531",
            "535",
            "559",
            "563",
            "568",
            "572",
            "607",
            "608",
            "614",
            "615",
            "639",
            "640",
            "655",
            "656",
            "662",
            "663",
            "725",
            "745",
            "770",
            "775",
            "780",
            "785",
            "790",
            "795",
            "800",
            "805",
            "810",
            "815",
            "816",
            "817",
            "850",
            "852",
            "854",
            "856",
            "994",
            "1028",
            "1050",
            "1076"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 10
            },
            "start": {
              "column": 108,
              "line": 8
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass StutteringJudgeGameOptions {\n  @Expose()\n  public voteRequestsCount: number;\n\n  public static create(stutteringJudgeGameOptions: StutteringJudgeGameOptions): StutteringJudgeGameOptions {\n    return plainToInstance(StutteringJudgeGameOptions, stutteringJudgeGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { StutteringJudgeGameOptions };"
    },
    "composables/api/game/types/game-options/roles-game-options/thief-game-options/thief-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1596",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-options/roles-game-options/thief-game-options/thief-game-options.class.ts(14,61): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "32",
            "108",
            "109",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "120",
            "121",
            "273",
            "277",
            "281",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "368",
            "370",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "397",
            "400",
            "401",
            "403",
            "404",
            "409",
            "411",
            "412",
            "413",
            "433",
            "434",
            "439",
            "453",
            "454",
            "459",
            "465",
            "466",
            "467",
            "468",
            "501",
            "505",
            "522",
            "526",
            "531",
            "535",
            "559",
            "563",
            "568",
            "572",
            "607",
            "608",
            "614",
            "615",
            "639",
            "640",
            "655",
            "656",
            "662",
            "663",
            "725",
            "745",
            "770",
            "775",
            "780",
            "785",
            "790",
            "795",
            "800",
            "805",
            "810",
            "815",
            "816",
            "817",
            "850",
            "852",
            "854",
            "856",
            "994",
            "1028",
            "1050",
            "1068"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 16
            },
            "start": {
              "column": 78,
              "line": 14
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass ThiefGameOptions {\n  @Expose()\n  public mustChooseBetweenWerewolves: boolean;\n\n  @Expose()\n  public isChosenCardRevealed: boolean;\n\n  @Expose()\n  public additionalCardsCount: number;\n\n  public static create(thiefGameOptions: ThiefGameOptions): ThiefGameOptions {\n    return plainToInstance(ThiefGameOptions, thiefGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { ThiefGameOptions };"
    },
    "composables/api/game/types/game-options/roles-game-options/three-brothers-game-options/three-brothers-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1597",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-options/roles-game-options/three-brothers-game-options/three-brothers-game-options.class.ts(8,77): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "32",
            "108",
            "109",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "120",
            "121",
            "273",
            "277",
            "281",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "368",
            "370",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "397",
            "400",
            "401",
            "403",
            "404",
            "409",
            "411",
            "412",
            "413",
            "433",
            "434",
            "439",
            "453",
            "454",
            "459",
            "465",
            "466",
            "467",
            "468",
            "501",
            "505",
            "522",
            "526",
            "531",
            "535",
            "559",
            "563",
            "568",
            "572",
            "607",
            "608",
            "614",
            "615",
            "639",
            "640",
            "655",
            "656",
            "662",
            "663",
            "725",
            "745",
            "770",
            "775",
            "780",
            "785",
            "790",
            "795",
            "800",
            "805",
            "810",
            "815",
            "816",
            "817",
            "850",
            "852",
            "854",
            "856",
            "994",
            "1028",
            "1050",
            "1080"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 10
            },
            "start": {
              "column": 102,
              "line": 8
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass ThreeBrothersGameOptions {\n  @Expose()\n  public wakingUpInterval: number;\n\n  public static create(threeBrothersGameOptions: ThreeBrothersGameOptions): ThreeBrothersGameOptions {\n    return plainToInstance(ThreeBrothersGameOptions, threeBrothersGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { ThreeBrothersGameOptions };"
    },
    "composables/api/game/types/game-options/roles-game-options/two-sisters-game-options/two-sisters-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1598",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-options/roles-game-options/two-sisters-game-options/two-sisters-game-options.class.ts(8,71): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "32",
            "108",
            "109",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "120",
            "121",
            "273",
            "277",
            "281",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "368",
            "370",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "397",
            "400",
            "401",
            "403",
            "404",
            "409",
            "411",
            "412",
            "413",
            "433",
            "434",
            "439",
            "453",
            "454",
            "459",
            "465",
            "466",
            "467",
            "468",
            "501",
            "505",
            "522",
            "526",
            "531",
            "535",
            "559",
            "563",
            "568",
            "572",
            "607",
            "608",
            "614",
            "615",
            "639",
            "640",
            "655",
            "656",
            "662",
            "663",
            "725",
            "745",
            "770",
            "775",
            "780",
            "785",
            "790",
            "795",
            "800",
            "805",
            "810",
            "815",
            "816",
            "817",
            "850",
            "852",
            "854",
            "856",
            "994",
            "1028",
            "1050",
            "1088"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 10
            },
            "start": {
              "column": 93,
              "line": 8
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass TwoSistersGameOptions {\n  @Expose()\n  public wakingUpInterval: number;\n\n  public static create(twoSistersGameOptions: TwoSistersGameOptions): TwoSistersGameOptions {\n    return plainToInstance(TwoSistersGameOptions, twoSistersGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { TwoSistersGameOptions };"
    },
    "composables/api/game/types/game-options/roles-game-options/white-werewolf-options/white-werewolf-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1599",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-options/roles-game-options/white-werewolf-options/white-werewolf-game-options.class.ts(8,77): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "32",
            "108",
            "109",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "120",
            "121",
            "273",
            "277",
            "281",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "368",
            "370",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "397",
            "400",
            "401",
            "403",
            "404",
            "409",
            "411",
            "412",
            "413",
            "433",
            "434",
            "439",
            "453",
            "454",
            "459",
            "465",
            "466",
            "467",
            "468",
            "501",
            "505",
            "522",
            "526",
            "531",
            "535",
            "559",
            "563",
            "568",
            "572",
            "607",
            "608",
            "614",
            "615",
            "639",
            "640",
            "655",
            "656",
            "662",
            "663",
            "725",
            "745",
            "770",
            "775",
            "780",
            "785",
            "790",
            "795",
            "800",
            "805",
            "810",
            "815",
            "816",
            "817",
            "850",
            "852",
            "854",
            "856",
            "994",
            "1028",
            "1050",
            "1084"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 10
            },
            "start": {
              "column": 102,
              "line": 8
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass WhiteWerewolfGameOptions {\n  @Expose()\n  public wakingUpInterval: number;\n\n  public static create(whiteWerewolfGameOptions: WhiteWerewolfGameOptions): WhiteWerewolfGameOptions {\n    return plainToInstance(WhiteWerewolfGameOptions, whiteWerewolfGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { WhiteWerewolfGameOptions };"
    },
    "composables/api/game/types/game-options/roles-game-options/wild-child-game-options/wild-child-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1600",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-options/roles-game-options/wild-child-game-options/wild-child-game-options.class.ts(8,69): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "32",
            "108",
            "109",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "120",
            "121",
            "273",
            "277",
            "281",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "368",
            "370",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "397",
            "400",
            "401",
            "403",
            "404",
            "409",
            "411",
            "412",
            "413",
            "433",
            "434",
            "439",
            "453",
            "454",
            "459",
            "465",
            "466",
            "467",
            "468",
            "501",
            "505",
            "522",
            "526",
            "531",
            "535",
            "559",
            "563",
            "568",
            "572",
            "607",
            "608",
            "614",
            "615",
            "639",
            "640",
            "655",
            "656",
            "662",
            "663",
            "725",
            "745",
            "770",
            "775",
            "780",
            "785",
            "790",
            "795",
            "800",
            "805",
            "810",
            "815",
            "816",
            "817",
            "850",
            "852",
            "854",
            "856",
            "994",
            "1028",
            "1050",
            "1087"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 10
            },
            "start": {
              "column": 90,
              "line": 8
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass WildChildGameOptions {\n  @Expose()\n  public isTransformationRevealed: boolean;\n\n  public static create(wildChildGameOptions: WildChildGameOptions): WildChildGameOptions {\n    return plainToInstance(WildChildGameOptions, wildChildGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { WildChildGameOptions };"
    },
    "composables/api/game/types/game-options/roles-game-options/witch-game-options/witch-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1601",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-options/roles-game-options/witch-game-options/witch-game-options.class.ts(8,61): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "32",
            "108",
            "109",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "120",
            "121",
            "273",
            "277",
            "281",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "368",
            "370",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "397",
            "400",
            "401",
            "403",
            "404",
            "409",
            "411",
            "412",
            "413",
            "433",
            "434",
            "439",
            "453",
            "454",
            "459",
            "465",
            "466",
            "467",
            "468",
            "501",
            "505",
            "522",
            "526",
            "531",
            "535",
            "559",
            "563",
            "568",
            "572",
            "607",
            "608",
            "614",
            "615",
            "639",
            "640",
            "655",
            "656",
            "662",
            "663",
            "725",
            "745",
            "770",
            "775",
            "780",
            "785",
            "790",
            "795",
            "800",
            "805",
            "810",
            "815",
            "816",
            "817",
            "850",
            "852",
            "854",
            "856",
            "994",
            "1028",
            "1050",
            "1095"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 10
            },
            "start": {
              "column": 78,
              "line": 8
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass WitchGameOptions {\n  @Expose()\n  public doesKnowWerewolvesTargets: boolean;\n\n  public static create(witchGameOptions: WitchGameOptions): WitchGameOptions {\n    return plainToInstance(WitchGameOptions, witchGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { WitchGameOptions };"
    },
    "composables/api/game/types/game-options/roles-game-options/wolf-hound-game-options/wolf-hound-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1602",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-options/roles-game-options/wolf-hound-game-options/wolf-hound-game-options.class.ts(11,69): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "32",
            "108",
            "109",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "120",
            "121",
            "273",
            "277",
            "281",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "368",
            "370",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "397",
            "400",
            "401",
            "403",
            "404",
            "409",
            "411",
            "412",
            "413",
            "433",
            "434",
            "439",
            "453",
            "454",
            "459",
            "465",
            "466",
            "467",
            "468",
            "501",
            "505",
            "522",
            "526",
            "531",
            "535",
            "559",
            "563",
            "568",
            "572",
            "607",
            "608",
            "614",
            "615",
            "639",
            "640",
            "655",
            "656",
            "662",
            "663",
            "725",
            "745",
            "770",
            "775",
            "780",
            "785",
            "790",
            "795",
            "800",
            "805",
            "810",
            "815",
            "816",
            "817",
            "850",
            "852",
            "854",
            "856",
            "994",
            "1028",
            "1050",
            "1074"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 13
            },
            "start": {
              "column": 90,
              "line": 11
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass WolfHoundGameOptions {\n  @Expose()\n  public isChosenSideRevealed: boolean;\n\n  @Expose()\n  public isSideRandomlyChosen: boolean;\n\n  public static create(wolfHoundGameOptions: WolfHoundGameOptions): WolfHoundGameOptions {\n    return plainToInstance(WolfHoundGameOptions, wolfHoundGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { WolfHoundGameOptions };"
    },
    "composables/api/game/types/game-options/votes-game-options/votes-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1603",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-options/votes-game-options/votes-game-options.class.ts(8,61): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "32",
            "108",
            "109",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "120",
            "121",
            "273",
            "277",
            "281",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "368",
            "370",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "397",
            "400",
            "401",
            "403",
            "404",
            "409",
            "411",
            "412",
            "413",
            "433",
            "434",
            "439",
            "453",
            "454",
            "459",
            "465",
            "466",
            "467",
            "468",
            "501",
            "505",
            "522",
            "526",
            "531",
            "535",
            "559",
            "563",
            "568",
            "572",
            "607",
            "608",
            "614",
            "615",
            "639",
            "640",
            "655",
            "656",
            "662",
            "663",
            "725",
            "745",
            "770",
            "775",
            "780",
            "785",
            "790",
            "795",
            "800",
            "805",
            "810",
            "815",
            "816",
            "817",
            "850",
            "852",
            "854",
            "856",
            "994",
            "1028",
            "1050"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 10
            },
            "start": {
              "column": 78,
              "line": 8
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass VotesGameOptions {\n  @Expose()\n  public canBeSkipped: boolean;\n\n  public static create(votesGameOptions: VotesGameOptions): VotesGameOptions {\n    return plainToInstance(VotesGameOptions, votesGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { VotesGameOptions };"
    },
    "composables/api/game/types/game-options/roles-game-options/cupid-game-options/cupid-lovers-game-options/cupid-lovers-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1582",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-options/roles-game-options/cupid-game-options/cupid-lovers-game-options/cupid-lovers-game-options.class.ts(8,73): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "32",
            "108",
            "109",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "120",
            "121",
            "273",
            "277",
            "281",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "368",
            "370",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "397",
            "400",
            "401",
            "403",
            "404",
            "409",
            "411",
            "412",
            "413",
            "433",
            "434",
            "439",
            "453",
            "454",
            "459",
            "465",
            "466",
            "467",
            "468",
            "501",
            "505",
            "522",
            "526",
            "531",
            "535",
            "559",
            "563",
            "568",
            "572",
            "607",
            "608",
            "614",
            "615",
            "639",
            "640",
            "655",
            "656",
            "662",
            "663",
            "725",
            "745",
            "770",
            "775",
            "780",
            "785",
            "790",
            "795",
            "800",
            "805",
            "810",
            "815",
            "816",
            "817",
            "850",
            "852",
            "854",
            "856",
            "994",
            "1028",
            "1050",
            "1062",
            "1078"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 10
            },
            "start": {
              "column": 96,
              "line": 8
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance } from \"class-transformer\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass CupidLoversGameOptions {\n  @Expose()\n  public doRevealRoleToEachOther: boolean;\n\n  public static create(cupidLoversGameOptions: CupidLoversGameOptions): CupidLoversGameOptions {\n    return plainToInstance(CupidLoversGameOptions, cupidLoversGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { CupidLoversGameOptions };"
    },
    "composables/api/game/types/game-options/roles-game-options/sheriff-game-options/sheriff-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1594",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-options/roles-game-options/sheriff-game-options/sheriff-game-options.class.ts(19,65): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "32",
            "108",
            "109",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "120",
            "121",
            "273",
            "277",
            "281",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "368",
            "370",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "397",
            "400",
            "401",
            "403",
            "404",
            "409",
            "411",
            "412",
            "413",
            "433",
            "434",
            "439",
            "453",
            "454",
            "459",
            "465",
            "466",
            "467",
            "468",
            "501",
            "505",
            "522",
            "526",
            "531",
            "535",
            "559",
            "563",
            "568",
            "572",
            "607",
            "608",
            "614",
            "615",
            "639",
            "640",
            "655",
            "656",
            "662",
            "663",
            "725",
            "745",
            "770",
            "775",
            "780",
            "785",
            "790",
            "795",
            "800",
            "805",
            "810",
            "815",
            "816",
            "817",
            "850",
            "852",
            "854",
            "856",
            "994",
            "1028",
            "1030",
            "1050"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 21
            },
            "start": {
              "column": 84,
              "line": 19
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\nimport { SheriffElectionGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/sheriff-game-options/sheriff-election-game-options/sheriff-election-game-options.class\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass SheriffGameOptions {\n  @Expose()\n  public isEnabled: boolean;\n\n  @Type(() => SheriffElectionGameOptions)\n  @Expose()\n  public electedAt: SheriffElectionGameOptions;\n\n  @Expose()\n  public hasDoubledVote: boolean;\n\n  @Expose()\n  public mustSettleTieInVotes: boolean;\n\n  public static create(sheriffGameOptions: SheriffGameOptions): SheriffGameOptions {\n    return plainToInstance(SheriffGameOptions, sheriffGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { SheriffGameOptions };"
    },
    "composables/api/game/types/game-options/roles-game-options/roles-game-options.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "1590",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "composables/api/game/types/game-options/roles-game-options/roles-game-options.class.ts(121,61): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": true,
          "coveredBy": [
            "32",
            "108",
            "109",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "120",
            "121",
            "273",
            "277",
            "281",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "368",
            "370",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "397",
            "400",
            "401",
            "403",
            "404",
            "409",
            "411",
            "412",
            "413",
            "433",
            "434",
            "439",
            "453",
            "454",
            "459",
            "465",
            "466",
            "467",
            "468",
            "501",
            "505",
            "522",
            "526",
            "531",
            "535",
            "559",
            "563",
            "568",
            "572",
            "607",
            "608",
            "614",
            "615",
            "639",
            "640",
            "655",
            "656",
            "662",
            "663",
            "725",
            "745",
            "770",
            "775",
            "780",
            "785",
            "790",
            "795",
            "800",
            "805",
            "810",
            "815",
            "816",
            "817",
            "850",
            "852",
            "854",
            "856",
            "994",
            "1028",
            "1050"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 123
            },
            "start": {
              "column": 78,
              "line": 121
            }
          }
        }
      ],
      "source": "import { Expose, plainToInstance, Type } from \"class-transformer\";\nimport { ActorGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/actor-game-options/actor-game-options.class\";\nimport { BearTamerGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/bear-tamer-game-options/bear-tamer-game-options.class\";\nimport { BigBadWolfGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/big-bad-wolf-options/big-bad-wolf-options.class\";\nimport { CupidGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/cupid-game-options/cupid-game-options.class\";\nimport { DefenderGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/defender-game-options/defender-game-options.class\";\nimport { ElderGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/elder-game-options/elder-game-options.class\";\nimport { FoxGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/fox-game-options/fox-game-options.class\";\nimport { IdiotGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/idiot-game-options/idiot-game-options.class\";\nimport { LittleGirlGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/little-girl-game-options/little-girl-game-options.class\";\nimport { PiedPiperGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/pied-piper-game-options/pied-piper-game-options.class\";\nimport { PrejudicedManipulatorGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/prejudiced-manipulator-game-options/prejudiced-manipulator-game-options.class\";\nimport { ScandalmongerGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/scandalmonger-game-options/scandalmongonger-game-options.class\";\nimport { SeerGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/seer-game-options/seer-game-options.class\";\nimport { SheriffGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/sheriff-game-options/sheriff-game-options.class\";\nimport { StutteringJudgeGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/stuttering-judge-game-options/stuttering-judge-game-options.class\";\nimport { ThiefGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/thief-game-options/thief-game-options.class\";\nimport { ThreeBrothersGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/three-brothers-game-options/three-brothers-game-options.class\";\nimport { TwoSistersGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/two-sisters-game-options/two-sisters-game-options.class\";\nimport { WhiteWerewolfGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/white-werewolf-options/white-werewolf-game-options.class\";\nimport { WildChildGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/wild-child-game-options/wild-child-game-options.class\";\nimport { WitchGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/witch-game-options/witch-game-options.class\";\nimport { WolfHoundGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/wolf-hound-game-options/wolf-hound-game-options.class\";\nimport { DEFAULT_PLAIN_TO_INSTANCE_OPTIONS } from \"~/utils/constants/class-transformer.constants\";\n\nclass RolesGameOptions {\n  @Expose()\n  public doSkipCallIfNoTarget: boolean;\n\n  @Expose()\n  public areRevealedOnDeath: boolean;\n\n  @Type(() => SheriffGameOptions)\n  @Expose()\n  public sheriff: SheriffGameOptions;\n\n  @Type(() => BigBadWolfGameOptions)\n  @Expose()\n  public bigBadWolf: BigBadWolfGameOptions;\n\n  @Type(() => WhiteWerewolfGameOptions)\n  @Expose()\n  public whiteWerewolf: WhiteWerewolfGameOptions;\n\n  @Type(() => SeerGameOptions)\n  @Expose()\n  public seer: SeerGameOptions;\n\n  @Type(() => CupidGameOptions)\n  @Expose()\n  public cupid: CupidGameOptions;\n\n  @Type(() => LittleGirlGameOptions)\n  @Expose()\n  public littleGirl: LittleGirlGameOptions;\n\n  @Type(() => DefenderGameOptions)\n  @Expose()\n  public defender: DefenderGameOptions;\n\n  @Type(() => ElderGameOptions)\n  @Expose()\n  public elder: ElderGameOptions;\n\n  @Type(() => IdiotGameOptions)\n  @Expose()\n  public idiot: IdiotGameOptions;\n\n  @Type(() => TwoSistersGameOptions)\n  @Expose()\n  public twoSisters: TwoSistersGameOptions;\n\n  @Type(() => ThreeBrothersGameOptions)\n  @Expose()\n  public threeBrothers: ThreeBrothersGameOptions;\n\n  @Type(() => FoxGameOptions)\n  @Expose()\n  public fox: FoxGameOptions;\n\n  @Type(() => BearTamerGameOptions)\n  @Expose()\n  public bearTamer: BearTamerGameOptions;\n\n  @Type(() => StutteringJudgeGameOptions)\n  @Expose()\n  public stutteringJudge: StutteringJudgeGameOptions;\n\n  @Type(() => WildChildGameOptions)\n  @Expose()\n  public wildChild: WildChildGameOptions;\n\n  @Type(() => WolfHoundGameOptions)\n  @Expose()\n  public wolfHound: WolfHoundGameOptions;\n\n  @Type(() => ThiefGameOptions)\n  @Expose()\n  public thief: ThiefGameOptions;\n\n  @Type(() => PiedPiperGameOptions)\n  @Expose()\n  public piedPiper: PiedPiperGameOptions;\n\n  @Type(() => ScandalmongerGameOptions)\n  @Expose()\n  public scandalmonger: ScandalmongerGameOptions;\n\n  @Type(() => WitchGameOptions)\n  @Expose()\n  public witch: WitchGameOptions;\n\n  @Type(() => PrejudicedManipulatorGameOptions)\n  @Expose()\n  public prejudicedManipulator: PrejudicedManipulatorGameOptions;\n\n  @Type(() => ActorGameOptions)\n  @Expose()\n  public actor: ActorGameOptions;\n\n  public static create(rolesGameOptions: RolesGameOptions): RolesGameOptions {\n    return plainToInstance(RolesGameOptions, rolesGameOptions, DEFAULT_PLAIN_TO_INSTANCE_OPTIONS);\n  }\n}\n\nexport { RolesGameOptions };"
    }
  },
  "schemaVersion": "1.0",
  "thresholds": {
    "high": 100,
    "low": 100,
    "break": 100
  },
  "testFiles": {
    "tests/unit/specs/composables/api/game/useCreateGameDtoValidation.spec.ts": {
      "tests": [
        {
          "id": "0",
          "name": "Use Create Game Dto Validation Composable isMinimumPlayersReached 'should return false when the number o…'"
        },
        {
          "id": "1",
          "name": "Use Create Game Dto Validation Composable isMinimumPlayersReached 'should return true when the number of…'"
        },
        {
          "id": "2",
          "name": "Use Create Game Dto Validation Composable areAllRolesSet 'should return true when all roles amo…'"
        },
        {
          "id": "3",
          "name": "Use Create Game Dto Validation Composable areAllRolesSet 'should return false when not all role…'"
        },
        {
          "id": "4",
          "name": "Use Create Game Dto Validation Composable doesContainOneVillagerSidedRole 'should return true when at least one …'"
        },
        {
          "id": "5",
          "name": "Use Create Game Dto Validation Composable doesContainOneVillagerSidedRole 'should return false when no player ha…'"
        },
        {
          "id": "6",
          "name": "Use Create Game Dto Validation Composable doesContainOneWerewolfSidedRole 'should return true when at least one …'"
        },
        {
          "id": "7",
          "name": "Use Create Game Dto Validation Composable doesContainOneWerewolfSidedRole 'should return false when no player ha…'"
        },
        {
          "id": "8",
          "name": "Use Create Game Dto Validation Composable areRolesMinimumPlayersReached 'should return false when roles are se…'"
        },
        {
          "id": "9",
          "name": "Use Create Game Dto Validation Composable areRolesMinimumPlayersReached 'should return true when all roles wit…'"
        },
        {
          "id": "10",
          "name": "Use Create Game Dto Validation Composable areRolesMinimumPlayersReached 'should return false when the minimum …'"
        },
        {
          "id": "11",
          "name": "Use Create Game Dto Validation Composable isTwoSistersRolePresentAndMinimumPlayersReached 'should return false when roles are se…'"
        },
        {
          "id": "12",
          "name": "Use Create Game Dto Validation Composable isTwoSistersRolePresentAndMinimumPlayersReached 'should return true when the two-siste…'"
        },
        {
          "id": "13",
          "name": "Use Create Game Dto Validation Composable isTwoSistersRolePresentAndMinimumPlayersReached 'should return false when the two-sist…'"
        },
        {
          "id": "14",
          "name": "Use Create Game Dto Validation Composable isThreeBrothersRolePresentAndMinimumPlayersReached 'should return false when roles are se…'"
        },
        {
          "id": "15",
          "name": "Use Create Game Dto Validation Composable isThreeBrothersRolePresentAndMinimumPlayersReached 'should return true when the three-bro…'"
        },
        {
          "id": "16",
          "name": "Use Create Game Dto Validation Composable isThreeBrothersRolePresentAndMinimumPlayersReached 'should return false when the three-br…'"
        },
        {
          "id": "17",
          "name": "Use Create Game Dto Validation Composable areAdditionalCardsSetForThiefIfPresent 'should return true when the thief is …'"
        },
        {
          "id": "18",
          "name": "Use Create Game Dto Validation Composable areAdditionalCardsSetForThiefIfPresent 'should return false when the thief is…'"
        },
        {
          "id": "19",
          "name": "Use Create Game Dto Validation Composable areAdditionalCardsSetForActorIfPresent 'should return true when the actor is …'"
        },
        {
          "id": "20",
          "name": "Use Create Game Dto Validation Composable areAdditionalCardsSetForActorIfPresent 'should return false when the actor is…'"
        },
        {
          "id": "21",
          "name": "Use Create Game Dto Validation Composable arePlayerGroupsSetForPrejudicedManipulatorIfPresent 'should return true when the prejudice…'"
        },
        {
          "id": "22",
          "name": "Use Create Game Dto Validation Composable arePlayerGroupsSetForPrejudicedManipulatorIfPresent 'should return false when the prejudic…'"
        },
        {
          "id": "23",
          "name": "Use Create Game Dto Validation Composable canCreateGame 'should return false when the minimum …'"
        },
        {
          "id": "24",
          "name": "Use Create Game Dto Validation Composable canCreateGame 'should return false when not all role…'"
        },
        {
          "id": "25",
          "name": "Use Create Game Dto Validation Composable canCreateGame 'should return false when no player ha…'"
        },
        {
          "id": "26",
          "name": "Use Create Game Dto Validation Composable canCreateGame 'should return false when there are no…'"
        },
        {
          "id": "27",
          "name": "Use Create Game Dto Validation Composable canCreateGame 'should return false when the thief is…'"
        },
        {
          "id": "28",
          "name": "Use Create Game Dto Validation Composable canCreateGame 'should return false when the actor is…'"
        },
        {
          "id": "29",
          "name": "Use Create Game Dto Validation Composable canCreateGame 'should return false when the prejudic…'"
        },
        {
          "id": "30",
          "name": "Use Create Game Dto Validation Composable canCreateGame 'should return true when game can be c…'"
        },
        {
          "id": "31",
          "name": "Use Create Game Dto Validation Composable gameCreationValidationErrors 'should contain specific error message…'"
        },
        {
          "id": "32",
          "name": "Use Create Game Dto Validation Composable gameCreationValidationErrors should return empty array when game can be created."
        },
        {
          "id": "33",
          "name": "Use Create Game Dto Validation Composable isRolePresentAndMinimumPlayersReached 'should return true when the role is p…'"
        },
        {
          "id": "34",
          "name": "Use Create Game Dto Validation Composable isRolePresentAndMinimumPlayersReached 'should return false when the role is …'"
        },
        {
          "id": "35",
          "name": "Use Create Game Dto Validation Composable isRolePresentAndMinimumPlayersReached 'should return true when the role is n…'"
        }
      ],
      "source": "import { createPinia, setActivePinia } from \"pinia\";\nimport type { Ref } from \"vue\";\n\nimport type { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport { useCreateGameDtoValidation } from \"~/composables/api/game/useCreateGameDtoValidation\";\nimport type { Role } from \"~/composables/api/role/types/role.class\";\nimport { useRolesStore } from \"~/stores/role/useRolesStore\";\nimport { createFakeCreateGameAdditionalCardDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game-additional-card/create-game-additional-card.dto.factory\";\nimport { createFakeCreateGamePlayerDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game-player/create-game-player.dto.factory\";\nimport { createFakeCreateGameDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\nimport { createFakeRole } from \"~/tests/unit/utils/factories/composables/api/role/role.factory\";\n\ndescribe(\"Use Create Game Dto Validation Composable\", () => {\n  const defaultRoles = [\n    createFakeRole({ name: \"werewolf\" }),\n    createFakeRole({ name: \"two-sisters\", minInGame: 2 }),\n    createFakeRole({ name: \"three-brothers\", minInGame: 3 }),\n  ];\n\n  beforeEach(() => {\n    setActivePinia(createPinia());\n    const rolesStore = useRolesStore();\n    rolesStore.roles = defaultRoles;\n  });\n\n  const validCreateGameDto = createFakeCreateGameDto({\n    players: [\n      createFakeCreateGamePlayerDto({\n        name: \"Player 1\",\n        role: { name: \"werewolf\" },\n        side: { current: \"werewolves\" },\n      }),\n      createFakeCreateGamePlayerDto({\n        name: \"Player 2\",\n        role: { name: \"werewolf\" },\n        side: { current: \"werewolves\" },\n      }),\n      createFakeCreateGamePlayerDto({\n        name: \"Player 3\",\n        role: { name: \"werewolf\" },\n        side: { current: \"werewolves\" },\n      }),\n      createFakeCreateGamePlayerDto({\n        name: \"Player 4\",\n        role: { name: \"villager\" },\n        side: { current: \"villagers\" },\n      }),\n    ],\n  });\n\n  describe(\"isMinimumPlayersReached\", () => {\n    it.each<{\n      test: string;\n      createGameDto: Ref<CreateGameDto>;\n      expected: boolean;\n    }>([\n      {\n        test: \"should return false when the number of players is less than the minimum number of players in a game.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto(),\n            createFakeCreateGamePlayerDto(),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return true when the number of players is greater than or equal to the minimum number of players in a game.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto(),\n            createFakeCreateGamePlayerDto(),\n            createFakeCreateGamePlayerDto(),\n            createFakeCreateGamePlayerDto(),\n          ],\n        })),\n        expected: true,\n      },\n    ])(\"$test\", ({ createGameDto, expected }) => {\n      const { isMinimumPlayersReached } = useCreateGameDtoValidation(createGameDto);\n\n      expect(isMinimumPlayersReached.value).toBe(expected);\n    });\n  });\n\n  describe(\"areAllRolesSet\", () => {\n    it.each<{\n      test: string;\n      createGameDto: Ref<CreateGameDto>;\n      expected: boolean;\n    }>([\n      {\n        test: \"should return true when all roles among players are set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expected: true,\n      },\n      {\n        test: \"should return false when not all roles among players are set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto(),\n          ],\n        })),\n        expected: false,\n      },\n    ])(\"$test\", ({ createGameDto, expected }) => {\n      const { areAllRolesSet } = useCreateGameDtoValidation(createGameDto);\n\n      expect(areAllRolesSet.value).toBe(expected);\n    });\n  });\n\n  describe(\"doesContainOneVillagerSidedRole\", () => {\n    it.each<{\n      test: string;\n      createGameDto: Ref<CreateGameDto>;\n      expected: boolean;\n    }>([\n      {\n        test: \"should return true when at least one player has a villager sided role.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"villager\" }, side: { current: \"villagers\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n          ],\n        })),\n        expected: true,\n      },\n      {\n        test: \"should return false when no player has a villager sided role.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n          ],\n        })),\n        expected: false,\n      },\n    ])(\"$test\", ({ createGameDto, expected }) => {\n      const { doesContainOneVillagerSidedRole } = useCreateGameDtoValidation(createGameDto);\n\n      expect(doesContainOneVillagerSidedRole.value).toBe(expected);\n    });\n  });\n\n  describe(\"doesContainOneWerewolfSidedRole\", () => {\n    it.each<{\n      test: string;\n      createGameDto: Ref<CreateGameDto>;\n      expected: boolean;\n    }>([\n      {\n        test: \"should return true when at least one player has a werewolf sided role.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"villager\" }, side: { current: \"villagers\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n          ],\n        })),\n        expected: true,\n      },\n      {\n        test: \"should return false when no player has a werewolf sided role.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"villager\" }, side: { current: \"villagers\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"villager\" }, side: { current: \"villagers\" } }),\n          ],\n        })),\n        expected: false,\n      },\n    ])(\"$test\", ({ createGameDto, expected }) => {\n      const { doesContainOneWerewolfSidedRole } = useCreateGameDtoValidation(createGameDto);\n\n      expect(doesContainOneWerewolfSidedRole.value).toBe(expected);\n    });\n  });\n\n  describe(\"areRolesMinimumPlayersReached\", () => {\n    it.each<{\n      test: string;\n      roles: Role[] | null;\n      createGameDto: Ref<CreateGameDto>;\n      expected: boolean;\n    }>([\n      {\n        test: \"should return false when roles are set to null.\",\n        roles: null,\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"two-sisters\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"two-sisters\" } }),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return true when all roles with minimum players are present and the minimum number of players is reached.\",\n        roles: defaultRoles,\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"two-sisters\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"two-sisters\" } }),\n          ],\n        })),\n        expected: true,\n      },\n      {\n        test: \"should return false when the minimum number of players is not reached.\",\n        roles: defaultRoles,\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"two-sisters\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expected: false,\n      },\n    ])(\"$test\", ({ createGameDto, roles, expected }) => {\n      const rolesStore = useRolesStore();\n      rolesStore.roles = roles;\n      const { areRolesMinimumPlayersReached } = useCreateGameDtoValidation(createGameDto);\n\n      expect(areRolesMinimumPlayersReached.value).toBe(expected);\n    });\n  });\n\n  describe(\"isTwoSistersRolePresentAndMinimumPlayersReached\", () => {\n    it.each<{\n      test: string;\n      roles: Role[] | null;\n      createGameDto: Ref<CreateGameDto>;\n      expected: boolean;\n    }>([\n      {\n        test: \"should return false when roles are set to null.\",\n        roles: null,\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"two-sisters\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"two-sisters\" } }),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return true when the two-sisters role is present and the minimum number of players is reached.\",\n        roles: defaultRoles,\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"two-sisters\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"two-sisters\" } }),\n          ],\n        })),\n        expected: true,\n      },\n      {\n        test: \"should return false when the two-sisters role is present but the minimum number of players is not reached.\",\n        roles: defaultRoles,\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({ players: [createFakeCreateGamePlayerDto({ role: { name: \"two-sisters\" } })] })),\n        expected: false,\n      },\n    ])(\"$test\", ({ createGameDto, roles, expected }) => {\n      const rolesStore = useRolesStore();\n      rolesStore.roles = roles;\n      const { isTwoSistersRolePresentAndMinimumPlayersReached } = useCreateGameDtoValidation(createGameDto);\n\n      expect(isTwoSistersRolePresentAndMinimumPlayersReached.value).toBe(expected);\n    });\n  });\n\n  describe(\"isThreeBrothersRolePresentAndMinimumPlayersReached\", () => {\n    it.each<{\n      test: string;\n      roles: Role[] | null;\n      createGameDto: Ref<CreateGameDto>;\n      expected: boolean;\n    }>([\n      {\n        test: \"should return false when roles are set to null.\",\n        roles: null,\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"three-brothers\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"three-brothers\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"three-brothers\" } }),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return true when the three-brothers role is present and the minimum number of players is reached.\",\n        roles: defaultRoles,\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"three-brothers\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"three-brothers\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"three-brothers\" } }),\n          ],\n        })),\n        expected: true,\n      },\n      {\n        test: \"should return false when the three-brothers role is present but the minimum number of players is not reached.\",\n        roles: defaultRoles,\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"three-brothers\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"three-brothers\" } }),\n          ],\n        })),\n        expected: false,\n      },\n    ])(\"$test\", ({ createGameDto, roles, expected }) => {\n      const rolesStore = useRolesStore();\n      rolesStore.roles = roles;\n      const { isThreeBrothersRolePresentAndMinimumPlayersReached } = useCreateGameDtoValidation(createGameDto);\n\n      expect(isThreeBrothersRolePresentAndMinimumPlayersReached.value).toBe(expected);\n    });\n  });\n\n  describe(\"areAdditionalCardsSetForThiefIfPresent\", () => {\n    it.each<{\n      test: string;\n      createGameDto: Ref<CreateGameDto>;\n      expected: boolean;\n    }>([\n      {\n        test: \"should return true when the thief is not present.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"villager\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expected: true,\n      },\n      {\n        test: \"should return true when the thief is present and additional cards are set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"thief\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n          additionalCards: [\n            createFakeCreateGameAdditionalCardDto({ recipient: \"thief\" }),\n            createFakeCreateGameAdditionalCardDto({ recipient: \"actor\" }),\n          ],\n        })),\n        expected: true,\n      },\n      {\n        test: \"should return false when the thief is present and additional cards are not set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"thief\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return false when the thief is present but additional cards are for the actor.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"thief\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n          additionalCards: [\n            createFakeCreateGameAdditionalCardDto({ recipient: \"actor\" }),\n            createFakeCreateGameAdditionalCardDto({ recipient: \"actor\" }),\n          ],\n        })),\n        expected: false,\n      },\n    ])(\"$test\", ({ createGameDto, expected }) => {\n      const { areAdditionalCardsSetForThiefIfPresent } = useCreateGameDtoValidation(createGameDto);\n\n      expect(areAdditionalCardsSetForThiefIfPresent.value).toBe(expected);\n    });\n  });\n\n  describe(\"areAdditionalCardsSetForActorIfPresent\", () => {\n    it.each<{\n      test: string;\n      createGameDto: Ref<CreateGameDto>;\n      expected: boolean;\n    }>([\n      {\n        test: \"should return true when the actor is not present.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"villager\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expected: true,\n      },\n      {\n        test: \"should return true when the actor is present and additional cards are set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"actor\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n          additionalCards: [\n            createFakeCreateGameAdditionalCardDto({ recipient: \"thief\" }),\n            createFakeCreateGameAdditionalCardDto({ recipient: \"actor\" }),\n          ],\n        })),\n        expected: true,\n      },\n      {\n        test: \"should return false when the actor is present and additional cards are not set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"actor\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return false when the actor is present but additional cards are for the thief.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"actor\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n          additionalCards: [\n            createFakeCreateGameAdditionalCardDto({ recipient: \"thief\" }),\n            createFakeCreateGameAdditionalCardDto({ recipient: \"thief\" }),\n          ],\n        })),\n        expected: false,\n      },\n    ])(\"$test\", ({ createGameDto, expected }) => {\n      const { areAdditionalCardsSetForActorIfPresent } = useCreateGameDtoValidation(createGameDto);\n\n      expect(areAdditionalCardsSetForActorIfPresent.value).toBe(expected);\n    });\n  });\n\n  describe(\"arePlayerGroupsSetForPrejudicedManipulatorIfPresent\", () => {\n    it.each<{\n      test: string;\n      createGameDto: Ref<CreateGameDto>;\n      expected: boolean;\n    }>([\n      {\n        test: \"should return true when the prejudiced manipulator is not present.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({\n              role: { name: \"villager\" },\n              group: \"group 1\",\n            }),\n            createFakeCreateGamePlayerDto({\n              role: { name: \"werewolf\" },\n              group: \"group 2\",\n            }),\n          ],\n        })),\n        expected: true,\n      },\n      {\n        test: \"should return true when the prejudiced manipulator is present and player groups are set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({\n              role: { name: \"prejudiced-manipulator\" },\n              group: \"group 1\",\n            }),\n            createFakeCreateGamePlayerDto({\n              role: { name: \"werewolf\" },\n              group: \"group 2\",\n            }),\n          ],\n        })),\n        expected: true,\n      },\n      {\n        test: \"should return false when the prejudiced manipulator is present and player groups are not set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"prejudiced-manipulator\" } }),\n            createFakeCreateGamePlayerDto({\n              role: { name: \"werewolf\" },\n              group: \"group 2\",\n            }),\n          ],\n        })),\n        expected: false,\n      },\n    ])(\"$test\", ({ createGameDto, expected }) => {\n      const { arePlayerGroupsSetForPrejudicedManipulatorIfPresent } = useCreateGameDtoValidation(createGameDto);\n\n      expect(arePlayerGroupsSetForPrejudicedManipulatorIfPresent.value).toBe(expected);\n    });\n  });\n\n  describe(\"canCreateGame\", () => {\n    it.each<{\n      test: string;\n      createGameDto: Ref<CreateGameDto>;\n      expected: boolean;\n    }>([\n      {\n        test: \"should return false when the minimum of players are not set in game.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"villager\" }, side: { current: \"villagers\" } }),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return false when not all roles among players are set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"villager\" }, side: { current: \"villagers\" } }),\n            createFakeCreateGamePlayerDto(),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return false when no player has a villager sided role.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return false when no player has a werewolf sided role.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({\n              role: { name: \"villager\" },\n              side: { current: \"villagers\" },\n            }),\n            createFakeCreateGamePlayerDto({\n              role: { name: \"villager\" },\n              side: { current: \"villagers\" },\n            }),\n            createFakeCreateGamePlayerDto({\n              role: { name: \"villager\" },\n              side: { current: \"villagers\" },\n            }),\n            createFakeCreateGamePlayerDto({\n              role: { name: \"villager\" },\n              side: { current: \"villagers\" },\n            }),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return false when there are not enough players for the two-sisters role.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"two-sisters\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return false when the thief is present but additional cards are not set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"thief\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return false when the actor is present but additional cards are not set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"actor\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return false when the prejudiced manipulator is present and player groups are not set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"prejudiced-manipulator\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expected: false,\n      },\n      {\n        test: \"should return true when game can be created.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto(validCreateGameDto)),\n        expected: true,\n      },\n    ])(\"$test\", ({ createGameDto, expected }) => {\n      const { canCreateGame } = useCreateGameDtoValidation(createGameDto);\n\n      expect(canCreateGame.value).toBe(expected);\n    });\n  });\n\n  describe(\"gameCreationValidationErrors\", () => {\n    it.each<{\n      test: string;\n      createGameDto: Ref<CreateGameDto>;\n      expectedItem: string;\n    }>([\n      {\n        test: \"should contain specific error message when the minimum of players are not set in game.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"villager\" }, side: { current: \"villagers\" } }),\n          ],\n        })),\n        expectedItem: \"composables.useCreateGameDtoValidation.minimumOfPlayersNotReached\",\n      },\n      {\n        test: \"should contain specific error message when not all roles among players are set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto(),\n          ],\n        })),\n        expectedItem: \"composables.useCreateGameDtoValidation.notAllRolesAreSet\",\n      },\n      {\n        test: \"should contain specific error message when no player has a villager sided role.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" }, side: { current: \"werewolves\" } }),\n          ],\n        })),\n        expectedItem: \"composables.useCreateGameDtoValidation.noVillagerSidedRole\",\n      },\n      {\n        test: \"should contain specific error message when no player has a werewolf sided role.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({\n              role: { name: \"villager\" },\n              side: { current: \"villagers\" },\n            }),\n            createFakeCreateGamePlayerDto({\n              role: { name: \"villager\" },\n              side: { current: \"villagers\" },\n            }),\n            createFakeCreateGamePlayerDto({\n              role: { name: \"villager\" },\n              side: { current: \"villagers\" },\n            }),\n            createFakeCreateGamePlayerDto({\n              role: { name: \"villager\" },\n              side: { current: \"villagers\" },\n            }),\n          ],\n        })),\n        expectedItem: \"composables.useCreateGameDtoValidation.noWerewolfSidedRole\",\n      },\n      {\n        test: \"should contain specific error message when there are not enough players for the two-sisters role.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"two-sisters\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expectedItem: \"composables.useCreateGameDtoValidation.twoSistersMinimumPlayersNotReached\",\n      },\n      {\n        test: \"should contain specific error message when there are not enough players for the three-brothers role.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"three-brothers\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"three-brothers\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expectedItem: \"composables.useCreateGameDtoValidation.threeBrothersMinimumPlayersNotReached\",\n      },\n      {\n        test: \"should contain specific error message when the thief is present but additional cards are not set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"thief\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expectedItem: \"composables.useCreateGameDtoValidation.thiefAdditionalCardsNotSet\",\n      },\n      {\n        test: \"should contain specific error message when the actor is present but additional cards are not set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"actor\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expectedItem: \"composables.useCreateGameDtoValidation.actorAdditionalCardsNotSet\",\n      },\n      {\n        test: \"should contain specific error message when the prejudiced manipulator is present and player groups are not set.\",\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ role: { name: \"prejudiced-manipulator\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n            createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } }),\n          ],\n        })),\n        expectedItem: \"composables.useCreateGameDtoValidation.prejudicedManipulatorGroupsNotSet\",\n      },\n    ])(\"$test\", ({ createGameDto, expectedItem }) => {\n      const { gameCreationValidationErrors } = useCreateGameDtoValidation(createGameDto);\n\n      expect(gameCreationValidationErrors.value).toContain(expectedItem);\n    });\n\n    it(\"should return empty array when game can be created.\", () => {\n      const createGameDto = ref<CreateGameDto>(createFakeCreateGameDto(validCreateGameDto));\n      const { gameCreationValidationErrors } = useCreateGameDtoValidation(createGameDto);\n\n      expect(gameCreationValidationErrors.value).toStrictEqual([]);\n    });\n  });\n\n  describe(\"isRolePresentAndMinimumPlayersReached\", () => {\n    it.each<{\n      test: string;\n      role: Role & { minInGame: number };\n      createGameDto: Ref<CreateGameDto>;\n      expected: boolean;\n    }>([\n      {\n        test: \"should return true when the role is present and the minimum number of players is reached.\",\n        role: createFakeRole({ name: \"werewolf\", minInGame: 1 }) as Role & { minInGame: number },\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({ players: [createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } })] })),\n        expected: true,\n      },\n      {\n        test: \"should return false when the role is present but the minimum number of players is not reached.\",\n        role: createFakeRole({ name: \"werewolf\", minInGame: 2 }) as Role & { minInGame: number },\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({ players: [createFakeCreateGamePlayerDto({ role: { name: \"werewolf\" } })] })),\n        expected: false,\n      },\n      {\n        test: \"should return true when the role is not present.\",\n        role: createFakeRole({ name: \"werewolf\", minInGame: 1 }) as Role & { minInGame: number },\n        createGameDto: ref<CreateGameDto>(createFakeCreateGameDto({ players: [createFakeCreateGamePlayerDto({ role: { name: \"villager\" } })] })),\n        expected: true,\n      },\n    ])(\"$test\", ({ role, createGameDto, expected }) => {\n      const { isRolePresentAndMinimumPlayersReached } = useCreateGameDtoValidation(createGameDto);\n\n      expect(isRolePresentAndMinimumPlayersReached(role)).toBe(expected);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordAction/GameOverHistoryRecordAction.nuxt.spec.ts": {
      "tests": [
        {
          "id": "36",
          "name": "Game Over History Record Action Component should match snapshot when rendered."
        },
        {
          "id": "37",
          "name": "Game Over History Record Action Component Action Text 'should have skipped text when game hi…'"
        },
        {
          "id": "38",
          "name": "Game Over History Record Action Component Action Text 'should have infected text when game h…'"
        },
        {
          "id": "39",
          "name": "Game Over History Record Action Component Action Text 'should have chose card text when game…'"
        },
        {
          "id": "40",
          "name": "Game Over History Record Action Component Action Text 'should have growled text when game hi…'"
        },
        {
          "id": "41",
          "name": "Game Over History Record Action Component Action Text 'should have ate text when game histor…'"
        },
        {
          "id": "42",
          "name": "Game Over History Record Action Component Action Text 'should have met each other text when …'"
        },
        {
          "id": "43",
          "name": "Game Over History Record Action Component Action Text 'should have made fall in love text wh…'"
        },
        {
          "id": "44",
          "name": "Game Over History Record Action Component Action Text 'should have protected text when game …'"
        },
        {
          "id": "45",
          "name": "Game Over History Record Action Component Action Text 'should have sniffed text when game hi…'"
        },
        {
          "id": "46",
          "name": "Game Over History Record Action Component Action Text 'should have shot text when game histo…'"
        },
        {
          "id": "47",
          "name": "Game Over History Record Action Component Action Text 'should have charmed text when game hi…'"
        },
        {
          "id": "48",
          "name": "Game Over History Record Action Component Action Text 'should have marked with feather text …'"
        },
        {
          "id": "49",
          "name": "Game Over History Record Action Component Action Text 'should have banned from votes text wh…'"
        },
        {
          "id": "50",
          "name": "Game Over History Record Action Component Action Text 'should have seen text when game histo…'"
        },
        {
          "id": "51",
          "name": "Game Over History Record Action Component Action Text 'should have delegated text when game …'"
        },
        {
          "id": "52",
          "name": "Game Over History Record Action Component Action Text 'should have settled votes text when g…'"
        },
        {
          "id": "53",
          "name": "Game Over History Record Action Component Action Text 'should have requested another vote te…'"
        },
        {
          "id": "54",
          "name": "Game Over History Record Action Component Action Text 'should have voted text when game hist…'"
        },
        {
          "id": "55",
          "name": "Game Over History Record Action Component Action Text 'should have buried dead bodies text w…'"
        },
        {
          "id": "56",
          "name": "Game Over History Record Action Component Action Text 'should have elected as sheriff text w…'"
        },
        {
          "id": "57",
          "name": "Game Over History Record Action Component Action Text 'should have chose as model text when …'"
        },
        {
          "id": "58",
          "name": "Game Over History Record Action Component Action Text 'should have used potions text when ga…'"
        },
        {
          "id": "59",
          "name": "Game Over History Record Action Component Action Text 'should have chose side text when game…'"
        },
        {
          "id": "60",
          "name": "Game Over History Record Action Component Action Text 'should have unknown play text when ga…'"
        },
        {
          "id": "61",
          "name": "Game Over History Record Action Component Action Icon 'should have skipped icon when game hi…'"
        },
        {
          "id": "62",
          "name": "Game Over History Record Action Component Action Icon 'should have exclamation mark icon whe…'"
        },
        {
          "id": "63",
          "name": "Game Over History Record Action Component Action Icon 'should have people icon when game his…'"
        },
        {
          "id": "64",
          "name": "Game Over History Record Action Component Action Icon 'should have arrow right icon when gam…'"
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport type { GameOverHistoryRecordActionProps } from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordAction/game-over-history-record-action.types\";\nimport GameOverHistoryRecordAction from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordAction/GameOverHistoryRecordAction.vue\";\nimport type { GameHistoryRecord } from \"~/composables/api/game/types/game-history-record/game-history-record.class\";\nimport { createFakeGameHistoryRecordPlaySource } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-source/game-history-record-play-source.factory\";\nimport { createFakeGameHistoryRecordPlayTarget } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-target/game-history-record-play-target.factory\";\nimport { createFakeGameHistoryRecordPlay } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play.factory\";\nimport { createFakeGameHistoryRecord } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Over History Record Action Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameOverHistoryRecordAction>>;\n  const defaultGameOverHistoryRecord = createFakeGameHistoryRecord({\n    play: createFakeGameHistoryRecordPlay({\n      action: \"vote\",\n      type: \"vote\",\n    }),\n  });\n  const defaultProps: GameOverHistoryRecordActionProps = { gameHistoryRecord: defaultGameOverHistoryRecord };\n\n  async function mountGameOverHistoryRecordActionComponent(options: ComponentMountingOptions<typeof GameOverHistoryRecordAction> = {}):\n  Promise<ReturnType<typeof mount<typeof GameOverHistoryRecordAction>>> {\n    return mountSuspendedComponent(GameOverHistoryRecordAction, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameOverHistoryRecordActionComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Action Text\", () => {\n    it.each<{\n      gameHistoryRecord: GameHistoryRecord;\n      expectedText: string;\n      test: string;\n    }>([\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"survivors\" }),\n            action: \"vote\",\n            type: \"vote\",\n            votes: undefined,\n          }),\n        }),\n        expectedText: \"components.GameOverHistoryRecordAction.skippedTurn\",\n        test: \"should have skipped text when game history record action is skipped.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"accursed-wolf-father\" }),\n            action: \"infect\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedText: \"components.GameOverHistoryRecordAction.infected\",\n        test: \"should have infected text when game history record action is infected.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"actor\" }),\n            action: \"choose-card\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedText: \"components.GameOverHistoryRecordAction.choseCard\",\n        test: \"should have chose card text when game history record action is chose card.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"bear-tamer\" }),\n            action: \"growl\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedText: \"components.GameOverHistoryRecordAction.growled\",\n        test: \"should have growled text when game history record action is growled.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"big-bad-wolf\" }),\n            action: \"eat\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedText: \"components.GameOverHistoryRecordAction.ate\",\n        test: \"should have ate text when game history record action is ate.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"charmed\" }),\n            action: \"meet-each-other\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedText: \"components.GameOverHistoryRecordAction.metEachOther\",\n        test: \"should have met each other text when game history record action is met each other.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"cupid\" }),\n            action: \"charm\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedText: \"components.GameOverHistoryRecordAction.madeFallInLove\",\n        test: \"should have made fall in love text when game history record action is made fall in love.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"defender\" }),\n            action: \"protect\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedText: \"components.GameOverHistoryRecordAction.protected\",\n        test: \"should have protected text when game history record action is protected.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"fox\" }),\n            action: \"sniff\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedText: \"components.GameOverHistoryRecordAction.sniffed\",\n        test: \"should have sniffed text when game history record action is sniffed.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"hunter\" }),\n            action: \"shoot\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedText: \"components.GameOverHistoryRecordAction.shot\",\n        test: \"should have shot text when game history record action is shot.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"lovers\" }),\n            action: \"meet-each-other\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedText: \"components.GameOverHistoryRecordAction.metEachOther\",\n        test: \"should have met each other text when game history record action is met each other.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"pied-piper\" }),\n            action: \"charm\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedText: \"components.GameOverHistoryRecordAction.charmed\",\n        test: \"should have charmed text when game history record action is charmed.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"scandalmonger\" }),\n            action: \"mark\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedText: \"components.GameOverHistoryRecordAction.markedWithFeather\",\n        test: \"should have marked with feather text when game history record action is marked with feather.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"scapegoat\" }),\n            action: \"ban-voting\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedText: \"components.GameOverHistoryRecordAction.bannedFromVotes\",\n        test: \"should have banned from votes text when game history record action is banned from votes.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"seer\" }),\n            action: \"look\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedText: \"components.GameOverHistoryRecordAction.seen\",\n        test: \"should have seen text when game history record action is seen.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"sheriff\" }),\n            action: \"delegate\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedText: \"components.GameOverHistoryRecordAction.delegated\",\n        test: \"should have delegated text when game history record action is delegated.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"sheriff\" }),\n            action: \"settle-votes\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedText: \"components.GameOverHistoryRecordAction.settledVotes\",\n        test: \"should have settled votes text when game history record action is settled votes.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"stuttering-judge\" }),\n            action: \"request-another-vote\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedText: \"components.GameOverHistoryRecordAction.requestedAnotherVote\",\n        test: \"should have requested another vote text when game history record action is requested another vote.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"survivors\" }),\n            action: \"vote\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedText: \"components.GameOverHistoryRecordAction.voted\",\n        test: \"should have voted text when game history record action is voted.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"survivors\" }),\n            action: \"bury-dead-bodies\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedText: \"components.GameOverHistoryRecordAction.buriedDeadBodies\",\n        test: \"should have buried dead bodies text when game history record action is buried dead bodies.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"survivors\" }),\n            action: \"elect-sheriff\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedText: \"components.GameOverHistoryRecordAction.electedAsSheriff\",\n        test: \"should have elected as sheriff text when game history record action is elected as sheriff.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"survivors\" }),\n            action: \"vote\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedText: \"components.GameOverHistoryRecordAction.voted\",\n        test: \"should have voted text when game history record action is voted.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"thief\" }),\n            action: \"choose-card\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedText: \"components.GameOverHistoryRecordAction.choseCard\",\n        test: \"should have chose card text when game history record action is chose card.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"three-brothers\" }),\n            action: \"meet-each-other\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedText: \"components.GameOverHistoryRecordAction.metEachOther\",\n        test: \"should have met each other text when game history record action is met each other.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"two-sisters\" }),\n            action: \"meet-each-other\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedText: \"components.GameOverHistoryRecordAction.metEachOther\",\n        test: \"should have met each other text when game history record action is met each other.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"werewolves\" }),\n            action: \"eat\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedText: \"components.GameOverHistoryRecordAction.ate\",\n        test: \"should have ate text when game history record action is ate.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"white-werewolf\" }),\n            action: \"eat\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedText: \"components.GameOverHistoryRecordAction.ate\",\n        test: \"should have ate text when game history record action is ate.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"wild-child\" }),\n            action: \"choose-model\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedText: \"components.GameOverHistoryRecordAction.choseAsModel\",\n        test: \"should have chose as model text when game history record action is chose as model.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"witch\" }),\n            action: \"use-potions\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedText: \"components.GameOverHistoryRecordAction.usedPotions\",\n        test: \"should have used potions text when game history record action is used potions.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"wolf-hound\" }),\n            action: \"choose-side\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedText: \"components.GameOverHistoryRecordAction.choseSide\",\n        test: \"should have chose side text when game history record action is chose side.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"bear-tamer\" }),\n            action: \"eat\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedText: \"components.GameOverHistoryRecordAction.unknownGamePlay\",\n        test: \"should have unknown play text when game history record action is unknown.\",\n      },\n    ])(\"$test\", async({ gameHistoryRecord, expectedText }) => {\n      wrapper = await mountGameOverHistoryRecordActionComponent({ props: { gameHistoryRecord } });\n\n      const actionText = wrapper.find(\"#game-over-history-record-action-text\");\n\n      expect(actionText.text()).toBe(expectedText);\n    });\n  });\n\n  describe(\"Action Icon\", () => {\n    it.each<{\n      gameHistoryRecord: GameHistoryRecord;\n      expectedIconSrc: string;\n      test: string;\n    }>([\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"survivors\" }),\n            action: \"vote\",\n            type: \"vote\",\n            votes: undefined,\n          }),\n        }),\n        expectedIconSrc: \"/svg/game/player/player-attribute/powerless.svg\",\n        test: \"should have skipped icon when game history record action is skipped.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"bear-tamer\" }),\n            action: \"growl\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedIconSrc: \"/svg/misc/exclamation-mark.svg\",\n        test: \"should have exclamation mark icon when game history record action is growled.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"stuttering-judge\" }),\n            action: \"request-another-vote\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedIconSrc: \"/svg/misc/exclamation-mark.svg\",\n        test: \"should have exclamation mark icon when game history record action is requested another vote.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"survivors\" }),\n            action: \"meet-each-other\",\n            type: \"no-action\",\n          }),\n        }),\n        expectedIconSrc: \"/svg/misc/people.svg\",\n        test: \"should have people icon when game history record action is met each other.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            source: createFakeGameHistoryRecordPlaySource({ name: \"werewolves\" }),\n            action: \"eat\",\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expectedIconSrc: \"/svg/misc/arrow-right.svg\",\n        test: \"should have arrow right icon when game history record action is ate.\",\n      },\n    ])(\"$test\", async({ gameHistoryRecord, expectedIconSrc }) => {\n      wrapper = await mountGameOverHistoryRecordActionComponent({ props: { gameHistoryRecord } });\n\n      const actionIcon = wrapper.find(\"[alt='Action icon']\");\n\n      expect(actionIcon.attributes(\"src\")).toBe(expectedIconSrc);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.nuxt.spec.ts": {
      "tests": [
        {
          "id": "65",
          "name": "Game Playground Player Card Component should match snapshot when rendered."
        },
        {
          "id": "66",
          "name": "Game Playground Player Card Component Player Card should have player name as props when rendered."
        },
        {
          "id": "67",
          "name": "Game Playground Player Card Component Player Card should have current player role as props when rendered."
        },
        {
          "id": "68",
          "name": "Game Playground Player Card Component Player Card should not be selected when player is not in make game play dto targets."
        },
        {
          "id": "69",
          "name": "Game Playground Player Card Component Player Card should be selected when player is in make game play dto targets."
        },
        {
          "id": "70",
          "name": "Game Playground Player Card Component Player Card Click on Player Card should do nothing when player can't be targeted because game play is null."
        },
        {
          "id": "71",
          "name": "Game Playground Player Card Component Player Card Click on Player Card should do nothing when player can't be targeted because game play type is not target."
        },
        {
          "id": "72",
          "name": "Game Playground Player Card Component Player Card Click on Player Card should do nothing when player can't be targeted because interaction is not found."
        },
        {
          "id": "73",
          "name": "Game Playground Player Card Component Player Card Click on Player Card should not call remove first make game play target dto when player is targeted but there are no current play."
        },
        {
          "id": "74",
          "name": "Game Playground Player Card Component Player Card Click on Player Card should remove first make game play target dto when interaction is life potion and there is already one target for life potion."
        },
        {
          "id": "75",
          "name": "Game Playground Player Card Component Player Card Click on Player Card should add player to make game play dto targets with drank life potion when player can be targeted and is not already with death targets."
        },
        {
          "id": "76",
          "name": "Game Playground Player Card Component Player Card Click on Player Card should add player to make game play dto targets with drank life potion when player can be targeted and is not already without death targets."
        },
        {
          "id": "77",
          "name": "Game Playground Player Card Component Player Card Click on Player Card should remove first make game play target dto when interaction is death potion and there is already one target for death potion."
        },
        {
          "id": "78",
          "name": "Game Playground Player Card Component Player Card Click on Player Card should add player to make game play dto targets with drank death potion when player can be targeted and is not already with life targets."
        },
        {
          "id": "79",
          "name": "Game Playground Player Card Component Player Card Click on Player Card should add player to make game play dto targets with drank death potion when player can be targeted and is not already without life targets."
        },
        {
          "id": "80",
          "name": "Game Playground Player Card Component Player Card Click on Player Card should add player to make game play dto targets when player can be targeted and is not already."
        },
        {
          "id": "81",
          "name": "Game Playground Player Card Component Player Card Click on Player Card should not call remove first make game play target dto when player is targeted but there are no eligible targets."
        },
        {
          "id": "82",
          "name": "Game Playground Player Card Component Player Card Click on Player Card should remove player from make game play dto targets when player can be targeted and is already."
        },
        {
          "id": "83",
          "name": "Game Playground Player Card Component Player Card Click on Player Card should remove first player from make game play dto targets when player can be targeted and max targets are reached."
        },
        {
          "id": "84",
          "name": "Game Playground Player Card Component Vote Input should render vote input when game current play is vote type."
        },
        {
          "id": "85",
          "name": "Game Playground Player Card Component Vote Input should not render vote input when game current play is not vote type."
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport type { GamePlaygroundPlayerCardProps } from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/game-playground-player-card.types\";\nimport GamePlaygroundPlayerCard from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.vue\";\nimport type GamePlaygroundPlayerCardVoteInput from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCardVoteInput/GamePlaygroundPlayerCardVoteInput.vue\";\nimport type PlayerCard from \"~/components/shared/game/player/PlayerCard/PlayerCard.vue\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\nimport { useMakeGamePlayDtoStore } from \"~/stores/game/make-game-play-dto/useMakeGamePlayDtoStore\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\nimport { createFakeMakeGamePlayTargetDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/make-game-play/make-game-play-target/make-game-play-target.dto.factory\";\nimport { createFakeGamePlaySourceInteractionBoundaries } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction-boundaries/game-play-source-interaction-boundaries.factory\";\nimport { createFakeGamePlaySourceInteraction } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction.factory\";\nimport { createFakeGamePlaySource } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source.factory\";\nimport { createFakeGamePlaySurvivorsElectSheriff, createFakeGamePlayWerewolvesEat, createFakeGamePlayWitchUsesPotions } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play.factory\";\nimport { createFakeGame } from \"~/tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { createFakeSeerAlivePlayer } from \"~/tests/unit/utils/factories/composables/api/game/player/player-with-role.factory\";\nimport { createFakePlayer } from \"~/tests/unit/utils/factories/composables/api/game/player/player.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Playground Player Card Component\", () => {\n  const player = createFakeSeerAlivePlayer({ name: \"Antoine\" });\n  let wrapper: ReturnType<typeof mount<typeof GamePlaygroundPlayerCard>>;\n  const testingPinia = { initialState: { [StoreIds.GAME]: { game: createFakeGame() } } };\n  const defaultProps: GamePlaygroundPlayerCardProps = {\n    player,\n    interaction: \"eat\",\n  };\n\n  async function mountGamePlaygroundPlayerCardComponent(options: ComponentMountingOptions<typeof GamePlaygroundPlayerCard> = {}):\n  Promise<ReturnType<typeof mount<typeof GamePlaygroundPlayerCard>>> {\n    return mountSuspendedComponent(GamePlaygroundPlayerCard, {\n      props: defaultProps,\n      global: { plugins: [createTestingPinia(testingPinia)] },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGamePlaygroundPlayerCardComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Player Card\", () => {\n    it(\"should have player name as props when rendered.\", () => {\n      const playerCard = wrapper.findComponent<typeof PlayerCard>(\"#player-card\");\n\n      expect(playerCard.props(\"playerName\")).toBe(player.name);\n    });\n\n    it(\"should have current player role as props when rendered.\", () => {\n      const playerCard = wrapper.findComponent<typeof PlayerCard>(\"#player-card\");\n\n      expect(playerCard.props(\"playerRole\")).toBe(player.role.current);\n    });\n\n    it(\"should not be selected when player is not in make game play dto targets.\", async() => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      makeGamePlayDtoStore.makeGamePlayDto.targets = undefined;\n      await nextTick();\n      const playerCard = wrapper.findComponent<typeof PlayerCard>(\"#player-card\");\n\n      expect(playerCard.props(\"isSelected\")).toBeFalsy();\n    });\n\n    it(\"should be selected when player is in make game play dto targets.\", async() => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      const players = [\n        player,\n        createFakeSeerAlivePlayer({ name: \"Benoit\" }),\n        createFakeSeerAlivePlayer({ name: \"Alex\" }),\n      ];\n      makeGamePlayDtoStore.makeGamePlayDto.targets = [\n        createFakeMakeGamePlayTargetDto({ playerId: players[0]._id }),\n        createFakeMakeGamePlayTargetDto({ playerId: players[1]._id }),\n        createFakeMakeGamePlayTargetDto({ playerId: players[2]._id }),\n      ];\n      await nextTick();\n      const playerCard = wrapper.findComponent<typeof PlayerCard>(\"#player-card\");\n\n      expect(playerCard.props(\"isSelected\")).toBeTruthy();\n    });\n\n    describe(\"Click on Player Card\", () => {\n      it(\"should do nothing when player can't be targeted because game play is null.\", async() => {\n        const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n        const gameStore = useGameStore();\n        gameStore.game.currentPlay = null;\n        await nextTick();\n        const playerCard = wrapper.findComponent<typeof PlayerCard>(\"#player-card\");\n        (playerCard.vm as VueVm).$emit(\"player-card-selector-click\");\n\n        expect(makeGamePlayDtoStore.addMakeGamePlayTargetDto).not.toHaveBeenCalled();\n      });\n\n      it(\"should do nothing when player can't be targeted because game play type is not target.\", async() => {\n        const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n        const gameStore = useGameStore();\n        gameStore.game.currentPlay = createFakeGamePlaySurvivorsElectSheriff({\n          source: createFakeGamePlaySource({\n            interactions: [\n              createFakeGamePlaySourceInteraction({\n                type: \"eat\",\n                eligibleTargets: [player],\n              }),\n            ],\n          }),\n        });\n        await nextTick();\n        const playerCard = wrapper.findComponent<typeof PlayerCard>(\"#player-card\");\n        (playerCard.vm as VueVm).$emit(\"player-card-selector-click\");\n\n        expect(makeGamePlayDtoStore.addMakeGamePlayTargetDto).not.toHaveBeenCalled();\n      });\n\n      it(\"should do nothing when player can't be targeted because interaction is not found.\", async() => {\n        const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n        const gameStore = useGameStore();\n        gameStore.game.currentPlay = createFakeGamePlayWerewolvesEat({\n          source: createFakeGamePlaySource({\n            interactions: [\n              createFakeGamePlaySourceInteraction({\n                type: \"charm\",\n                eligibleTargets: [player],\n              }),\n            ],\n          }),\n        });\n        await nextTick();\n        const playerCard = wrapper.findComponent<typeof PlayerCard>(\"#player-card\");\n        (playerCard.vm as VueVm).$emit(\"player-card-selector-click\");\n\n        expect(makeGamePlayDtoStore.addMakeGamePlayTargetDto).not.toHaveBeenCalled();\n      });\n\n      it(\"should not call remove first make game play target dto when player is targeted but there are no current play.\", async() => {\n        const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n        const gameStore = useGameStore();\n        gameStore.game.currentPlay = null;\n        await nextTick();\n        const playerCard = wrapper.findComponent<typeof PlayerCard>(\"#player-card\");\n        (playerCard.vm as VueVm).$emit(\"player-card-selector-click\");\n\n        expect(makeGamePlayDtoStore.removeFirstMakeGamePlayTargetDto).not.toHaveBeenCalled();\n      });\n\n      it(\"should remove first make game play target dto when interaction is life potion and there is already one target for life potion.\", async() => {\n        wrapper = await mountGamePlaygroundPlayerCardComponent({\n          props: {\n            ...defaultProps,\n            interaction: \"give-life-potion\",\n          },\n        });\n        const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n        const gameStore = useGameStore();\n        gameStore.game.currentPlay = createFakeGamePlayWitchUsesPotions({\n          source: createFakeGamePlaySource({\n            interactions: [\n              createFakeGamePlaySourceInteraction({\n                type: \"give-life-potion\",\n                eligibleTargets: [player],\n                boundaries: createFakeGamePlaySourceInteractionBoundaries({\n                  min: 1,\n                  max: 1,\n                }),\n              }),\n            ],\n          }),\n        });\n        const players = [\n          player,\n          createFakeSeerAlivePlayer({ name: \"Benoit\" }),\n          createFakeSeerAlivePlayer({ name: \"Alex\" }),\n        ];\n        makeGamePlayDtoStore.makeGamePlayDto.targets = [createFakeMakeGamePlayTargetDto({ playerId: players[2]._id, drankPotion: \"life\" })];\n        await nextTick();\n        const playerCard = wrapper.findComponent<typeof PlayerCard>(\"#player-card\");\n        (playerCard.vm as VueVm).$emit(\"player-card-selector-click\");\n\n        expect(makeGamePlayDtoStore.removeFirstMakeGamePlayTargetDtoWithPotion).toHaveBeenCalledExactlyOnceWith(\"life\");\n      });\n\n      it(\"should add player to make game play dto targets with drank life potion when player can be targeted and is not already with death targets.\", async() => {\n        wrapper = await mountGamePlaygroundPlayerCardComponent({\n          props: {\n            ...defaultProps,\n            interaction: \"give-life-potion\",\n          },\n        });\n        const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n        const gameStore = useGameStore();\n        gameStore.game.currentPlay = createFakeGamePlayWitchUsesPotions({\n          source: createFakeGamePlaySource({\n            interactions: [\n              createFakeGamePlaySourceInteraction({\n                type: \"give-life-potion\",\n                eligibleTargets: [player],\n              }),\n            ],\n          }),\n        });\n        makeGamePlayDtoStore.makeGamePlayDto.targets = [createFakeMakeGamePlayTargetDto({ playerId: createFakePlayer()._id, drankPotion: \"death\" })];\n        await nextTick();\n        const playerCard = wrapper.findComponent<typeof PlayerCard>(\"#player-card\");\n        (playerCard.vm as VueVm).$emit(\"player-card-selector-click\");\n\n        expect(makeGamePlayDtoStore.addMakeGamePlayTargetDto).toHaveBeenCalledExactlyOnceWith({ playerId: player._id, drankPotion: \"life\" });\n        expect(makeGamePlayDtoStore.removeFirstMakeGamePlayTargetDtoWithPotion).not.toHaveBeenCalled();\n      });\n\n      it(\"should add player to make game play dto targets with drank life potion when player can be targeted and is not already without death targets.\", async() => {\n        wrapper = await mountGamePlaygroundPlayerCardComponent({\n          props: {\n            ...defaultProps,\n            interaction: \"give-life-potion\",\n          },\n        });\n        const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n        const gameStore = useGameStore();\n        gameStore.game.currentPlay = createFakeGamePlayWitchUsesPotions({\n          source: createFakeGamePlaySource({\n            interactions: [\n              createFakeGamePlaySourceInteraction({\n                type: \"give-life-potion\",\n                eligibleTargets: [player],\n              }),\n            ],\n          }),\n        });\n        makeGamePlayDtoStore.makeGamePlayDto.targets = undefined;\n        await nextTick();\n        const playerCard = wrapper.findComponent<typeof PlayerCard>(\"#player-card\");\n        (playerCard.vm as VueVm).$emit(\"player-card-selector-click\");\n\n        expect(makeGamePlayDtoStore.addMakeGamePlayTargetDto).toHaveBeenCalledExactlyOnceWith({ playerId: player._id, drankPotion: \"life\" });\n        expect(makeGamePlayDtoStore.removeFirstMakeGamePlayTargetDtoWithPotion).not.toHaveBeenCalled();\n      });\n\n      it(\"should remove first make game play target dto when interaction is death potion and there is already one target for death potion.\", async() => {\n        wrapper = await mountGamePlaygroundPlayerCardComponent({\n          props: {\n            ...defaultProps,\n            interaction: \"give-death-potion\",\n          },\n        });\n        const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n        const gameStore = useGameStore();\n        gameStore.game.currentPlay = createFakeGamePlayWitchUsesPotions({\n          source: createFakeGamePlaySource({\n            interactions: [\n              createFakeGamePlaySourceInteraction({\n                type: \"give-death-potion\",\n                eligibleTargets: [player],\n                boundaries: createFakeGamePlaySourceInteractionBoundaries({\n                  min: 1,\n                  max: 1,\n                }),\n              }),\n            ],\n          }),\n        });\n        const players = [\n          player,\n          createFakeSeerAlivePlayer({ name: \"Benoit\" }),\n          createFakeSeerAlivePlayer({ name: \"Alex\" }),\n        ];\n        makeGamePlayDtoStore.makeGamePlayDto.targets = [createFakeMakeGamePlayTargetDto({ playerId: players[2]._id, drankPotion: \"death\" })];\n        await nextTick();\n        const playerCard = wrapper.findComponent<typeof PlayerCard>(\"#player-card\");\n        (playerCard.vm as VueVm).$emit(\"player-card-selector-click\");\n\n        expect(makeGamePlayDtoStore.removeFirstMakeGamePlayTargetDtoWithPotion).toHaveBeenCalledExactlyOnceWith(\"death\");\n      });\n\n      it(\"should add player to make game play dto targets with drank death potion when player can be targeted and is not already with life targets.\", async() => {\n        wrapper = await mountGamePlaygroundPlayerCardComponent({\n          props: {\n            ...defaultProps,\n            interaction: \"give-death-potion\",\n          },\n        });\n        const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n        const gameStore = useGameStore();\n        gameStore.game.currentPlay = createFakeGamePlayWitchUsesPotions({\n          source: createFakeGamePlaySource({\n            interactions: [\n              createFakeGamePlaySourceInteraction({\n                type: \"give-death-potion\",\n                eligibleTargets: [player],\n              }),\n            ],\n          }),\n        });\n        makeGamePlayDtoStore.makeGamePlayDto.targets = [createFakeMakeGamePlayTargetDto({ playerId: createFakePlayer()._id, drankPotion: \"life\" })];\n        await nextTick();\n        const playerCard = wrapper.findComponent<typeof PlayerCard>(\"#player-card\");\n        (playerCard.vm as VueVm).$emit(\"player-card-selector-click\");\n\n        expect(makeGamePlayDtoStore.addMakeGamePlayTargetDto).toHaveBeenCalledExactlyOnceWith({ playerId: player._id, drankPotion: \"death\" });\n        expect(makeGamePlayDtoStore.removeFirstMakeGamePlayTargetDtoWithPotion).not.toHaveBeenCalled();\n      });\n\n      it(\"should add player to make game play dto targets with drank death potion when player can be targeted and is not already without life targets.\", async() => {\n        wrapper = await mountGamePlaygroundPlayerCardComponent({\n          props: {\n            ...defaultProps,\n            interaction: \"give-death-potion\",\n          },\n        });\n        const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n        const gameStore = useGameStore();\n        gameStore.game.currentPlay = createFakeGamePlayWitchUsesPotions({\n          source: createFakeGamePlaySource({\n            interactions: [\n              createFakeGamePlaySourceInteraction({\n                type: \"give-death-potion\",\n                eligibleTargets: [player],\n              }),\n            ],\n          }),\n        });\n        makeGamePlayDtoStore.makeGamePlayDto.targets = undefined;\n        await nextTick();\n        const playerCard = wrapper.findComponent<typeof PlayerCard>(\"#player-card\");\n        (playerCard.vm as VueVm).$emit(\"player-card-selector-click\");\n\n        expect(makeGamePlayDtoStore.addMakeGamePlayTargetDto).toHaveBeenCalledExactlyOnceWith({ playerId: player._id, drankPotion: \"death\" });\n        expect(makeGamePlayDtoStore.removeFirstMakeGamePlayTargetDtoWithPotion).not.toHaveBeenCalled();\n      });\n\n      it(\"should add player to make game play dto targets when player can be targeted and is not already.\", async() => {\n        const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n        const gameStore = useGameStore();\n        gameStore.game.currentPlay = createFakeGamePlayWerewolvesEat({\n          type: \"bury-dead-bodies\",\n          source: createFakeGamePlaySource({\n            interactions: [\n              createFakeGamePlaySourceInteraction({\n                type: \"eat\",\n                eligibleTargets: [player],\n              }),\n            ],\n          }),\n        });\n        await nextTick();\n        const playerCard = wrapper.findComponent<typeof PlayerCard>(\"#player-card\");\n        (playerCard.vm as VueVm).$emit(\"player-card-selector-click\");\n\n        expect(makeGamePlayDtoStore.addMakeGamePlayTargetDto).toHaveBeenCalledExactlyOnceWith({ playerId: player._id });\n        expect(makeGamePlayDtoStore.removeFirstMakeGamePlayTargetDto).not.toHaveBeenCalled();\n      });\n\n      it(\"should not call remove first make game play target dto when player is targeted but there are no eligible targets.\", async() => {\n        const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n        const gameStore = useGameStore();\n        gameStore.game.currentPlay = createFakeGamePlayWerewolvesEat();\n        await nextTick();\n        const playerCard = wrapper.findComponent<typeof PlayerCard>(\"#player-card\");\n        (playerCard.vm as VueVm).$emit(\"player-card-selector-click\");\n\n        expect(makeGamePlayDtoStore.removeFirstMakeGamePlayTargetDto).not.toHaveBeenCalled();\n      });\n\n      it(\"should remove player from make game play dto targets when player can be targeted and is already.\", async() => {\n        const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n        const gameStore = useGameStore();\n        gameStore.game.currentPlay = createFakeGamePlayWerewolvesEat({\n          source: createFakeGamePlaySource({\n            interactions: [\n              createFakeGamePlaySourceInteraction({\n                type: \"eat\",\n                eligibleTargets: [player],\n              }),\n            ],\n          }),\n        });\n        const players = [\n          player,\n          createFakeSeerAlivePlayer({ name: \"Benoit\" }),\n          createFakeSeerAlivePlayer({ name: \"Alex\" }),\n        ];\n        makeGamePlayDtoStore.makeGamePlayDto.targets = [\n          createFakeMakeGamePlayTargetDto({ playerId: players[0]._id }),\n          createFakeMakeGamePlayTargetDto({ playerId: players[1]._id }),\n          createFakeMakeGamePlayTargetDto({ playerId: players[2]._id }),\n        ];\n        await nextTick();\n        const playerCard = wrapper.findComponent<typeof PlayerCard>(\"#player-card\");\n        (playerCard.vm as VueVm).$emit(\"player-card-selector-click\");\n\n        expect(makeGamePlayDtoStore.removeMakeGamePlayTargetDto).toHaveBeenCalledExactlyOnceWith(player._id);\n        expect(makeGamePlayDtoStore.addMakeGamePlayTargetDto).not.toHaveBeenCalled();\n        expect(makeGamePlayDtoStore.removeFirstMakeGamePlayTargetDto).not.toHaveBeenCalled();\n      });\n\n      it(\"should remove first player from make game play dto targets when player can be targeted and max targets are reached.\", async() => {\n        const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n        const gameStore = useGameStore();\n        gameStore.game.currentPlay = createFakeGamePlayWerewolvesEat({\n          source: createFakeGamePlaySource({\n            interactions: [\n              createFakeGamePlaySourceInteraction({\n                type: \"eat\",\n                eligibleTargets: [player],\n                boundaries: createFakeGamePlaySourceInteractionBoundaries({\n                  min: 1,\n                  max: 1,\n                }),\n              }),\n            ],\n          }),\n        });\n        const players = [\n          player,\n          createFakeSeerAlivePlayer({ name: \"Benoit\" }),\n          createFakeSeerAlivePlayer({ name: \"Alex\" }),\n        ];\n        makeGamePlayDtoStore.makeGamePlayDto.targets = [createFakeMakeGamePlayTargetDto({ playerId: players[2]._id })];\n        await nextTick();\n        const playerCard = wrapper.findComponent<typeof PlayerCard>(\"#player-card\");\n        (playerCard.vm as VueVm).$emit(\"player-card-selector-click\");\n\n        expect(makeGamePlayDtoStore.removeFirstMakeGamePlayTargetDto).toHaveBeenCalledExactlyOnceWith();\n        expect(makeGamePlayDtoStore.addMakeGamePlayTargetDto).toHaveBeenCalledExactlyOnceWith({ playerId: player._id });\n      });\n    });\n  });\n\n  describe(\"Vote Input\", () => {\n    it(\"should render vote input when game current play is vote type.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlaySurvivorsElectSheriff();\n      await nextTick();\n      const voteInput = wrapper.findComponent<typeof GamePlaygroundPlayerCardVoteInput>(\"#game-playground-player-card-vote-input\");\n\n      expect(voteInput.exists()).toBeTruthy();\n    });\n\n    it(\"should not render vote input when game current play is not vote type.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlayWerewolvesEat();\n      await nextTick();\n      const voteInput = wrapper.findComponent<typeof GamePlaygroundPlayerCardVoteInput>(\"#game-playground-player-card-vote-input\");\n\n      expect(voteInput.exists()).toBeFalsy();\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundHeader/GamePlaygroundHeaderCurrentPlay/GamePlaygroundHeaderCurrentPlay.nuxt.spec.ts": {
      "tests": [
        {
          "id": "86",
          "name": "Game Playground Header Current Play Component should match snapshot when rendered."
        },
        {
          "id": "87",
          "name": "Game Playground Header Current Play Component Current play SVG icon should not render the current play SVG icon when the current play is unknown."
        },
        {
          "id": "88",
          "name": "Game Playground Header Current Play Component Current play SVG icon 'should render the current play SVG ic…'"
        },
        {
          "id": "89",
          "name": "Game Playground Header Current Play Component Current play text 'should render the current play text f…'"
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\n\nimport GamePlaygroundHeaderCurrentPlay from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundHeader/GamePlaygroundHeaderCurrentPlay/GamePlaygroundHeaderCurrentPlay.vue\";\nimport type { GamePlay } from \"~/composables/api/game/types/game-play/game-play.class\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\nimport { createFakeGamePlaySource } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source.factory\";\nimport { createFakeGamePlay, createFakeGamePlayAccursedWolfFatherInfects, createFakeGamePlayActorChoosesCard, createFakeGamePlayBearTamerGrowls, createFakeGamePlayBigBadWolfEats, createFakeGamePlayCharmedMeetEachOther, createFakeGamePlayCupidCharms, createFakeGamePlayDefenderProtects, createFakeGamePlayFoxSniffs, createFakeGamePlayHunterShoots, createFakeGamePlayLoversMeetEachOther, createFakeGamePlayPiedPiperCharms, createFakeGamePlayScandalmongerMarks, createFakeGamePlayScapegoatBansVoting, createFakeGamePlaySeerLooks, createFakeGamePlaySheriffDelegates, createFakeGamePlaySheriffSettlesVotes, createFakeGamePlayStutteringJudgeRequestsAnotherVote, createFakeGamePlaySurvivorsBuryDeadBodies, createFakeGamePlaySurvivorsElectSheriff, createFakeGamePlaySurvivorsVote, createFakeGamePlayThiefChoosesCard, createFakeGamePlayThreeBrothersMeetEachOther, createFakeGamePlayTwoSistersMeetEachOther, createFakeGamePlayWerewolvesEat, createFakeGamePlayWhiteWerewolfEats, createFakeGamePlayWildChildChoosesModel, createFakeGamePlayWitchUsesPotions, createFakeGamePlayWolfHoundChoosesSide } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play.factory\";\nimport { createFakeGame } from \"~/tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Playground Header Current Play Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GamePlaygroundHeaderCurrentPlay>>;\n  const testingPinia = {\n    initialState: {\n      [StoreIds.GAME]: {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlay({\n            source: createFakeGamePlaySource({ name: \"sheriff\" }),\n            action: \"delegate\",\n          }),\n        }),\n      },\n    },\n  };\n\n  async function mountGamePlaygroundHeaderCurrentPlayComponent(): Promise<ReturnType<typeof mount<typeof GamePlaygroundHeaderCurrentPlay>>> {\n    return mountSuspendedComponent(GamePlaygroundHeaderCurrentPlay, { global: { plugins: [createTestingPinia(testingPinia)] } });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGamePlaygroundHeaderCurrentPlayComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Current play SVG icon\", () => {\n    it(\"should not render the current play SVG icon when the current play is unknown.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlay({\n        source: createFakeGamePlaySource({ name: \"hunter\" }),\n        action: \"delegate\",\n      });\n      await nextTick();\n      const currentPlayIcon = wrapper.find<HTMLImageElement>(\"[alt='Current play icon']\");\n\n      expect(currentPlayIcon.exists()).toBeFalsy();\n    });\n\n    it.each<{\n      currentGamePlay: GamePlay;\n      expectedIconPath: string;\n      test: string;\n    }>([\n      {\n        currentGamePlay: createFakeGamePlayAccursedWolfFatherInfects(),\n        expectedIconPath: \"/svg/role/accursed-wolf-father.svg\",\n        test: \"should render the current play SVG icon for the accursed wolf father infects.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayActorChoosesCard(),\n        expectedIconPath: \"/svg/role/actor.svg\",\n        test: \"should render the current play SVG icon for the actor chooses card.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayBearTamerGrowls(),\n        expectedIconPath: \"/svg/role/bear-tamer.svg\",\n        test: \"should render the current play SVG icon for the bear tamer growls.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayBigBadWolfEats(),\n        expectedIconPath: \"/svg/role/big-bad-wolf.svg\",\n        test: \"should render the current play SVG icon for the big bad wolf eats.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayCharmedMeetEachOther(),\n        expectedIconPath: \"/svg/role/pied-piper.svg\",\n        test: \"should render the current play SVG icon for the charmed meet each other.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayCupidCharms(),\n        expectedIconPath: \"/svg/role/cupid.svg\",\n        test: \"should render the current play SVG icon for the cupid charms.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayDefenderProtects(),\n        expectedIconPath: \"/svg/role/defender.svg\",\n        test: \"should render the current play SVG icon for the defender protects.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayFoxSniffs(),\n        expectedIconPath: \"/svg/role/fox.svg\",\n        test: \"should render the current play SVG icon for the fox sniffs.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayHunterShoots(),\n        expectedIconPath: \"/svg/role/hunter.svg\",\n        test: \"should render the current play SVG icon for the hunter shoots.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayLoversMeetEachOther(),\n        expectedIconPath: \"/svg/role/lovers.svg\",\n        test: \"should render the current play SVG icon for the lovers meet each other.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayPiedPiperCharms(),\n        expectedIconPath: \"/svg/role/pied-piper.svg\",\n        test: \"should render the current play SVG icon for the pied piper charms.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayScandalmongerMarks(),\n        expectedIconPath: \"/svg/role/scandalmonger.svg\",\n        test: \"should render the current play SVG icon for the scandalmonger marks.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayScapegoatBansVoting(),\n        expectedIconPath: \"/svg/role/scapegoat.svg\",\n        test: \"should render the current play SVG icon for the scapegoat bans voting.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlaySeerLooks(),\n        expectedIconPath: \"/svg/role/seer.svg\",\n        test: \"should render the current play SVG icon for the seer looks.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlaySheriffDelegates(),\n        expectedIconPath: \"/svg/game/player/player-attribute/sheriff.svg\",\n        test: \"should render the current play SVG icon for the sheriff delegates.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlaySheriffSettlesVotes(),\n        expectedIconPath: \"/svg/game/game-play/game-play-action/settle-votes.svg\",\n        test: \"should render the current play SVG icon for the sheriff settles votes.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayStutteringJudgeRequestsAnotherVote(),\n        expectedIconPath: \"/svg/role/stuttering-judge.svg\",\n        test: \"should render the current play SVG icon for the stuttering judge requests another vote.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlaySurvivorsBuryDeadBodies(),\n        expectedIconPath: \"/svg/game/player/dead.svg\",\n        test: \"should render the current play SVG icon for the survivors bury dead bodies.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlaySurvivorsElectSheriff(),\n        expectedIconPath: \"/svg/game/player/player-attribute/sheriff.svg\",\n        test: \"should render the current play SVG icon for the survivors elect sheriff.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlaySurvivorsVote(),\n        expectedIconPath: \"/svg/game/game-play/game-play-action/vote.svg\",\n        test: \"should render the current play SVG icon for the survivors vote.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayThiefChoosesCard(),\n        expectedIconPath: \"/svg/role/thief.svg\",\n        test: \"should render the current play SVG icon for the thief chooses card.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayThreeBrothersMeetEachOther(),\n        expectedIconPath: \"/svg/role/three-brothers.svg\",\n        test: \"should render the current play SVG icon for the three brothers meet each other.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayTwoSistersMeetEachOther(),\n        expectedIconPath: \"/svg/role/two-sisters.svg\",\n        test: \"should render the current play SVG icon for the two sisters meet each other.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayWerewolvesEat(),\n        expectedIconPath: \"/svg/role/werewolf.svg\",\n        test: \"should render the current play SVG icon for the werewolves eat.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayWhiteWerewolfEats(),\n        expectedIconPath: \"/svg/role/white-werewolf.svg\",\n        test: \"should render the current play SVG icon for the white werewolf eats.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayWildChildChoosesModel(),\n        expectedIconPath: \"/svg/role/wild-child.svg\",\n        test: \"should render the current play SVG icon for the wild child chooses model.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayWitchUsesPotions(),\n        expectedIconPath: \"/svg/role/witch.svg\",\n        test: \"should render the current play SVG icon for the witch uses potions.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayWolfHoundChoosesSide(),\n        expectedIconPath: \"/svg/role/wolf-hound.svg\",\n        test: \"should render the current play SVG icon for the wolf hound chooses side.\",\n      },\n    ])(\"$test\", async({ currentGamePlay, expectedIconPath }) => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = currentGamePlay;\n      await nextTick();\n      const currentPlayIcon = wrapper.find<HTMLImageElement>(\"[alt='Current play icon']\");\n\n      expect(currentPlayIcon.attributes(\"src\")).toBe(expectedIconPath);\n    });\n  });\n\n  describe(\"Current play text\", () => {\n    it.each<{\n      currentGamePlay: GamePlay | null;\n      expectedText: string;\n      test: string;\n    }>([\n      {\n        currentGamePlay: null,\n        expectedText: \"components.GamePlaygroundHeaderCurrentPlay.unknownGamePlay\",\n        test: \"should render the current play text for an unknown game play when game current play is null.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlay({\n          source: createFakeGamePlaySource({ name: \"hunter\" }),\n          action: \"delegate\",\n        }),\n        expectedText: \"components.GamePlaygroundHeaderCurrentPlay.unknownGamePlay\",\n        test: \"should render the current play text for an unknown game play.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayAccursedWolfFatherInfects(),\n        expectedText: \"components.GamePlaygroundHeaderCurrentPlay.accursedWolfFatherInfects\",\n        test: \"should render the current play text for the accursed wolf father infects.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayActorChoosesCard(),\n        expectedText: \"components.GamePlaygroundHeaderCurrentPlay.actorChoosesCard\",\n        test: \"should render the current play text for the actor chooses card.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayBearTamerGrowls(),\n        expectedText: \"components.GamePlaygroundHeaderCurrentPlay.bearTamerGrowls\",\n        test: \"should render the current play text for the bear tamer growls.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayBigBadWolfEats(),\n        expectedText: \"components.GamePlaygroundHeaderCurrentPlay.bigBadWolfEats\",\n        test: \"should render the current play text for the big bad wolf eats.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayCharmedMeetEachOther(),\n        expectedText: \"components.GamePlaygroundHeaderCurrentPlay.charmedPeopleMeetEachOther\",\n        test: \"should render the current play text for the charmed meet each other.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayCupidCharms(),\n        expectedText: \"components.GamePlaygroundHeaderCurrentPlay.cupidCharms\",\n        test: \"should render the current play text for the cupid charms.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayDefenderProtects(),\n        expectedText: \"components.GamePlaygroundHeaderCurrentPlay.defenderProtects\",\n        test: \"should render the current play text for the defender protects.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayFoxSniffs(),\n        expectedText: \"components.GamePlaygroundHeaderCurrentPlay.foxSniffs\",\n        test: \"should render the current play text for the fox sniffs.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayHunterShoots(),\n        expectedText: \"components.GamePlaygroundHeaderCurrentPlay.hunterShoots\",\n        test: \"should render the current play text for the hunter shoots.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayLoversMeetEachOther(),\n        expectedText: \"components.GamePlaygroundHeaderCurrentPlay.loversMeetEachOther\",\n        test: \"should render the current play text for the lovers meet each other.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayPiedPiperCharms(),\n        expectedText: \"components.GamePlaygroundHeaderCurrentPlay.piedPiperCharms\",\n        test: \"should render the current play text for the pied piper charms.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayScandalmongerMarks(),\n        expectedText: \"components.GamePlaygroundHeaderCurrentPlay.scandalmongerMarks\",\n        test: \"should render the current play text for the scandalmonger marks.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayScapegoatBansVoting(),\n        expectedText: \"components.GamePlaygroundHeaderCurrentPlay.scapegoatBansVoting\",\n        test: \"should render the current play text for the scapegoat bans voting.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlaySeerLooks(),\n        expectedText: \"components.GamePlaygroundHeaderCurrentPlay.seerLooks\",\n        test: \"should render the current play text for the seer looks.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlaySheriffDelegates(),\n        expectedText: \"components.GamePlaygroundHeaderCurrentPlay.sheriffDelegates\",\n        test: \"should render the current play text for the sheriff delegates.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlaySheriffSettlesVotes(),\n        expectedText: \"components.GamePlaygroundHeaderCurrentPlay.sheriffSettlesVotes\",\n        test: \"should render the current play text for the sheriff settles votes.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayStutteringJudgeRequestsAnotherVote(),\n        expectedText: \"components.GamePlaygroundHeaderCurrentPlay.stutteringJudgeRequestsAnotherVote\",\n        test: \"should render the current play text for the stuttering judge requests another vote.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlaySurvivorsBuryDeadBodies(),\n        expectedText: \"components.GamePlaygroundHeaderCurrentPlay.survivorsBuryDeadBodies\",\n        test: \"should render the current play text for the survivors bury dead bodies.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlaySurvivorsElectSheriff(),\n        expectedText: \"components.GamePlaygroundHeaderCurrentPlay.survivorsElectSheriff\",\n        test: \"should render the current play text for the survivors elect sheriff.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlaySurvivorsVote(),\n        expectedText: \"components.GamePlaygroundHeaderCurrentPlay.survivorsVote\",\n        test: \"should render the current play text for the survivors vote.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayThiefChoosesCard(),\n        expectedText: \"components.GamePlaygroundHeaderCurrentPlay.thiefChoosesCard\",\n        test: \"should render the current play text for the thief chooses card.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayThreeBrothersMeetEachOther(),\n        expectedText: \"components.GamePlaygroundHeaderCurrentPlay.threeBrothersMeetEachOther\",\n        test: \"should render the current play text for the three brothers meet each other.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayTwoSistersMeetEachOther(),\n        expectedText: \"components.GamePlaygroundHeaderCurrentPlay.twoSistersMeetEachOther\",\n        test: \"should render the current play text for the two sisters meet each other.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayWerewolvesEat(),\n        expectedText: \"components.GamePlaygroundHeaderCurrentPlay.werewolvesEat\",\n        test: \"should render the current play text for the werewolves eat.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayWhiteWerewolfEats(),\n        expectedText: \"components.GamePlaygroundHeaderCurrentPlay.whiteWerewolfEats\",\n        test: \"should render the current play text for the white werewolf eats.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayWildChildChoosesModel(),\n        expectedText: \"components.GamePlaygroundHeaderCurrentPlay.wildChildChoosesModel\",\n        test: \"should render the current play text for the wild child chooses model.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayWitchUsesPotions(),\n        expectedText: \"components.GamePlaygroundHeaderCurrentPlay.witchUsesPotions\",\n        test: \"should render the current play text for the witch uses potions.\",\n      },\n      {\n        currentGamePlay: createFakeGamePlayWolfHoundChoosesSide(),\n        expectedText: \"components.GamePlaygroundHeaderCurrentPlay.wolfHoundChoosesSide\",\n        test: \"should render the current play text for the wolf hound chooses side.\",\n      },\n    ])(\"$test\", async({ currentGamePlay, expectedText }) => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = currentGamePlay;\n      await nextTick();\n      const currentPlayText = wrapper.find<HTMLHeadingElement>(\"#current-play-text\");\n\n      expect(currentPlayText.text()).toBe(expectedText);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/useMakeGamePlayDtoValidation.spec.ts": {
      "tests": [
        {
          "id": "90",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayVoteTypeAndValid 'should return false when current play…'"
        },
        {
          "id": "91",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayVoteTypeAndValid 'should return false when interactions…'"
        },
        {
          "id": "92",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayVoteTypeAndValid 'should return false when votes are un…'"
        },
        {
          "id": "93",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayVoteTypeAndValid 'should return false when votes don\\'t…'"
        },
        {
          "id": "94",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayVoteTypeAndValid 'should return true when votes are equ…'"
        },
        {
          "id": "95",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayVoteTypeAndValid 'should return true when votes are gre…'"
        },
        {
          "id": "96",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayTargetTypeAndValid 'should return false when current play…'"
        },
        {
          "id": "97",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayTargetTypeAndValid 'should return false when eligible tar…'"
        },
        {
          "id": "98",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayTargetTypeAndValid 'should return false when targets are …'"
        },
        {
          "id": "99",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayTargetTypeAndValid 'should return false when targets don\\…'"
        },
        {
          "id": "100",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayTargetTypeAndValid 'should return true when targets are e…'"
        },
        {
          "id": "101",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayTargetTypeAndValid 'should return true when targets are g…'"
        },
        {
          "id": "102",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayChooseCardTypeAndValid 'should return false when current play…'"
        },
        {
          "id": "103",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayChooseCardTypeAndValid 'should return false when chosen card …'"
        },
        {
          "id": "104",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayChooseCardTypeAndValid 'should return true when chosen card i…'"
        },
        {
          "id": "105",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayChooseSideTypeAndValid 'should return false when current play…'"
        },
        {
          "id": "106",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayChooseSideTypeAndValid 'should return false when chosen side …'"
        },
        {
          "id": "107",
          "name": "Use Make Game Play Dto Validation Composable isCurrentGamePlayChooseSideTypeAndValid 'should return true when chosen side i…'"
        },
        {
          "id": "108",
          "name": "Use Make Game Play Dto Validation Composable canCurrentPlayBeSkipped should return false when current play can't be skipped."
        },
        {
          "id": "109",
          "name": "Use Make Game Play Dto Validation Composable canCurrentPlayBeSkipped should return true when current play can be skipped."
        },
        {
          "id": "110",
          "name": "Use Make Game Play Dto Validation Composable canMakeGamePlay 'should return true when current play …'"
        },
        {
          "id": "111",
          "name": "Use Make Game Play Dto Validation Composable canMakeGamePlay 'should return true when current game …'"
        },
        {
          "id": "112",
          "name": "Use Make Game Play Dto Validation Composable canMakeGamePlay 'should return false when make game pl…'"
        }
      ],
      "source": "import type { MakeGamePlayDto } from \"~/composables/api/game/dto/make-game-play/make-game-play.dto\";\nimport type { Game } from \"~/composables/api/game/types/game.class\";\nimport { useMakeGamePlayDtoValidation } from \"~/composables/api/game/useMakeGamePlayDtoValidation\";\nimport { createFakeMakeGamePlayTargetDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/make-game-play/make-game-play-target/make-game-play-target.dto.factory\";\nimport { createFakeMakeGamePlayVoteDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/make-game-play/make-game-play-vote/make-game-play-vote.dto.factory\";\nimport { createFakeMakeGamePlayDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/make-game-play/make-game-play.dto.factory\";\nimport { createFakeGamePlaySourceInteractionBoundaries } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction-boundaries/game-play-source-interaction-boundaries.factory\";\nimport { createFakeGamePlaySourceInteraction } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction.factory\";\nimport { createFakeGamePlaySource } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source.factory\";\nimport { createFakeGamePlay, createFakeGamePlayActorChoosesCard, createFakeGamePlaySurvivorsVote, createFakeGamePlayThiefChoosesCard, createFakeGamePlayWerewolvesEat, createFakeGamePlayWolfHoundChoosesSide } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play.factory\";\nimport { createFakeGame } from \"~/tests/unit/utils/factories/composables/api/game/game.factory\";\n\ndescribe(\"Use Make Game Play Dto Validation Composable\", () => {\n  describe(\"isCurrentGamePlayVoteTypeAndValid\", () => {\n    it.each<{\n      game: Game;\n      makeGamePlayDto: MakeGamePlayDto;\n      expected: boolean;\n      test: string;\n    }>([\n      {\n        game: createFakeGame({ currentPlay: null }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ votes: [createFakeMakeGamePlayVoteDto()] }),\n        expected: false,\n        test: \"should return false when current play is null.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlayWerewolvesEat() }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ votes: [createFakeMakeGamePlayVoteDto()] }),\n        expected: false,\n        test: \"should return false when current play type is 'target'.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlaySurvivorsVote({ source: createFakeGamePlaySource({ interactions: [] }) }) }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ votes: [] }),\n        expected: false,\n        test: \"should return false when interactions are empty.\",\n      },\n      {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlaySurvivorsVote({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  boundaries: createFakeGamePlaySourceInteractionBoundaries({\n                    min: 1,\n                    max: 2,\n                  }),\n                }),\n              ],\n            }),\n          }),\n        }),\n        makeGamePlayDto: createFakeMakeGamePlayDto(),\n        expected: false,\n        test: \"should return false when votes are undefined in make game play dto.\",\n      },\n      {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlaySurvivorsVote({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  boundaries: createFakeGamePlaySourceInteractionBoundaries({\n                    min: 1,\n                    max: 2,\n                  }),\n                }),\n              ],\n            }),\n          }),\n        }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ votes: [] }),\n        expected: false,\n        test: \"should return false when votes don't reach the minimum boundary.\",\n      },\n      {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlaySurvivorsVote({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  boundaries: createFakeGamePlaySourceInteractionBoundaries({\n                    min: 1,\n                    max: 2,\n                  }),\n                }),\n              ],\n            }),\n          }),\n        }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ votes: [createFakeMakeGamePlayVoteDto()] }),\n        expected: true,\n        test: \"should return true when votes are equal to eligible targets boundaries min.\",\n      },\n      {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlaySurvivorsVote({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  boundaries: createFakeGamePlaySourceInteractionBoundaries({\n                    min: 1,\n                    max: 2,\n                  }),\n                }),\n              ],\n            }),\n          }),\n        }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({\n          votes: [\n            createFakeMakeGamePlayVoteDto(),\n            createFakeMakeGamePlayVoteDto(),\n          ],\n        }),\n        expected: true,\n        test: \"should return true when votes are greater than eligible targets boundaries min.\",\n      },\n    ])(\"$test\", ({ game, makeGamePlayDto, expected }) => {\n      const { isCurrentGamePlayVoteTypeAndValid } = useMakeGamePlayDtoValidation(ref(makeGamePlayDto), ref(game));\n\n      expect(isCurrentGamePlayVoteTypeAndValid.value).toBe(expected);\n    });\n  });\n\n  describe(\"isCurrentGamePlayTargetTypeAndValid\", () => {\n    it.each<{\n      game: Game;\n      makeGamePlayDto: MakeGamePlayDto;\n      expected: boolean;\n      test: string;\n    }>([\n      {\n        game: createFakeGame({ currentPlay: null }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ targets: [createFakeMakeGamePlayTargetDto()] }),\n        expected: false,\n        test: \"should return false when current play is null.\",\n      },\n      {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlaySurvivorsVote({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  boundaries: createFakeGamePlaySourceInteractionBoundaries({\n                    min: 1,\n                    max: 2,\n                  }),\n                }),\n              ],\n            }),\n          }),\n        }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ targets: [createFakeMakeGamePlayTargetDto()] }),\n        expected: false,\n        test: \"should return false when current play type is 'vote'.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlayWerewolvesEat() }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ targets: [createFakeMakeGamePlayTargetDto()] }),\n        expected: false,\n        test: \"should return false when eligible targets are undefined.\",\n      },\n      {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlayWerewolvesEat({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  boundaries: createFakeGamePlaySourceInteractionBoundaries({\n                    min: 1,\n                    max: 2,\n                  }),\n                }),\n              ],\n            }),\n          }),\n        }),\n        makeGamePlayDto: createFakeMakeGamePlayDto(),\n        expected: false,\n        test: \"should return false when targets are undefined in make game play dto.\",\n      },\n      {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlayWerewolvesEat({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  boundaries: createFakeGamePlaySourceInteractionBoundaries({\n                    min: 1,\n                    max: 2,\n                  }),\n                }),\n              ],\n            }),\n          }),\n        }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ targets: [] }),\n        expected: false,\n        test: \"should return false when targets don't reach the minimum boundary.\",\n      },\n      {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlayWerewolvesEat({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  boundaries: createFakeGamePlaySourceInteractionBoundaries({\n                    min: 1,\n                    max: 2,\n                  }),\n                }),\n              ],\n            }),\n          }),\n        }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ targets: [createFakeMakeGamePlayTargetDto()] }),\n        expected: true,\n        test: \"should return true when targets are equal to eligible targets boundaries min.\",\n      },\n      {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlayWerewolvesEat({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  boundaries: createFakeGamePlaySourceInteractionBoundaries({\n                    min: 1,\n                    max: 2,\n                  }),\n                }),\n              ],\n            }),\n          }),\n        }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({\n          targets: [\n            createFakeMakeGamePlayTargetDto(),\n            createFakeMakeGamePlayTargetDto(),\n          ],\n        }),\n        expected: true,\n        test: \"should return true when targets are greater than eligible targets boundaries min.\",\n      },\n    ])(\"$test\", ({ game, makeGamePlayDto, expected }) => {\n      const { isCurrentGamePlayTargetTypeAndValid } = useMakeGamePlayDtoValidation(ref(makeGamePlayDto), ref(game));\n\n      expect(isCurrentGamePlayTargetTypeAndValid.value).toBe(expected);\n    });\n  });\n\n  describe(\"isCurrentGamePlayChooseCardTypeAndValid\", () => {\n    it.each<{\n      game: Game;\n      makeGamePlayDto: MakeGamePlayDto;\n      expected: boolean;\n      test: string;\n    }>([\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlaySurvivorsVote() }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ chosenCardId: \"1\" }),\n        expected: false,\n        test: \"should return false when current play type is 'vote'.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: null }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ chosenCardId: \"1\" }),\n        expected: false,\n        test: \"should return false when current play is null.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlayThiefChoosesCard() }),\n        makeGamePlayDto: createFakeMakeGamePlayDto(),\n        expected: false,\n        test: \"should return false when chosen card id is undefined.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlayThiefChoosesCard() }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ chosenCardId: \"1\" }),\n        expected: true,\n        test: \"should return true when chosen card id is defined.\",\n      },\n    ])(\"$test\", ({ game, makeGamePlayDto, expected }) => {\n      const { isCurrentGamePlayChooseCardTypeAndValid } = useMakeGamePlayDtoValidation(ref(makeGamePlayDto), ref(game));\n\n      expect(isCurrentGamePlayChooseCardTypeAndValid.value).toBe(expected);\n    });\n  });\n\n  describe(\"isCurrentGamePlayChooseSideTypeAndValid\", () => {\n    it.each<{\n      game: Game;\n      makeGamePlayDto: MakeGamePlayDto;\n      expected: boolean;\n      test: string;\n    }>([\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlaySurvivorsVote() }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ chosenSide: \"villagers\" }),\n        expected: false,\n        test: \"should return false when current play type is 'vote'.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: null }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ chosenSide: \"villagers\" }),\n        expected: false,\n        test: \"should return false when current play is null.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlayWolfHoundChoosesSide() }),\n        makeGamePlayDto: createFakeMakeGamePlayDto(),\n        expected: false,\n        test: \"should return false when chosen side is undefined.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlayWolfHoundChoosesSide() }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ chosenSide: \"villagers\" }),\n        expected: true,\n        test: \"should return true when chosen side is defined.\",\n      },\n    ])(\"$test\", ({ game, makeGamePlayDto, expected }) => {\n      const { isCurrentGamePlayChooseSideTypeAndValid } = useMakeGamePlayDtoValidation(ref(makeGamePlayDto), ref(game));\n\n      expect(isCurrentGamePlayChooseSideTypeAndValid.value).toBe(expected);\n    });\n  });\n\n  describe(\"canCurrentPlayBeSkipped\", () => {\n    it(\"should return false when current play can't be skipped.\", () => {\n      const game = ref(createFakeGame({ currentPlay: createFakeGamePlay({ canBeSkipped: false }) }));\n      const makeGamePlayDto = ref(createFakeMakeGamePlayDto());\n      const { canCurrentPlayBeSkipped } = useMakeGamePlayDtoValidation(makeGamePlayDto, game);\n\n      expect(canCurrentPlayBeSkipped.value).toBeFalsy();\n    });\n\n    it(\"should return true when current play can be skipped.\", () => {\n      const game = ref(createFakeGame({ currentPlay: createFakeGamePlay({ canBeSkipped: true }) }));\n      const makeGamePlayDto = ref(createFakeMakeGamePlayDto());\n      const { canCurrentPlayBeSkipped } = useMakeGamePlayDtoValidation(makeGamePlayDto, game);\n\n      expect(canCurrentPlayBeSkipped.value).toBeTruthy();\n    });\n  });\n\n  describe(\"canMakeGamePlay\", () => {\n    it.each<{\n      game: Game;\n      makeGamePlayDto: MakeGamePlayDto;\n      expected: boolean;\n      test: string;\n    }>([\n      {\n        test: \"should return true when current play can be skipped.\",\n        game: createFakeGame({ currentPlay: createFakeGamePlay({ canBeSkipped: true }) }),\n        makeGamePlayDto: createFakeMakeGamePlayDto(),\n        expected: true,\n      },\n      {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlaySurvivorsVote({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  boundaries: createFakeGamePlaySourceInteractionBoundaries({\n                    min: 1,\n                    max: 2,\n                  }),\n                }),\n              ],\n            }),\n          }),\n        }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({\n          votes: [\n            createFakeMakeGamePlayVoteDto(),\n            createFakeMakeGamePlayVoteDto(),\n          ],\n        }),\n        expected: true,\n        test: \"should return true when current game play type is vote and votes are greater than eligible targets boundaries min.\",\n      },\n      {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlayWerewolvesEat({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  boundaries: createFakeGamePlaySourceInteractionBoundaries({\n                    min: 1,\n                    max: 2,\n                  }),\n                }),\n              ],\n            }),\n          }),\n        }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({\n          targets: [\n            createFakeMakeGamePlayTargetDto(),\n            createFakeMakeGamePlayTargetDto(),\n          ],\n        }),\n        expected: true,\n        test: \"should return true when current game play type is target and targets are greater than eligible targets boundaries min.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlayActorChoosesCard({ action: \"choose-card\" }) }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ chosenCardId: \"1\" }),\n        expected: true,\n        test: \"should return true when current game play type is choose card and chosen card id is defined.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlayWolfHoundChoosesSide({ action: \"choose-side\" }) }),\n        makeGamePlayDto: createFakeMakeGamePlayDto({ chosenSide: \"villagers\" }),\n        expected: true,\n        test: \"should return true when current game play type is choose side and chosen side is defined.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlayWolfHoundChoosesSide({ action: \"choose-side\" }) }),\n        makeGamePlayDto: createFakeMakeGamePlayDto(),\n        expected: false,\n        test: \"should return false when make game play dto is not valid in any case.\",\n      },\n    ])(\"$test\", ({ game, makeGamePlayDto, expected }) => {\n      const { canMakeGamePlay } = useMakeGamePlayDtoValidation(ref(makeGamePlayDto), ref(game));\n\n      expect(canMakeGamePlay.value).toBe(expected);\n    });\n  });\n});"
    },
    "tests/unit/specs/stores/game/create-game-dto/useCreateGameDtoStore.spec.ts": {
      "tests": [
        {
          "id": "113",
          "name": "Create Game Dto Store should have initial state when created."
        },
        {
          "id": "114",
          "name": "Create Game Dto Store setCreateGameDto should set createGameDto when called."
        },
        {
          "id": "115",
          "name": "Create Game Dto Store resetCreateGameDto should reset create game dto when called."
        },
        {
          "id": "116",
          "name": "Create Game Dto Store addPlayerToCreateGameDto should add player to createGameDto when called."
        },
        {
          "id": "117",
          "name": "Create Game Dto Store updatePlayerInCreateGameDto should update player in createGameDto when called."
        },
        {
          "id": "118",
          "name": "Create Game Dto Store updatePlayerInCreateGameDto should not update player in createGameDto when player not found."
        },
        {
          "id": "119",
          "name": "Create Game Dto Store setPlayersToCreateGameDto should set players to createGameDto when called."
        },
        {
          "id": "120",
          "name": "Create Game Dto Store removePlayerFromCreateGameDto should remove player from createGameDto when called."
        },
        {
          "id": "121",
          "name": "Create Game Dto Store removePlayerFromCreateGameDto should not remove player from createGameDto when player not found."
        },
        {
          "id": "122",
          "name": "Create Game Dto Store getPlayersWithRoleNameInCreateGameDto should return players with role name in createGameDto when called."
        },
        {
          "id": "123",
          "name": "Create Game Dto Store isRoleMinReachedInCreateGameDto 'should return true when role min is r…'"
        },
        {
          "id": "124",
          "name": "Create Game Dto Store isRoleMinReachedInCreateGameDto 'should return false when role min is …'"
        },
        {
          "id": "125",
          "name": "Create Game Dto Store isRoleMinReachedInCreateGameDto 'should return false when role is not …'"
        },
        {
          "id": "126",
          "name": "Create Game Dto Store isRoleMinReachedInCreateGameDto 'should return true when role doesn\\'t…'"
        },
        {
          "id": "127",
          "name": "Create Game Dto Store isRoleMaxReachedInCreateGameDto 'should return true when role max is r…'"
        },
        {
          "id": "128",
          "name": "Create Game Dto Store isRoleMaxReachedInCreateGameDto 'should return false when role max is …'"
        },
        {
          "id": "129",
          "name": "Create Game Dto Store isRoleMaxReachedInCreateGameDto 'should return false when role is not …'"
        },
        {
          "id": "130",
          "name": "Create Game Dto Store getRoleLeftCountToReachMinInCreateGameDto 'should return 0 when role min is reac…'"
        },
        {
          "id": "131",
          "name": "Create Game Dto Store getRoleLeftCountToReachMinInCreateGameDto 'should return 1 when role min is not …'"
        },
        {
          "id": "132",
          "name": "Create Game Dto Store getRoleLeftCountToReachMinInCreateGameDto 'should return 0 when role not in role…'"
        }
      ],
      "source": "import { createPinia, setActivePinia } from \"pinia\";\nimport { DEFAULT_GAME_OPTIONS } from \"~/composables/api/game/constants/game-options/game-options.constants\";\n\nimport type { CreateGamePlayerDto } from \"~/composables/api/game/dto/create-game/create-game-player/create-game-player.dto\";\nimport type { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport type { RoleName } from \"~/composables/api/role/types/role.types\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { useRolesStore } from \"~/stores/role/useRolesStore\";\nimport { createFakeCreateGamePlayerDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game-player/create-game-player.dto.factory\";\nimport { createFakeCreateGameDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\nimport { createFakeGameOptions } from \"~/tests/unit/utils/factories/composables/api/game/game-options/game-options.factory\";\nimport { createFakeRole } from \"~/tests/unit/utils/factories/composables/api/role/role.factory\";\n\ndescribe(\"Create Game Dto Store\", () => {\n  beforeEach(() => {\n    setActivePinia(createPinia());\n  });\n\n  it(\"should have initial state when created.\", () => {\n    const createGameDtoStore = useCreateGameDtoStore();\n    const expectedCreateGameDto = createFakeCreateGameDto({ options: DEFAULT_GAME_OPTIONS });\n\n    expect(createGameDtoStore.createGameDto).toStrictEqual<CreateGameDto>(expectedCreateGameDto);\n  });\n\n  describe(\"setCreateGameDto\", () => {\n    it(\"should set createGameDto when called.\", () => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const expectedCreateGameDto = createFakeCreateGameDto({\n        players: [\n          createFakeCreateGamePlayerDto(),\n          createFakeCreateGamePlayerDto(),\n          createFakeCreateGamePlayerDto(),\n        ],\n        options: createFakeGameOptions(),\n      });\n\n      createGameDtoStore.setCreateGameDto(expectedCreateGameDto);\n\n      expect(createGameDtoStore.createGameDto).toStrictEqual<CreateGameDto>(expectedCreateGameDto);\n    });\n  });\n\n  describe(\"resetCreateGameDto\", () => {\n    it(\"should reset create game dto when called.\", () => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto = createFakeCreateGameDto({\n        players: [\n          createFakeCreateGamePlayerDto(),\n          createFakeCreateGamePlayerDto(),\n          createFakeCreateGamePlayerDto(),\n        ],\n      });\n      const expectedCreateGameDto = createFakeCreateGameDto({\n        players: [],\n        options: DEFAULT_GAME_OPTIONS,\n      });\n      createGameDtoStore.resetCreateGameDto();\n\n      expect(createGameDtoStore.createGameDto).toStrictEqual<CreateGameDto>(expectedCreateGameDto);\n    });\n  });\n\n  describe(\"addPlayerToCreateGameDto\", () => {\n    it(\"should add player to createGameDto when called.\", () => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const player = createFakeCreateGamePlayerDto();\n      const expectedCreateGameDto = createFakeCreateGameDto({\n        players: [player],\n        options: DEFAULT_GAME_OPTIONS,\n      });\n\n      createGameDtoStore.addPlayerToCreateGameDto(player);\n\n      expect(createGameDtoStore.createGameDto).toStrictEqual<CreateGameDto>(expectedCreateGameDto);\n    });\n  });\n\n  describe(\"updatePlayerInCreateGameDto\", () => {\n    it(\"should update player in createGameDto when called.\", () => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const players = [\n        createFakeCreateGamePlayerDto({ name: \"player1\" }),\n        createFakeCreateGamePlayerDto({ name: \"player2\" }),\n        createFakeCreateGamePlayerDto({ name: \"player3\" }),\n      ];\n      createGameDtoStore.createGameDto.players = players;\n      const player = createFakeCreateGamePlayerDto({ name: \"player2\", role: { name: \"seer\" } });\n      const expectedCreateGameDto = createFakeCreateGameDto({\n        players: [\n          players[0],\n          player,\n          players[2],\n        ],\n        options: DEFAULT_GAME_OPTIONS,\n      });\n\n      createGameDtoStore.updatePlayerInCreateGameDto(player);\n\n      expect(createGameDtoStore.createGameDto).toStrictEqual<CreateGameDto>(expectedCreateGameDto);\n    });\n\n    it(\"should not update player in createGameDto when player not found.\", () => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const players = [\n        createFakeCreateGamePlayerDto({ name: \"player1\" }),\n        createFakeCreateGamePlayerDto({ name: \"player2\" }),\n        createFakeCreateGamePlayerDto({ name: \"player3\" }),\n      ];\n      createGameDtoStore.createGameDto.players = players;\n      const player = createFakeCreateGamePlayerDto({ name: \"player4\", role: { name: \"seer\" } });\n      const expectedCreateGameDto = createFakeCreateGameDto({\n        players,\n        options: DEFAULT_GAME_OPTIONS,\n      });\n\n      createGameDtoStore.updatePlayerInCreateGameDto(player);\n\n      expect(createGameDtoStore.createGameDto).toStrictEqual<CreateGameDto>(expectedCreateGameDto);\n    });\n  });\n\n  describe(\"setPlayersToCreateGameDto\", () => {\n    it(\"should set players to createGameDto when called.\", () => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const players = [\n        createFakeCreateGamePlayerDto(),\n        createFakeCreateGamePlayerDto(),\n        createFakeCreateGamePlayerDto(),\n      ];\n      createGameDtoStore.setPlayersToCreateGameDto(players);\n\n      expect(createGameDtoStore.createGameDto.players).toStrictEqual<CreateGamePlayerDto[]>(players);\n    });\n  });\n\n  describe(\"removePlayerFromCreateGameDto\", () => {\n    it(\"should remove player from createGameDto when called.\", () => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const players = [\n        createFakeCreateGamePlayerDto({ name: \"player1\" }),\n        createFakeCreateGamePlayerDto({ name: \"player2\" }),\n        createFakeCreateGamePlayerDto({ name: \"player3\" }),\n      ];\n      createGameDtoStore.createGameDto.players = players;\n      const expectedCreateGameDto = createFakeCreateGameDto({\n        players: [\n          players[0],\n          players[2],\n        ],\n        options: DEFAULT_GAME_OPTIONS,\n      });\n      createGameDtoStore.removePlayerFromCreateGameDto(players[1].name);\n\n      expect(createGameDtoStore.createGameDto).toStrictEqual<CreateGameDto>(expectedCreateGameDto);\n    });\n\n    it(\"should not remove player from createGameDto when player not found.\", () => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const players = [\n        createFakeCreateGamePlayerDto({ name: \"player1\" }),\n        createFakeCreateGamePlayerDto({ name: \"player2\" }),\n        createFakeCreateGamePlayerDto({ name: \"player3\" }),\n      ];\n      createGameDtoStore.createGameDto.players = players;\n      const expectedCreateGameDto = createFakeCreateGameDto({\n        players,\n        options: DEFAULT_GAME_OPTIONS,\n      });\n\n      createGameDtoStore.removePlayerFromCreateGameDto(\"player4\");\n\n      expect(createGameDtoStore.createGameDto).toStrictEqual<CreateGameDto>(expectedCreateGameDto);\n    });\n  });\n\n  describe(\"getPlayersWithRoleNameInCreateGameDto\", () => {\n    it(\"should return players with role name in createGameDto when called.\", () => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const players = [\n        createFakeCreateGamePlayerDto({ role: { name: \"seer\" } }),\n        createFakeCreateGamePlayerDto({ role: { name: \"seer\" } }),\n        createFakeCreateGamePlayerDto({ role: { name: \"villager\" } }),\n      ];\n      createGameDtoStore.createGameDto.players = players;\n      const expectedPlayers = [players[0], players[1]];\n\n      const result = createGameDtoStore.getPlayersWithRoleNameInCreateGameDto(\"seer\");\n\n      expect(result).toStrictEqual<CreateGamePlayerDto[]>(expectedPlayers);\n    });\n  });\n\n  describe(\"isRoleMinReachedInCreateGameDto\", () => {\n    beforeEach(() => {\n      const rolesStore = useRolesStore();\n      rolesStore.roles = [\n        createFakeRole({ name: \"seer\", minInGame: 1, maxInGame: 1 }),\n        createFakeRole({ name: \"villager\", minInGame: 2, maxInGame: 2 }),\n        createFakeRole({ name: \"little-girl\", maxInGame: 2 }),\n      ];\n    });\n\n    it.each<{\n      roleName: RoleName;\n      players: CreateGamePlayerDto[];\n      expected: boolean;\n      test: string;\n    }>([\n      {\n        roleName: \"seer\",\n        players: [\n          createFakeCreateGamePlayerDto({ role: { name: \"seer\" } }),\n          createFakeCreateGamePlayerDto({ role: { name: \"villager\" } }),\n        ],\n        expected: true,\n        test: \"should return true when role min is reached in createGameDto.\",\n      },\n      {\n        roleName: \"seer\",\n        players: [\n          createFakeCreateGamePlayerDto({ role: { name: \"seer\" } }),\n          createFakeCreateGamePlayerDto({ role: { name: \"seer\" } }),\n          createFakeCreateGamePlayerDto({ role: { name: \"villager\" } }),\n        ],\n        expected: true,\n        test: \"should return true when role min is reached + 1 in createGameDto.\",\n      },\n      {\n        roleName: \"villager\",\n        players: [createFakeCreateGamePlayerDto({ role: { name: \"villager\" } })],\n        expected: false,\n        test: \"should return false when role min is not reached in createGameDto.\",\n      },\n      {\n        roleName: \"seer\",\n        players: [\n          createFakeCreateGamePlayerDto({ role: { name: \"villager\" } }),\n          createFakeCreateGamePlayerDto({ role: { name: \"villager\" } }),\n        ],\n        expected: false,\n        test: \"should return false when role is not in party.\",\n      },\n      {\n        roleName: \"little-girl\",\n        players: [\n          createFakeCreateGamePlayerDto({ role: { name: \"villager\" } }),\n          createFakeCreateGamePlayerDto({ role: { name: \"villager\" } }),\n        ],\n        expected: true,\n        test: \"should return true when role doesn't have min in game.\",\n      },\n      {\n        roleName: \"elder\",\n        players: [\n          createFakeCreateGamePlayerDto({ role: { name: \"villager\" } }),\n          createFakeCreateGamePlayerDto({ role: { name: \"villager\" } }),\n        ],\n        expected: false,\n        test: \"should return false when role is not in roles.\",\n      },\n    ])(\"$test\", ({ roleName, players, expected }) => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.players = players;\n\n      expect(createGameDtoStore.isRoleMinReachedInCreateGameDto(roleName)).toBe(expected);\n    });\n  });\n\n  describe(\"isRoleMaxReachedInCreateGameDto\", () => {\n    beforeEach(() => {\n      const rolesStore = useRolesStore();\n      rolesStore.roles = [\n        createFakeRole({ name: \"seer\", maxInGame: 1 }),\n        createFakeRole({ name: \"villager\", maxInGame: 2 }),\n      ];\n    });\n\n    it.each<{\n      roleName: RoleName;\n      players: CreateGamePlayerDto[];\n      expected: boolean;\n      test: string;\n    }>([\n      {\n        roleName: \"seer\",\n        players: [\n          createFakeCreateGamePlayerDto({ role: { name: \"seer\" } }),\n          createFakeCreateGamePlayerDto({ role: { name: \"villager\" } }),\n        ],\n        expected: true,\n        test: \"should return true when role max is reached in createGameDto.\",\n      },\n      {\n        roleName: \"seer\",\n        players: [\n          createFakeCreateGamePlayerDto({ role: { name: \"seer\" } }),\n          createFakeCreateGamePlayerDto({ role: { name: \"seer\" } }),\n          createFakeCreateGamePlayerDto({ role: { name: \"villager\" } }),\n        ],\n        expected: true,\n        test: \"should return true when role max is reached + 1 in createGameDto.\",\n      },\n      {\n        roleName: \"villager\",\n        players: [createFakeCreateGamePlayerDto({ role: { name: \"villager\" } })],\n        expected: false,\n        test: \"should return false when role max is not reached in createGameDto.\",\n      },\n      {\n        roleName: \"elder\",\n        players: [\n          createFakeCreateGamePlayerDto({ role: { name: \"villager\" } }),\n          createFakeCreateGamePlayerDto({ role: { name: \"villager\" } }),\n        ],\n        expected: false,\n        test: \"should return false when role is not in roles.\",\n      },\n    ])(\"$test\", ({ roleName, players, expected }) => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.players = players;\n\n      expect(createGameDtoStore.isRoleMaxReachedInCreateGameDto(roleName)).toBe(expected);\n    });\n  });\n\n  describe(\"getRoleLeftCountToReachMinInCreateGameDto\", () => {\n    beforeEach(() => {\n      const rolesStore = useRolesStore();\n      rolesStore.roles = [\n        createFakeRole({ name: \"seer\", minInGame: 1, maxInGame: 1 }),\n        createFakeRole({ name: \"villager\", minInGame: 2, maxInGame: 2 }),\n        createFakeRole({ name: \"little-girl\", maxInGame: 2 }),\n      ];\n    });\n\n    it.each<{\n      roleName: RoleName;\n      players: CreateGamePlayerDto[];\n      expected: number;\n      test: string;\n    }>([\n      {\n        roleName: \"seer\",\n        players: [createFakeCreateGamePlayerDto({ role: { name: \"seer\" } })],\n        expected: 0,\n        test: \"should return 0 when role min is reached in createGameDto.\",\n      },\n      {\n        roleName: \"seer\",\n        players: [\n          createFakeCreateGamePlayerDto({ role: { name: \"seer\" } }),\n          createFakeCreateGamePlayerDto({ role: { name: \"seer\" } }),\n          createFakeCreateGamePlayerDto({ role: { name: \"villager\" } }),\n        ],\n        expected: 0,\n        test: \"should return 0 when role min is reached with one more in createGameDto.\",\n      },\n      {\n        roleName: \"villager\",\n        players: [\n          createFakeCreateGamePlayerDto({ role: { name: \"villager\" } }),\n          createFakeCreateGamePlayerDto({ role: { name: \"villager\" } }),\n        ],\n        expected: 0,\n        test: \"should return 0 when role min is reached in createGameDto.\",\n      },\n      {\n        roleName: \"villager\",\n        players: [createFakeCreateGamePlayerDto({ role: { name: \"villager\" } })],\n        expected: 1,\n        test: \"should return 1 when role min is not reached in createGameDto.\",\n      },\n      {\n        roleName: \"elder\",\n        players: [\n          createFakeCreateGamePlayerDto({ role: { name: \"villager\" } }),\n          createFakeCreateGamePlayerDto({ role: { name: \"villager\" } }),\n        ],\n        expected: 0,\n        test: \"should return 0 when role not in roles.\",\n      },\n    ])(`$test`, ({ roleName, players, expected }) => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.players = players;\n\n      expect(createGameDtoStore.getRoleLeftCountToReachMinInCreateGameDto(roleName)).toBe(expected);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GamePlaying/GameTeamSide/GameTeamSidePlayer/GameTeamSidePlayerAttribute/GameTeamSidePlayerAttribute.nuxt.spec.ts": {
      "tests": [
        {
          "id": "133",
          "name": "Game Team Side Player Attribute Component should match snapshot when rendered."
        },
        {
          "id": "134",
          "name": "Game Team Side Player Attribute Component Player Attribute Icon 'should render acting by actor icon wh…'"
        },
        {
          "id": "135",
          "name": "Game Team Side Player Attribute Component Player Attribute Icon 'should render cant vote by survivors …'"
        },
        {
          "id": "136",
          "name": "Game Team Side Player Attribute Component Player Attribute Icon 'should render cant vote by scapegoat …'"
        },
        {
          "id": "137",
          "name": "Game Team Side Player Attribute Component Player Attribute Icon 'should render charmed by pied piper i…'"
        },
        {
          "id": "138",
          "name": "Game Team Side Player Attribute Component Player Attribute Icon 'should render contaminated by rusty s…'"
        },
        {
          "id": "139",
          "name": "Game Team Side Player Attribute Component Player Attribute Icon 'should render drank death potion by w…'"
        },
        {
          "id": "140",
          "name": "Game Team Side Player Attribute Component Player Attribute Icon 'should render drank life potion by wi…'"
        },
        {
          "id": "141",
          "name": "Game Team Side Player Attribute Component Player Attribute Icon 'should render eaten by werewolves ico…'"
        },
        {
          "id": "142",
          "name": "Game Team Side Player Attribute Component Player Attribute Icon 'should render eaten by white werewolf…'"
        },
        {
          "id": "143",
          "name": "Game Team Side Player Attribute Component Player Attribute Icon 'should render eaten by big bad wolf i…'"
        },
        {
          "id": "144",
          "name": "Game Team Side Player Attribute Component Player Attribute Icon 'should render in love by cupid icon w…'"
        },
        {
          "id": "145",
          "name": "Game Team Side Player Attribute Component Player Attribute Icon 'should render powerless by actor icon…'"
        },
        {
          "id": "146",
          "name": "Game Team Side Player Attribute Component Player Attribute Icon 'should render powerless by werewolves…'"
        },
        {
          "id": "147",
          "name": "Game Team Side Player Attribute Component Player Attribute Icon 'should render powerless by accursed w…'"
        },
        {
          "id": "148",
          "name": "Game Team Side Player Attribute Component Player Attribute Icon 'should render powerless by fox icon w…'"
        },
        {
          "id": "149",
          "name": "Game Team Side Player Attribute Component Player Attribute Icon 'should render powerless by elder icon…'"
        },
        {
          "id": "150",
          "name": "Game Team Side Player Attribute Component Player Attribute Icon 'should render protected by defender i…'"
        },
        {
          "id": "151",
          "name": "Game Team Side Player Attribute Component Player Attribute Icon 'should render scandalmonger marked by…'"
        },
        {
          "id": "152",
          "name": "Game Team Side Player Attribute Component Player Attribute Icon 'should render seen by seer icon when …'"
        },
        {
          "id": "153",
          "name": "Game Team Side Player Attribute Component Player Attribute Icon 'should render sheriff by sheriff icon…'"
        },
        {
          "id": "154",
          "name": "Game Team Side Player Attribute Component Player Attribute Icon 'should render sheriff by survivors ic…'"
        },
        {
          "id": "155",
          "name": "Game Team Side Player Attribute Component Player Attribute Icon 'should render stolen role by devoted …'"
        },
        {
          "id": "156",
          "name": "Game Team Side Player Attribute Component Player Attribute Icon 'should render worshiped by wild child…'"
        },
        {
          "id": "157",
          "name": "Game Team Side Player Attribute Component Player Attribute Icon 'should render unknown icon when playe…'"
        },
        {
          "id": "158",
          "name": "Game Team Side Player Attribute Component Player Attribute Icon should have tooltip on right position when player is from villagers side."
        },
        {
          "id": "159",
          "name": "Game Team Side Player Attribute Component Player Attribute Icon should have tooltip on left position when player is from werewolves side."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport type { TooltipOptions } from \"primevue/tooltip\";\n\nimport type { NuxtImg } from \"#components\";\nimport type { GameTeamSidePlayerAttributeProps } from \"~/components/pages/game/GamePlaying/GameTeamSide/GameTeamSidePlayer/GameTeamSidePlayerAttribute/game-team-side-player-attribute.types\";\nimport GameTeamSidePlayerAttribute from \"~/components/pages/game/GamePlaying/GameTeamSide/GameTeamSidePlayer/GameTeamSidePlayerAttribute/GameTeamSidePlayerAttribute.vue\";\nimport type { PlayerAttribute } from \"~/composables/api/game/types/players/player-attribute/player-attribute.class\";\nimport { createFakeGame } from \"~/tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { createFakeActingByActorPlayerAttribute, createFakeCantVoteByScapegoatPlayerAttribute, createFakeCantVoteBySurvivorsPlayerAttribute, createFakeCharmedByPiedPiperPlayerAttribute, createFakeContaminatedByRustySwordKnightPlayerAttribute, createFakeDrankDeathPotionByWitchPlayerAttribute, createFakeDrankLifePotionByWitchPlayerAttribute, createFakeEatenByBigBadWolfPlayerAttribute, createFakeEatenByWerewolvesPlayerAttribute, createFakeEatenByWhiteWerewolfPlayerAttribute, createFakeInLoveByCupidPlayerAttribute, createFakePlayerAttribute, createFakePowerlessByAccursedWolfFatherPlayerAttribute, createFakePowerlessByActorPlayerAttribute, createFakePowerlessByElderPlayerAttribute, createFakePowerlessByFoxPlayerAttribute, createFakePowerlessByWerewolvesPlayerAttribute, createFakeProtectedByDefenderPlayerAttribute, createFakeScandalmongerMarkedByScandalmongerPlayerAttribute, createFakeSeenBySeerPlayerAttribute, createFakeSheriffBySheriffPlayerAttribute, createFakeSheriffBySurvivorsPlayerAttribute, createFakeStolenRoleByDevotedServantPlayerAttribute, createFakeWorshipedByWildChildPlayerAttribute } from \"~/tests/unit/utils/factories/composables/api/game/player/player-attribute/player-attribute.factory\";\nimport { createFakeSeerAlivePlayer, createFakeWerewolfAlivePlayer } from \"~/tests/unit/utils/factories/composables/api/game/player/player-with-role.factory\";\nimport { pTooltipDirectiveBinder } from \"~/tests/unit/utils/helpers/directive.helpers\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { BoundTooltip } from \"~/tests/unit/utils/types/directive.types\";\n\ndescribe(\"Game Team Side Player Attribute Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameTeamSidePlayerAttribute>>;\n  const defaultPlayer = createFakeSeerAlivePlayer();\n  const defaultPlayerAttribute = createFakeSeenBySeerPlayerAttribute();\n  const defaultProps: GameTeamSidePlayerAttributeProps = {\n    player: defaultPlayer,\n    attribute: defaultPlayerAttribute,\n  };\n\n  async function mountGameTeamSidePlayerAttributeComponent(options: ComponentMountingOptions<typeof GameTeamSidePlayerAttribute> = {}):\n  Promise<ReturnType<typeof mount<typeof GameTeamSidePlayerAttribute>>> {\n    return mountSuspendedComponent(GameTeamSidePlayerAttribute, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameTeamSidePlayerAttributeComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Player Attribute Icon\", () => {\n    it.each<{\n      attribute: PlayerAttribute;\n      expectedAlt: string;\n      expectedIconSrc: string;\n      test: string;\n    }>([\n      {\n        attribute: createFakeActingByActorPlayerAttribute(),\n        expectedAlt: \"components.GameTeamSidePlayerAttribute.actingByActor\",\n        expectedIconSrc: \"svg/role/actor.svg\",\n        test: \"should render acting by actor icon when player attribute is acting by actor.\",\n      },\n      {\n        attribute: createFakeCantVoteBySurvivorsPlayerAttribute(),\n        expectedAlt: \"components.GameTeamSidePlayerAttribute.cantVoteBySurvivors\",\n        expectedIconSrc: \"svg/game/player/player-attribute/cant-vote.svg\",\n        test: \"should render cant vote by survivors icon when player attribute is cant vote by survivors.\",\n      },\n      {\n        attribute: createFakeCantVoteByScapegoatPlayerAttribute(createFakeGame()),\n        expectedAlt: \"components.GameTeamSidePlayerAttribute.cantVoteByScapegoat\",\n        expectedIconSrc: \"svg/game/player/player-attribute/cant-vote.svg\",\n        test: \"should render cant vote by scapegoat icon when player attribute is cant vote by scapegoat.\",\n      },\n      {\n        attribute: createFakeCharmedByPiedPiperPlayerAttribute(),\n        expectedAlt: \"components.GameTeamSidePlayerAttribute.charmedByPiedPiper\",\n        expectedIconSrc: \"svg/game/player/player-attribute/charmed.svg\",\n        test: \"should render charmed by pied piper icon when player attribute is charmed by pied piper.\",\n      },\n      {\n        attribute: createFakeContaminatedByRustySwordKnightPlayerAttribute(),\n        expectedAlt: \"components.GameTeamSidePlayerAttribute.contaminatedByRustySwordKnight\",\n        expectedIconSrc: \"svg/game/player/player-attribute/contaminated.svg\",\n        test: \"should render contaminated by rusty sword knight icon when player attribute is contaminated by rusty sword knight.\",\n      },\n      {\n        attribute: createFakeDrankDeathPotionByWitchPlayerAttribute(),\n        expectedAlt: \"components.GameTeamSidePlayerAttribute.drankDeathPotionByWitch\",\n        expectedIconSrc: \"svg/game/player/player-attribute/drank-death-potion.svg\",\n        test: \"should render drank death potion by witch icon when player attribute is drank death potion by witch.\",\n      },\n      {\n        attribute: createFakeDrankLifePotionByWitchPlayerAttribute(),\n        expectedAlt: \"components.GameTeamSidePlayerAttribute.drankLifePotionByWitch\",\n        expectedIconSrc: \"svg/game/player/player-attribute/drank-life-potion.svg\",\n        test: \"should render drank life potion by witch icon when player attribute is drank life potion by witch.\",\n      },\n      {\n        attribute: createFakeEatenByWerewolvesPlayerAttribute(),\n        expectedAlt: \"components.GameTeamSidePlayerAttribute.eatenByWerewolves\",\n        expectedIconSrc: \"svg/role/werewolf.svg\",\n        test: \"should render eaten by werewolves icon when player attribute is eaten by werewolves.\",\n      },\n      {\n        attribute: createFakeEatenByWhiteWerewolfPlayerAttribute(),\n        expectedAlt: \"components.GameTeamSidePlayerAttribute.eatenByWhiteWerewolf\",\n        expectedIconSrc: \"svg/role/white-werewolf.svg\",\n        test: \"should render eaten by white werewolf icon when player attribute is eaten by white werewolf.\",\n      },\n      {\n        attribute: createFakeEatenByBigBadWolfPlayerAttribute(),\n        expectedAlt: \"components.GameTeamSidePlayerAttribute.eatenByBigBadWolf\",\n        expectedIconSrc: \"svg/role/big-bad-wolf.svg\",\n        test: \"should render eaten by big bad wolf icon when player attribute is eaten by big bad wolf.\",\n      },\n      {\n        attribute: createFakeInLoveByCupidPlayerAttribute(),\n        expectedAlt: \"components.GameTeamSidePlayerAttribute.inLoveByCupid\",\n        expectedIconSrc: \"svg/game/player/player-attribute/in-love.svg\",\n        test: \"should render in love by cupid icon when player attribute is in love by cupid.\",\n      },\n      {\n        attribute: createFakePowerlessByActorPlayerAttribute(),\n        expectedAlt: \"components.GameTeamSidePlayerAttribute.powerlessByActor\",\n        expectedIconSrc: \"svg/game/player/player-attribute/powerless.svg\",\n        test: \"should render powerless by actor icon when player attribute is powerless by actor.\",\n      },\n      {\n        attribute: createFakePowerlessByWerewolvesPlayerAttribute(),\n        expectedAlt: \"components.GameTeamSidePlayerAttribute.powerlessByWerewolves\",\n        expectedIconSrc: \"svg/game/player/player-attribute/powerless.svg\",\n        test: \"should render powerless by werewolves icon when player attribute is powerless by werewolves.\",\n      },\n      {\n        attribute: createFakePowerlessByAccursedWolfFatherPlayerAttribute(),\n        expectedAlt: \"components.GameTeamSidePlayerAttribute.powerlessByAccursedWolfFather\",\n        expectedIconSrc: \"svg/game/player/player-attribute/powerless.svg\",\n        test: \"should render powerless by accursed wolf father icon when player attribute is powerless by accursed wolf father.\",\n      },\n      {\n        attribute: createFakePowerlessByFoxPlayerAttribute(),\n        expectedAlt: \"components.GameTeamSidePlayerAttribute.powerlessByFox\",\n        expectedIconSrc: \"svg/game/player/player-attribute/powerless.svg\",\n        test: \"should render powerless by fox icon when player attribute is powerless by fox.\",\n      },\n      {\n        attribute: createFakePowerlessByElderPlayerAttribute(),\n        expectedAlt: \"components.GameTeamSidePlayerAttribute.powerlessByElder\",\n        expectedIconSrc: \"svg/game/player/player-attribute/powerless.svg\",\n        test: \"should render powerless by elder icon when player attribute is powerless by elder.\",\n      },\n      {\n        attribute: createFakeProtectedByDefenderPlayerAttribute(),\n        expectedAlt: \"components.GameTeamSidePlayerAttribute.protectedByDefender\",\n        expectedIconSrc: \"svg/game/player/player-attribute/protected.svg\",\n        test: \"should render protected by defender icon when player attribute is protected by defender.\",\n      },\n      {\n        attribute: createFakeScandalmongerMarkedByScandalmongerPlayerAttribute(),\n        expectedAlt: \"components.GameTeamSidePlayerAttribute.scandalmongerMarkedByScandalmonger\",\n        expectedIconSrc: \"svg/game/player/player-attribute/scandalmonger-marked.svg\",\n        test: \"should render scandalmonger marked by scandalmonger icon when player attribute is scandalmonger marked by scandalmonger.\",\n      },\n      {\n        attribute: createFakeSeenBySeerPlayerAttribute(),\n        expectedAlt: \"components.GameTeamSidePlayerAttribute.seenBySeer\",\n        expectedIconSrc: \"svg/game/player/player-attribute/seen.svg\",\n        test: \"should render seen by seer icon when player attribute is seen by seer.\",\n      },\n      {\n        attribute: createFakeSheriffBySheriffPlayerAttribute(),\n        expectedAlt: \"components.GameTeamSidePlayerAttribute.sheriffBySheriff\",\n        expectedIconSrc: \"svg/game/player/player-attribute/sheriff.svg\",\n        test: \"should render sheriff by sheriff icon when player attribute is sheriff by sheriff.\",\n      },\n      {\n        attribute: createFakeSheriffBySurvivorsPlayerAttribute(),\n        expectedAlt: \"components.GameTeamSidePlayerAttribute.sheriffBySurvivors\",\n        expectedIconSrc: \"svg/game/player/player-attribute/sheriff.svg\",\n        test: \"should render sheriff by survivors icon when player attribute is sheriff by survivors.\",\n      },\n      {\n        attribute: createFakeStolenRoleByDevotedServantPlayerAttribute(),\n        expectedAlt: \"components.GameTeamSidePlayerAttribute.stolenRoleByDevotedServant\",\n        expectedIconSrc: \"svg/game/player/player-attribute/stolen-role.svg\",\n        test: \"should render stolen role by devoted servant icon when player attribute is stolen role by devoted servant.\",\n      },\n      {\n        attribute: createFakeWorshipedByWildChildPlayerAttribute(),\n        expectedAlt: \"components.GameTeamSidePlayerAttribute.worshipedByWildChild\",\n        expectedIconSrc: \"svg/role/wild-child.svg\",\n        test: \"should render worshiped by wild child icon when player attribute is worshiped by wild child.\",\n      },\n      {\n        attribute: createFakePlayerAttribute({\n          source: \"hunter\",\n          name: \"eaten\",\n        }),\n        expectedAlt: \"components.GameTeamSidePlayerAttribute.unknownPlayerAttribute\",\n        expectedIconSrc: \"svg/misc/question-mark.svg\",\n        test: \"should render unknown icon when player attribute is unknown.\",\n      },\n    ])(\"$test\", async({ attribute, expectedAlt, expectedIconSrc }) => {\n      wrapper = await mountGameTeamSidePlayerAttributeComponent({ props: { ...defaultProps, attribute } });\n      const icon = wrapper.findComponent<typeof NuxtImg>(`#game-team-side-player-attribute-icon`);\n\n      expect(icon.attributes(\"src\")).toBe(expectedIconSrc);\n      expect(icon.attributes(\"alt\")).toBe(expectedAlt);\n    });\n\n    it(\"should have tooltip on right position when player is from villagers side.\", async() => {\n      const tooltip: BoundTooltip = { value: undefined, arg: undefined };\n      const directives = { ...pTooltipDirectiveBinder(tooltip, \"#game-team-side-player-attribute-icon\") };\n      wrapper = await mountGameTeamSidePlayerAttributeComponent({ global: { directives } });\n      const expectedTooltipOptions: TooltipOptions = {\n        value: `<div class=\"flex flex-col items-center\">\n                <img width=\"75\" src=\"/_ipx/_/svg/game/player/player-attribute/seen.svg\" alt=\"components.GameTeamSidePlayerAttribute.seenBySeer\" class=\"mb-3\"/>\n                <div class=\"text-center\">components.GameTeamSidePlayerAttribute.seenBySeer</div>\n            </div>`,\n        fitContent: false,\n        escape: false,\n      };\n\n      expect(tooltip.value).toStrictEqual<TooltipOptions>(expectedTooltipOptions);\n      expect(tooltip.arg).toStrictEqual({ position: \"right\" });\n    });\n\n    it(\"should have tooltip on left position when player is from werewolves side.\", async() => {\n      const tooltip: BoundTooltip = { value: undefined, arg: undefined };\n      const directives = { ...pTooltipDirectiveBinder(tooltip, \"#game-team-side-player-attribute-icon\") };\n      wrapper = await mountGameTeamSidePlayerAttributeComponent({\n        props: {\n          ...defaultProps,\n          player: createFakeWerewolfAlivePlayer(),\n        },\n        global: { directives },\n      });\n      const expectedTooltipOptions: TooltipOptions = {\n        value: `<div class=\"flex flex-col items-center\">\n                <img width=\"75\" src=\"/_ipx/_/svg/game/player/player-attribute/seen.svg\" alt=\"components.GameTeamSidePlayerAttribute.seenBySeer\" class=\"mb-3\"/>\n                <div class=\"text-center\">components.GameTeamSidePlayerAttribute.seenBySeer</div>\n            </div>`,\n        fitContent: false,\n        escape: false,\n      };\n\n      expect(tooltip.value).toStrictEqual<TooltipOptions>(expectedTooltipOptions);\n      expect(tooltip.arg).toStrictEqual({ position: \"left\" });\n    });\n  });\n});"
    },
    "tests/unit/specs/stores/game/make-game-play-dto/useMakeGamePlayDtoStore.spec.ts": {
      "tests": [
        {
          "id": "160",
          "name": "Make Game Play Dto Store should have initial state when created."
        },
        {
          "id": "161",
          "name": "Make Game Play Dto Store setMakeGamePlayDto should set makeGamePlayDto when called."
        },
        {
          "id": "162",
          "name": "Make Game Play Dto Store resetMakeGamePlayDto should reset make game play dto when called."
        },
        {
          "id": "163",
          "name": "Make Game Play Dto Store addMakeGamePlayTargetDto should add target to makeGamePlayDto when targets are undefined."
        },
        {
          "id": "164",
          "name": "Make Game Play Dto Store addMakeGamePlayTargetDto should add target to makeGamePlayDto when targets are defined."
        },
        {
          "id": "165",
          "name": "Make Game Play Dto Store removeMakeGamePlayTargetDto should not remove target from makeGamePlayDto when targets are undefined."
        },
        {
          "id": "166",
          "name": "Make Game Play Dto Store removeMakeGamePlayTargetDto should not remove target from makeGamePlayDto when target does not exist."
        },
        {
          "id": "167",
          "name": "Make Game Play Dto Store removeMakeGamePlayTargetDto should remove target from makeGamePlayDto when target exists."
        },
        {
          "id": "168",
          "name": "Make Game Play Dto Store removeMakeGamePlayTargetDto should remove target from makeGamePlayDto when target exists and set it as undefined because there is no targets left."
        },
        {
          "id": "169",
          "name": "Make Game Play Dto Store removeFirstMakeGamePlayTargetDto should not remove first target from makeGamePlayDto when targets are undefined."
        },
        {
          "id": "170",
          "name": "Make Game Play Dto Store removeFirstMakeGamePlayTargetDto should not remove first target from makeGamePlayDto when there is no targets."
        },
        {
          "id": "171",
          "name": "Make Game Play Dto Store removeFirstMakeGamePlayTargetDto should remove first target from makeGamePlayDto when there is targets."
        },
        {
          "id": "172",
          "name": "Make Game Play Dto Store removeFirstMakeGamePlayTargetDtoWithPotion should not remove first target from makeGamePlayDto when targets are undefined."
        },
        {
          "id": "173",
          "name": "Make Game Play Dto Store removeFirstMakeGamePlayTargetDtoWithPotion should not remove first target from makeGamePlayDto when there is no targets."
        },
        {
          "id": "174",
          "name": "Make Game Play Dto Store removeFirstMakeGamePlayTargetDtoWithPotion should not remove first target from makeGamePlayDto when there is no target with potion."
        },
        {
          "id": "175",
          "name": "Make Game Play Dto Store removeFirstMakeGamePlayTargetDtoWithPotion should remove first target from makeGamePlayDto when there is target with potion."
        },
        {
          "id": "176",
          "name": "Make Game Play Dto Store addMakeGamePlayVoteDto should add vote to makeGamePlayDto when votes are undefined."
        },
        {
          "id": "177",
          "name": "Make Game Play Dto Store addMakeGamePlayVoteDto should add vote to makeGamePlayDto when votes are defined."
        },
        {
          "id": "178",
          "name": "Make Game Play Dto Store removeMakeGamePlayVoteDto should not remove vote from makeGamePlayDto when votes are undefined."
        },
        {
          "id": "179",
          "name": "Make Game Play Dto Store removeMakeGamePlayVoteDto should not remove vote from makeGamePlayDto when vote does not exist."
        },
        {
          "id": "180",
          "name": "Make Game Play Dto Store removeMakeGamePlayVoteDto should remove vote from makeGamePlayDto when vote exists."
        },
        {
          "id": "181",
          "name": "Make Game Play Dto Store removeMakeGamePlayVoteDto should remove vote from makeGamePlayDto when vote exists and set it as undefined because there is no votes left."
        },
        {
          "id": "182",
          "name": "Make Game Play Dto Store setDoesJudgeRequestAnotherVote should set doesJudgeRequestAnotherVote when called."
        },
        {
          "id": "183",
          "name": "Make Game Play Dto Store setChosenCardId should set chosenCardId when called."
        },
        {
          "id": "184",
          "name": "Make Game Play Dto Store setChosenSide should set chosenSide when called."
        }
      ],
      "source": "import { createPinia, setActivePinia } from \"pinia\";\n\nimport { MakeGamePlayDto } from \"~/composables/api/game/dto/make-game-play/make-game-play.dto\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { useMakeGamePlayDtoStore } from \"~/stores/game/make-game-play-dto/useMakeGamePlayDtoStore\";\nimport { createFakeMakeGamePlayTargetDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/make-game-play/make-game-play-target/make-game-play-target.dto.factory\";\nimport { createFakeMakeGamePlayVoteDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/make-game-play/make-game-play-vote/make-game-play-vote.dto.factory\";\nimport { createFakeMakeGamePlayDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/make-game-play/make-game-play.dto.factory\";\n\ndescribe(\"Make Game Play Dto Store\", () => {\n  beforeEach(() => {\n    setActivePinia(createPinia());\n  });\n\n  it(\"should have initial state when created.\", () => {\n    const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n    const expectedMakeGamePlayDto = createFakeMakeGamePlayDto({});\n\n    expect(makeGamePlayDtoStore.makeGamePlayDto).toStrictEqual<MakeGamePlayDto>(expectedMakeGamePlayDto);\n  });\n\n  describe(\"setMakeGamePlayDto\", () => {\n    it(\"should set makeGamePlayDto when called.\", () => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      const expectedMakeGamePlayDto = createFakeMakeGamePlayDto({\n        targets: [],\n        votes: [],\n        doesJudgeRequestAnotherVote: true,\n        chosenCardId: \"cardId\",\n        chosenSide: \"werewolves\",\n      });\n      makeGamePlayDtoStore.setMakeGamePlayDto(expectedMakeGamePlayDto);\n\n      expect(makeGamePlayDtoStore.makeGamePlayDto).toStrictEqual<MakeGamePlayDto>(expectedMakeGamePlayDto);\n    });\n  });\n\n  describe(\"resetMakeGamePlayDto\", () => {\n    it(\"should reset make game play dto when called.\", () => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      makeGamePlayDtoStore.makeGamePlayDto = createFakeMakeGamePlayDto({\n        targets: [],\n        votes: [],\n        doesJudgeRequestAnotherVote: true,\n        chosenCardId: \"cardId\",\n        chosenSide: \"werewolves\",\n      });\n      const expectedMakeGamePlayDto = MakeGamePlayDto.create({});\n      makeGamePlayDtoStore.resetMakeGamePlayDto();\n\n      expect(makeGamePlayDtoStore.makeGamePlayDto).toStrictEqual<MakeGamePlayDto>(expectedMakeGamePlayDto);\n    });\n  });\n\n  describe(\"addMakeGamePlayTargetDto\", () => {\n    it(\"should add target to makeGamePlayDto when targets are undefined.\", () => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      makeGamePlayDtoStore.makeGamePlayDto = createFakeMakeGamePlayDto({});\n      const target = createFakeMakeGamePlayTargetDto();\n      makeGamePlayDtoStore.addMakeGamePlayTargetDto(target);\n\n      expect(makeGamePlayDtoStore.makeGamePlayDto.targets).toStrictEqual<MakeGamePlayDto[\"targets\"]>([target]);\n    });\n\n    it(\"should add target to makeGamePlayDto when targets are defined.\", () => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      const targets = [createFakeMakeGamePlayTargetDto()];\n      makeGamePlayDtoStore.makeGamePlayDto = createFakeMakeGamePlayDto({ targets });\n      const target = createFakeMakeGamePlayTargetDto();\n      makeGamePlayDtoStore.addMakeGamePlayTargetDto(target);\n      const expectedTargets = [...targets, target];\n\n      expect(makeGamePlayDtoStore.makeGamePlayDto.targets).toStrictEqual<MakeGamePlayDto[\"targets\"]>(expectedTargets);\n    });\n  });\n\n  describe(\"removeMakeGamePlayTargetDto\", () => {\n    it(\"should not remove target from makeGamePlayDto when targets are undefined.\", () => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      makeGamePlayDtoStore.makeGamePlayDto = createFakeMakeGamePlayDto({});\n      makeGamePlayDtoStore.removeMakeGamePlayTargetDto(\"targetId\");\n\n      expect(makeGamePlayDtoStore.makeGamePlayDto.targets).toBeUndefined();\n    });\n\n    it(\"should not remove target from makeGamePlayDto when target does not exist.\", () => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      const targets = [createFakeMakeGamePlayTargetDto({ playerId: \"anotherTargetId\" })];\n      makeGamePlayDtoStore.makeGamePlayDto = createFakeMakeGamePlayDto({ targets });\n      makeGamePlayDtoStore.removeMakeGamePlayTargetDto(\"targetId\");\n\n      expect(makeGamePlayDtoStore.makeGamePlayDto.targets).toStrictEqual<MakeGamePlayDto[\"targets\"]>(targets);\n    });\n\n    it(\"should remove target from makeGamePlayDto when target exists.\", () => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      const targets = [\n        createFakeMakeGamePlayTargetDto(),\n        createFakeMakeGamePlayTargetDto(),\n        createFakeMakeGamePlayTargetDto(),\n      ];\n      makeGamePlayDtoStore.makeGamePlayDto = createFakeMakeGamePlayDto({ targets });\n      makeGamePlayDtoStore.removeMakeGamePlayTargetDto(targets[1].playerId);\n      const expectedTargets = [targets[0], targets[2]];\n\n      expect(makeGamePlayDtoStore.makeGamePlayDto.targets).toStrictEqual<MakeGamePlayDto[\"targets\"]>(expectedTargets);\n    });\n\n    it(\"should remove target from makeGamePlayDto when target exists and set it as undefined because there is no targets left.\", () => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      const target = createFakeMakeGamePlayTargetDto();\n      const targets = [target];\n      makeGamePlayDtoStore.makeGamePlayDto = createFakeMakeGamePlayDto({ targets });\n      makeGamePlayDtoStore.removeMakeGamePlayTargetDto(target.playerId);\n\n      expect(makeGamePlayDtoStore.makeGamePlayDto.targets).toBeUndefined();\n    });\n  });\n\n  describe(\"removeFirstMakeGamePlayTargetDto\", () => {\n    it(\"should not remove first target from makeGamePlayDto when targets are undefined.\", () => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      makeGamePlayDtoStore.makeGamePlayDto = createFakeMakeGamePlayDto({});\n      makeGamePlayDtoStore.removeFirstMakeGamePlayTargetDto();\n\n      expect(makeGamePlayDtoStore.makeGamePlayDto.targets).toBeUndefined();\n    });\n\n    it(\"should not remove first target from makeGamePlayDto when there is no targets.\", () => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      makeGamePlayDtoStore.makeGamePlayDto = createFakeMakeGamePlayDto({ targets: [] });\n      makeGamePlayDtoStore.removeFirstMakeGamePlayTargetDto();\n\n      expect(makeGamePlayDtoStore.makeGamePlayDto.targets).toStrictEqual<Player[]>([]);\n    });\n\n    it(\"should remove first target from makeGamePlayDto when there is targets.\", () => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      const targets = [\n        createFakeMakeGamePlayTargetDto(),\n        createFakeMakeGamePlayTargetDto(),\n        createFakeMakeGamePlayTargetDto(),\n      ];\n      makeGamePlayDtoStore.makeGamePlayDto = createFakeMakeGamePlayDto({ targets });\n      makeGamePlayDtoStore.removeFirstMakeGamePlayTargetDto();\n      const expectedTargets = [targets[1], targets[2]];\n\n      expect(makeGamePlayDtoStore.makeGamePlayDto.targets).toStrictEqual<MakeGamePlayDto[\"targets\"]>(expectedTargets);\n    });\n  });\n\n  describe(\"removeFirstMakeGamePlayTargetDtoWithPotion\", () => {\n    it(\"should not remove first target from makeGamePlayDto when targets are undefined.\", () => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      makeGamePlayDtoStore.makeGamePlayDto = createFakeMakeGamePlayDto({});\n      makeGamePlayDtoStore.removeFirstMakeGamePlayTargetDtoWithPotion(\"life\");\n\n      expect(makeGamePlayDtoStore.makeGamePlayDto.targets).toBeUndefined();\n    });\n\n    it(\"should not remove first target from makeGamePlayDto when there is no targets.\", () => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      makeGamePlayDtoStore.makeGamePlayDto = createFakeMakeGamePlayDto({ targets: [] });\n      makeGamePlayDtoStore.removeFirstMakeGamePlayTargetDtoWithPotion(\"life\");\n\n      expect(makeGamePlayDtoStore.makeGamePlayDto.targets).toStrictEqual<Player[]>([]);\n    });\n\n    it(\"should not remove first target from makeGamePlayDto when there is no target with potion.\", () => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      const targets = [\n        createFakeMakeGamePlayTargetDto(),\n        createFakeMakeGamePlayTargetDto(),\n        createFakeMakeGamePlayTargetDto(),\n      ];\n      makeGamePlayDtoStore.makeGamePlayDto = createFakeMakeGamePlayDto({ targets });\n      makeGamePlayDtoStore.removeFirstMakeGamePlayTargetDtoWithPotion(\"life\");\n\n      expect(makeGamePlayDtoStore.makeGamePlayDto.targets).toStrictEqual<MakeGamePlayDto[\"targets\"]>(targets);\n    });\n\n    it(\"should remove first target from makeGamePlayDto when there is target with potion.\", () => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      const targets = [\n        createFakeMakeGamePlayTargetDto({ drankPotion: \"life\" }),\n        createFakeMakeGamePlayTargetDto(),\n        createFakeMakeGamePlayTargetDto({ drankPotion: \"life\" }),\n      ];\n      makeGamePlayDtoStore.makeGamePlayDto = createFakeMakeGamePlayDto({ targets });\n      makeGamePlayDtoStore.removeFirstMakeGamePlayTargetDtoWithPotion(\"life\");\n      const expectedTargets = [targets[1], targets[2]];\n\n      expect(makeGamePlayDtoStore.makeGamePlayDto.targets).toStrictEqual<MakeGamePlayDto[\"targets\"]>(expectedTargets);\n    });\n  });\n\n  describe(\"addMakeGamePlayVoteDto\", () => {\n    it(\"should add vote to makeGamePlayDto when votes are undefined.\", () => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      makeGamePlayDtoStore.makeGamePlayDto = createFakeMakeGamePlayDto({});\n      const vote = createFakeMakeGamePlayVoteDto();\n      makeGamePlayDtoStore.addMakeGamePlayVoteDto(vote);\n\n      expect(makeGamePlayDtoStore.makeGamePlayDto.votes).toStrictEqual<MakeGamePlayDto[\"votes\"]>([vote]);\n    });\n\n    it(\"should add vote to makeGamePlayDto when votes are defined.\", () => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      const votes = [createFakeMakeGamePlayVoteDto()];\n      makeGamePlayDtoStore.makeGamePlayDto = createFakeMakeGamePlayDto({ votes });\n      const vote = createFakeMakeGamePlayVoteDto();\n      makeGamePlayDtoStore.addMakeGamePlayVoteDto(vote);\n      const expectedVotes = [...votes, vote];\n\n      expect(makeGamePlayDtoStore.makeGamePlayDto.votes).toStrictEqual<MakeGamePlayDto[\"votes\"]>(expectedVotes);\n    });\n  });\n\n  describe(\"removeMakeGamePlayVoteDto\", () => {\n    it(\"should not remove vote from makeGamePlayDto when votes are undefined.\", () => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      makeGamePlayDtoStore.makeGamePlayDto = createFakeMakeGamePlayDto({});\n      makeGamePlayDtoStore.removeMakeGamePlayVoteDto(\"sourceId\");\n\n      expect(makeGamePlayDtoStore.makeGamePlayDto.votes).toBeUndefined();\n    });\n\n    it(\"should not remove vote from makeGamePlayDto when vote does not exist.\", () => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      const votes = [createFakeMakeGamePlayVoteDto({ sourceId: \"anotherSourceId\" })];\n      makeGamePlayDtoStore.makeGamePlayDto = createFakeMakeGamePlayDto({ votes });\n      makeGamePlayDtoStore.removeMakeGamePlayVoteDto(\"sourceId\");\n\n      expect(makeGamePlayDtoStore.makeGamePlayDto.votes).toStrictEqual<MakeGamePlayDto[\"votes\"]>(votes);\n    });\n\n    it(\"should remove vote from makeGamePlayDto when vote exists.\", () => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      const votes = [\n        createFakeMakeGamePlayVoteDto(),\n        createFakeMakeGamePlayVoteDto(),\n        createFakeMakeGamePlayVoteDto(),\n      ];\n      makeGamePlayDtoStore.makeGamePlayDto = createFakeMakeGamePlayDto({ votes });\n      makeGamePlayDtoStore.removeMakeGamePlayVoteDto(votes[1].sourceId);\n      const expectedVotes = [votes[0], votes[2]];\n\n      expect(makeGamePlayDtoStore.makeGamePlayDto.votes).toStrictEqual<MakeGamePlayDto[\"votes\"]>(expectedVotes);\n    });\n\n    it(\"should remove vote from makeGamePlayDto when vote exists and set it as undefined because there is no votes left.\", () => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      const vote = createFakeMakeGamePlayVoteDto();\n      const votes = [vote];\n      makeGamePlayDtoStore.makeGamePlayDto = createFakeMakeGamePlayDto({ votes });\n      makeGamePlayDtoStore.removeMakeGamePlayVoteDto(vote.sourceId);\n\n      expect(makeGamePlayDtoStore.makeGamePlayDto.votes).toBeUndefined();\n    });\n  });\n\n  describe(\"setDoesJudgeRequestAnotherVote\", () => {\n    it(\"should set doesJudgeRequestAnotherVote when called.\", () => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      makeGamePlayDtoStore.makeGamePlayDto = createFakeMakeGamePlayDto({});\n      makeGamePlayDtoStore.setDoesJudgeRequestAnotherVote(true);\n\n      expect(makeGamePlayDtoStore.makeGamePlayDto.doesJudgeRequestAnotherVote).toBeTruthy();\n    });\n  });\n\n  describe(\"setChosenCardId\", () => {\n    it(\"should set chosenCardId when called.\", () => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      makeGamePlayDtoStore.makeGamePlayDto = createFakeMakeGamePlayDto({});\n      makeGamePlayDtoStore.setChosenCardId(\"cardId\");\n\n      expect(makeGamePlayDtoStore.makeGamePlayDto.chosenCardId).toBe(\"cardId\");\n    });\n  });\n\n  describe(\"setChosenSide\", () => {\n    it(\"should set chosenSide when called.\", () => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      makeGamePlayDtoStore.makeGamePlayDto = createFakeMakeGamePlayDto({});\n      makeGamePlayDtoStore.setChosenSide(\"werewolves\");\n\n      expect(makeGamePlayDtoStore.makeGamePlayDto.chosenSide).toBe(\"werewolves\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GamePlaying/GamePlayground/CurrentPlayQuestion/CurrentPlayQuestion.nuxt.spec.ts": {
      "tests": [
        {
          "id": "185",
          "name": "Current Play Question Component should match snapshot when rendered."
        },
        {
          "id": "186",
          "name": "Current Play Question Component 'should render nothing when current pl…'"
        },
        {
          "id": "187",
          "name": "Current Play Question Component 'should render the question for accurs…'"
        },
        {
          "id": "188",
          "name": "Current Play Question Component 'should render the question for actor …'"
        },
        {
          "id": "189",
          "name": "Current Play Question Component 'should render the question for bear t…'"
        },
        {
          "id": "190",
          "name": "Current Play Question Component 'should render the question for big ba…'"
        },
        {
          "id": "191",
          "name": "Current Play Question Component 'should render the question for charme…'"
        },
        {
          "id": "192",
          "name": "Current Play Question Component 'should render the question for cupid …'"
        },
        {
          "id": "193",
          "name": "Current Play Question Component 'should render the question for defend…'"
        },
        {
          "id": "194",
          "name": "Current Play Question Component 'should render the question for fox sn…'"
        },
        {
          "id": "195",
          "name": "Current Play Question Component 'should render the question for hunter…'"
        },
        {
          "id": "196",
          "name": "Current Play Question Component 'should render the question for lovers…'"
        },
        {
          "id": "197",
          "name": "Current Play Question Component 'should render the question for pied p…'"
        },
        {
          "id": "198",
          "name": "Current Play Question Component 'should render the question for scanda…'"
        },
        {
          "id": "199",
          "name": "Current Play Question Component 'should render the question for scapeg…'"
        },
        {
          "id": "200",
          "name": "Current Play Question Component 'should render the question for seer l…'"
        },
        {
          "id": "201",
          "name": "Current Play Question Component 'should render the question for sherif…'"
        },
        {
          "id": "202",
          "name": "Current Play Question Component 'should render the question for stutte…'"
        },
        {
          "id": "203",
          "name": "Current Play Question Component 'should render the question for surviv…'"
        },
        {
          "id": "204",
          "name": "Current Play Question Component 'should render the question for thief …'"
        },
        {
          "id": "205",
          "name": "Current Play Question Component 'should render the question for three …'"
        },
        {
          "id": "206",
          "name": "Current Play Question Component 'should render the question for two si…'"
        },
        {
          "id": "207",
          "name": "Current Play Question Component 'should render the question for werewo…'"
        },
        {
          "id": "208",
          "name": "Current Play Question Component 'should render the question for white …'"
        },
        {
          "id": "209",
          "name": "Current Play Question Component 'should render the question for wild c…'"
        },
        {
          "id": "210",
          "name": "Current Play Question Component 'should render the question for witch …'"
        },
        {
          "id": "211",
          "name": "Current Play Question Component 'should render the question for wolf h…'"
        },
        {
          "id": "212",
          "name": "Current Play Question Component 'should render unknown question when a…'"
        },
        {
          "id": "213",
          "name": "Current Play Question Component 'should render unknown question when c…'"
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\n\nimport CurrentPlayQuestion from \"~/components/pages/game/GamePlaying/GamePlayground/CurrentPlayQuestion/CurrentPlayQuestion.vue\";\nimport type { GamePlay } from \"~/composables/api/game/types/game-play/game-play.class\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\nimport { createFakeGamePlayAccursedWolfFatherInfects, createFakeGamePlayActorChoosesCard, createFakeGamePlayBearTamerGrowls, createFakeGamePlayBigBadWolfEats, createFakeGamePlayCharmedMeetEachOther, createFakeGamePlayCupidCharms, createFakeGamePlayDefenderProtects, createFakeGamePlayFoxSniffs, createFakeGamePlayHunterShoots, createFakeGamePlayLoversMeetEachOther, createFakeGamePlayPiedPiperCharms, createFakeGamePlayScandalmongerMarks, createFakeGamePlayScapegoatBansVoting, createFakeGamePlaySeerLooks, createFakeGamePlaySheriffDelegates, createFakeGamePlaySheriffSettlesVotes, createFakeGamePlayStutteringJudgeRequestsAnotherVote, createFakeGamePlaySurvivorsBuryDeadBodies, createFakeGamePlaySurvivorsElectSheriff, createFakeGamePlaySurvivorsVote, createFakeGamePlayThiefChoosesCard, createFakeGamePlayThreeBrothersMeetEachOther, createFakeGamePlayTwoSistersMeetEachOther, createFakeGamePlayWerewolvesEat, createFakeGamePlayWhiteWerewolfEats, createFakeGamePlayWildChildChoosesModel, createFakeGamePlayWitchUsesPotions, createFakeGamePlayWolfHoundChoosesSide } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play.factory\";\nimport { createFakeGame } from \"~/tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Current Play Question Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof CurrentPlayQuestion>>;\n  const testingPinia = { initialState: { [StoreIds.GAME]: { game: createFakeGame({ currentPlay: createFakeGamePlayCupidCharms() }) } } };\n\n  async function mountCurrentPlayQuestionComponent(): Promise<ReturnType<typeof mount<typeof CurrentPlayQuestion>>> {\n    return mountSuspendedComponent(CurrentPlayQuestion, { global: { plugins: [createTestingPinia(testingPinia)] } });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountCurrentPlayQuestionComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  it.each<{\n    currentPlay: GamePlay | null;\n    expectedQuestion: string;\n    test: string;\n  }>([\n    {\n      currentPlay: null,\n      expectedQuestion: \"components.CurrentPlayQuestion.unknownQuestionForCurrentPlay\",\n      test: \"should render nothing when current play is null.\",\n    },\n    {\n      currentPlay: createFakeGamePlayAccursedWolfFatherInfects(),\n      expectedQuestion: \"components.CurrentPlayQuestion.doesAccursedWolfFatherWantToInfect\",\n      test: \"should render the question for accursed wolf father infects when current play is accursed wolf father who infects.\",\n    },\n    {\n      currentPlay: createFakeGamePlayActorChoosesCard(),\n      expectedQuestion: \"components.CurrentPlayQuestion.doesActorWantToChooseCard\",\n      test: \"should render the question for actor chooses card when current play is actor who chooses card.\",\n    },\n    {\n      currentPlay: createFakeGamePlayBearTamerGrowls(),\n      expectedQuestion: \"components.CurrentPlayQuestion.bearGrowled\",\n      test: \"should render the question for bear tamer growls when current play is bear tamer who growls.\",\n    },\n    {\n      currentPlay: createFakeGamePlayBigBadWolfEats(),\n      expectedQuestion: \"components.CurrentPlayQuestion.whichPlayerDoesBigBadWolfEat\",\n      test: \"should render the question for big bad wolf eats when current play is big bad wolf who eats.\",\n    },\n    {\n      currentPlay: createFakeGamePlayCharmedMeetEachOther(),\n      expectedQuestion: \"components.CurrentPlayQuestion.charmedPeopleMeetEachOther\",\n      test: \"should render the question for charmed meet each other when current play is charmed who meet each other.\",\n    },\n    {\n      currentPlay: createFakeGamePlayCupidCharms(),\n      expectedQuestion: \"components.CurrentPlayQuestion.whichPlayersDoesCupidCharm\",\n      test: \"should render the question for cupid charms when current play is cupid who charms.\",\n    },\n    {\n      currentPlay: createFakeGamePlayDefenderProtects(),\n      expectedQuestion: \"components.CurrentPlayQuestion.whichPlayerDoesDefenderProtect\",\n      test: \"should render the question for defender protects when current play is defender who protects.\",\n    },\n    {\n      currentPlay: createFakeGamePlayFoxSniffs(),\n      expectedQuestion: \"components.CurrentPlayQuestion.doesFoxWantToSniff\",\n      test: \"should render the question for fox sniffs when current play is fox who sniffs.\",\n    },\n    {\n      currentPlay: createFakeGamePlayHunterShoots(),\n      expectedQuestion: \"components.CurrentPlayQuestion.whichPlayerDoesHunterShoot\",\n      test: \"should render the question for hunter shoots when current play is hunter who shoots.\",\n    },\n    {\n      currentPlay: createFakeGamePlayLoversMeetEachOther(),\n      expectedQuestion: \"components.CurrentPlayQuestion.loversMeetEachOther\",\n      test: \"should render the question for lovers meet each other when current play is lovers who meet each other.\",\n    },\n    {\n      currentPlay: createFakeGamePlayPiedPiperCharms(),\n      expectedQuestion: \"components.CurrentPlayQuestion.whichPlayersDoesPiedPiperCharm\",\n      test: \"should render the question for pied piper charms when current play is pied piper who charms.\",\n    },\n    {\n      currentPlay: createFakeGamePlayScandalmongerMarks(),\n      expectedQuestion: \"components.CurrentPlayQuestion.doesScandalmongerWantToMark\",\n      test: \"should render the question for scandalmonger marks when current play is scandalmonger who marks.\",\n    },\n    {\n      currentPlay: createFakeGamePlayScapegoatBansVoting(),\n      expectedQuestion: \"components.CurrentPlayQuestion.doesScapegoatWantToBanVoting\",\n      test: \"should render the question for scapegoat bans voting when current play is scapegoat who bans voting.\",\n    },\n    {\n      currentPlay: createFakeGamePlaySeerLooks(),\n      expectedQuestion: \"components.CurrentPlayQuestion.whichPlayerDoesSeerLook\",\n      test: \"should render the question for seer looks when current play is seer who looks.\",\n    },\n    {\n      currentPlay: createFakeGamePlaySheriffDelegates(),\n      expectedQuestion: \"components.CurrentPlayQuestion.whichPlayerDoesSheriffDelegate\",\n      test: \"should render the question for sheriff delegates when current play is sheriff who delegates.\",\n    },\n    {\n      currentPlay: createFakeGamePlaySheriffSettlesVotes(),\n      expectedQuestion: \"components.CurrentPlayQuestion.whichPlayerDoesSheriffSettleVotes\",\n      test: \"should render the question for sheriff settles votes when current play is sheriff who settles votes.\",\n    },\n    {\n      currentPlay: createFakeGamePlayStutteringJudgeRequestsAnotherVote(),\n      expectedQuestion: \"components.CurrentPlayQuestion.doesJudgeRequestAnotherVote\",\n      test: \"should render the question for stuttering judge requests another vote when current play is stuttering judge who requests another vote.\",\n    },\n    {\n      currentPlay: createFakeGamePlaySurvivorsBuryDeadBodies(),\n      expectedQuestion: \"\",\n      test: \"should render nothing when current play is survivors bury dead bodies.\",\n    },\n    {\n      currentPlay: createFakeGamePlaySurvivorsElectSheriff(),\n      expectedQuestion: \"components.CurrentPlayQuestion.whichPlayerDoesSurvivorsElectAsSheriff\",\n      test: \"should render the question for survivors elect sheriff when current play is survivors who elect sheriff.\",\n    },\n    {\n      currentPlay: createFakeGamePlaySurvivorsElectSheriff({ cause: \"previous-votes-were-in-ties\" }),\n      expectedQuestion: \"components.CurrentPlayQuestion.whichPlayerDoesSurvivorsElectSheriffOnTie\",\n      test: \"should render the question for survivors elect sheriff when current play is survivors who elect sheriff and previous votes were in tie.\",\n    },\n    {\n      currentPlay: createFakeGamePlaySurvivorsVote(),\n      expectedQuestion: \"components.CurrentPlayQuestion.whichPlayerDoesSurvivorsVoteFor\",\n      test: \"should render the question for survivors vote when current play is survivors who vote and there is no cause.\",\n    },\n    {\n      currentPlay: createFakeGamePlaySurvivorsVote({ cause: \"angel-presence\" }),\n      expectedQuestion: \"components.CurrentPlayQuestion.whichPlayerDoesSurvivorsVoteFor\",\n      test: \"should render the question for survivors vote when current play is survivors who vote and cause is angel presence.\",\n    },\n    {\n      currentPlay: createFakeGamePlaySurvivorsVote({ cause: \"stuttering-judge-request\" }),\n      expectedQuestion: \"components.CurrentPlayQuestion.whichPlayerDoesSurvivorsVoteForOnJudgeRequest\",\n      test: \"should render the question for survivors vote when current play is survivors who vote and cause is stuttering judge request.\",\n    },\n    {\n      currentPlay: createFakeGamePlaySurvivorsVote({ cause: \"previous-votes-were-in-ties\" }),\n      expectedQuestion: \"components.CurrentPlayQuestion.whichPlayerDoesSurvivorsVoteForOnTie\",\n      test: \"should render the question for survivors vote when current play is survivors who vote and cause is stuttering judge request and target is player 1.\",\n    },\n    {\n      currentPlay: createFakeGamePlayThiefChoosesCard(),\n      expectedQuestion: \"components.CurrentPlayQuestion.doesThiefWantToChooseCard\",\n      test: \"should render the question for thief chooses card when current play is thief who chooses card.\",\n    },\n    {\n      currentPlay: createFakeGamePlayThreeBrothersMeetEachOther(),\n      expectedQuestion: \"components.CurrentPlayQuestion.threeBrothersMeetEachOther\",\n      test: \"should render the question for three brothers meet each other when current play is three brothers who meet each other.\",\n    },\n    {\n      currentPlay: createFakeGamePlayTwoSistersMeetEachOther(),\n      expectedQuestion: \"components.CurrentPlayQuestion.twoSistersMeetEachOther\",\n      test: \"should render the question for two sisters meet each other when current play is two sisters who meet each other.\",\n    },\n    {\n      currentPlay: createFakeGamePlayWerewolvesEat(),\n      expectedQuestion: \"components.CurrentPlayQuestion.whichPlayerDoesWerewolvesEat\",\n      test: \"should render the question for werewolves eat when current play is werewolves who eat.\",\n    },\n    {\n      currentPlay: createFakeGamePlayWhiteWerewolfEats(),\n      expectedQuestion: \"components.CurrentPlayQuestion.doesWhiteWerewolfWantToEat\",\n      test: \"should render the question for white werewolf eats when current play is white werewolf who eats.\",\n    },\n    {\n      currentPlay: createFakeGamePlayWildChildChoosesModel(),\n      expectedQuestion: \"components.CurrentPlayQuestion.whichPlayerDoesWildChildChoose\",\n      test: \"should render the question for wild child chooses model when current play is wild child who chooses model.\",\n    },\n    {\n      currentPlay: createFakeGamePlayWitchUsesPotions(),\n      expectedQuestion: \"components.CurrentPlayQuestion.doesWitchWantToUsePotions\",\n      test: \"should render the question for witch uses potions when current play is witch who uses potions.\",\n    },\n    {\n      currentPlay: createFakeGamePlayWolfHoundChoosesSide(),\n      expectedQuestion: \"components.CurrentPlayQuestion.whichSideDoesWolfHoundChoose\",\n      test: \"should render the question for wolf hound chooses side when current play is wolf hound who chooses side.\",\n    },\n    {\n      currentPlay: createFakeGamePlayWitchUsesPotions({ action: \"shoot\" }),\n      expectedQuestion: \"components.CurrentPlayQuestion.unknownQuestionForCurrentPlay\",\n      test: \"should render unknown question when action is not relevant.\",\n    },\n    {\n      currentPlay: createFakeGamePlayWitchUsesPotions({ cause: \"stuttering-judge-request\" }),\n      expectedQuestion: \"components.CurrentPlayQuestion.unknownQuestionForCurrentPlay\",\n      test: \"should render unknown question when cause is not relevant.\",\n    },\n  ])(\"$test\", async({ currentPlay, expectedQuestion }) => {\n    const gameStore = useGameStore();\n    gameStore.game.currentPlay = currentPlay;\n    await nextTick();\n    const question = wrapper.find<HTMLHeadingElement>(\"#current-play-question\");\n\n    expect(question.text()).toBe(expectedQuestion);\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/WitchUsePotionsTabView/WitchUsePotionsTabView.nuxt.spec.ts": {
      "tests": [
        {
          "id": "214",
          "name": "Witch Use Potions Tab View Component should match snapshot when rendered."
        },
        {
          "id": "215",
          "name": "Witch Use Potions Tab View Component Tab View should have active index set to 0 when witch still has life potion."
        },
        {
          "id": "216",
          "name": "Witch Use Potions Tab View Component Tab View should have active index set to 1 when witch doesn't have life potion anymore."
        },
        {
          "id": "217",
          "name": "Witch Use Potions Tab View Component Give Life Potion Panel should disable panel when witch doesn't have life potion anymore."
        },
        {
          "id": "218",
          "name": "Witch Use Potions Tab View Component Give Life Potion Panel should enable panel when witch still has life potion."
        },
        {
          "id": "219",
          "name": "Witch Use Potions Tab View Component Give Life Potion Panel should display life potion image when rendered."
        },
        {
          "id": "220",
          "name": "Witch Use Potions Tab View Component Give Life Potion Panel should translate give life potion panel title when rendered."
        },
        {
          "id": "221",
          "name": "Witch Use Potions Tab View Component Give Life Potion Panel should render eligible targets for life potion when there is an interaction for it."
        },
        {
          "id": "222",
          "name": "Witch Use Potions Tab View Component Give Death Potion Panel should disable panel when witch doesn't have death potion anymore."
        },
        {
          "id": "223",
          "name": "Witch Use Potions Tab View Component Give Death Potion Panel should enable panel when witch still has death potion."
        },
        {
          "id": "224",
          "name": "Witch Use Potions Tab View Component Give Death Potion Panel should display death potion image when rendered."
        },
        {
          "id": "225",
          "name": "Witch Use Potions Tab View Component Give Death Potion Panel should translate give death potion panel title when rendered."
        },
        {
          "id": "226",
          "name": "Witch Use Potions Tab View Component Give Death Potion Panel should render eligible targets for death potion when there is an interaction for it."
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport TabPanel from \"primevue/tabpanel\";\nimport type TabView from \"primevue/tabview\";\n\nimport type { NuxtImg } from \"#components\";\nimport type GamePlaygroundPlayerCard from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.vue\";\nimport WitchUsePotionsTabView from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/WitchUsePotionsTabView/WitchUsePotionsTabView.vue\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\nimport { createFakeGamePlaySourceInteraction } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction.factory\";\nimport { createFakeGamePlaySource } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source.factory\";\nimport { createFakeGamePlayWitchUsesPotions } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play.factory\";\nimport { createFakeGame } from \"~/tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { createFakePlayer } from \"~/tests/unit/utils/factories/composables/api/game/player/player.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Witch Use Potions Tab View Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof WitchUsePotionsTabView>>;\n  const testingPinia = {\n    initialState: {\n      [StoreIds.GAME]: {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlayWitchUsesPotions({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  type: \"give-life-potion\",\n                  eligibleTargets: [\n                    createFakePlayer(),\n                    createFakePlayer(),\n                  ],\n                }),\n              ],\n            }),\n          }),\n        }),\n      },\n    },\n  };\n\n  async function mountWitchUsePotionsTabViewComponent(options: ComponentMountingOptions<typeof WitchUsePotionsTabView> = {}):\n  Promise<ReturnType<typeof mount<typeof WitchUsePotionsTabView>>> {\n    return mountSuspendedComponent(WitchUsePotionsTabView, {\n      shallow: false,\n      global: {\n        stubs: {\n          GamePlaygroundPlayerCard: true,\n          NuxtImg: true,\n        },\n        plugins: [createTestingPinia(testingPinia)],\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountWitchUsePotionsTabViewComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Tab View\", () => {\n    it(\"should have active index set to 0 when witch still has life potion.\", async() => {\n      wrapper = await mountWitchUsePotionsTabViewComponent({ shallow: true });\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlayWitchUsesPotions({\n        source: createFakeGamePlaySource({\n          interactions: [\n            createFakeGamePlaySourceInteraction({\n              type: \"give-life-potion\",\n              eligibleTargets: [\n                createFakePlayer(),\n                createFakePlayer(),\n              ],\n            }),\n          ],\n        }),\n      });\n      await nextTick();\n      const tabView = wrapper.findComponent<typeof TabView>(\"#witch-use-potions-tab-view\");\n\n      expect(tabView.attributes(\"active-index\")).toBe(\"0\");\n    });\n\n    it(\"should have active index set to 1 when witch doesn't have life potion anymore.\", async() => {\n      wrapper = await mountWitchUsePotionsTabViewComponent({ shallow: true });\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlayWitchUsesPotions({\n        source: createFakeGamePlaySource({\n          interactions: [\n            createFakeGamePlaySourceInteraction({\n              type: \"give-death-potion\",\n              eligibleTargets: [\n                createFakePlayer(),\n                createFakePlayer(),\n              ],\n            }),\n          ],\n        }),\n      });\n      await nextTick();\n      const tabView = wrapper.findComponent<typeof WitchUsePotionsTabView>(\"#witch-use-potions-tab-view\");\n\n      expect(tabView.attributes(\"active-index\")).toBe(\"1\");\n    });\n  });\n\n  describe(\"Give Life Potion Panel\", () => {\n    it(\"should disable panel when witch doesn't have life potion anymore.\", async() => {\n      wrapper = await mountWitchUsePotionsTabViewComponent({\n        global: {\n          stubs: {\n            TabPanel: true,\n            GamePlaygroundPlayerCard: true,\n            NuxtImg: true,\n          },\n          plugins: [createTestingPinia(testingPinia)],\n        },\n      });\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlayWitchUsesPotions({\n        source: createFakeGamePlaySource({\n          interactions: [\n            createFakeGamePlaySourceInteraction({\n              type: \"give-death-potion\",\n              eligibleTargets: [\n                createFakePlayer(),\n                createFakePlayer(),\n              ],\n            }),\n          ],\n        }),\n      });\n      await nextTick();\n      const tabPanels = wrapper.findAllComponents<typeof TabPanel>(TabPanel);\n      const giveLifePotionPanel = tabPanels[0];\n\n      expect(giveLifePotionPanel.attributes(\"disabled\")).toBe(\"true\");\n    });\n\n    it(\"should enable panel when witch still has life potion.\", async() => {\n      wrapper = await mountWitchUsePotionsTabViewComponent({\n        global: {\n          stubs: {\n            TabPanel: true,\n            GamePlaygroundPlayerCard: true,\n            NuxtImg: true,\n          },\n          plugins: [createTestingPinia(testingPinia)],\n        },\n      });\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlayWitchUsesPotions({\n        source: createFakeGamePlaySource({\n          interactions: [\n            createFakeGamePlaySourceInteraction({\n              type: \"give-life-potion\",\n              eligibleTargets: [\n                createFakePlayer(),\n                createFakePlayer(),\n              ],\n            }),\n          ],\n        }),\n      });\n      await nextTick();\n      const tabPanels = wrapper.findAllComponents<typeof TabPanel>(TabPanel);\n      const giveLifePotionPanel = tabPanels[0];\n\n      expect(giveLifePotionPanel.attributes(\"disabled\")).toBe(\"false\");\n    });\n\n    it(\"should display life potion image when rendered.\", () => {\n      const lifePotionImage = wrapper.findComponent<typeof NuxtImg>(\"[alt='Image of the life potion']\");\n\n      expect(lifePotionImage.attributes(\"src\")).toBe(\"svg/game/player/player-attribute/drank-life-potion.svg\");\n    });\n\n    it(\"should translate give life potion panel title when rendered.\", () => {\n      const giveLifePotionPanel = wrapper.find<HTMLAnchorElement>(\"#witch-use-potions-tab-view_0_header_action\");\n\n      expect(giveLifePotionPanel.text()).toBe(\"Give life potion to save the player…\");\n    });\n\n    it(\"should render eligible targets for life potion when there is an interaction for it.\", async() => {\n      const eligibleTargets = [\n        createFakePlayer(),\n        createFakePlayer(),\n      ];\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlayWitchUsesPotions({\n        source: createFakeGamePlaySource({\n          interactions: [\n            createFakeGamePlaySourceInteraction({\n              type: \"give-life-potion\",\n              eligibleTargets,\n            }),\n          ],\n        }),\n      });\n      await wrapper.vm.$nextTick();\n      const eligibleLifeTargets = wrapper.findAllComponents<typeof GamePlaygroundPlayerCard>(\".life-potion-target\");\n\n      expect(eligibleLifeTargets).toHaveLength(2);\n      expect(eligibleLifeTargets[0].props(\"player\")).toStrictEqual<Player>(eligibleTargets[0]);\n      expect(eligibleLifeTargets[1].props(\"player\")).toStrictEqual<Player>(eligibleTargets[1]);\n    });\n  });\n\n  describe(\"Give Death Potion Panel\", () => {\n    it(\"should disable panel when witch doesn't have death potion anymore.\", async() => {\n      wrapper = await mountWitchUsePotionsTabViewComponent({\n        global: {\n          stubs: {\n            TabPanel: true,\n            GamePlaygroundPlayerCard: true,\n            NuxtImg: true,\n          },\n          plugins: [createTestingPinia(testingPinia)],\n        },\n      });\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlayWitchUsesPotions({\n        source: createFakeGamePlaySource({\n          interactions: [\n            createFakeGamePlaySourceInteraction({\n              type: \"give-life-potion\",\n              eligibleTargets: [\n                createFakePlayer(),\n                createFakePlayer(),\n              ],\n            }),\n          ],\n        }),\n      });\n      await nextTick();\n      const tabPanels = wrapper.findAllComponents<typeof TabPanel>(TabPanel);\n      const giveDeathPotionPanel = tabPanels[1];\n\n      expect(giveDeathPotionPanel.attributes(\"disabled\")).toBe(\"true\");\n    });\n\n    it(\"should enable panel when witch still has death potion.\", async() => {\n      wrapper = await mountWitchUsePotionsTabViewComponent({\n        global: {\n          stubs: {\n            TabPanel: true,\n            GamePlaygroundPlayerCard: true,\n            NuxtImg: true,\n          },\n          plugins: [createTestingPinia(testingPinia)],\n        },\n      });\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlayWitchUsesPotions({\n        source: createFakeGamePlaySource({\n          interactions: [\n            createFakeGamePlaySourceInteraction({\n              type: \"give-death-potion\",\n              eligibleTargets: [\n                createFakePlayer(),\n                createFakePlayer(),\n              ],\n            }),\n          ],\n        }),\n      });\n      await nextTick();\n      const tabPanels = wrapper.findAllComponents<typeof TabPanel>(TabPanel);\n      const giveDeathPotionPanel = tabPanels[1];\n\n      expect(giveDeathPotionPanel.attributes(\"disabled\")).toBe(\"false\");\n    });\n\n    it(\"should display death potion image when rendered.\", () => {\n      const deathPotionImage = wrapper.findComponent<typeof NuxtImg>(\"[alt='Image of the death potion']\");\n\n      expect(deathPotionImage.attributes(\"src\")).toBe(\"svg/game/player/player-attribute/drank-death-potion.svg\");\n    });\n\n    it(\"should translate give death potion panel title when rendered.\", () => {\n      const giveDeathPotionPanel = wrapper.find<HTMLAnchorElement>(\"#witch-use-potions-tab-view_1_header_action\");\n\n      expect(giveDeathPotionPanel.text()).toBe(\"Give death potion to kill the player…\");\n    });\n\n    it(\"should render eligible targets for death potion when there is an interaction for it.\", async() => {\n      const eligibleTargets = [\n        createFakePlayer(),\n        createFakePlayer(),\n      ];\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlayWitchUsesPotions({\n        source: createFakeGamePlaySource({\n          interactions: [\n            createFakeGamePlaySourceInteraction({\n              type: \"give-death-potion\",\n              eligibleTargets,\n            }),\n          ],\n        }),\n      });\n      await wrapper.vm.$nextTick();\n      const eligibleDeathTargets = wrapper.findAllComponents<typeof GamePlaygroundPlayerCard>(\".death-potion-target\");\n\n      expect(eligibleDeathTargets).toHaveLength(2);\n      expect(eligibleDeathTargets[0].props(\"player\")).toStrictEqual<Player>(eligibleTargets[0]);\n      expect(eligibleDeathTargets[1].props(\"player\")).toStrictEqual<Player>(eligibleTargets[1]);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCardVoteInput/GamePlaygroundPlayerCardVoteInput.nuxt.spec.ts": {
      "tests": [
        {
          "id": "227",
          "name": "Game Playground Player Card Vote Input Component should match snapshot when rendered."
        },
        {
          "id": "228",
          "name": "Game Playground Player Card Vote Input Component Label should render translated float label text when rendered."
        },
        {
          "id": "229",
          "name": "Game Playground Player Card Vote Input Component Autocomplete should have null as model value when render."
        },
        {
          "id": "230",
          "name": "Game Playground Player Card Vote Input Component Autocomplete should pass empty array as suggestions when render."
        },
        {
          "id": "231",
          "name": "Game Playground Player Card Vote Input Component Autocomplete should pass empty array as suggestions when there is no current play on complete event."
        },
        {
          "id": "232",
          "name": "Game Playground Player Card Vote Input Component Autocomplete should pass empty array as suggestions when there is no current play eligible targets on complete event."
        },
        {
          "id": "233",
          "name": "Game Playground Player Card Vote Input Component Autocomplete should pass empty array as suggestions when there is no current play source interactions on complete event."
        },
        {
          "id": "234",
          "name": "Game Playground Player Card Vote Input Component Autocomplete should pass empty array as suggestions when there is no current play source interactions (empty array) on complete event."
        },
        {
          "id": "235",
          "name": "Game Playground Player Card Vote Input Component Autocomplete should pass all players without the player in props himself as suggestions when query is empty on complete event."
        },
        {
          "id": "236",
          "name": "Game Playground Player Card Vote Input Component Autocomplete should pass players with similar name without the player in props himself as suggestions when query the player's name himself on complete event."
        },
        {
          "id": "237",
          "name": "Game Playground Player Card Vote Input Component Autocomplete should empty suggestions when hide event is emitted."
        },
        {
          "id": "238",
          "name": "Game Playground Player Card Vote Input Component Autocomplete should do nothing when v-model change event is emitted but value is string."
        },
        {
          "id": "239",
          "name": "Game Playground Player Card Vote Input Component Autocomplete should remove make game play vote from dto when item select event is emitted and player is null."
        },
        {
          "id": "240",
          "name": "Game Playground Player Card Vote Input Component Autocomplete should remove make game play vote from dto when v-model change event is emitted and player is voted."
        },
        {
          "id": "241",
          "name": "Game Playground Player Card Vote Input Component Autocomplete should add make game play vote from dto when item select event is emitted and player is voted."
        },
        {
          "id": "242",
          "name": "Game Playground Player Card Vote Input Component Autocomplete should have the same value as the player in props when v-model change event is emitted and player is voted."
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport Fuse from \"fuse.js\";\nimport type { AutoCompleteChangeEvent } from \"primevue/autocomplete\";\n\nimport { VuePrimeAutoComplete } from \"#components\";\nimport type { GamePlaygroundPlayerCardVoteInputProps } from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCardVoteInput/game-playground-player-card-vote-input.types\";\nimport GamePlaygroundPlayerCardVoteInput from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCardVoteInput/GamePlaygroundPlayerCardVoteInput.vue\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\nimport { useMakeGamePlayDtoStore } from \"~/stores/game/make-game-play-dto/useMakeGamePlayDtoStore\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\nimport { createFakeGamePlaySourceInteraction } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction.factory\";\nimport { createFakeGamePlaySource } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source.factory\";\nimport { createFakeGamePlay, createFakeGamePlaySurvivorsVote } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play.factory\";\nimport { createFakeGame } from \"~/tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { createFakeSeerAlivePlayer } from \"~/tests/unit/utils/factories/composables/api/game/player/player-with-role.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Playground Player Card Vote Input Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GamePlaygroundPlayerCardVoteInput>>;\n  const defaultPlayer = createFakeSeerAlivePlayer({ name: \"Antoine\" });\n  const players = [\n    createFakeSeerAlivePlayer({ name: \"Antoinette\" }),\n    createFakeSeerAlivePlayer({ name: \"Johnny\" }),\n    defaultPlayer,\n    createFakeSeerAlivePlayer({ name: \"Antony\" }),\n  ];\n  const pinia = {\n    initialState: {\n      [StoreIds.GAME]: {\n        game: createFakeGame({\n          players,\n          currentPlay: createFakeGamePlaySurvivorsVote({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  type: \"vote\",\n                  eligibleTargets: players,\n                }),\n              ],\n            }),\n          }),\n        }),\n      },\n    },\n  };\n  const defaultProps: GamePlaygroundPlayerCardVoteInputProps = { player: defaultPlayer };\n\n  async function mountGamePlaygroundPlayerCardVoteInputComponent(options: ComponentMountingOptions<typeof GamePlaygroundPlayerCardVoteInput> = {}):\n  Promise<ReturnType<typeof mount<typeof GamePlaygroundPlayerCardVoteInput>>> {\n    return mountSuspendedComponent(GamePlaygroundPlayerCardVoteInput, {\n      shallow: false,\n      global: {\n        stubs: { RoleImage: true },\n        plugins: [createTestingPinia(pinia)],\n      },\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGamePlaygroundPlayerCardVoteInputComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Label\", () => {\n    it(\"should render translated float label text when rendered.\", () => {\n      const label = wrapper.find<HTMLLabelElement>(\"#player-vote-input-label\");\n\n      expect(label.text()).toBe(\"Vote for\");\n    });\n  });\n\n  describe(\"Autocomplete\", () => {\n    it(\"should have null as model value when render.\", async() => {\n      wrapper = await mountGamePlaygroundPlayerCardVoteInputComponent({\n        global: {\n          stubs: { RoleImage: true, VuePrimeAutoComplete: true },\n          plugins: [createTestingPinia(pinia)],\n        },\n      });\n      const autocomplete = wrapper.findComponent<typeof VuePrimeAutoComplete>(VuePrimeAutoComplete);\n\n      expect(autocomplete.props(\"modelValue\")).toBeNull();\n    });\n\n    it(\"should pass empty array as suggestions when render.\", () => {\n      const autocomplete = wrapper.findComponent<typeof VuePrimeAutoComplete>(VuePrimeAutoComplete);\n\n      expect(autocomplete.props(\"suggestions\")).toStrictEqual<Player[]>([]);\n    });\n\n    it(\"should pass empty array as suggestions when there is no current play on complete event.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = null;\n      const autocomplete = wrapper.findComponent<typeof VuePrimeAutoComplete>(VuePrimeAutoComplete);\n      autocomplete.vm.$emit(\"complete\", { query: \"Antoine\" });\n      await nextTick();\n\n      expect(autocomplete.props(\"suggestions\")).toStrictEqual<Player[]>([]);\n    });\n\n    it(\"should pass empty array as suggestions when there is no current play eligible targets on complete event.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlay();\n      const autocomplete = wrapper.findComponent<typeof VuePrimeAutoComplete>(VuePrimeAutoComplete);\n      autocomplete.vm.$emit(\"complete\", { query: \"Antoine\" });\n      await nextTick();\n\n      expect(autocomplete.props(\"suggestions\")).toStrictEqual<Player[]>([]);\n    });\n\n    it(\"should pass empty array as suggestions when there is no current play source interactions on complete event.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlay({ source: createFakeGamePlaySource() });\n      const autocomplete = wrapper.findComponent<typeof VuePrimeAutoComplete>(VuePrimeAutoComplete);\n      const setCollectionSpy = vi.spyOn(Fuse.prototype, \"setCollection\");\n      autocomplete.vm.$emit(\"complete\", { query: \"Antoine\" });\n      await nextTick();\n\n      expect(autocomplete.props(\"suggestions\")).toStrictEqual<Player[]>([]);\n      expect(setCollectionSpy).toHaveBeenCalledExactlyOnceWith([], undefined);\n    });\n\n    it(\"should pass empty array as suggestions when there is no current play source interactions (empty array) on complete event.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlay({ source: createFakeGamePlaySource({ interactions: [] }) });\n      const autocomplete = wrapper.findComponent<typeof VuePrimeAutoComplete>(VuePrimeAutoComplete);\n      const setCollectionSpy = vi.spyOn(Fuse.prototype, \"setCollection\");\n      autocomplete.vm.$emit(\"complete\", { query: \"Antoine\" });\n      await nextTick();\n\n      expect(autocomplete.props(\"suggestions\")).toStrictEqual<Player[]>([]);\n      expect(setCollectionSpy).toHaveBeenCalledExactlyOnceWith([], undefined);\n    });\n\n    it(\"should pass all players without the player in props himself as suggestions when query is empty on complete event.\", async() => {\n      const autocomplete = wrapper.findComponent<typeof VuePrimeAutoComplete>(VuePrimeAutoComplete);\n      autocomplete.vm.$emit(\"complete\", { query: \"   \" });\n      await nextTick();\n      const expectedSuggestions = players.filter(player => player._id !== defaultPlayer._id);\n\n      expect(autocomplete.props(\"suggestions\")).toStrictEqual<Player[]>(expectedSuggestions);\n    });\n\n    it(\"should pass players with similar name without the player in props himself as suggestions when query the player's name himself on complete event.\", async() => {\n      const autocomplete = wrapper.findComponent<typeof VuePrimeAutoComplete>(VuePrimeAutoComplete);\n      autocomplete.vm.$emit(\"complete\", { query: \"Antoine\" });\n      await nextTick();\n      const expectedSuggestions = [\n        players[0],\n        players[3],\n      ];\n\n      expect(autocomplete.props(\"suggestions\")).toStrictEqual<Player[]>(expectedSuggestions);\n    });\n\n    it(\"should empty suggestions when hide event is emitted.\", async() => {\n      const autocomplete = wrapper.findComponent<typeof VuePrimeAutoComplete>(VuePrimeAutoComplete);\n      autocomplete.vm.$emit(\"complete\", { query: \"Antoine\" });\n      await nextTick();\n      autocomplete.vm.$emit(\"hide\");\n      await nextTick();\n\n      expect(autocomplete.props(\"suggestions\")).toStrictEqual<Player[]>([]);\n    });\n\n    it(\"should do nothing when v-model change event is emitted but value is string.\", async() => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      const autocomplete = wrapper.findComponent<typeof VuePrimeAutoComplete>(VuePrimeAutoComplete);\n      const event: AutoCompleteChangeEvent = { originalEvent: new Event(\"change\"), value: \"Antoine\" };\n      autocomplete.vm.$emit(\"change\", event);\n      await nextTick();\n\n      expect(makeGamePlayDtoStore.removeMakeGamePlayVoteDto).not.toHaveBeenCalled();\n      expect(makeGamePlayDtoStore.addMakeGamePlayVoteDto).not.toHaveBeenCalled();\n    });\n\n    it(\"should remove make game play vote from dto when item select event is emitted and player is null.\", async() => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      const autocomplete = wrapper.findComponent<typeof VuePrimeAutoComplete>(VuePrimeAutoComplete);\n      const event: AutoCompleteChangeEvent = { originalEvent: new Event(\"change\"), value: null };\n      autocomplete.vm.$emit(\"change\", event);\n      await nextTick();\n\n      expect(makeGamePlayDtoStore.removeMakeGamePlayVoteDto).toHaveBeenCalledExactlyOnceWith(defaultPlayer._id);\n    });\n\n    it(\"should remove make game play vote from dto when v-model change event is emitted and player is voted.\", async() => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      const autocomplete = wrapper.findComponent<typeof VuePrimeAutoComplete>(VuePrimeAutoComplete);\n      const event: AutoCompleteChangeEvent = { originalEvent: new Event(\"change\"), value: players[0] };\n      autocomplete.vm.$emit(\"change\", event);\n      await nextTick();\n\n      expect(makeGamePlayDtoStore.removeMakeGamePlayVoteDto).toHaveBeenCalledExactlyOnceWith(defaultPlayer._id);\n    });\n\n    it(\"should add make game play vote from dto when item select event is emitted and player is voted.\", async() => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      const autocomplete = wrapper.findComponent<typeof VuePrimeAutoComplete>(VuePrimeAutoComplete);\n      const event: AutoCompleteChangeEvent = { originalEvent: new Event(\"change\"), value: players[0] };\n      autocomplete.vm.$emit(\"change\", event);\n      await nextTick();\n\n      expect(makeGamePlayDtoStore.addMakeGamePlayVoteDto).toHaveBeenCalledExactlyOnceWith({ sourceId: defaultPlayer._id, targetId: players[0]._id });\n    });\n\n    it(\"should have the same value as the player in props when v-model change event is emitted and player is voted.\", async() => {\n      const autocomplete = wrapper.findComponent<typeof VuePrimeAutoComplete>(VuePrimeAutoComplete);\n      const event: AutoCompleteChangeEvent = { originalEvent: new Event(\"change\"), value: players[0] };\n      autocomplete.vm.$emit(\"change\", event);\n      await nextTick();\n\n      expect(autocomplete.props(\"modelValue\")).toStrictEqual<Player>(players[0]);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecision.nuxt.spec.ts": {
      "tests": [
        {
          "id": "243",
          "name": "Game Over History Record Decision Component should match snapshot when rendered."
        },
        {
          "id": "244",
          "name": "Game Over History Record Decision Component Game Over History Record Decision Targets should render Game Over History Record Targets when game history record play is target type."
        },
        {
          "id": "245",
          "name": "Game Over History Record Decision Component Game Over History Record Decision Targets should not render Game Over History Record Targets when game history record play is not target type."
        },
        {
          "id": "246",
          "name": "Game Over History Record Decision Component GameOverHistoryRecordDecisionNominatedPlayers should display nominated players when game history record play is vote type."
        },
        {
          "id": "247",
          "name": "Game Over History Record Decision Component GameOverHistoryRecordDecisionNominatedPlayers should not display nominated players when game history record play is not vote type."
        },
        {
          "id": "248",
          "name": "Game Over History Record Decision Component Game Over History Record Decision Buried Players should display buried players when game history record play is bury type."
        },
        {
          "id": "249",
          "name": "Game Over History Record Decision Component Game Over History Record Decision Buried Players should not display buried players when game history record play is not bury type."
        },
        {
          "id": "250",
          "name": "Game Over History Record Decision Component Game Over History Record Decision Chosen Card should display chosen card when game history record play is choose type."
        },
        {
          "id": "251",
          "name": "Game Over History Record Decision Component Game Over History Record Decision Chosen Card should not display chosen card when game history record play is not choose type."
        },
        {
          "id": "252",
          "name": "Game Over History Record Decision Component Game Over History Record Decision Chosen Side should display chosen side when game history record play is choose side type."
        },
        {
          "id": "253",
          "name": "Game Over History Record Decision Component Game Over History Record Decision Chosen Side should not display chosen side when game history record play is not choose side type."
        },
        {
          "id": "254",
          "name": "Game Over History Record Decision Component No decision displayed should not display any decision when game history record play is not a known type."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport type { GameOverHistoryRecordDecisionProps } from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/game-over-history-record-decision.types\";\nimport GameOverHistoryRecordDecision from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecision.vue\";\nimport type GameOverHistoryRecordDecisionBuriedPlayers from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionBuriedPlayers/GameOverHistoryRecordDecisionBuriedPlayers.vue\";\nimport type GameOverHistoryRecordDecisionChosenCard from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionChosenCard/GameOverHistoryRecordDecisionChosenCard.vue\";\nimport type GameOverHistoryRecordDecisionChosenSide from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionChosenSide/GameOverHistoryRecordDecisionChosenSide.vue\";\nimport type GameOverHistoryRecordDecisionNominatedPlayers from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionNominatedPlayers/GameOverHistoryRecordDecisionNominatedPlayers.vue\";\nimport type GameOverHistoryRecordDecisionTargets from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionTargets/GameOverHistoryRecordDecisionTargets.vue\";\nimport { createFakeGameHistoryRecordPlay } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play.factory\";\nimport { createFakeGameHistoryRecord } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Over History Record Decision Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameOverHistoryRecordDecision>>;\n  const defaultGameHistoryRecord = createFakeGameHistoryRecord({\n    play: createFakeGameHistoryRecordPlay({\n      type: \"vote\",\n      action: \"vote\",\n    }),\n  });\n  const defaultProps: GameOverHistoryRecordDecisionProps = { gameHistoryRecord: defaultGameHistoryRecord };\n\n  async function mountGameOverHistoryRecordDecisionComponent(options: ComponentMountingOptions<typeof GameOverHistoryRecordDecision> = {}):\n  Promise<ReturnType<typeof mount<typeof GameOverHistoryRecordDecision>>> {\n    return mountSuspendedComponent(GameOverHistoryRecordDecision, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameOverHistoryRecordDecisionComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Game Over History Record Decision Targets\", () => {\n    it(\"should render Game Over History Record Targets when game history record play is target type.\", async() => {\n      wrapper = await mountGameOverHistoryRecordDecisionComponent({\n        props: {\n          gameHistoryRecord: createFakeGameHistoryRecord({\n            play: createFakeGameHistoryRecordPlay({\n              type: \"target\",\n              action: \"look\",\n            }),\n          }),\n        },\n      });\n      const gameOverHistoryRecordTargets = wrapper.findComponent<typeof GameOverHistoryRecordDecisionTargets>(\"#game-over-history-record-play-targets\");\n\n      expect(gameOverHistoryRecordTargets.exists()).toBeTruthy();\n    });\n\n    it(\"should not render Game Over History Record Targets when game history record play is not target type.\", () => {\n      const gameOverHistoryRecordTargets = wrapper.findComponent<typeof GameOverHistoryRecordDecisionTargets>(\"#game-over-history-record-play-targets\");\n\n      expect(gameOverHistoryRecordTargets.exists()).toBeFalsy();\n    });\n  });\n\n  describe(\"GameOverHistoryRecordDecisionNominatedPlayers\", () => {\n    it(\"should display nominated players when game history record play is vote type.\", async() => {\n      wrapper = await mountGameOverHistoryRecordDecisionComponent({\n        props: {\n          gameHistoryRecord: createFakeGameHistoryRecord({\n            play: createFakeGameHistoryRecordPlay({\n              type: \"vote\",\n              action: \"vote\",\n            }),\n          }),\n        },\n      });\n      const nominatedPlayers = wrapper.findComponent<typeof GameOverHistoryRecordDecisionNominatedPlayers>(\"#game-over-history-record-play-nominated-players\");\n\n      expect(nominatedPlayers.exists()).toBeTruthy();\n    });\n\n    it(\"should not display nominated players when game history record play is not vote type.\", async() => {\n      wrapper = await mountGameOverHistoryRecordDecisionComponent({\n        props: {\n          gameHistoryRecord: createFakeGameHistoryRecord({\n            play: createFakeGameHistoryRecordPlay({\n              type: \"target\",\n              action: \"look\",\n            }),\n          }),\n        },\n      });\n      const nominatedPlayers = wrapper.findComponent<typeof GameOverHistoryRecordDecisionNominatedPlayers>(\"#game-over-history-record-play-nominated-players\");\n\n      expect(nominatedPlayers.exists()).toBeFalsy();\n    });\n  });\n\n  describe(\"Game Over History Record Decision Buried Players\", () => {\n    it(\"should display buried players when game history record play is bury type.\", async() => {\n      wrapper = await mountGameOverHistoryRecordDecisionComponent({\n        props: {\n          gameHistoryRecord: createFakeGameHistoryRecord({\n            play: createFakeGameHistoryRecordPlay({\n              type: \"bury-dead-bodies\",\n              action: \"bury-dead-bodies\",\n            }),\n          }),\n        },\n      });\n      const buriedPlayers = wrapper.findComponent<typeof GameOverHistoryRecordDecisionBuriedPlayers>(\"#game-over-history-record-play-buried-players\");\n\n      expect(buriedPlayers.exists()).toBeTruthy();\n    });\n\n    it(\"should not display buried players when game history record play is not bury type.\", async() => {\n      wrapper = await mountGameOverHistoryRecordDecisionComponent({\n        props: {\n          gameHistoryRecord: createFakeGameHistoryRecord({\n            play: createFakeGameHistoryRecordPlay({\n              type: \"target\",\n              action: \"look\",\n            }),\n          }),\n        },\n      });\n      const buriedPlayers = wrapper.findComponent<typeof GameOverHistoryRecordDecisionBuriedPlayers>(\"#game-over-history-record-play-buried-players\");\n\n      expect(buriedPlayers.exists()).toBeFalsy();\n    });\n  });\n\n  describe(\"Game Over History Record Decision Chosen Card\", () => {\n    it(\"should display chosen card when game history record play is choose type.\", async() => {\n      wrapper = await mountGameOverHistoryRecordDecisionComponent({\n        props: {\n          gameHistoryRecord: createFakeGameHistoryRecord({\n            play: createFakeGameHistoryRecordPlay({\n              type: \"choose-card\",\n              action: \"choose-card\",\n            }),\n          }),\n        },\n      });\n      const chosenCard = wrapper.findComponent<typeof GameOverHistoryRecordDecisionChosenCard>(\"#game-over-history-record-play-chosen-card\");\n\n      expect(chosenCard.exists()).toBeTruthy();\n    });\n\n    it(\"should not display chosen card when game history record play is not choose type.\", async() => {\n      wrapper = await mountGameOverHistoryRecordDecisionComponent({\n        props: {\n          gameHistoryRecord: createFakeGameHistoryRecord({\n            play: createFakeGameHistoryRecordPlay({\n              type: \"target\",\n              action: \"look\",\n            }),\n          }),\n        },\n      });\n      const chosenCard = wrapper.findComponent<typeof GameOverHistoryRecordDecisionChosenCard>(\"#game-over-history-record-play-chosen-card\");\n\n      expect(chosenCard.exists()).toBeFalsy();\n    });\n  });\n\n  describe(\"Game Over History Record Decision Chosen Side\", () => {\n    it(\"should display chosen side when game history record play is choose side type.\", async() => {\n      wrapper = await mountGameOverHistoryRecordDecisionComponent({\n        props: {\n          gameHistoryRecord: createFakeGameHistoryRecord({\n            play: createFakeGameHistoryRecordPlay({\n              type: \"choose-side\",\n              action: \"choose-side\",\n            }),\n          }),\n        },\n      });\n      const chosenSide = wrapper.findComponent<typeof GameOverHistoryRecordDecisionChosenSide>(\"#game-over-history-record-play-chosen-side\");\n\n      expect(chosenSide.exists()).toBeTruthy();\n    });\n\n    it(\"should not display chosen side when game history record play is not choose side type.\", async() => {\n      wrapper = await mountGameOverHistoryRecordDecisionComponent({\n        props: {\n          gameHistoryRecord: createFakeGameHistoryRecord({\n            play: createFakeGameHistoryRecordPlay({\n              type: \"target\",\n              action: \"look\",\n            }),\n          }),\n        },\n      });\n      const chosenSide = wrapper.findComponent<typeof GameOverHistoryRecordDecisionChosenSide>(\"#game-over-history-record-play-chosen-side\");\n\n      expect(chosenSide.exists()).toBeFalsy();\n    });\n  });\n\n  describe(\"No decision displayed\", () => {\n    it(\"should not display any decision when game history record play is not a known type.\", async() => {\n      wrapper = await mountGameOverHistoryRecordDecisionComponent({\n        props: {\n          gameHistoryRecord: createFakeGameHistoryRecord({\n            play: createFakeGameHistoryRecordPlay({\n              type: \"no-action\",\n              action: \"growl\",\n            }),\n          }),\n        },\n      });\n      const chosenSide = wrapper.findComponent<typeof GameOverHistoryRecordDecisionChosenSide>(\"#game-over-history-record-play-chosen-side\");\n      const chosenCard = wrapper.findComponent<typeof GameOverHistoryRecordDecisionChosenCard>(\"#game-over-history-record-play-chosen-card\");\n      const buriedPlayers = wrapper.findComponent<typeof GameOverHistoryRecordDecisionBuriedPlayers>(\"#game-over-history-record-play-buried-players\");\n      const nominatedPlayers = wrapper.findComponent<typeof GameOverHistoryRecordDecisionNominatedPlayers>(\"#game-over-history-record-play-nominated-players\");\n      const gameOverHistoryRecordTargets = wrapper.findComponent<typeof GameOverHistoryRecordDecisionTargets>(\"#game-over-history-record-play-targets\");\n\n      expect(chosenSide.exists()).toBeFalsy();\n      expect(chosenCard.exists()).toBeFalsy();\n      expect(buriedPlayers.exists()).toBeFalsy();\n      expect(nominatedPlayers.exists()).toBeFalsy();\n      expect(gameOverHistoryRecordTargets.exists()).toBeFalsy();\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerFooter/GameLobbyRolePickerFooter.nuxt.spec.ts": {
      "tests": [
        {
          "id": "255",
          "name": "Game Lobby Role Picker Footer Component should match snapshot when rendered."
        },
        {
          "id": "256",
          "name": "Game Lobby Role Picker Footer Component Button should be enabled when role selected is not the one of the player."
        },
        {
          "id": "257",
          "name": "Game Lobby Role Picker Footer Component Button should be disabled when player is not defined."
        },
        {
          "id": "258",
          "name": "Game Lobby Role Picker Footer Component Button should be disabled when picked role is not defined."
        },
        {
          "id": "259",
          "name": "Game Lobby Role Picker Footer Component Button should be disabled when role selected is the one of the player."
        },
        {
          "id": "260",
          "name": "Game Lobby Role Picker Footer Component Button should translate button label when rendered."
        },
        {
          "id": "261",
          "name": "Game Lobby Role Picker Footer Component Button On click should update player in create game dto when clicked."
        },
        {
          "id": "262",
          "name": "Game Lobby Role Picker Footer Component Button On click should swap player role and side when clicked and max is reached for this role."
        },
        {
          "id": "263",
          "name": "Game Lobby Role Picker Footer Component Button On click should not swap player role and side when clicked and max is reached for this role but no other player has this role."
        },
        {
          "id": "264",
          "name": "Game Lobby Role Picker Footer Component Button On click should emit player update with updated player event when clicked."
        },
        {
          "id": "265",
          "name": "Game Lobby Role Picker Footer Component Button On click should not emit player update with updated player event when picked role is not defined."
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport type Button from \"primevue/button\";\n\nimport type { GameLobbyRolePickerFooterProps } from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerFooter/game-lobby-role-picker-footer.types\";\nimport GameLobbyRolePickerFooter from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerFooter/GameLobbyRolePickerFooter.vue\";\nimport type { CreateGamePlayerDto } from \"~/composables/api/game/dto/create-game/create-game-player/create-game-player.dto\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGamePlayerRoleDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game-player/create-game-player-role/create-game-player-role.dto.factory\";\nimport { createFakeCreateGamePlayerSideDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game-player/create-game-player-side/create-game-player-side.dto.factory\";\nimport { createFakeCreateGamePlayerDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game-player/create-game-player.dto.factory\";\nimport { createFakeRole } from \"~/tests/unit/utils/factories/composables/api/role/role.factory\";\nimport { mockPiniaStore } from \"~/tests/unit/utils/helpers/mock.helpers\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Lobby Role Picker Footer Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyRolePickerFooter>>;\n  const defaultProps: GameLobbyRolePickerFooterProps = {\n    player: createFakeCreateGamePlayerDto({\n      name: \"Antoine\",\n      role: createFakeCreateGamePlayerRoleDto({ name: \"seer\" }),\n    }),\n    pickedRole: createFakeRole({\n      name: \"werewolf\",\n      side: \"werewolves\",\n    }),\n  };\n\n  async function mountGameLobbyRolePickerFooterComponent(options: ComponentMountingOptions<typeof GameLobbyRolePickerFooter> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyRolePickerFooter>>> {\n    return mountSuspendedComponent(GameLobbyRolePickerFooter, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyRolePickerFooterComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Button\", () => {\n    it(\"should be enabled when role selected is not the one of the player.\", () => {\n      const button = wrapper.findComponent<typeof Button>(\"#game-lobby-role-picker-footer-button\");\n\n      expect(button.attributes(\"disabled\")).toBe(\"false\");\n    });\n\n    it(\"should be disabled when player is not defined.\", async() => {\n      wrapper = await mountGameLobbyRolePickerFooterComponent({\n        props: {\n          ...defaultProps,\n          player: undefined,\n        },\n      });\n      const button = wrapper.findComponent<typeof Button>(\"#game-lobby-role-picker-footer-button\");\n\n      expect(button.attributes(\"disabled\")).toBe(\"true\");\n    });\n\n    it(\"should be disabled when picked role is not defined.\", async() => {\n      wrapper = await mountGameLobbyRolePickerFooterComponent({\n        props: {\n          ...defaultProps,\n          pickedRole: undefined,\n        },\n      });\n      const button = wrapper.findComponent<typeof Button>(\"#game-lobby-role-picker-footer-button\");\n\n      expect(button.attributes(\"disabled\")).toBe(\"true\");\n    });\n\n    it(\"should be disabled when role selected is the one of the player.\", async() => {\n      wrapper = await mountGameLobbyRolePickerFooterComponent({\n        props: {\n          ...defaultProps,\n          pickedRole: createFakeRole({\n            name: \"seer\",\n            side: \"villagers\",\n          }),\n        },\n      });\n      const button = wrapper.findComponent<typeof Button>(\"#game-lobby-role-picker-footer-button\");\n\n      expect(button.attributes(\"disabled\")).toBe(\"true\");\n    });\n\n    it(\"should translate button label when rendered.\", () => {\n      const button = wrapper.findComponent<typeof Button>(\"#game-lobby-role-picker-footer-button\");\n\n      expect(button.attributes(\"label\")).toBe(\"Pick role for the player\");\n    });\n\n    describe(\"On click\", () => {\n      beforeEach(async() => {\n        const pinia = createTestingPinia();\n        const createGameDtoStore = mockPiniaStore(useCreateGameDtoStore);\n        createGameDtoStore.isRoleMaxReachedInCreateGameDto.mockReturnValue(false);\n        createGameDtoStore.getPlayersWithRoleNameInCreateGameDto.mockReturnValue([createFakeCreateGamePlayerDto()]);\n        wrapper = await mountGameLobbyRolePickerFooterComponent({ global: { plugins: [pinia] } });\n        const button = wrapper.findComponent<typeof Button>(\"#game-lobby-role-picker-footer-button\");\n        button.vm.$emit(\"click\");\n      });\n\n      it(\"should update player in create game dto when clicked.\", () => {\n        const createGameDtoStore = useCreateGameDtoStore();\n        const expectedPlayer = createFakeCreateGamePlayerDto({\n          ...defaultProps.player,\n          role: createFakeCreateGamePlayerRoleDto({ name: defaultProps.pickedRole?.name }),\n          side: {\n            current: defaultProps.pickedRole?.side,\n            original: defaultProps.pickedRole?.side,\n          },\n        });\n\n        expect(createGameDtoStore.updatePlayerInCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedPlayer);\n      });\n\n      it(\"should swap player role and side when clicked and max is reached for this role.\", async() => {\n        const otherPlayer = createFakeCreateGamePlayerDto({\n          name: \"Bob\",\n          role: createFakeCreateGamePlayerRoleDto({ name: \"seer\" }),\n        });\n        const sourcePlayer = createFakeCreateGamePlayerDto({\n          name: \"Antoine\",\n          role: createFakeCreateGamePlayerRoleDto({ name: \"werewolf\" }),\n          side: createFakeCreateGamePlayerSideDto({ current: \"werewolves\", original: \"werewolves\" }),\n        });\n        const pinia = createTestingPinia();\n        const createGameDtoStore = mockPiniaStore(useCreateGameDtoStore);\n        createGameDtoStore.isRoleMaxReachedInCreateGameDto.mockReturnValue(true);\n        createGameDtoStore.getPlayersWithRoleNameInCreateGameDto.mockReturnValue([otherPlayer]);\n        wrapper = await mountGameLobbyRolePickerFooterComponent({\n          global: { plugins: [pinia] },\n          props: {\n            player: sourcePlayer,\n            pickedRole: createFakeRole({\n              name: \"seer\",\n              side: \"villagers\",\n            }),\n          },\n        });\n        const button = wrapper.findComponent<typeof Button>(\"#game-lobby-role-picker-footer-button\");\n        button.vm.$emit(\"click\");\n        const expectedOtherPlayer = createFakeCreateGamePlayerDto({\n          ...otherPlayer,\n          role: sourcePlayer.role,\n          side: sourcePlayer.side,\n        });\n        const expectedSourcePlayer = createFakeCreateGamePlayerDto({\n          ...sourcePlayer,\n          role: { name: \"seer\" },\n          side: {\n            current: \"villagers\",\n            original: \"villagers\",\n          },\n        });\n\n        expect(createGameDtoStore.updatePlayerInCreateGameDto).toHaveBeenNthCalledWith(1, expectedOtherPlayer);\n        expect(createGameDtoStore.updatePlayerInCreateGameDto).toHaveBeenNthCalledWith(2, expectedSourcePlayer);\n      });\n\n      it(\"should not swap player role and side when clicked and max is reached for this role but no other player has this role.\", async() => {\n        const sourcePlayer = createFakeCreateGamePlayerDto({\n          name: \"Antoine\",\n          role: createFakeCreateGamePlayerRoleDto({ name: \"werewolf\" }),\n        });\n        const pinia = createTestingPinia();\n        const createGameDtoStore = mockPiniaStore(useCreateGameDtoStore);\n        createGameDtoStore.isRoleMaxReachedInCreateGameDto.mockReturnValue(true);\n        createGameDtoStore.getPlayersWithRoleNameInCreateGameDto.mockReturnValue([]);\n        wrapper = await mountGameLobbyRolePickerFooterComponent({\n          global: { plugins: [pinia] },\n          props: {\n            player: sourcePlayer,\n            pickedRole: createFakeRole({\n              name: \"seer\",\n              side: \"villagers\",\n            }),\n          },\n        });\n        const button = wrapper.findComponent<typeof Button>(\"#game-lobby-role-picker-footer-button\");\n        button.vm.$emit(\"click\");\n        const expectedSourcePlayer = createFakeCreateGamePlayerDto({\n          ...sourcePlayer,\n          role: { name: \"seer\" },\n          side: {\n            current: \"villagers\",\n            original: \"villagers\",\n          },\n        });\n\n        expect(createGameDtoStore.updatePlayerInCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedSourcePlayer);\n      });\n\n      it(\"should emit player update with updated player event when clicked.\", () => {\n        const emittedEvents = wrapper.emitted(\"playerUpdate\");\n        const expectedPlayer = createFakeCreateGamePlayerDto({\n          ...defaultProps.player,\n          role: createFakeCreateGamePlayerRoleDto({ name: defaultProps.pickedRole?.name }),\n          side: {\n            current: defaultProps.pickedRole?.side,\n            original: defaultProps.pickedRole?.side,\n          },\n        });\n\n        expect(emittedEvents).toHaveLength(1);\n        expect(emittedEvents?.[0]).toStrictEqual<[CreateGamePlayerDto]>([expectedPlayer]);\n      });\n\n      it(\"should not emit player update with updated player event when picked role is not defined.\", async() => {\n        wrapper = await mountGameLobbyRolePickerFooterComponent({\n          props: {\n            ...defaultProps,\n            pickedRole: undefined,\n          },\n        });\n        const button = wrapper.findComponent<typeof Button>(\"#game-lobby-role-picker-footer-button\");\n        button.vm.$emit(\"click\");\n        const emittedEvents = wrapper.emitted(\"playerUpdate\");\n\n        expect(emittedEvents).toBeUndefined();\n      });\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriff.nuxt.spec.ts": {
      "tests": [
        {
          "id": "266",
          "name": "Game Lobby Options Hub Roles Tab Sheriff Component should match snapshot when rendered."
        },
        {
          "id": "267",
          "name": "Game Lobby Options Hub Roles Tab Sheriff Component Option Legend should not set grayscale filter class to sheriff icon when sheriff is enabled."
        },
        {
          "id": "268",
          "name": "Game Lobby Options Hub Roles Tab Sheriff Component Option Legend should set grayscale filter class to sheriff icon when sheriff is disabled."
        },
        {
          "id": "269",
          "name": "Game Lobby Options Hub Roles Tab Sheriff Component Option Legend should translate legend when rendered."
        },
        {
          "id": "270",
          "name": "Game Lobby Options Hub Roles Tab Sheriff Component Is enabled option should translate option label when rendered."
        },
        {
          "id": "271",
          "name": "Game Lobby Options Hub Roles Tab Sheriff Component Is enabled option should translate option description when the option is activated."
        },
        {
          "id": "272",
          "name": "Game Lobby Options Hub Roles Tab Sheriff Component Is enabled option should translate option description when the option is deactivated."
        },
        {
          "id": "273",
          "name": "Game Lobby Options Hub Roles Tab Sheriff Component Is enabled option should update the create game dto store when the option is toggled."
        },
        {
          "id": "274",
          "name": "Game Lobby Options Hub Roles Tab Sheriff Component Must settle Votes options should translate option label when rendered."
        },
        {
          "id": "275",
          "name": "Game Lobby Options Hub Roles Tab Sheriff Component Must settle Votes options should translate option description when the option is activated."
        },
        {
          "id": "276",
          "name": "Game Lobby Options Hub Roles Tab Sheriff Component Must settle Votes options should translate option description when the option is deactivated."
        },
        {
          "id": "277",
          "name": "Game Lobby Options Hub Roles Tab Sheriff Component Must settle Votes options should update the create game dto store when the option is toggled."
        },
        {
          "id": "278",
          "name": "Game Lobby Options Hub Roles Tab Sheriff Component Has Doubled Vote option should translate option label when rendered."
        },
        {
          "id": "279",
          "name": "Game Lobby Options Hub Roles Tab Sheriff Component Has Doubled Vote option should translate option description when the option is activated."
        },
        {
          "id": "280",
          "name": "Game Lobby Options Hub Roles Tab Sheriff Component Has Doubled Vote option should translate option description when the option is deactivated."
        },
        {
          "id": "281",
          "name": "Game Lobby Options Hub Roles Tab Sheriff Component Has Doubled Vote option should update the create game dto store when the option is toggled."
        }
      ],
      "source": "import type { NuxtImg } from \"#components\";\nimport type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport GameLobbyOptionsHubRolesTabSheriff from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriff.vue\";\nimport type AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport type GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGameDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Options Hub Roles Tab Sheriff Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabSheriff>>;\n\n  async function mountGameLobbyOptionsHubRolesTabSheriffComponent(options: ComponentMountingOptions<typeof GameLobbyOptionsHubRolesTabSheriff> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabSheriff>>> {\n    return mountSuspendedComponent(GameLobbyOptionsHubRolesTabSheriff, {\n      global: {\n        stubs: {\n          Fieldset: false,\n          GameOptionInputGroup: false,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyOptionsHubRolesTabSheriffComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Option Legend\", () => {\n    it(\"should not set grayscale filter class to sheriff icon when sheriff is enabled.\", () => {\n      const sheriffIcon = wrapper.findComponent<typeof NuxtImg>(\"[alt='Sheriff icon']\");\n\n      expect(sheriffIcon.classes()).not.toContain(\"grayscale\");\n    });\n\n    it(\"should set grayscale filter class to sheriff icon when sheriff is disabled.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.sheriff.isEnabled = false;\n      await nextTick();\n      const sheriffIcon = wrapper.findComponent<typeof NuxtImg>(\"[alt='Sheriff icon']\");\n\n      expect(sheriffIcon.classes()).toContain(\"grayscale\");\n    });\n\n    it(\"should translate legend when rendered.\", () => {\n      const legendTitle = wrapper.find<HTMLHeadingElement>(\"#game-lobby-options-hub-roles-tab-sheriff-title\");\n\n      expect(legendTitle.text()).toBe(\"Sheriff\");\n    });\n  });\n\n  describe(\"Is enabled option\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-sheriff-is-enabled-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"Play with the Sheriff\");\n    });\n\n    it(\"should translate option description when the option is activated.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-sheriff-is-enabled-input-group\");\n      const expectedDescription = \"components.GameLobbyOptionsHubRolesTabSheriff.options.isEnabled.descriptions.yes\";\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(expectedDescription);\n    });\n\n    it(\"should translate option description when the option is deactivated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.sheriff.isEnabled = false;\n      await nextTick();\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-sheriff-is-enabled-input-group\");\n      const expectedDescription = \"components.GameLobbyOptionsHubRolesTabSheriff.options.isEnabled.descriptions.no\";\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(expectedDescription);\n    });\n\n    it(\"should update the create game dto store when the option is toggled.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const toggleButton = wrapper.findComponent<typeof AffirmativeToggleButton>(\"#game-lobby-options-hub-roles-tab-sheriff-is-sheriff-enabled-input\");\n      (toggleButton.vm as VueVm).$emit(\"update:modelValue\", false);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.sheriff.isEnabled = false;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n  });\n\n  describe(\"Must settle Votes options\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-sheriff-must-settle-votes-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"The Sheriff must settle the votes\");\n    });\n\n    it(\"should translate option description when the option is activated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.sheriff.mustSettleTieInVotes = true;\n      await nextTick();\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-sheriff-must-settle-votes-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabSheriff.options.mustSettleTieInVotes.descriptions.yes\");\n    });\n\n    it(\"should translate option description when the option is deactivated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.sheriff.mustSettleTieInVotes = false;\n      await nextTick();\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-sheriff-must-settle-votes-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabSheriff.options.mustSettleTieInVotes.descriptions.no\");\n    });\n\n    it(\"should update the create game dto store when the option is toggled.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const toggleButton = wrapper.findComponent<typeof AffirmativeToggleButton>(\"#game-lobby-options-hub-roles-tab-sheriff-must-settle-votes-input\");\n      (toggleButton.vm as VueVm).$emit(\"update:modelValue\", false);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.sheriff.mustSettleTieInVotes = false;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n  });\n\n  describe(\"Has Doubled Vote option\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-sheriff-has-doubled-vote-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"The Sheriff has a doubled vote\");\n    });\n\n    it(\"should translate option description when the option is activated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.sheriff.hasDoubledVote = true;\n      await nextTick();\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-sheriff-has-doubled-vote-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabSheriff.options.hasDoubledVote.descriptions.yes\");\n    });\n\n    it(\"should translate option description when the option is deactivated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.sheriff.hasDoubledVote = false;\n      await nextTick();\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-sheriff-has-doubled-vote-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabSheriff.options.hasDoubledVote.descriptions.no\");\n    });\n\n    it(\"should update the create game dto store when the option is toggled.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const toggleButton = wrapper.findComponent<typeof AffirmativeToggleButton>(\"#game-lobby-options-hub-roles-tab-sheriff-has-doubled-vote-input\");\n      (toggleButton.vm as VueVm).$emit(\"update:modelValue\", false);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.sheriff.hasDoubledVote = false;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GamePlaying/GameTeamSide/GameTeamSidePlayer/GameTeamSidePlayer.nuxt.spec.ts": {
      "tests": [
        {
          "id": "282",
          "name": "Game Team Side Player Component should match snapshot when rendered."
        },
        {
          "id": "283",
          "name": "Game Team Side Player Component Game Team Side Player should glow as green when side is villagers."
        },
        {
          "id": "284",
          "name": "Game Team Side Player Component Game Team Side Player should glow as red when side is werewolves."
        },
        {
          "id": "285",
          "name": "Game Team Side Player Component Game Team Side Player should not glow when player is dead."
        },
        {
          "id": "286",
          "name": "Game Team Side Player Component Game Team Side Player Player death should display player death logo when player is dead."
        },
        {
          "id": "287",
          "name": "Game Team Side Player Component Game Team Side Player Player death should not display player death logo when player is alive."
        },
        {
          "id": "288",
          "name": "Game Team Side Player Component Game Team Side Player Player death should attach tooltip to player death logo when player is dead."
        },
        {
          "id": "289",
          "name": "Game Team Side Player Component Game Team Side Player Player name should display player name when rendered."
        },
        {
          "id": "290",
          "name": "Game Team Side Player Component Game Team Side Player Player name should be lined through when player is dead."
        },
        {
          "id": "291",
          "name": "Game Team Side Player Component Game Team Side Player Player role name should display player role when rendered."
        },
        {
          "id": "292",
          "name": "Game Team Side Player Component Game Team Side Player Player role image should display player role image on the left when side is villagers."
        },
        {
          "id": "293",
          "name": "Game Team Side Player Component Game Team Side Player Player role image should display player role image on the right when side is werewolves."
        },
        {
          "id": "294",
          "name": "Game Team Side Player Component Game Team Side Player Player role image should have a green border glow class when side is villagers."
        },
        {
          "id": "295",
          "name": "Game Team Side Player Component Game Team Side Player Player role image should have a red border glow class when side is werewolves."
        },
        {
          "id": "296",
          "name": "Game Team Side Player Component Game Team Side Player Player role image should not have border glow class when player is dead."
        },
        {
          "id": "297",
          "name": "Game Team Side Player Component Game Team Side Player Player role image should have grayscale class when player is dead."
        },
        {
          "id": "298",
          "name": "Game Team Side Player Component Game Team Side Player Player attributes should display player attributes when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport type { NuxtImg } from \"#components\";\nimport type { GameTeamSidePlayerProps } from \"~/components/pages/game/GamePlaying/GameTeamSide/GameTeamSidePlayer/game-team-side-player.types\";\nimport GameTeamSidePlayer from \"~/components/pages/game/GamePlaying/GameTeamSide/GameTeamSidePlayer/GameTeamSidePlayer.vue\";\nimport GameTeamSidePlayerAttribute from \"~/components/pages/game/GamePlaying/GameTeamSide/GameTeamSidePlayer/GameTeamSidePlayerAttribute/GameTeamSidePlayerAttribute.vue\";\nimport type RoleImage from \"~/components/shared/role/RoleImage/RoleImage.vue\";\nimport type { PlayerAttribute } from \"~/composables/api/game/types/players/player-attribute/player-attribute.class\";\nimport { createFakeActingByActorPlayerAttribute, createFakeSeenBySeerPlayerAttribute } from \"~/tests/unit/utils/factories/composables/api/game/player/player-attribute/player-attribute.factory\";\nimport { createFakeAccursedWolfFatherAlivePlayer, createFakeSeerAlivePlayer, createFakeWerewolfAlivePlayer } from \"~/tests/unit/utils/factories/composables/api/game/player/player-with-role.factory\";\nimport { pTooltipDirectiveBinder } from \"~/tests/unit/utils/helpers/directive.helpers\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { BoundTooltip } from \"~/tests/unit/utils/types/directive.types\";\n\ndescribe(\"Game Team Side Player Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameTeamSidePlayer>>;\n  const defaultPlayer = createFakeWerewolfAlivePlayer({\n    name: \"Antoine\",\n    attributes: [\n      createFakeActingByActorPlayerAttribute(),\n      createFakeSeenBySeerPlayerAttribute(),\n    ],\n  });\n  const defaultProps: GameTeamSidePlayerProps = { player: defaultPlayer };\n\n  async function mountGameTeamSidePlayerComponent(options: ComponentMountingOptions<typeof GameTeamSidePlayer> = {}): Promise<ReturnType<typeof mount<typeof GameTeamSidePlayer>>> {\n    return mountSuspendedComponent(GameTeamSidePlayer, {\n      props: defaultProps,\n      shallow: false,\n      global: {\n        stubs: {\n          RoleImage: true,\n          GameTeamSidePlayerAttribute: true,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameTeamSidePlayerComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Game Team Side Player\", () => {\n    it(\"should glow as green when side is villagers.\", async() => {\n      const player = createFakeSeerAlivePlayer();\n      wrapper = await mountGameTeamSidePlayerComponent({ props: { ...defaultProps, player } });\n      const teamSidePlayer = wrapper.find<HTMLDivElement>(\"#game-team-side-player\");\n\n      expect(teamSidePlayer.classes(\"glow:border-green-500\")).toBeTruthy();\n    });\n\n    it(\"should glow as red when side is werewolves.\", async() => {\n      const player = createFakeAccursedWolfFatherAlivePlayer();\n      wrapper = await mountGameTeamSidePlayerComponent({ props: { ...defaultProps, player } });\n      const teamSidePlayer = wrapper.find<HTMLDivElement>(\"#game-team-side-player\");\n\n      expect(teamSidePlayer.classes(\"glow:border-red-500\")).toBeTruthy();\n    });\n\n    it(\"should not glow when player is dead.\", async() => {\n      const player = createFakeSeerAlivePlayer({ isAlive: false });\n      wrapper = await mountGameTeamSidePlayerComponent({ props: { ...defaultProps, player } });\n      const teamSidePlayer = wrapper.find<HTMLDivElement>(\"#game-team-side-player\");\n\n      expect(teamSidePlayer.classes()).toStrictEqual<string[]>([\"border-2\", \"border-gray-700\", \"p-2\", \"rounded-md\", \"w-full\"]);\n    });\n\n    describe(\"Player death\", () => {\n      it(\"should display player death logo when player is dead.\", async() => {\n        const player = createFakeSeerAlivePlayer({ isAlive: false });\n        wrapper = await mountGameTeamSidePlayerComponent({ props: { ...defaultProps, player } });\n        const deathIcon = wrapper.findComponent<typeof NuxtImg>(\"[alt='This player is dead']\");\n\n        expect(deathIcon.exists()).toBeTruthy();\n      });\n\n      it(\"should not display player death logo when player is alive.\", () => {\n        const deathIcon = wrapper.findComponent<typeof NuxtImg>(\"[alt='This player is dead']\");\n\n        expect(deathIcon.exists()).toBeFalsy();\n      });\n\n      it(\"should attach tooltip to player death logo when player is dead.\", async() => {\n        const tooltip: BoundTooltip = { value: undefined };\n        const directives = { ...pTooltipDirectiveBinder(tooltip, \"[alt='This player is dead']\") };\n        const player = createFakeSeerAlivePlayer({ isAlive: false });\n        wrapper = await mountGameTeamSidePlayerComponent({ props: { ...defaultProps, player }, global: { directives } });\n\n        expect(tooltip.value).toBe(\"This player is dead\");\n      });\n    });\n\n    describe(\"Player name\", () => {\n      it(\"should display player name when rendered.\", () => {\n        const playerName = wrapper.find<HTMLDivElement>(\"#player-name\");\n\n        expect(playerName.text()).toBe(\"Antoine\");\n      });\n\n      it(\"should be lined through when player is dead.\", async() => {\n        const player = createFakeSeerAlivePlayer({ isAlive: false });\n        wrapper = await mountGameTeamSidePlayerComponent({ props: { ...defaultProps, player } });\n        const playerName = wrapper.find<HTMLDivElement>(\"#player-name\");\n\n        expect(playerName.classes(\"line-through\")).toBeTruthy();\n      });\n    });\n\n    describe(\"Player role name\", () => {\n      it(\"should display player role when rendered.\", () => {\n        const playerRole = wrapper.find<HTMLDivElement>(\"#player-role-name\");\n\n        expect(playerRole.text()).toBe(\"Werewolf\");\n      });\n    });\n\n    describe(\"Player role image\", () => {\n      it(\"should display player role image on the left when side is villagers.\", async() => {\n        const player = createFakeSeerAlivePlayer();\n        wrapper = await mountGameTeamSidePlayerComponent({ props: { ...defaultProps, player } });\n        const playerRoleImage = wrapper.findComponent<typeof RoleImage>(\"#player-villager-role-image\");\n\n        expect(playerRoleImage.props(\"roleName\")).toBe(\"seer\");\n      });\n\n      it(\"should display player role image on the right when side is werewolves.\", async() => {\n        const player = createFakeAccursedWolfFatherAlivePlayer();\n        wrapper = await mountGameTeamSidePlayerComponent({ props: { ...defaultProps, player } });\n        const playerRoleImage = wrapper.findComponent<typeof RoleImage>(\"#player-werewolf-role-image\");\n\n        expect(playerRoleImage.props(\"roleName\")).toBe(\"accursed-wolf-father\");\n      });\n\n      it(\"should have a green border glow class when side is villagers.\", async() => {\n        const player = createFakeSeerAlivePlayer();\n        wrapper = await mountGameTeamSidePlayerComponent({ props: { ...defaultProps, player } });\n        const playerRoleImage = wrapper.findComponent<typeof RoleImage>(\"#player-villager-role-image\");\n\n        expect(playerRoleImage.classes(\"glow:border-green-500\")).toBeTruthy();\n      });\n\n      it(\"should have a red border glow class when side is werewolves.\", async() => {\n        const player = createFakeAccursedWolfFatherAlivePlayer();\n        wrapper = await mountGameTeamSidePlayerComponent({ props: { ...defaultProps, player } });\n        const playerRoleImage = wrapper.findComponent<typeof RoleImage>(\"#player-werewolf-role-image\");\n\n        expect(playerRoleImage.classes(\"glow:border-red-500\")).toBeTruthy();\n      });\n\n      it(\"should not have border glow class when player is dead.\", async() => {\n        const player = createFakeSeerAlivePlayer({ isAlive: false });\n        wrapper = await mountGameTeamSidePlayerComponent({ props: { ...defaultProps, player } });\n        const playerRoleImage = wrapper.findComponent<typeof RoleImage>(\"#player-villager-role-image\");\n\n        expect(playerRoleImage.classes(\"glow:border-green-500\")).toBeFalsy();\n        expect(playerRoleImage.classes(\"glow:border-red-500\")).toBeFalsy();\n      });\n\n      it(\"should have grayscale class when player is dead.\", async() => {\n        const player = createFakeSeerAlivePlayer({ isAlive: false });\n        wrapper = await mountGameTeamSidePlayerComponent({ props: { ...defaultProps, player } });\n        const playerRoleImage = wrapper.findComponent<typeof RoleImage>(\"#player-villager-role-image\");\n\n        expect(playerRoleImage.classes(\"grayscale\")).toBeTruthy();\n      });\n    });\n\n    describe(\"Player attributes\", () => {\n      it(\"should display player attributes when rendered.\", () => {\n        const playerAttributes = wrapper.findAllComponents<typeof GameTeamSidePlayerAttribute>(GameTeamSidePlayerAttribute);\n\n        expect(playerAttributes[0].props(\"attribute\")).toStrictEqual<PlayerAttribute>(defaultPlayer.attributes[0]);\n        expect(playerAttributes[1].props(\"attribute\")).toStrictEqual<PlayerAttribute>(defaultPlayer.attributes[1]);\n      });\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GameOver/GameOverVictoryText/GameOverVictoryText.nuxt.spec.ts": {
      "tests": [
        {
          "id": "299",
          "name": "Game Over Victory Text Component should match snapshot when rendered."
        },
        {
          "id": "300",
          "name": "Game Over Victory Text Component Trophy Icon should render trophy icon when rendered."
        },
        {
          "id": "301",
          "name": "Game Over Victory Text Component Victory Type Icon 'should render question mark icon when…'"
        },
        {
          "id": "302",
          "name": "Game Over Victory Text Component Victory Type Icon 'should render werewolves icon when vi…'"
        },
        {
          "id": "303",
          "name": "Game Over Victory Text Component Victory Type Icon 'should render villagers icon when vic…'"
        },
        {
          "id": "304",
          "name": "Game Over Victory Text Component Victory Type Icon 'should render lovers icon when victor…'"
        },
        {
          "id": "305",
          "name": "Game Over Victory Text Component Victory Type Icon 'should render angel icon when victory…'"
        },
        {
          "id": "306",
          "name": "Game Over Victory Text Component Victory Type Icon 'should render none icon when victory …'"
        },
        {
          "id": "307",
          "name": "Game Over Victory Text Component Victory Type Icon 'should render pied piper icon when vi…'"
        },
        {
          "id": "308",
          "name": "Game Over Victory Text Component Victory Type Icon 'should render prejudiced manipulator …'"
        },
        {
          "id": "309",
          "name": "Game Over Victory Text Component Victory Type Icon 'should render white werewolf icon whe…'"
        },
        {
          "id": "310",
          "name": "Game Over Victory Text Component Victory Type Text 'should render unknown text when victo…'"
        },
        {
          "id": "311",
          "name": "Game Over Victory Text Component Victory Type Text 'should render werewolves text when vi…'"
        },
        {
          "id": "312",
          "name": "Game Over Victory Text Component Victory Type Text 'should render villagers text when vic…'"
        },
        {
          "id": "313",
          "name": "Game Over Victory Text Component Victory Type Text 'should render lovers text when victor…'"
        },
        {
          "id": "314",
          "name": "Game Over Victory Text Component Victory Type Text 'should render angel text when victory…'"
        },
        {
          "id": "315",
          "name": "Game Over Victory Text Component Victory Type Text 'should render none text when victory …'"
        },
        {
          "id": "316",
          "name": "Game Over Victory Text Component Victory Type Text 'should render pied piper text when vi…'"
        },
        {
          "id": "317",
          "name": "Game Over Victory Text Component Victory Type Text 'should render prejudiced manipulator …'"
        },
        {
          "id": "318",
          "name": "Game Over Victory Text Component Victory Type Text 'should render white werewolf text whe…'"
        },
        {
          "id": "319",
          "name": "Game Over Victory Text Component Victory Type SubText 'should render unknown subtext when vi…'"
        },
        {
          "id": "320",
          "name": "Game Over Victory Text Component Victory Type SubText 'should render werewolves subtext when…'"
        },
        {
          "id": "321",
          "name": "Game Over Victory Text Component Victory Type SubText 'should render villagers subtext when …'"
        },
        {
          "id": "322",
          "name": "Game Over Victory Text Component Victory Type SubText 'should render lovers subtext when vic…'"
        },
        {
          "id": "323",
          "name": "Game Over Victory Text Component Victory Type SubText 'should render angel subtext when vict…'"
        },
        {
          "id": "324",
          "name": "Game Over Victory Text Component Victory Type SubText 'should render none subtext when victo…'"
        },
        {
          "id": "325",
          "name": "Game Over Victory Text Component Victory Type SubText 'should render pied piper subtext when…'"
        },
        {
          "id": "326",
          "name": "Game Over Victory Text Component Victory Type SubText 'should render prejudiced manipulator …'"
        },
        {
          "id": "327",
          "name": "Game Over Victory Text Component Victory Type SubText 'should render white werewolf subtext …'"
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\n\nimport type { NuxtImg } from \"#components\";\nimport GameOverVictoryText from \"~/components/pages/game/GameOver/GameOverVictoryText/GameOverVictoryText.vue\";\nimport type { GameVictory } from \"~/composables/api/game/types/game-victory/game-victory.class\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\nimport { createFakeGameVictory } from \"~/tests/unit/utils/factories/composables/api/game/game-victory/game-victory.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Over Victory Text Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameOverVictoryText>>;\n\n  async function mountGameOverVictoryTextComponent(): Promise<ReturnType<typeof mount<typeof GameOverVictoryText>>> {\n    return mountSuspendedComponent(GameOverVictoryText);\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameOverVictoryTextComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Trophy Icon\", () => {\n    it(\"should render trophy icon when rendered.\", () => {\n      const trophyIcon = wrapper.findComponent<typeof NuxtImg>(\"[alt='Trophy icon']\");\n\n      expect(trophyIcon.exists()).toBeTruthy();\n    });\n  });\n\n  describe(\"Victory Type Icon\", () => {\n    it.each<{\n      victory: GameVictory | undefined;\n      expectedIcon: string;\n      test: string;\n    }>([\n      {\n        victory: undefined,\n        expectedIcon: \"svg/misc/question-mark.svg\",\n        test: \"should render question mark icon when victory is undefined.\",\n      },\n      {\n        victory: createFakeGameVictory({ type: \"werewolves\" }),\n        expectedIcon: \"svg/role/werewolf.svg\",\n        test: \"should render werewolves icon when victory type is werewolves.\",\n      },\n      {\n        victory: createFakeGameVictory({ type: \"villagers\" }),\n        expectedIcon: \"svg/role/villager.svg\",\n        test: \"should render villagers icon when victory type is villagers.\",\n      },\n      {\n        victory: createFakeGameVictory({ type: \"lovers\" }),\n        expectedIcon: \"svg/role/lovers.svg\",\n        test: \"should render lovers icon when victory type is lovers.\",\n      },\n      {\n        victory: createFakeGameVictory({ type: \"angel\" }),\n        expectedIcon: \"svg/role/angel.svg\",\n        test: \"should render angel icon when victory type is angel.\",\n      },\n      {\n        victory: createFakeGameVictory({ type: \"none\" }),\n        expectedIcon: \"svg/game/player/dead.svg\",\n        test: \"should render none icon when victory type is none.\",\n      },\n      {\n        victory: createFakeGameVictory({ type: \"pied-piper\" }),\n        expectedIcon: \"svg/role/pied-piper.svg\",\n        test: \"should render pied piper icon when victory type is pied piper.\",\n      },\n      {\n        victory: createFakeGameVictory({ type: \"prejudiced-manipulator\" }),\n        expectedIcon: \"svg/role/prejudiced-manipulator.svg\",\n        test: \"should render prejudiced manipulator icon when victory type is prejudiced manipulator.\",\n      },\n      {\n        victory: createFakeGameVictory({ type: \"white-werewolf\" }),\n        expectedIcon: \"svg/role/white-werewolf.svg\",\n        test: \"should render white werewolf icon when victory type is white werewolf.\",\n      },\n    ])(\"$test\", async({ victory, expectedIcon }) => {\n      const gameStore = useGameStore();\n      gameStore.game.victory = victory;\n      await nextTick();\n      const victoryTypeIcon = wrapper.findComponent<typeof NuxtImg>(\"[alt='Victory type icon']\");\n\n      expect(victoryTypeIcon.attributes(\"src\")).toBe(expectedIcon);\n    });\n  });\n\n  describe(\"Victory Type Text\", () => {\n    it.each<{\n      victory: GameVictory | undefined;\n      expectedText: string;\n      test: string;\n    }>([\n      {\n        victory: undefined,\n        expectedText: \"??\",\n        test: \"should render unknown text when victory is undefined.\",\n      },\n      {\n        victory: createFakeGameVictory({ type: \"werewolves\" }),\n        expectedText: \"components.GameOverVictoryText.werewolvesWin\",\n        test: \"should render werewolves text when victory type is werewolves.\",\n      },\n      {\n        victory: createFakeGameVictory({ type: \"villagers\" }),\n        expectedText: \"components.GameOverVictoryText.villagersWin\",\n        test: \"should render villagers text when victory type is villagers.\",\n      },\n      {\n        victory: createFakeGameVictory({ type: \"lovers\" }),\n        expectedText: \"components.GameOverVictoryText.loversWin\",\n        test: \"should render lovers text when victory type is lovers.\",\n      },\n      {\n        victory: createFakeGameVictory({ type: \"angel\" }),\n        expectedText: \"components.GameOverVictoryText.angelWins\",\n        test: \"should render angel text when victory type is angel.\",\n      },\n      {\n        victory: createFakeGameVictory({ type: \"none\" }),\n        expectedText: \"components.GameOverVictoryText.nobodyWins\",\n        test: \"should render none text when victory type is none.\",\n      },\n      {\n        victory: createFakeGameVictory({ type: \"pied-piper\" }),\n        expectedText: \"components.GameOverVictoryText.piedPiperWins\",\n        test: \"should render pied piper text when victory type is pied piper.\",\n      },\n      {\n        victory: createFakeGameVictory({ type: \"prejudiced-manipulator\" }),\n        expectedText: \"components.GameOverVictoryText.prejudicedManipulatorWins\",\n        test: \"should render prejudiced manipulator text when victory type is prejudiced manipulator.\",\n      },\n      {\n        victory: createFakeGameVictory({ type: \"white-werewolf\" }),\n        expectedText: \"components.GameOverVictoryText.whiteWerewolfWins\",\n        test: \"should render white werewolf text when victory type is white werewolf.\",\n      },\n    ])(\"$test\", async({ victory, expectedText }) => {\n      const gameStore = useGameStore();\n      gameStore.game.victory = victory;\n      await nextTick();\n      const victoryTypeText = wrapper.find<HTMLHeadingElement>(\"#victory-text\");\n\n      expect(victoryTypeText.text()).toBe(expectedText);\n    });\n  });\n\n  describe(\"Victory Type SubText\", () => {\n    it.each<{\n      victory: GameVictory | undefined;\n      expectedSubText: string;\n      test: string;\n    }>([\n      {\n        victory: undefined,\n        expectedSubText: \"??\",\n        test: \"should render unknown subtext when victory is undefined.\",\n      },\n      {\n        victory: createFakeGameVictory({ type: \"werewolves\" }),\n        expectedSubText: \"components.GameOverVictoryText.werewolvesHaveEatenALot\",\n        test: \"should render werewolves subtext when victory type is werewolves.\",\n      },\n      {\n        victory: createFakeGameVictory({ type: \"villagers\" }),\n        expectedSubText: \"components.GameOverVictoryText.villagersHaveSurvivedWerewolves\",\n        test: \"should render villagers subtext when victory type is villagers.\",\n      },\n      {\n        victory: createFakeGameVictory({ type: \"lovers\" }),\n        expectedSubText: \"components.GameOverVictoryText.loversAreTogetherForever\",\n        test: \"should render lovers subtext when victory type is lovers.\",\n      },\n      {\n        victory: createFakeGameVictory({ type: \"angel\" }),\n        expectedSubText: \"components.GameOverVictoryText.angelComesBackToParadise\",\n        test: \"should render angel subtext when victory type is angel.\",\n      },\n      {\n        victory: createFakeGameVictory({ type: \"none\" }),\n        expectedSubText: \"components.GameOverVictoryText.everybodyMurderedEachOther\",\n        test: \"should render none subtext when victory type is none.\",\n      },\n      {\n        victory: createFakeGameVictory({ type: \"pied-piper\" }),\n        expectedSubText: \"components.GameOverVictoryText.piedPiperHasControl\",\n        test: \"should render pied piper subtext when victory type is pied piper.\",\n      },\n      {\n        victory: createFakeGameVictory({ type: \"prejudiced-manipulator\" }),\n        expectedSubText: \"components.GameOverVictoryText.prejudicedManipulatorGroupRemainsAlive\",\n        test: \"should render prejudiced manipulator subtext when victory type is prejudiced manipulator.\",\n      },\n      {\n        victory: createFakeGameVictory({ type: \"white-werewolf\" }),\n        expectedSubText: \"components.GameOverVictoryText.whiteWerewolfWinsAlone\",\n        test: \"should render white werewolf subtext when victory type is white werewolf.\",\n      },\n    ])(\"$test\", async({ victory, expectedSubText }) => {\n      const gameStore = useGameStore();\n      gameStore.game.victory = victory;\n      await nextTick();\n      const victoryTypeSubText = wrapper.find<HTMLParagraphElement>(\"#victory-sub-text\");\n\n      expect(victoryTypeSubText.text()).toBe(expectedSubText);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePicker.nuxt.spec.ts": {
      "tests": [
        {
          "id": "328",
          "name": "Game Lobby Role Picker Component should match snapshot when rendered."
        },
        {
          "id": "329",
          "name": "Game Lobby Role Picker Component Dialog not open should set dialog to invisible when rendered."
        },
        {
          "id": "330",
          "name": "Game Lobby Role Picker Component Dialog not open Game Lobby Role Picker Header should not render game lobby role picker header when player is not defined."
        },
        {
          "id": "331",
          "name": "Game Lobby Role Picker Component Dialog not open Game Lobby Role Picker Content should not render game lobby role picker content when player is not defined."
        },
        {
          "id": "332",
          "name": "Game Lobby Role Picker Component Dialog not open Game Lobby Role Picker Footer should not render game lobby role picker footer when player is not defined."
        },
        {
          "id": "333",
          "name": "Game Lobby Role Picker Component Dialog open should set dialog to visible when freshly opened."
        },
        {
          "id": "334",
          "name": "Game Lobby Role Picker Component Dialog open Game Lobby Role Picker Header should render game lobby role picker header when player is defined."
        },
        {
          "id": "335",
          "name": "Game Lobby Role Picker Component Dialog open Game Lobby Role Picker Header should pass player to game lobby role picker header when freshly opened."
        },
        {
          "id": "336",
          "name": "Game Lobby Role Picker Component Dialog open Game Lobby Role Picker Content should render game lobby role picker content when player is defined."
        },
        {
          "id": "337",
          "name": "Game Lobby Role Picker Component Dialog open Game Lobby Role Picker Content should pass an undefined picked role to game lobby role picker description when freshly opened."
        },
        {
          "id": "338",
          "name": "Game Lobby Role Picker Component Dialog open Game Lobby Role Picker Content should pick role when game lobby role picker grid emits role pick event."
        },
        {
          "id": "339",
          "name": "Game Lobby Role Picker Component Dialog open Game Lobby Role Picker Footer should render game lobby role picker footer when player is defined."
        },
        {
          "id": "340",
          "name": "Game Lobby Role Picker Component Dialog open Game Lobby Role Picker Footer should pass player to game lobby role picker footer when freshly opened."
        },
        {
          "id": "341",
          "name": "Game Lobby Role Picker Component Dialog open Game Lobby Role Picker Footer should close dialog when game lobby role picker footer emits player update event."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport Dialog from \"primevue/dialog\";\n\nimport type { GameLobbyRolePickerExposed } from \"~/components/pages/game-lobby/GameLobbyRolePicker/game-lobby-role-picker.types\";\nimport GameLobbyRolePicker from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePicker.vue\";\nimport type GameLobbyRolePickerDescription from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescription.vue\";\nimport type GameLobbyRolePickerFooter from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerFooter/GameLobbyRolePickerFooter.vue\";\nimport type GameLobbyRolePickerGrid from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGrid.vue\";\nimport type GameLobbyRolePickerHeader from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerHeader/GameLobbyRolePickerHeader.vue\";\nimport type { CreateGamePlayerDto } from \"~/composables/api/game/dto/create-game/create-game-player/create-game-player.dto\";\nimport type { Role } from \"~/composables/api/role/types/role.class\";\nimport { createFakeCreateGamePlayerDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game-player/create-game-player.dto.factory\";\nimport { createFakeRole } from \"~/tests/unit/utils/factories/composables/api/role/role.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Role Picker Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyRolePicker>>;\n\n  async function mountGameLobbyRolePickerComponent(options: ComponentMountingOptions<typeof GameLobbyRolePicker> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyRolePicker>>> {\n    return mountSuspendedComponent(GameLobbyRolePicker, {\n      shallow: false,\n      global: {\n        stubs: {\n          GameLobbyRolePickerHeader: true,\n          GameLobbyRolePickerDescription: true,\n          GameLobbyRolePickerGrid: true,\n          GameLobbyRolePickerFooter: true,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyRolePickerComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Dialog not open\", () => {\n    it(\"should set dialog to invisible when rendered.\", async() => {\n      await mountGameLobbyRolePickerComponent({ shallow: true });\n      const dialog = wrapper.findComponent<typeof Dialog>(Dialog);\n\n      expect(dialog.props(\"visible\")).toBeFalsy();\n    });\n\n    describe(\"Game Lobby Role Picker Header\", () => {\n      it(\"should not render game lobby role picker header when player is not defined.\", () => {\n        const gameLobbyRolePickerHeader = wrapper.findComponent<typeof GameLobbyRolePickerHeader>(\"#game-lobby-role-picker-header\");\n\n        expect(gameLobbyRolePickerHeader.exists()).toBeFalsy();\n      });\n    });\n\n    describe(\"Game Lobby Role Picker Content\", () => {\n      it(\"should not render game lobby role picker content when player is not defined.\", () => {\n        const gameLobbyRolePickerDescription = wrapper.findComponent<typeof GameLobbyRolePickerDescription>(\"#game-lobby-role-picker-description\");\n        const gameLobbyRolePickerGrid = wrapper.findComponent<typeof GameLobbyRolePickerGrid>(\"#game-lobby-role-picker-grid\");\n\n        expect(gameLobbyRolePickerDescription.exists()).toBeFalsy();\n        expect(gameLobbyRolePickerGrid.exists()).toBeFalsy();\n      });\n    });\n\n    describe(\"Game Lobby Role Picker Footer\", () => {\n      it(\"should not render game lobby role picker footer when player is not defined.\", () => {\n        const gameLobbyRolePickerFooter = wrapper.findComponent<typeof GameLobbyRolePickerFooter>(\"#game-lobby-role-picker-footer\");\n\n        expect(gameLobbyRolePickerFooter.exists()).toBeFalsy();\n      });\n    });\n  });\n\n  describe(\"Dialog open\", () => {\n    const player = createFakeCreateGamePlayerDto();\n\n    beforeEach(async() => {\n      wrapper = await mountGameLobbyRolePickerComponent();\n      (wrapper.vm as unknown as GameLobbyRolePickerExposed).openToPickRoleForPlayer(player);\n    });\n\n    it(\"should set dialog to visible when freshly opened.\", async() => {\n      wrapper = await mountGameLobbyRolePickerComponent({ shallow: true });\n      (wrapper.vm as unknown as GameLobbyRolePickerExposed).openToPickRoleForPlayer(player);\n      await nextTick();\n      const dialog = wrapper.findComponent<typeof Dialog>(Dialog);\n\n      expect(dialog.attributes(\"visible\")).toBe(\"true\");\n    });\n\n    describe(\"Game Lobby Role Picker Header\", () => {\n      it(\"should render game lobby role picker header when player is defined.\", () => {\n        const gameLobbyRolePickerHeader = wrapper.findComponent<typeof GameLobbyRolePickerHeader>(\"#game-lobby-role-picker-header\");\n\n        expect(gameLobbyRolePickerHeader.exists()).toBeTruthy();\n      });\n\n      it(\"should pass player to game lobby role picker header when freshly opened.\", () => {\n        const gameLobbyRolePickerHeader = wrapper.findComponent<typeof GameLobbyRolePickerHeader>(\"#game-lobby-role-picker-header\");\n\n        expect(gameLobbyRolePickerHeader.props(\"player\")).toStrictEqual<CreateGamePlayerDto>(player);\n      });\n    });\n\n    describe(\"Game Lobby Role Picker Content\", () => {\n      it(\"should render game lobby role picker content when player is defined.\", () => {\n        const gameLobbyRolePickerDescription = wrapper.findComponent<typeof GameLobbyRolePickerDescription>(\"#game-lobby-role-picker-description\");\n        const gameLobbyRolePickerGrid = wrapper.findComponent<typeof GameLobbyRolePickerGrid>(\"#game-lobby-role-picker-grid\");\n\n        expect(gameLobbyRolePickerDescription.exists()).toBeTruthy();\n        expect(gameLobbyRolePickerGrid.exists()).toBeTruthy();\n      });\n\n      it(\"should pass an undefined picked role to game lobby role picker description when freshly opened.\", () => {\n        const gameLobbyRolePickerDescription = wrapper.findComponent<typeof GameLobbyRolePickerGrid>(\"#game-lobby-role-picker-grid\");\n\n        expect(gameLobbyRolePickerDescription.attributes(\"pickedrole\")).toBeUndefined();\n      });\n\n      it(\"should pick role when game lobby role picker grid emits role pick event.\", async() => {\n        const emittedRole = createFakeRole();\n        const gameLobbyRolePickerGrid = wrapper.findComponent<typeof GameLobbyRolePickerGrid>(\"#game-lobby-role-picker-grid\");\n        (gameLobbyRolePickerGrid.vm as VueVm).$emit(\"pick-role\", emittedRole);\n        await nextTick();\n\n        expect(gameLobbyRolePickerGrid.props(\"pickedRole\")).toStrictEqual<Role>(emittedRole);\n      });\n    });\n\n    describe(\"Game Lobby Role Picker Footer\", () => {\n      it(\"should render game lobby role picker footer when player is defined.\", () => {\n        const gameLobbyRolePickerFooter = wrapper.findComponent<typeof GameLobbyRolePickerFooter>(\"#game-lobby-role-picker-footer\");\n\n        expect(gameLobbyRolePickerFooter.exists()).toBeTruthy();\n      });\n\n      it(\"should pass player to game lobby role picker footer when freshly opened.\", () => {\n        const gameLobbyRolePickerFooter = wrapper.findComponent<typeof GameLobbyRolePickerFooter>(\"#game-lobby-role-picker-footer\");\n\n        expect(gameLobbyRolePickerFooter.props(\"player\")).toStrictEqual<CreateGamePlayerDto>(player);\n      });\n\n      it(\"should close dialog when game lobby role picker footer emits player update event.\", async() => {\n        const emittedRole = createFakeRole();\n        const gameLobbyRolePickerGrid = wrapper.findComponent<typeof GameLobbyRolePickerGrid>(\"#game-lobby-role-picker-grid\");\n        (gameLobbyRolePickerGrid.vm as VueVm).$emit(\"pick-role\", emittedRole);\n        await nextTick();\n        let gameLobbyRolePickerFooter = wrapper.findComponent<typeof GameLobbyRolePickerFooter>(\"#game-lobby-role-picker-footer\");\n        (gameLobbyRolePickerFooter.vm as VueVm).$emit(\"player-update\", player);\n        await nextTick();\n        gameLobbyRolePickerFooter = wrapper.findComponent<typeof GameLobbyRolePickerFooter>(\"#game-lobby-role-picker-footer\");\n\n        expect(gameLobbyRolePickerFooter.exists()).toBeFalsy();\n      });\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyHeader/GameLobbyPlayerInput/GameLobbyPlayerInput.nuxt.spec.ts": {
      "tests": [
        {
          "id": "342",
          "name": "Game Lobby Player Input Component should match snapshot when rendered."
        },
        {
          "id": "343",
          "name": "Game Lobby Player Input Component Text input should be prefilled when v-model value is not empty."
        },
        {
          "id": "344",
          "name": "Game Lobby Player Input Component Text input should be disabled when create game dto has reached max players."
        },
        {
          "id": "345",
          "name": "Game Lobby Player Input Component Text input should have invalid class when player name exists in game."
        },
        {
          "id": "346",
          "name": "Game Lobby Player Input Component Text input should not be disabled when create game dto has not reached max players."
        },
        {
          "id": "347",
          "name": "Game Lobby Player Input Component Text input should translate input label when rendered."
        },
        {
          "id": "348",
          "name": "Game Lobby Player Input Component Add button should be disabled when create game dto has reached max players."
        },
        {
          "id": "349",
          "name": "Game Lobby Player Input Component Add button should be disabled when one player name is same as input value."
        },
        {
          "id": "350",
          "name": "Game Lobby Player Input Component Add button should be disabled when one player name is same as input value even with some spaces around it."
        },
        {
          "id": "351",
          "name": "Game Lobby Player Input Component Add button should be enabled when input value is not empty and create game dto has not reached max players."
        },
        {
          "id": "352",
          "name": "Game Lobby Player Input Component Add button should translate button label when rendered."
        },
        {
          "id": "353",
          "name": "Game Lobby Player Input Component Help Text should translate max players reached help message when max players are reached in game."
        },
        {
          "id": "354",
          "name": "Game Lobby Player Input Component Help Text should translate player name exists help message when player name exists in game."
        },
        {
          "id": "355",
          "name": "Game Lobby Player Input Component Help Text should translate player name max length help message when player name is too long."
        },
        {
          "id": "356",
          "name": "Game Lobby Player Input Component Help Text should translate basic help message when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport type InputText from \"primevue/inputtext\";\n\nimport type { GameLobbyPlayerInputProps } from \"~/components/pages/game-lobby/GameLobbyHeader/GameLobbyPlayerInput/game-lobby-player-input.types\";\nimport GameLobbyPlayerInput from \"~/components/pages/game-lobby/GameLobbyHeader/GameLobbyPlayerInput/GameLobbyPlayerInput.vue\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGamePlayerDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game-player/create-game-player.dto.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Lobby Player Input Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyPlayerInput>>;\n  const defaultProps: GameLobbyPlayerInputProps = { modelValue: \"\" };\n  const defaultMountingOptions: ComponentMountingOptions<typeof GameLobbyPlayerInput> = {\n    props: defaultProps,\n    global: { stubs: { InputGroup: false } },\n  };\n\n  beforeEach(async() => {\n    wrapper = await mountSuspendedComponent(GameLobbyPlayerInput, defaultMountingOptions);\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Text input\", () => {\n    it(\"should be prefilled when v-model value is not empty.\", async() => {\n      wrapper = await mountSuspendedComponent(GameLobbyPlayerInput, {\n        ...defaultMountingOptions,\n        props: { modelValue: \"Player 1\" },\n      });\n      const input = wrapper.findComponent<typeof InputText>(\"#player-name-input\");\n\n      expect(input.attributes(\"modelvalue\")).toBe(\"Player 1\");\n    });\n\n    it(\"should be disabled when create game dto has reached max players.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.players = Array.from({ length: 40 }, createFakeCreateGamePlayerDto);\n      const input = wrapper.findComponent<typeof InputText>(\"#player-name-input\");\n      await nextTick();\n\n      expect(input.attributes(\"disabled\")).toBe(\"true\");\n    });\n\n    it(\"should have invalid class when player name exists in game.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.players = [\n        createFakeCreateGamePlayerDto({ name: \"Player 1\" }),\n        createFakeCreateGamePlayerDto({ name: \"Player 2\" }),\n        createFakeCreateGamePlayerDto({ name: \"Player 3\" }),\n      ];\n      const input = wrapper.findComponent<typeof InputText>(\"#player-name-input\");\n      await input.setValue(\" Player 2 \");\n\n      expect(input.classes(\"p-invalid\")).toBeTrue();\n    });\n\n    it(\"should not be disabled when create game dto has not reached max players.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.players = Array.from({ length: 39 }, createFakeCreateGamePlayerDto);\n      const input = wrapper.findComponent<typeof InputText>(\"#player-name-input\");\n      await nextTick();\n\n      expect(input.attributes(\"disabled\")).toBe(\"false\");\n    });\n\n    it(\"should translate input label when rendered.\", () => {\n      const label = wrapper.find<HTMLLabelElement>(\"[for='player-name-input']\");\n\n      expect(label.text()).toBe(\"Player name\");\n    });\n  });\n\n  describe(\"Add button\", () => {\n    it(\"should be disabled when create game dto has reached max players.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.players = Array.from({ length: 40 }, createFakeCreateGamePlayerDto);\n      const button = wrapper.find<HTMLButtonElement>(\"#add-player-button\");\n      await nextTick();\n\n      expect(button.attributes(\"disabled\")).toBe(\"true\");\n    });\n\n    it(\"should be disabled when one player name is same as input value.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.players = [\n        createFakeCreateGamePlayerDto({ name: \"Player 1\" }),\n        createFakeCreateGamePlayerDto({ name: \"Player 2\" }),\n        createFakeCreateGamePlayerDto({ name: \"Player 3\" }),\n      ];\n      const input = wrapper.findComponent<typeof InputText>(\"#player-name-input\");\n      const button = wrapper.find<HTMLButtonElement>(\"#add-player-button\");\n      await input.setValue(\"Player 1\");\n\n      expect(button.attributes(\"disabled\")).toBe(\"true\");\n    });\n\n    it(\"should be disabled when one player name is same as input value even with some spaces around it.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.players = [\n        createFakeCreateGamePlayerDto({ name: \"Player 1\" }),\n        createFakeCreateGamePlayerDto({ name: \"Player 2\" }),\n        createFakeCreateGamePlayerDto({ name: \"Player 3\" }),\n      ];\n      const input = wrapper.findComponent<typeof InputText>(\"#player-name-input\");\n      const button = wrapper.find<HTMLButtonElement>(\"#add-player-button\");\n      await input.setValue(\"   Player 1   \");\n\n      expect(button.attributes(\"disabled\")).toBe(\"true\");\n    });\n\n    it(\"should be enabled when input value is not empty and create game dto has not reached max players.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.players = Array.from({ length: 39 }, createFakeCreateGamePlayerDto);\n      const input = wrapper.findComponent<typeof InputText>(\"#player-name-input\");\n      const button = wrapper.find<HTMLButtonElement>(\"#add-player-button\");\n      await input.setValue(\"Player 2\");\n\n      expect(button.attributes(\"disabled\")).toBe(\"false\");\n    });\n\n    it(\"should translate button label when rendered.\", async() => {\n      wrapper = await mountSuspendedComponent(GameLobbyPlayerInput, {\n        ...defaultMountingOptions,\n        global: {\n          stubs: {\n            InputGroup: false,\n            Button: false,\n          },\n        },\n      });\n      const button = wrapper.find<HTMLButtonElement>(\"#add-player-button\");\n\n      expect(button.text()).toBe(\"Add\");\n    });\n  });\n\n  describe(\"Help Text\", () => {\n    it(\"should translate max players reached help message when max players are reached in game.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.players = Array.from({ length: 40 }, createFakeCreateGamePlayerDto);\n      await nextTick();\n      const helpText = wrapper.find<HTMLLabelElement>(\"#player-name-input-help\");\n\n      expect(helpText.text()).toBe(\"components.GameLobbyPlayerInput.maxPlayersReached\");\n    });\n\n    it(\"should translate player name exists help message when player name exists in game.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.players = [\n        createFakeCreateGamePlayerDto({ name: \"Player 1\" }),\n        createFakeCreateGamePlayerDto({ name: \"Player 2\" }),\n        createFakeCreateGamePlayerDto({ name: \"Player 3\" }),\n      ];\n      const input = wrapper.findComponent<typeof InputText>(\"#player-name-input\");\n      await input.setValue(\"Player 2\");\n      const helpText = wrapper.find<HTMLLabelElement>(\"#player-name-input-help\");\n\n      expect(helpText.text()).toBe(\"components.GameLobbyPlayerInput.playerNameIsAlreadyTaken\");\n    });\n\n    it(\"should translate player name max length help message when player name is too long.\", async() => {\n      const input = wrapper.findComponent<typeof InputText>(\"#player-name-input\");\n      await input.setValue(\"  FrontLine incremental password  \");\n      const helpText = wrapper.find<HTMLLabelElement>(\"#player-name-input-help\");\n\n      expect(helpText.text()).toBe(\"components.GameLobbyPlayerInput.playerNameMaxLengthReached\");\n    });\n\n    it(\"should translate basic help message when rendered.\", async() => {\n      const input = wrapper.findComponent<typeof InputText>(\"#player-name-input\");\n      await input.setValue(\"  Antoine                       \");\n      const helpText = wrapper.find<HTMLLabelElement>(\"#player-name-input-help\");\n\n      expect(helpText.text()).toBe(\"components.GameLobbyPlayerInput.pleaseEnterPlayerName\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyRandomCompositionButton/GameLobbyRandomCompositionButton.nuxt.spec.ts": {
      "tests": [
        {
          "id": "357",
          "name": "Game Lobby Random Composition Button Component should match snapshot when rendered."
        },
        {
          "id": "358",
          "name": "Game Lobby Random Composition Button Component Button container should assign tooltip when button is disabled."
        },
        {
          "id": "359",
          "name": "Game Lobby Random Composition Button Component Button container should not assign tooltip when button is enabled."
        },
        {
          "id": "360",
          "name": "Game Lobby Random Composition Button Component Button container Button should be disabled when min of players is not reached."
        },
        {
          "id": "361",
          "name": "Game Lobby Random Composition Button Component Button container Button should be enabled when min of players is reached."
        },
        {
          "id": "362",
          "name": "Game Lobby Random Composition Button Component Button container Button Click on button should fetch random game composition when clicked."
        },
        {
          "id": "363",
          "name": "Game Lobby Random Composition Button Component Button container Button Click on button should set fetched random game composition to create game dto when fetched."
        },
        {
          "id": "364",
          "name": "Game Lobby Random Composition Button Component Button container Button Click on button should not set fetched random game composition to create game dto when fetch returned null."
        },
        {
          "id": "365",
          "name": "Game Lobby Random Composition Button Component Button container Button Click on button should be loading when fetch is in progress."
        },
        {
          "id": "366",
          "name": "Game Lobby Random Composition Button Component Button container Button Click on button should not be loading when fetch returned."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type Button from \"primevue/button\";\nimport type { Mock } from \"vitest\";\nimport type { Ref } from \"vue\";\n\nimport GameLobbyRandomCompositionButton from \"~/components/pages/game-lobby/GameLobbyFooter/GameLobbyRandomCompositionButton/GameLobbyRandomCompositionButton.vue\";\nimport * as UseFetchRandomGameComposition from \"~/composables/api/game/useFetchRandomGameComposition\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGamePlayerDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game-player/create-game-player.dto.factory\";\nimport { createFakeCreateGameDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\nimport { pTooltipDirectiveBinder } from \"~/tests/unit/utils/helpers/directive.helpers\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { BoundTooltip } from \"~/tests/unit/utils/types/directive.types\";\n\ndescribe(\"Game Lobby Random Composition Button Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyRandomCompositionButton>>;\n  let mocks: {\n    composables: {\n      useFetchRandomGameComposition: {\n        fetchRandomGameComposition: Mock;\n      }\n    }\n  };\n\n  beforeEach(async() => {\n    mocks = { composables: { useFetchRandomGameComposition: { fetchRandomGameComposition: vi.fn() } } };\n    vi.spyOn(UseFetchRandomGameComposition, \"useFetchRandomGameComposition\").mockImplementation(() => mocks.composables.useFetchRandomGameComposition);\n    wrapper = await mountSuspendedComponent(GameLobbyRandomCompositionButton);\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Button container\", () => {\n    it(\"should assign tooltip when button is disabled.\", async() => {\n      const tooltip: BoundTooltip = { value: undefined };\n      const directives = { ...pTooltipDirectiveBinder(tooltip, \"#game-lobby-random-composition-button-container\") };\n      wrapper = await mountSuspendedComponent(GameLobbyRandomCompositionButton, { global: { directives } });\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto = createFakeCreateGameDto({ players: [] });\n      await nextTick();\n\n      expect(tooltip.value).toBe(\"components.GameLobbyRandomCompositionButton.minPlayersNotReached\");\n    });\n\n    it(\"should not assign tooltip when button is enabled.\", async() => {\n      const tooltip: BoundTooltip = { value: undefined };\n      const directives = { ...pTooltipDirectiveBinder(tooltip, \"#game-lobby-random-composition-button-container\") };\n      wrapper = await mountSuspendedComponent(GameLobbyRandomCompositionButton, { global: { directives } });\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto = createFakeCreateGameDto({\n        players: [\n          createFakeCreateGamePlayerDto({ name: \"Player 1\" }),\n          createFakeCreateGamePlayerDto({ name: \"Player 2\" }),\n          createFakeCreateGamePlayerDto({ name: \"Player 3\" }),\n          createFakeCreateGamePlayerDto({ name: \"Player 4\" }),\n        ],\n      });\n      await nextTick();\n\n      expect(tooltip.value).toBeUndefined();\n    });\n\n    describe(\"Button\", () => {\n      it(\"should be disabled when min of players is not reached.\", async() => {\n        const createGameDtoStore = useCreateGameDtoStore();\n        createGameDtoStore.createGameDto = createFakeCreateGameDto({ players: [] });\n        await nextTick();\n        const button = wrapper.findComponent<Button>(\".random-composition-button\");\n\n        expect(button.attributes(\"disabled\")).toBe(\"true\");\n      });\n\n      it(\"should be enabled when min of players is reached.\", async() => {\n        const createGameDtoStore = useCreateGameDtoStore();\n        createGameDtoStore.createGameDto = createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ name: \"Player 1\" }),\n            createFakeCreateGamePlayerDto({ name: \"Player 2\" }),\n            createFakeCreateGamePlayerDto({ name: \"Player 3\" }),\n            createFakeCreateGamePlayerDto({ name: \"Player 4\" }),\n          ],\n        });\n        await nextTick();\n        const button = wrapper.findComponent<Button>(\".random-composition-button\");\n\n        expect(button.attributes(\"disabled\")).toBe(\"false\");\n      });\n\n      describe(\"Click on button\", () => {\n        beforeEach(() => {\n          const createGameDtoStore = useCreateGameDtoStore();\n          createGameDtoStore.createGameDto = createFakeCreateGameDto({\n            players: [\n              createFakeCreateGamePlayerDto({ name: \"Player 1\" }),\n              createFakeCreateGamePlayerDto({ name: \"Player 2\" }),\n              createFakeCreateGamePlayerDto({ name: \"Player 3\" }),\n              createFakeCreateGamePlayerDto({ name: \"Player 4\" }),\n            ],\n          });\n        });\n\n        it(\"should fetch random game composition when clicked.\", async() => {\n          const createGameDtoStore = useCreateGameDtoStore();\n          const button = wrapper.findComponent<Button>(\".random-composition-button\");\n          await button.trigger(\"click\");\n          await nextTick();\n\n          expect(mocks.composables.useFetchRandomGameComposition.fetchRandomGameComposition).toHaveBeenCalledExactlyOnceWith({\n            players: createGameDtoStore.createGameDto.players,\n            excludedRoles: [\n              \"thief\",\n              \"actor\",\n              \"prejudiced-manipulator\",\n            ],\n          });\n        });\n\n        it(\"should set fetched random game composition to create game dto when fetched.\", async() => {\n          const createGameDtoStore = useCreateGameDtoStore();\n          const randomComposition = [\n            createFakeCreateGamePlayerDto({ name: \"Player 1\" }),\n            createFakeCreateGamePlayerDto({ name: \"Player 2\" }),\n            createFakeCreateGamePlayerDto({ name: \"Player 3\" }),\n            createFakeCreateGamePlayerDto({ name: \"Player 4\" }),\n          ];\n          mocks.composables.useFetchRandomGameComposition.fetchRandomGameComposition.mockResolvedValue(randomComposition);\n          const button = wrapper.findComponent<Button>(\".random-composition-button\");\n          await button.trigger(\"click\");\n          await nextTick();\n          mocks.composables.useFetchRandomGameComposition.fetchRandomGameComposition.mockResolvedValue(randomComposition);\n\n          expect(createGameDtoStore.setPlayersToCreateGameDto).toHaveBeenCalledExactlyOnceWith(randomComposition);\n        });\n\n        it(\"should not set fetched random game composition to create game dto when fetch returned null.\", async() => {\n          const createGameDtoStore = useCreateGameDtoStore();\n          createGameDtoStore.createGameDto = createFakeCreateGameDto({\n            players: [\n              createFakeCreateGamePlayerDto({ name: \"Player 1\" }),\n              createFakeCreateGamePlayerDto({ name: \"Player 2\" }),\n              createFakeCreateGamePlayerDto({ name: \"Player 3\" }),\n              createFakeCreateGamePlayerDto({ name: \"Player 4\" }),\n            ],\n          });\n          await nextTick();\n          mocks.composables.useFetchRandomGameComposition.fetchRandomGameComposition.mockResolvedValue(null);\n          const button = wrapper.findComponent<Button>(\".random-composition-button\");\n          await button.trigger(\"click\");\n          await nextTick();\n\n          expect(createGameDtoStore.setPlayersToCreateGameDto).not.toHaveBeenCalled();\n        });\n\n        it(\"should be loading when fetch is in progress.\", () => {\n          const button = wrapper.findComponent<Button>(\".random-composition-button\");\n          void button.trigger(\"click\");\n\n          expect((wrapper.vm as unknown as { isLoadingGetRandomGameComposition: Ref<boolean> }).isLoadingGetRandomGameComposition.value).toBeTrue();\n        });\n\n        it(\"should not be loading when fetch returned.\", async() => {\n          const button = wrapper.findComponent<Button>(\".random-composition-button\");\n          await button.trigger(\"click\");\n\n          expect(button.attributes(\"loading\")).toBe(\"false\");\n        });\n      });\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyStartGameButton/GameLobbyStartGameButton.nuxt.spec.ts": {
      "tests": [
        {
          "id": "367",
          "name": "Game Lobby Start Game Button Component should match snapshot when rendered."
        },
        {
          "id": "368",
          "name": "Game Lobby Start Game Button Component Button container should assign tooltip when button is disabled."
        },
        {
          "id": "369",
          "name": "Game Lobby Start Game Button Component Button container should not assign tooltip when button is enabled."
        },
        {
          "id": "370",
          "name": "Game Lobby Start Game Button Component Button should be disabled when minimum players are not reached."
        },
        {
          "id": "371",
          "name": "Game Lobby Start Game Button Component Button should be enabled when game can be created."
        },
        {
          "id": "372",
          "name": "Game Lobby Start Game Button Component Button Click on button should create game when clicked."
        },
        {
          "id": "373",
          "name": "Game Lobby Start Game Button Component Button Click on button should navigate to game with id in params when game is created."
        },
        {
          "id": "374",
          "name": "Game Lobby Start Game Button Component Button Click on button should add success toast when game is created."
        },
        {
          "id": "375",
          "name": "Game Lobby Start Game Button Component Button Click on button should not add success toast when game is not created."
        },
        {
          "id": "376",
          "name": "Game Lobby Start Game Button Component Button Click on button should be loading when fetch is in progress."
        },
        {
          "id": "377",
          "name": "Game Lobby Start Game Button Component Button Click on button should not be loading when fetch returned."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport { flushPromises } from \"@vue/test-utils\";\nimport type Button from \"primevue/button\";\nimport type { Ref } from \"vue\";\n\nimport GameLobbyStartGameButton from \"~/components/pages/game-lobby/GameLobbyFooter/GameLobbyStartGameButton/GameLobbyStartGameButton.vue\";\nimport * as UseFetchGames from \"~/composables/api/game/useFetchGames\";\nimport * as UseVuePrimeToasts from \"~/composables/vue-prime/useVuePrimeToasts\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { useRolesStore } from \"~/stores/role/useRolesStore\";\nimport { createFakeCreateGamePlayerDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game-player/create-game-player.dto.factory\";\nimport { createFakeCreateGameDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\nimport { createFakeGame } from \"~/tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { createFakeUseFetchGames } from \"~/tests/unit/utils/factories/composables/api/game/useFetchGames.factory\";\nimport { createFakeRole } from \"~/tests/unit/utils/factories/composables/api/role/role.factory\";\nimport { createFakeUseVuePrimeToasts } from \"~/tests/unit/utils/factories/composables/vue-prime/useVuePrimeToasts.factory\";\nimport { pTooltipDirectiveBinder } from \"~/tests/unit/utils/helpers/directive.helpers\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { BoundTooltip } from \"~/tests/unit/utils/types/directive.types\";\n\ndescribe(\"Game Lobby Start Game Button Component\", () => {\n  const validCreateGameDto = createFakeCreateGameDto({\n    players: [\n      createFakeCreateGamePlayerDto({\n        name: \"Player 1\",\n        role: { name: \"villager\" },\n        side: { current: \"villagers\" },\n      }),\n      createFakeCreateGamePlayerDto({\n        name: \"Player 2\",\n        role: { name: \"werewolf\" },\n        side: { current: \"werewolves\" },\n      }),\n      createFakeCreateGamePlayerDto({\n        name: \"Player 3\",\n        role: { name: \"werewolf\" },\n        side: { current: \"werewolves\" },\n      }),\n      createFakeCreateGamePlayerDto({\n        name: \"Player 4\",\n        role: { name: \"werewolf\" },\n        side: { current: \"werewolves\" },\n      }),\n    ],\n  });\n\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyStartGameButton>>;\n  let mocks: {\n    composables: {\n      useFetchGames: ReturnType<typeof createFakeUseFetchGames>;\n      useVuePrimeToasts: ReturnType<typeof createFakeUseVuePrimeToasts>;\n    }\n  };\n\n  beforeEach(async() => {\n    mocks = {\n      composables: {\n        useFetchGames: createFakeUseFetchGames(),\n        useVuePrimeToasts: createFakeUseVuePrimeToasts(),\n      },\n    };\n    vi.spyOn(UseFetchGames, \"useFetchGames\").mockReturnValue(mocks.composables.useFetchGames);\n    vi.spyOn(UseVuePrimeToasts, \"useVuePrimeToasts\").mockReturnValue(mocks.composables.useVuePrimeToasts);\n    wrapper = await mountSuspendedComponent(GameLobbyStartGameButton);\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Button container\", () => {\n    it(\"should assign tooltip when button is disabled.\", async() => {\n      const tooltip: BoundTooltip = { value: undefined };\n      const directives = { ...pTooltipDirectiveBinder(tooltip, \"#game-lobby-start-game-button-container\") };\n      wrapper = await mountSuspendedComponent(GameLobbyStartGameButton, { global: { directives } });\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto = createFakeCreateGameDto({ players: [] });\n      await nextTick();\n\n      expect(tooltip.value).toBe(\"composables.useCreateGameDtoValidation.minimumOfPlayersNotReached\");\n    });\n\n    it(\"should not assign tooltip when button is enabled.\", async() => {\n      const tooltip: BoundTooltip = { value: undefined };\n      const directives = { ...pTooltipDirectiveBinder(tooltip, \"#game-lobby-start-game-button-container\") };\n      wrapper = await mountSuspendedComponent(GameLobbyStartGameButton, { global: { directives } });\n      const rolesStore = useRolesStore();\n      rolesStore.roles = [\n        createFakeRole({ name: \"two-sisters\", minInGame: 2 }),\n        createFakeRole({ name: \"three-brothers\", minInGame: 3 }),\n      ];\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto = validCreateGameDto;\n      await nextTick();\n\n      expect(tooltip.value).toBeUndefined();\n    });\n  });\n\n  describe(\"Button\", () => {\n    beforeEach(() => {\n      const rolesStore = useRolesStore();\n      rolesStore.roles = [\n        createFakeRole({ name: \"two-sisters\", minInGame: 2 }),\n        createFakeRole({ name: \"three-brothers\", minInGame: 3 }),\n      ];\n    });\n\n    it(\"should be disabled when minimum players are not reached.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto = createFakeCreateGameDto({ players: [] });\n      await nextTick();\n\n      const button = wrapper.find(\".start-game-button\");\n      expect(button.attributes(\"disabled\")).toBe(\"true\");\n    });\n\n    it(\"should be enabled when game can be created.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto = validCreateGameDto;\n      await nextTick();\n\n      const button = wrapper.find(\".start-game-button\");\n      expect(button.attributes(\"disabled\")).toBe(\"false\");\n    });\n\n    describe(\"Click on button\", () => {\n      beforeEach(() => {\n        const createGameDtoStore = useCreateGameDtoStore();\n        createGameDtoStore.createGameDto = createFakeCreateGameDto({\n          players: [\n            createFakeCreateGamePlayerDto({ name: \"Player 1\" }),\n            createFakeCreateGamePlayerDto({ name: \"Player 2\" }),\n            createFakeCreateGamePlayerDto({ name: \"Player 3\" }),\n            createFakeCreateGamePlayerDto({ name: \"Player 4\" }),\n          ],\n        });\n      });\n\n      it(\"should create game when clicked.\", async() => {\n        const createGameDtoStore = useCreateGameDtoStore();\n        const button = wrapper.find(\".start-game-button\");\n        await button.trigger(\"click\");\n\n        expect(mocks.composables.useFetchGames.createGame).toHaveBeenCalledExactlyOnceWith(createGameDtoStore.createGameDto);\n      });\n\n      it(\"should navigate to game with id in params when game is created.\", async() => {\n        const createdGame = createFakeGame();\n        mocks.composables.useFetchGames.createGame.mockResolvedValue(createdGame);\n        const button = wrapper.find(\".start-game-button\");\n        await button.trigger(\"click\");\n        await flushPromises();\n\n        expect(navigateTo).toHaveBeenCalledExactlyOnceWith(`/game/${createdGame._id}`);\n      });\n\n      it(\"should add success toast when game is created.\", async() => {\n        mocks.composables.useFetchGames.createGame.mockResolvedValue(createFakeGame());\n        const button = wrapper.find(\".start-game-button\");\n        await button.trigger(\"click\");\n        await flushPromises();\n\n        expect(mocks.composables.useVuePrimeToasts.addSuccessToast).toHaveBeenCalledExactlyOnceWith({ summary: \"components.GameLobbyStartGameButton.gameCreated\" });\n      });\n\n      it(\"should not add success toast when game is not created.\", async() => {\n        mocks.composables.useFetchGames.createGame.mockResolvedValue(null);\n        const button = wrapper.find(\".start-game-button\");\n        await button.trigger(\"click\");\n\n        expect(mocks.composables.useVuePrimeToasts.addSuccessToast).not.toHaveBeenCalled();\n      });\n\n      it(\"should be loading when fetch is in progress.\", () => {\n        const button = wrapper.findComponent<Button>(\".start-game-button\");\n        void button.trigger(\"click\");\n\n        expect((wrapper.vm as unknown as { isLoadingCreateGame: Ref<boolean> }).isLoadingCreateGame.value).toBeTrue();\n      });\n\n      it(\"should not be loading when fetch returned.\", async() => {\n        const button = wrapper.findComponent<Button>(\".start-game-button\");\n        await button.trigger(\"click\");\n\n        expect(button.attributes(\"loading\")).toBe(\"false\");\n      });\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.nuxt.spec.ts": {
      "tests": [
        {
          "id": "378",
          "name": "Game Lobby Role Picker Grid Element Badges Component should match snapshot when rendered."
        },
        {
          "id": "379",
          "name": "Game Lobby Role Picker Grid Element Badges Component Count in Party Badge should render the count in party badge when there are players with this role."
        },
        {
          "id": "380",
          "name": "Game Lobby Role Picker Grid Element Badges Component Count in Party Badge should assign tooltip to count in party badge when there are players with this role."
        },
        {
          "id": "381",
          "name": "Game Lobby Role Picker Grid Element Badges Component Count in Party Badge should not render the count in party badge when there are no players with this role."
        },
        {
          "id": "382",
          "name": "Game Lobby Role Picker Grid Element Badges Component Count in Party Badge should not render the count in party badge when role is not defined."
        },
        {
          "id": "383",
          "name": "Game Lobby Role Picker Grid Element Badges Component Left to Pick Badge should render the left to pick badge when there are roles left to pick."
        },
        {
          "id": "384",
          "name": "Game Lobby Role Picker Grid Element Badges Component Left to Pick Badge should assign tooltip to left to pick badge when there are roles left to pick."
        },
        {
          "id": "385",
          "name": "Game Lobby Role Picker Grid Element Badges Component Left to Pick Badge should not render the left to pick badge when there are no roles left to pick."
        },
        {
          "id": "386",
          "name": "Game Lobby Role Picker Grid Element Badges Component Left to Pick Badge should not render the left to pick badge when there are no players with this role."
        },
        {
          "id": "387",
          "name": "Game Lobby Role Picker Grid Element Badges Component Left to Pick Badge should not render the left to pick badge when role is not defined."
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport type Badge from \"primevue/badge\";\n\nimport type { GameLobbyRolePickerGridElementBadgesProps } from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/game-lobby-role-picker-grid-element-badges.types\";\nimport GameLobbyRolePickerGridElementBadges from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElementBadges/GameLobbyRolePickerGridElementBadges.vue\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGamePlayerDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game-player/create-game-player.dto.factory\";\nimport { createFakeRole } from \"~/tests/unit/utils/factories/composables/api/role/role.factory\";\nimport { pTooltipDirectiveBinder } from \"~/tests/unit/utils/helpers/directive.helpers\";\nimport { mockPiniaStore } from \"~/tests/unit/utils/helpers/mock.helpers\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { BoundTooltip } from \"~/tests/unit/utils/types/directive.types\";\n\ndescribe(\"Game Lobby Role Picker Grid Element Badges Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyRolePickerGridElementBadges>>;\n  const defaultProps: GameLobbyRolePickerGridElementBadgesProps = { role: createFakeRole({ name: \"seer\" }) };\n\n  async function mountGameLobbyRolePickerGridElementBadgesComponent(options: ComponentMountingOptions<typeof GameLobbyRolePickerGridElementBadges>):\n  Promise<ReturnType<typeof mount<typeof GameLobbyRolePickerGridElementBadges>>> {\n    return mountSuspendedComponent(GameLobbyRolePickerGridElementBadges, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    const pinia = createTestingPinia();\n    const createGameDtoStore = mockPiniaStore(useCreateGameDtoStore);\n    createGameDtoStore.getPlayersWithRoleNameInCreateGameDto.mockReturnValue([createFakeCreateGamePlayerDto()]);\n    createGameDtoStore.getRoleLeftCountToReachMinInCreateGameDto.mockReturnValue(1);\n    wrapper = await mountGameLobbyRolePickerGridElementBadgesComponent({\n      shallow: false,\n      global: { plugins: [pinia] },\n    });\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Count in Party Badge\", () => {\n    it(\"should render the count in party badge when there are players with this role.\", () => {\n      const countInPartyBadge = wrapper.findComponent<Badge>(\"#role-count-in-game-badge\");\n\n      expect(countInPartyBadge.exists()).toBeTruthy();\n    });\n\n    it(\"should assign tooltip to count in party badge when there are players with this role.\", async() => {\n      const tooltip: BoundTooltip = { value: undefined };\n      const directives = { ...pTooltipDirectiveBinder(tooltip, \"#role-count-in-game-badge\") };\n      const pinia = createTestingPinia();\n      const createGameDtoStore = mockPiniaStore(useCreateGameDtoStore);\n      createGameDtoStore.getPlayersWithRoleNameInCreateGameDto.mockReturnValue([createFakeCreateGamePlayerDto()]);\n      createGameDtoStore.getRoleLeftCountToReachMinInCreateGameDto.mockReturnValue(1);\n      wrapper = await mountGameLobbyRolePickerGridElementBadgesComponent({\n        global: {\n          plugins: [pinia],\n          directives,\n        },\n      });\n\n      expect(tooltip.value).toBe(\"Total in the party\");\n    });\n\n    it(\"should not render the count in party badge when there are no players with this role.\", async() => {\n      const pinia = createTestingPinia();\n      const createGameDtoStore = mockPiniaStore(useCreateGameDtoStore);\n      createGameDtoStore.getPlayersWithRoleNameInCreateGameDto.mockReturnValue([]);\n      wrapper = await mountGameLobbyRolePickerGridElementBadgesComponent({ global: { plugins: [pinia] } });\n      const countInPartyBadge = wrapper.findComponent<Badge>(\"#role-count-in-game-badge\");\n\n      expect(countInPartyBadge.exists()).toBeFalsy();\n    });\n\n    it(\"should not render the count in party badge when role is not defined.\", async() => {\n      const pinia = createTestingPinia();\n      const createGameDtoStore = mockPiniaStore(useCreateGameDtoStore);\n      createGameDtoStore.getPlayersWithRoleNameInCreateGameDto.mockReturnValue([createFakeCreateGamePlayerDto()]);\n      createGameDtoStore.getRoleLeftCountToReachMinInCreateGameDto.mockReturnValue(1);\n      wrapper = await mountGameLobbyRolePickerGridElementBadgesComponent({\n        global: { plugins: [pinia] },\n        props: { role: undefined },\n      });\n      const countInPartyBadge = wrapper.findComponent<Badge>(\"#role-count-in-game-badge\");\n\n      expect(countInPartyBadge.exists()).toBeFalsy();\n    });\n  });\n\n  describe(\"Left to Pick Badge\", () => {\n    it(\"should render the left to pick badge when there are roles left to pick.\", () => {\n      const leftToPickBadge = wrapper.findComponent<Badge>(\"#role-min-count-in-game-badge\");\n\n      expect(leftToPickBadge.exists()).toBeTruthy();\n    });\n\n    it(\"should assign tooltip to left to pick badge when there are roles left to pick.\", async() => {\n      const tooltip: BoundTooltip = { value: undefined };\n      const directives = { ...pTooltipDirectiveBinder(tooltip, \"#role-min-count-in-game-badge\") };\n      const pinia = createTestingPinia();\n      const createGameDtoStore = mockPiniaStore(useCreateGameDtoStore);\n      createGameDtoStore.getPlayersWithRoleNameInCreateGameDto.mockReturnValue([createFakeCreateGamePlayerDto()]);\n      createGameDtoStore.getRoleLeftCountToReachMinInCreateGameDto.mockReturnValue(1);\n      wrapper = await mountGameLobbyRolePickerGridElementBadgesComponent({\n        global: {\n          plugins: [pinia],\n          directives,\n        },\n      });\n\n      expect(tooltip.value).toBe(\"Minimum in the party not reached (1 left to pick)\");\n    });\n\n    it(\"should not render the left to pick badge when there are no roles left to pick.\", async() => {\n      const pinia = createTestingPinia();\n      const createGameDtoStore = mockPiniaStore(useCreateGameDtoStore);\n      createGameDtoStore.getPlayersWithRoleNameInCreateGameDto.mockReturnValue([createFakeCreateGamePlayerDto()]);\n      createGameDtoStore.getRoleLeftCountToReachMinInCreateGameDto.mockReturnValue(0);\n      wrapper = await mountGameLobbyRolePickerGridElementBadgesComponent({ global: { plugins: [pinia] } });\n      const leftToPickBadge = wrapper.findComponent<Badge>(\"#role-min-count-in-game-badge\");\n\n      expect(leftToPickBadge.exists()).toBeFalsy();\n    });\n\n    it(\"should not render the left to pick badge when there are no players with this role.\", async() => {\n      const pinia = createTestingPinia();\n      const createGameDtoStore = mockPiniaStore(useCreateGameDtoStore);\n      createGameDtoStore.getPlayersWithRoleNameInCreateGameDto.mockReturnValue([]);\n      createGameDtoStore.getRoleLeftCountToReachMinInCreateGameDto.mockReturnValue(1);\n      wrapper = await mountGameLobbyRolePickerGridElementBadgesComponent({ global: { plugins: [pinia] } });\n      const leftToPickBadge = wrapper.findComponent<Badge>(\"#role-min-count-in-game-badge\");\n\n      expect(leftToPickBadge.exists()).toBeFalsy();\n    });\n\n    it(\"should not render the left to pick badge when role is not defined.\", async() => {\n      const pinia = createTestingPinia();\n      const createGameDtoStore = mockPiniaStore(useCreateGameDtoStore);\n      createGameDtoStore.getPlayersWithRoleNameInCreateGameDto.mockReturnValue([createFakeCreateGamePlayerDto()]);\n      createGameDtoStore.getRoleLeftCountToReachMinInCreateGameDto.mockReturnValue(1);\n      wrapper = await mountGameLobbyRolePickerGridElementBadgesComponent({\n        global: { plugins: [pinia] },\n        props: { role: undefined },\n      });\n      const leftToPickBadge = wrapper.findComponent<Badge>(\"#role-min-count-in-game-badge\");\n\n      expect(leftToPickBadge.exists()).toBeFalsy();\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionBuriedPlayers/GameOverHistoryRecordDecisionBuriedPlayers.nuxt.spec.ts": {
      "tests": [
        {
          "id": "388",
          "name": "Game Over History Record Decision Buried Players Component should match snapshot when rendered."
        },
        {
          "id": "389",
          "name": "Game Over History Record Decision Buried Players Component Buried Players should display the truncated list of buried players when rendered."
        },
        {
          "id": "390",
          "name": "Game Over History Record Decision Buried Players Component Buried Players should display all buried players when there are less than 4 buried players."
        },
        {
          "id": "391",
          "name": "Game Over History Record Decision Buried Players Component Buried Players should display no buried players when there are no interactions."
        },
        {
          "id": "392",
          "name": "Game Over History Record Decision Buried Players Component Buried Players should display no buried players when there are no eligible targets."
        },
        {
          "id": "393",
          "name": "Game Over History Record Decision Buried Players Component Overflow Tag should display the overflow tag when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport type { GameOverHistoryRecordDecisionBuriedPlayersProps } from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionBuriedPlayers/game-over-history-record-decision-buried-players.types\";\nimport type GameOverHistoryRecordDecisionBuriedPlayer from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionBuriedPlayers/GameOverHistoryRecordDecisionBuriedPlayer/GameOverHistoryRecordDecisionBuriedPlayer.vue\";\nimport GameOverHistoryRecordDecisionBuriedPlayers from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionBuriedPlayers/GameOverHistoryRecordDecisionBuriedPlayers.vue\";\nimport type OverflowTag from \"~/components/shared/misc/OverflowTag/OverflowTag.vue\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { createFakeGameHistoryRecordPlaySource } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-source/game-history-record-play-source.factory\";\nimport { createFakeGameHistoryRecordPlay } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play.factory\";\nimport { createFakeGameHistoryRecord } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record.factory\";\nimport { createFakeGamePlaySourceInteraction } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction.factory\";\nimport { createFakeActorAlivePlayer } from \"~/tests/unit/utils/factories/composables/api/game/player/player-with-role.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Over History Record Decision Buried Players Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameOverHistoryRecordDecisionBuriedPlayers>>;\n  const defaultBuriedPlayers = [\n    createFakeActorAlivePlayer({ name: \"Antoine\" }),\n    createFakeActorAlivePlayer({ name: \"Vanessa\" }),\n    createFakeActorAlivePlayer({ name: \"Thomas\" }),\n    createFakeActorAlivePlayer({ name: \"Doudou\" }),\n  ];\n  const defaultGameHistoryRecord = createFakeGameHistoryRecord({\n    play: createFakeGameHistoryRecordPlay({\n      type: \"bury-dead-bodies\",\n      action: \"bury-dead-bodies\",\n      source: createFakeGameHistoryRecordPlaySource({\n        interactions: [\n          createFakeGamePlaySourceInteraction({\n            type: \"steal-role\",\n            eligibleTargets: [\n              createFakeActorAlivePlayer({ name: \"Antoine\" }),\n              createFakeActorAlivePlayer({ name: \"Vanessa\" }),\n            ],\n          }),\n          createFakeGamePlaySourceInteraction({\n            type: \"bury\",\n            eligibleTargets: defaultBuriedPlayers,\n          }),\n          createFakeGamePlaySourceInteraction({\n            type: \"steal-role\",\n            eligibleTargets: [\n              createFakeActorAlivePlayer({ name: \"Antoine\" }),\n              createFakeActorAlivePlayer({ name: \"Vanessa\" }),\n            ],\n          }),\n        ],\n      }),\n    }),\n  });\n  const defaultProps: GameOverHistoryRecordDecisionBuriedPlayersProps = { gameHistoryRecord: defaultGameHistoryRecord };\n\n  async function mountGameOverHistoryRecordDecisionBuriedPlayersComponent(options: ComponentMountingOptions<typeof GameOverHistoryRecordDecisionBuriedPlayers> = {}):\n  Promise<ReturnType<typeof mount<typeof GameOverHistoryRecordDecisionBuriedPlayers>>> {\n    return mountSuspendedComponent(GameOverHistoryRecordDecisionBuriedPlayers, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameOverHistoryRecordDecisionBuriedPlayersComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Buried Players\", () => {\n    it(\"should display the truncated list of buried players when rendered.\", () => {\n      const buriedPlayers = wrapper.findAllComponents<typeof GameOverHistoryRecordDecisionBuriedPlayer>(\".game-over-history-record-buried-player\");\n\n      expect(buriedPlayers).toHaveLength(3);\n      expect(buriedPlayers[0].props(\"buriedPlayer\")).toStrictEqual<Player>(defaultBuriedPlayers[0]);\n      expect(buriedPlayers[1].props(\"buriedPlayer\")).toStrictEqual<Player>(defaultBuriedPlayers[1]);\n      expect(buriedPlayers[2].props(\"buriedPlayer\")).toStrictEqual<Player>(defaultBuriedPlayers[2]);\n    });\n\n    it(\"should display all buried players when there are less than 4 buried players.\", async() => {\n      wrapper = await mountGameOverHistoryRecordDecisionBuriedPlayersComponent({\n        props: {\n          gameHistoryRecord: createFakeGameHistoryRecord({\n            play: createFakeGameHistoryRecordPlay({\n              type: \"bury-dead-bodies\",\n              action: \"bury-dead-bodies\",\n              source: createFakeGameHistoryRecordPlaySource({\n                interactions: [\n                  createFakeGamePlaySourceInteraction({\n                    type: \"bury\",\n                    eligibleTargets: defaultBuriedPlayers.slice(0, 2),\n                  }),\n                  createFakeGamePlaySourceInteraction({\n                    type: \"steal-role\",\n                    eligibleTargets: [\n                      createFakeActorAlivePlayer({ name: \"Antoine\" }),\n                      createFakeActorAlivePlayer({ name: \"Vanessa\" }),\n                    ],\n                  }),\n                ],\n              }),\n            }),\n          }),\n        },\n      });\n      const buriedPlayers = wrapper.findAllComponents<typeof GameOverHistoryRecordDecisionBuriedPlayer>(\".game-over-history-record-buried-player\");\n\n      expect(buriedPlayers).toHaveLength(2);\n      expect(buriedPlayers[0].props(\"buriedPlayer\")).toStrictEqual<Player>(defaultBuriedPlayers[0]);\n      expect(buriedPlayers[1].props(\"buriedPlayer\")).toStrictEqual<Player>(defaultBuriedPlayers[1]);\n    });\n\n    it(\"should display no buried players when there are no interactions.\", async() => {\n      wrapper = await mountGameOverHistoryRecordDecisionBuriedPlayersComponent({\n        props: {\n          gameHistoryRecord: createFakeGameHistoryRecord({\n            play: createFakeGameHistoryRecordPlay({\n              type: \"bury-dead-bodies\",\n              action: \"bury-dead-bodies\",\n              source: createFakeGameHistoryRecordPlaySource(),\n            }),\n          }),\n        },\n      });\n      const buriedPlayers = wrapper.findAllComponents<typeof GameOverHistoryRecordDecisionBuriedPlayer>(\".game-over-history-record-buried-player\");\n\n      expect(buriedPlayers).toHaveLength(0);\n    });\n\n    it(\"should display no buried players when there are no eligible targets.\", async() => {\n      wrapper = await mountGameOverHistoryRecordDecisionBuriedPlayersComponent({\n        props: {\n          gameHistoryRecord: createFakeGameHistoryRecord({\n            play: createFakeGameHistoryRecordPlay({\n              type: \"bury-dead-bodies\",\n              action: \"bury-dead-bodies\",\n              source: createFakeGameHistoryRecordPlaySource({ interactions: [createFakeGamePlaySourceInteraction({ type: \"bury\" })] }),\n            }),\n          }),\n        },\n      });\n      const buriedPlayers = wrapper.findAllComponents<typeof GameOverHistoryRecordDecisionBuriedPlayer>(\".game-over-history-record-buried-player\");\n\n      expect(buriedPlayers).toHaveLength(0);\n    });\n  });\n\n  describe(\"Overflow Tag\", () => {\n    it(\"should display the overflow tag when rendered.\", () => {\n      const overflowTag = wrapper.findComponent<typeof OverflowTag>(\"#buried-players-overflow-tag\");\n\n      expect(overflowTag.props(\"entitiesCount\")).toBe(4);\n      expect(overflowTag.props(\"maximumEntitiesDisplayed\")).toBe(3);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.nuxt.spec.ts": {
      "tests": [
        {
          "id": "394",
          "name": "Game Lobby Options Hub Roles Tab Sheriff Election Component should match snapshot when rendered."
        },
        {
          "id": "395",
          "name": "Game Lobby Options Hub Roles Tab Sheriff Election Component Election time option should translate option label when rendered."
        },
        {
          "id": "396",
          "name": "Game Lobby Options Hub Roles Tab Sheriff Election Component Election time option should translate option description when phase is night and turn is 1."
        },
        {
          "id": "397",
          "name": "Game Lobby Options Hub Roles Tab Sheriff Election Component Election time option should translate option description when phase is day and turn is 3."
        },
        {
          "id": "398",
          "name": "Game Lobby Options Hub Roles Tab Sheriff Election Component Election time option should set model value of input to true when the phase is day."
        },
        {
          "id": "399",
          "name": "Game Lobby Options Hub Roles Tab Sheriff Election Component Election time option should set model value of input to false when the phase is night."
        },
        {
          "id": "400",
          "name": "Game Lobby Options Hub Roles Tab Sheriff Election Component Election time option should update the create game dto store when the option is toggled on day phase change."
        },
        {
          "id": "401",
          "name": "Game Lobby Options Hub Roles Tab Sheriff Election Component Election time option should update the create game dto store when the option is toggled on night phase change."
        },
        {
          "id": "402",
          "name": "Game Lobby Options Hub Roles Tab Sheriff Election Component Election time option should translate election turn float label when rendered."
        },
        {
          "id": "403",
          "name": "Game Lobby Options Hub Roles Tab Sheriff Election Component Election time option should update the create game dto store when the option is changed by the input number."
        },
        {
          "id": "404",
          "name": "Game Lobby Options Hub Roles Tab Sheriff Election Component Election time option should update the create game dto store when the option is changed by the slider."
        },
        {
          "id": "405",
          "name": "Game Lobby Options Hub Roles Tab Sheriff Election Component Election time option should not update the create game dto store when the option is changed by the input number and the value is null."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport type InputNumber from \"primevue/inputnumber\";\nimport type Slider from \"primevue/slider\";\nimport GameLobbyOptionsHubRolesTabSheriffElection from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSheriff/GameLobbyOptionsHubRolesTabSheriffElection/GameLobbyOptionsHubRolesTabSheriffElection.vue\";\nimport type AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGameDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Options Hub Roles Tab Sheriff Election Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabSheriffElection>>;\n\n  async function mountGameLobbyOptionsHubRolesTabSheriffElectionComponent(options: ComponentMountingOptions<typeof GameLobbyOptionsHubRolesTabSheriffElection> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabSheriffElection>>> {\n    return mountSuspendedComponent(GameLobbyOptionsHubRolesTabSheriffElection, {\n      global: {\n        stubs: {\n          Fieldset: false,\n          GameOptionInputGroup: false,\n          FloatLabel: false,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyOptionsHubRolesTabSheriffElectionComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Election time option\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const optionLabel = wrapper.find<HTMLHeadingElement>(\"#game-option-label\");\n\n      expect(optionLabel.text()).toBe(\"Sheriff election time\");\n    });\n\n    it(\"should translate option description when phase is night and turn is 1.\", () => {\n      const optionDescription = wrapper.find<HTMLParagraphElement>(\"#game-option-description\");\n      const expectedDescription = \"components.GameLobbyOptionsHubRolesTabSheriffElection.options.electedAt.description, {\\\"turn\\\":1,\\\"phase\\\":\\\"shared.game.definitephase.night\\\"}\";\n\n      expect(optionDescription.text()).toBe(expectedDescription);\n    });\n\n    it(\"should translate option description when phase is day and turn is 3.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.setCreateGameDto(createFakeCreateGameDto(createGameDtoStore.createGameDto));\n      createGameDtoStore.createGameDto.options.roles.sheriff.electedAt.phaseName = \"day\";\n      createGameDtoStore.createGameDto.options.roles.sheriff.electedAt.turn = 3;\n      await nextTick();\n      const optionDescription = wrapper.find<HTMLParagraphElement>(\"#game-option-description\");\n      const expectedDescription = \"components.GameLobbyOptionsHubRolesTabSheriffElection.options.electedAt.description, {\\\"turn\\\":3,\\\"phase\\\":\\\"shared.game.definitephase.day\\\"}\";\n\n      expect(optionDescription.text()).toBe(expectedDescription);\n    });\n\n    it(\"should set model value of input to true when the phase is day.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.sheriff.electedAt.phaseName = \"day\";\n      await nextTick();\n      const inputId = \"#game-lobby-options-hub-roles-tab-sheriff-election-phase-input\";\n      const input = wrapper.findComponent<typeof AffirmativeToggleButton>(inputId);\n\n      expect(input.attributes(\"modelvalue\")).toBe(\"true\");\n    });\n\n    it(\"should set model value of input to false when the phase is night.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.sheriff.electedAt.phaseName = \"night\";\n      await nextTick();\n      const inputId = \"#game-lobby-options-hub-roles-tab-sheriff-election-phase-input\";\n      const input = wrapper.findComponent<typeof AffirmativeToggleButton>(inputId);\n\n      expect(input.attributes(\"modelvalue\")).toBe(\"false\");\n    });\n\n    it(\"should update the create game dto store when the option is toggled on day phase change.\", () => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const inputId = \"#game-lobby-options-hub-roles-tab-sheriff-election-phase-input\";\n      const input = wrapper.findComponent<typeof AffirmativeToggleButton>(inputId);\n      (input.vm as VueVm).$emit(\"update:modelValue\", true);\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.sheriff.electedAt.phaseName = \"day\";\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n\n    it(\"should update the create game dto store when the option is toggled on night phase change.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const inputId = \"#game-lobby-options-hub-roles-tab-sheriff-election-phase-input\";\n      const input = wrapper.findComponent<typeof AffirmativeToggleButton>(inputId);\n      (input.vm as VueVm).$emit(\"update:modelValue\", false);\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.sheriff.electedAt.phaseName = \"night\";\n      await nextTick();\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n\n    it(\"should translate election turn float label when rendered.\", () => {\n      const floatLabel = wrapper.find<HTMLLabelElement>(\"#game-lobby-options-hub-roles-tab-sheriff-election-turn-label\");\n\n      expect(floatLabel.text()).toBe(\"Sheriff election turn\");\n    });\n\n    it(\"should update the create game dto store when the option is changed by the input number.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const inputId = \"#game-lobby-options-hub-roles-tab-sheriff-election-turn-input\";\n      const input = wrapper.findComponent<typeof InputNumber>(inputId);\n      (input.vm as VueVm).$emit(\"update:modelValue\", 2);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.sheriff.electedAt.turn = 2;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n\n    it(\"should update the create game dto store when the option is changed by the slider.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const sliderId = \"#game-lobby-options-hub-roles-tab-sheriff-election-turn-slider\";\n      const slider = wrapper.findComponent<typeof Slider>(sliderId);\n      (slider.vm as VueVm).$emit(\"update:modelValue\", 2);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.sheriff.electedAt.turn = 2;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n\n    it(\"should not update the create game dto store when the option is changed by the input number and the value is null.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const inputId = \"#game-lobby-options-hub-roles-tab-sheriff-election-turn-input\";\n      const input = wrapper.findComponent<typeof InputNumber>(inputId);\n      (input.vm as VueVm).$emit(\"update:modelValue\", null);\n      await nextTick();\n\n      expect(createGameDtoStore.setCreateGameDto).not.toHaveBeenCalled();\n    });\n  });\n});"
    },
    "tests/unit/specs/components/layouts/default/ParametersMenu/ParametersMenu.nuxt.spec.ts": {
      "tests": [
        {
          "id": "406",
          "name": "Parameters Menu Component should match snapshot when rendered."
        },
        {
          "id": "407",
          "name": "Parameters Menu Component Parameters Menu Button should open the parameters menu when clicked."
        },
        {
          "id": "408",
          "name": "Parameters Menu Component Parameters Menu Button should not open the parameters menu and throw error when clicked if the menu is not found in refs."
        },
        {
          "id": "409",
          "name": "Parameters Menu Component Parameters Menu should show success toast when game is canceled."
        },
        {
          "id": "410",
          "name": "Parameters Menu Component Parameters Menu should pass the default items to the menu when rendered."
        },
        {
          "id": "411",
          "name": "Parameters Menu Component Parameters Menu should pass the default items and game items to the menu when game is defined and playing."
        },
        {
          "id": "412",
          "name": "Parameters Menu Component Parameters Menu should pass the default items and game items to the menu with cancel game to disabled when game is defined and not playing."
        },
        {
          "id": "413",
          "name": "Parameters Menu Component Parameters Menu should cancel game when clicking on cancel game button."
        },
        {
          "id": "414",
          "name": "Parameters Menu Component Parameters Menu should navigate to home page when clicking on back to home button."
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\nimport { MouseEvent } from \"happy-dom\";\nimport Menu from \"primevue/menu\";\nimport type { MenuItem } from \"primevue/menuitem\";\nimport type { Mock } from \"vitest\";\nimport { beforeAll, expect } from \"vitest\";\nimport type { Ref } from \"vue\";\n\nimport type { VuePrimeButton } from \"#components\";\nimport ParametersMenu from \"~/components/layouts/default/NavBar/ParametersMenu/ParametersMenu.vue\";\nimport { Game } from \"~/composables/api/game/types/game.class\";\nimport * as UseVuePrimeToasts from \"~/composables/vue-prime/useVuePrimeToasts\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\nimport { createFakeGame } from \"~/tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { createFakeUseVuePrimeToasts } from \"~/tests/unit/utils/factories/composables/vue-prime/useVuePrimeToasts.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Parameters Menu Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof ParametersMenu>>;\n  let mocks: {\n    composables: {\n      useVuePrimeToasts: ReturnType<typeof createFakeUseVuePrimeToasts>;\n    };\n  };\n\n  beforeEach(async() => {\n    mocks = { composables: { useVuePrimeToasts: createFakeUseVuePrimeToasts() } };\n    vi.spyOn(UseVuePrimeToasts, \"useVuePrimeToasts\").mockReturnValue(mocks.composables.useVuePrimeToasts);\n    wrapper = await mountSuspendedComponent(ParametersMenu);\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Parameters Menu Button\", () => {\n    let toggleMenuMock: Mock;\n\n    beforeEach(async() => {\n      toggleMenuMock = vi.fn();\n      wrapper = await mountSuspendedComponent(ParametersMenu, {\n        global: {\n          stubs: {\n            Menu: {\n              template: \"<div></div>\",\n              methods: { toggle: toggleMenuMock },\n            },\n          },\n        },\n      });\n    });\n\n    it(\"should open the parameters menu when clicked.\", async() => {\n      const parametersMenuButton = wrapper.findComponent<typeof VuePrimeButton>(\"[aria-label='Parameters']\");\n      await parametersMenuButton.trigger(\"click\");\n\n      expect(toggleMenuMock).toHaveBeenCalledExactlyOnceWith(expect.any(MouseEvent));\n    });\n\n    it(\"should not open the parameters menu and throw error when clicked if the menu is not found in refs.\", async() => {\n      wrapper = await mountSuspendedComponent(ParametersMenu, {\n        global: {\n          stubs: {\n            Menu: {\n              template: \"<div></div>\",\n              methods: { toggle: toggleMenuMock },\n            },\n          },\n        },\n      });\n      (wrapper.vm.$root?.$refs.VTU_COMPONENT as { parametersMenu: Ref }).parametersMenu.value = null;\n      const parametersMenuButton = wrapper.findComponent<typeof VuePrimeButton>(\"[aria-label='Parameters']\");\n      await parametersMenuButton.trigger(\"click\");\n\n      expect(toggleMenuMock).not.toHaveBeenCalled();\n      expect(createError).toHaveBeenCalledExactlyOnceWith(\"Parameters Menu is not initialized\");\n    });\n  });\n\n  describe(\"Parameters Menu\", () => {\n    let testingPinia: ReturnType<typeof createTestingPinia>;\n    let gameStore: ReturnType<typeof useGameStore>;\n\n    beforeAll(() => {\n      testingPinia = createTestingPinia();\n      gameStore = useGameStore(testingPinia);\n    });\n\n    beforeEach(async() => {\n      wrapper = await mountSuspendedComponent(ParametersMenu, {\n        shallow: false,\n        global: { plugins: [testingPinia] },\n      });\n      const parametersMenuButton = wrapper.findComponent<typeof VuePrimeButton>(\"[aria-label='Parameters']\");\n      await parametersMenuButton.trigger(\"click\");\n    });\n\n    it(\"should show success toast when game is canceled.\", async() => {\n      gameStore.game = createFakeGame({ status: \"playing\" });\n      await nextTick();\n      document.querySelector<HTMLElement>(\"[aria-label=\\\"components.ParametersMenu.cancelGame\\\"] .p-menuitem-link\")?.click();\n\n      expect(mocks.composables.useVuePrimeToasts.addSuccessToast).toHaveBeenCalledExactlyOnceWith({ summary: \"components.ParametersMenu.gameCanceled\" });\n    });\n\n    it(\"should pass the default items to the menu when rendered.\", async() => {\n      gameStore.game = new Game();\n      await nextTick();\n      const parametersMenu = wrapper.findComponent<typeof Menu>(Menu);\n\n      expect(parametersMenu.props(\"model\")).toStrictEqual<MenuItem[]>([\n        {\n          visible: false,\n          items: [\n            {\n              label: \"components.ParametersMenu.cancelGame\",\n              disabled: true,\n              icon: \"fa fa-ban text-danger\",\n              command: expect.any(Function) as () => Promise<void>,\n            },\n          ],\n          label: \"components.ParametersMenu.game\",\n        },\n        {\n          label: \"components.ParametersMenu.backToHome\",\n          icon: \"fa fa-sign-out\",\n          arialLabel: \"components.ParametersMenu.backToHome\",\n          command: expect.any(Function) as () => Promise<void>,\n        },\n      ]);\n    });\n\n    it(\"should pass the default items and game items to the menu when game is defined and playing.\", async() => {\n      gameStore.game = createFakeGame({ status: \"playing\" });\n      await nextTick();\n      const parametersMenu = wrapper.findComponent<typeof Menu>(Menu);\n\n      expect(parametersMenu.props(\"model\")).toStrictEqual<MenuItem[]>([\n        {\n          visible: true,\n          items: [\n            {\n              label: \"components.ParametersMenu.cancelGame\",\n              disabled: false,\n              icon: \"fa fa-ban text-danger\",\n              command: expect.any(Function) as () => Promise<void>,\n            },\n          ],\n          label: \"components.ParametersMenu.game\",\n        },\n        {\n          label: \"components.ParametersMenu.backToHome\",\n          icon: \"fa fa-sign-out\",\n          arialLabel: \"components.ParametersMenu.backToHome\",\n          command: expect.any(Function) as () => Promise<void>,\n        },\n      ]);\n    });\n\n    it(\"should pass the default items and game items to the menu with cancel game to disabled when game is defined and not playing.\", async() => {\n      const store = useGameStore();\n      store.game = createFakeGame({ status: \"canceled\" });\n      await nextTick();\n      const parametersMenu = wrapper.findComponent<typeof Menu>(Menu);\n\n      expect(parametersMenu.props(\"model\")).toStrictEqual<MenuItem[]>([\n        {\n          visible: true,\n          items: [\n            {\n              label: \"components.ParametersMenu.cancelGame\",\n              disabled: true,\n              icon: \"fa fa-ban text-danger\",\n              command: expect.any(Function) as () => Promise<void>,\n            },\n          ],\n          label: \"components.ParametersMenu.game\",\n        },\n        {\n          label: \"components.ParametersMenu.backToHome\",\n          icon: \"fa fa-sign-out\",\n          arialLabel: \"components.ParametersMenu.backToHome\",\n          command: expect.any(Function) as () => Promise<void>,\n        },\n      ]);\n    });\n\n    it(\"should cancel game when clicking on cancel game button.\", async() => {\n      gameStore.game = createFakeGame({ status: \"playing\" });\n      await nextTick();\n      document.querySelector<HTMLElement>(\"[aria-label=\\\"components.ParametersMenu.cancelGame\\\"] .p-menuitem-link\")?.click();\n\n      expect(gameStore.cancelGame).toHaveBeenCalledExactlyOnceWith();\n    });\n\n    it(\"should navigate to home page when clicking on back to home button.\", () => {\n      document.querySelector<HTMLElement>(\"[aria-label=\\\"components.ParametersMenu.backToHome\\\"] .p-menuitem-link\")?.click();\n\n      expect(navigateTo).toHaveBeenCalledExactlyOnceWith(\"/\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElement.nuxt.spec.ts": {
      "tests": [
        {
          "id": "415",
          "name": "Game Lobby Role Picker Grid Element Component should match snapshot when rendered."
        },
        {
          "id": "416",
          "name": "Game Lobby Role Picker Grid Element Component Button should not have bright border when role is not picked."
        },
        {
          "id": "417",
          "name": "Game Lobby Role Picker Grid Element Component Button should not have bright border when role is not defined."
        },
        {
          "id": "418",
          "name": "Game Lobby Role Picker Grid Element Component Button should have bright border when role is picked."
        },
        {
          "id": "419",
          "name": "Game Lobby Role Picker Grid Element Component Role Label should translate role label when role is defined."
        },
        {
          "id": "420",
          "name": "Game Lobby Role Picker Grid Element Component Role Label should translate random role label when role is not defined."
        },
        {
          "id": "421",
          "name": "Game Lobby Role Picker Grid Element Component Role Label should display shuffle icon when role is not defined."
        },
        {
          "id": "422",
          "name": "Game Lobby Role Picker Grid Element Component Role Label should not display shuffle icon when role is defined."
        },
        {
          "id": "423",
          "name": "Game Lobby Role Picker Grid Element Component Role Label should have italic gray classes when role is not defined."
        },
        {
          "id": "424",
          "name": "Game Lobby Role Picker Grid Element Component Emits should emit pickRole event when clicked on button."
        },
        {
          "id": "425",
          "name": "Game Lobby Role Picker Grid Element Component Emits should emit pickRole event when clicked on role name."
        },
        {
          "id": "426",
          "name": "Game Lobby Role Picker Grid Element Component Emits should emit random role when role is not defined and no role is picked yet."
        },
        {
          "id": "427",
          "name": "Game Lobby Role Picker Grid Element Component Emits should emit random role which can't be the same as the picked role when role is not defined but picked role is defined."
        },
        {
          "id": "428",
          "name": "Game Lobby Role Picker Grid Element Component Emits should not emit role pick event when roles are not defined in store."
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport type Radash from \"radash\";\nimport { vi } from \"vitest\";\n\nimport type { GameLobbyRolePickerGridElementProps } from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/game-lobby-role-picker-grid-element.types\";\nimport GameLobbyRolePickerGridElement from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElement.vue\";\nimport type { Role } from \"~/composables/api/role/types/role.class\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\nimport { useRolesStore } from \"~/stores/role/useRolesStore\";\nimport { createFakeRole } from \"~/tests/unit/utils/factories/composables/api/role/role.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\nconst { radash: mockedRadash } = vi.hoisted(() => ({ radash: { draw: vi.fn() } }));\n\nvi.mock(\"radash\", async importOriginal => ({\n  ...await importOriginal<typeof Radash>(),\n  draw: vi.fn(mockedRadash.draw),\n}));\n\ndescribe(\"Game Lobby Role Picker Grid Element Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyRolePickerGridElement>>;\n  const roles = [\n    createFakeRole({ name: \"seer\" }),\n    createFakeRole({ name: \"villager\" }),\n    createFakeRole({ name: \"werewolf\" }),\n  ];\n  const testingPinia = { initialState: { [StoreIds.ROLES]: { roles } } };\n  const defaultProps: GameLobbyRolePickerGridElementProps = { role: roles[0] };\n\n  async function mountGameLobbyRolePickerGridElementComponent(options: ComponentMountingOptions<typeof GameLobbyRolePickerGridElement> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyRolePickerGridElement>>> {\n    return mountSuspendedComponent(GameLobbyRolePickerGridElement, {\n      props: defaultProps,\n      global: { plugins: [createTestingPinia(testingPinia)] },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyRolePickerGridElementComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Button\", () => {\n    it(\"should not have bright border when role is not picked.\", async() => {\n      wrapper = await mountGameLobbyRolePickerGridElementComponent({\n        props: {\n          ...defaultProps,\n          pickedRole: roles[1],\n        },\n      });\n      const button = wrapper.find(\"#game-lobby-role-picker-grid-element-button\");\n\n      expect(button.classes()).not.toContain(\"!border-gray-100\");\n    });\n\n    it(\"should not have bright border when role is not defined.\", async() => {\n      wrapper = await mountGameLobbyRolePickerGridElementComponent({\n        props: {\n          role: undefined,\n          pickedRole: roles[1],\n        },\n      });\n      const button = wrapper.find(\"#game-lobby-role-picker-grid-element-button\");\n\n      expect(button.classes()).not.toContain(\"!border-gray-100\");\n    });\n\n    it(\"should have bright border when role is picked.\", async() => {\n      wrapper = await mountGameLobbyRolePickerGridElementComponent({\n        props: {\n          role: roles[1],\n          pickedRole: roles[1],\n        },\n      });\n      const button = wrapper.find(\"#game-lobby-role-picker-grid-element-button\");\n\n      expect(button.classes()).toContain(\"!border-gray-100\");\n    });\n  });\n\n  describe(\"Role Label\", () => {\n    it(\"should translate role label when role is defined.\", () => {\n      const roleName = wrapper.find(\"#game-lobby-role-picker-grid-element-role-name\");\n\n      expect(roleName.text()).toBe(\"shared.role.name.seer\");\n    });\n\n    it(\"should translate random role label when role is not defined.\", async() => {\n      wrapper = await mountGameLobbyRolePickerGridElementComponent({ props: { role: undefined } });\n      const roleName = wrapper.find(\"#game-lobby-role-picker-grid-element-role-name\");\n\n      expect(roleName.text()).toBe(\"components.GameLobbyRolePickerGridElement.random\");\n    });\n\n    it(\"should display shuffle icon when role is not defined.\", async() => {\n      wrapper = await mountGameLobbyRolePickerGridElementComponent({ props: { role: undefined } });\n      const shuffleIcon = wrapper.find(\"#shuffle-icon\");\n\n      expect(shuffleIcon.exists()).toBeTruthy();\n    });\n\n    it(\"should not display shuffle icon when role is defined.\", () => {\n      const shuffleIcon = wrapper.find(\"#shuffle-icon\");\n\n      expect(shuffleIcon.exists()).toBeFalsy();\n    });\n\n    it(\"should have italic gray classes when role is not defined.\", async() => {\n      wrapper = await mountGameLobbyRolePickerGridElementComponent({ props: { role: undefined } });\n      const roleName = wrapper.find(\"#game-lobby-role-picker-grid-element-role-name\");\n\n      expect(roleName.classes()).toContain(\"italic\");\n      expect(roleName.classes()).toContain(\"text-gray-300\");\n    });\n  });\n\n  describe(\"Emits\", () => {\n    it(\"should emit pickRole event when clicked on button.\", async() => {\n      const button = wrapper.find(\"#game-lobby-role-picker-grid-element-button\");\n      await button.trigger(\"click\");\n\n      expect(wrapper.emitted(\"pickRole\")).toHaveLength(1);\n      expect(wrapper.emitted(\"pickRole\")?.[0]).toStrictEqual<Role[]>([roles[0]]);\n    });\n\n    it(\"should emit pickRole event when clicked on role name.\", async() => {\n      const roleName = wrapper.find(\"#game-lobby-role-picker-grid-element-role-name\");\n      await roleName.trigger(\"click\");\n\n      expect(wrapper.emitted(\"pickRole\")).toHaveLength(1);\n      expect(wrapper.emitted(\"pickRole\")?.[0]).toStrictEqual<Role[]>([roles[0]]);\n    });\n\n    it(\"should emit random role when role is not defined and no role is picked yet.\", async() => {\n      wrapper = await mountGameLobbyRolePickerGridElementComponent({\n        props: {\n          role: undefined,\n          pickedRole: undefined,\n        },\n      });\n      mockedRadash.draw.mockReturnValue(roles[1]);\n      const button = wrapper.find(\"#game-lobby-role-picker-grid-element-button\");\n      await button.trigger(\"click\");\n      const emittedRole = wrapper.emitted(\"pickRole\")?.[0][0];\n\n      expect(mockedRadash.draw).toHaveBeenCalledExactlyOnceWith(roles);\n      expect(wrapper.emitted(\"pickRole\")).toHaveLength(1);\n      expect(emittedRole).toStrictEqual<Role>(roles[1]);\n    });\n\n    it(\"should emit random role which can't be the same as the picked role when role is not defined but picked role is defined.\", async() => {\n      wrapper = await mountGameLobbyRolePickerGridElementComponent({\n        props: {\n          role: undefined,\n          pickedRole: roles[0],\n        },\n      });\n      mockedRadash.draw.mockReturnValue(roles[2]);\n      const button = wrapper.find(\"#game-lobby-role-picker-grid-element-button\");\n      await button.trigger(\"click\");\n      const emittedRole = wrapper.emitted(\"pickRole\")?.[0][0];\n\n      expect(mockedRadash.draw).toHaveBeenCalledExactlyOnceWith([\n        roles[1],\n        roles[2],\n      ]);\n      expect(wrapper.emitted(\"pickRole\")).toHaveLength(1);\n      expect(emittedRole).toStrictEqual<Role>(roles[2]);\n    });\n\n    it(\"should not emit role pick event when roles are not defined in store.\", async() => {\n      const rolesStore = useRolesStore();\n      rolesStore.roles = null;\n      await nextTick();\n      const button = wrapper.find(\"#game-lobby-role-picker-grid-element-button\");\n      await button.trigger(\"click\");\n\n      expect(wrapper.emitted(\"pickRole\")).toBeUndefined();\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabPiedPiper/GameLobbyOptionsHubRolesTabPiedPiper.nuxt.spec.ts": {
      "tests": [
        {
          "id": "429",
          "name": "Game Lobby Options Hub Roles Tab Pied Piper Component should match snapshot when rendered."
        },
        {
          "id": "430",
          "name": "Game Lobby Options Hub Roles Tab Pied Piper Component Charmed People count per night option should translate option label when rendered."
        },
        {
          "id": "431",
          "name": "Game Lobby Options Hub Roles Tab Pied Piper Component Charmed People count per night option should translate option description with selected value when rendered."
        },
        {
          "id": "432",
          "name": "Game Lobby Options Hub Roles Tab Pied Piper Component Charmed People count per night option should translate option float label when rendered."
        },
        {
          "id": "433",
          "name": "Game Lobby Options Hub Roles Tab Pied Piper Component Charmed People count per night option should update the create game dto store when the option is changed by the input number."
        },
        {
          "id": "434",
          "name": "Game Lobby Options Hub Roles Tab Pied Piper Component Charmed People count per night option should update the create game dto store when the option is changed by the slider."
        },
        {
          "id": "435",
          "name": "Game Lobby Options Hub Roles Tab Pied Piper Component Charmed People count per night option should not update the create game dto store when the option is changed by the input number and the value is null."
        },
        {
          "id": "436",
          "name": "Game Lobby Options Hub Roles Tab Pied Piper Component Is powerless on Werewolves Side should translate option label when rendered."
        },
        {
          "id": "437",
          "name": "Game Lobby Options Hub Roles Tab Pied Piper Component Is powerless on Werewolves Side should translate option description when the option is activated."
        },
        {
          "id": "438",
          "name": "Game Lobby Options Hub Roles Tab Pied Piper Component Is powerless on Werewolves Side should translate option description when the option is deactivated."
        },
        {
          "id": "439",
          "name": "Game Lobby Options Hub Roles Tab Pied Piper Component Is powerless on Werewolves Side should update the create game dto store when the option is toggled."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport type InputNumber from \"primevue/inputnumber\";\nimport type Slider from \"primevue/slider\";\nimport GameLobbyOptionsHubRolesTabPiedPiper from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabPiedPiper/GameLobbyOptionsHubRolesTabPiedPiper.vue\";\nimport type AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport type GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGameDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Options Hub Roles Tab Pied Piper Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabPiedPiper>>;\n\n  async function mountGameLobbyOptionsHubRolesTabPiedPiperComponent(options: ComponentMountingOptions<typeof GameLobbyOptionsHubRolesTabPiedPiper> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabPiedPiper>>> {\n    return mountSuspendedComponent(GameLobbyOptionsHubRolesTabPiedPiper, {\n      global: {\n        stubs: {\n          Fieldset: false,\n          GameOptionInputGroup: false,\n          FloatLabel: false,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyOptionsHubRolesTabPiedPiperComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Charmed People count per night option\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-pied-piper-charmed-people-count-per-night-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"Charmed people count per night\");\n    });\n\n    it(\"should translate option description with selected value when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-pied-piper-charmed-people-count-per-night-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabPiedPiper.options.charmedPeopleCountPerNight.description, {\\\"count\\\":2}\");\n    });\n\n    it(\"should translate option float label when rendered.\", () => {\n      const floatLabel = wrapper.find<HTMLLabelElement>(\"#game-lobby-options-hub-roles-tab-pied-piper-charmed-people-count-per-night-label\");\n\n      expect(floatLabel.text()).toBe(\"Charmed people count per night\");\n    });\n\n    it(\"should update the create game dto store when the option is changed by the input number.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const inputId = \"#game-lobby-options-hub-roles-tab-pied-piper-charmed-people-count-per-night-input\";\n      const charmedPeopleCountPerNightInputNumber = wrapper.findComponent<typeof InputNumber>(inputId);\n      (charmedPeopleCountPerNightInputNumber.vm as VueVm).$emit(\"update:modelValue\", 3);\n      await wrapper.vm.$nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.piedPiper.charmedPeopleCountPerNight = 3;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n\n    it(\"should update the create game dto store when the option is changed by the slider.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const inputId = \"#game-lobby-options-hub-roles-tab-pied-piper-charmed-people-count-per-night-slider\";\n      const charmedPeopleCountPerNightInputNumber = wrapper.findComponent<typeof Slider>(inputId);\n      (charmedPeopleCountPerNightInputNumber.vm as VueVm).$emit(\"update:modelValue\", 4);\n      await wrapper.vm.$nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.piedPiper.charmedPeopleCountPerNight = 4;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n\n    it(\"should not update the create game dto store when the option is changed by the input number and the value is null.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const inputId = \"#game-lobby-options-hub-roles-tab-pied-piper-charmed-people-count-per-night-input\";\n      const charmedPeopleCountPerNightInputNumber = wrapper.findComponent<typeof InputNumber>(inputId);\n      (charmedPeopleCountPerNightInputNumber.vm as VueVm).$emit(\"update:modelValue\", null);\n      await wrapper.vm.$nextTick();\n\n      expect(createGameDtoStore.setCreateGameDto).not.toHaveBeenCalled();\n    });\n  });\n\n  describe(\"Is powerless on Werewolves Side\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-pied-piper-is-powerless-on-werewolves-side-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"The Pied Piper is powerless on the Werewolves side\");\n    });\n\n    it(\"should translate option description when the option is activated.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-pied-piper-is-powerless-on-werewolves-side-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabPiedPiper.options.isPowerlessOnWerewolvesSide.descriptions.yes\");\n    });\n\n    it(\"should translate option description when the option is deactivated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.piedPiper.isPowerlessOnWerewolvesSide = false;\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-pied-piper-is-powerless-on-werewolves-side-input-group\");\n      await nextTick();\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabPiedPiper.options.isPowerlessOnWerewolvesSide.descriptions.no\");\n    });\n\n    it(\"should update the create game dto store when the option is toggled.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const toggleButton = wrapper.findComponent<typeof AffirmativeToggleButton>(\"#game-lobby-options-hub-roles-tab-pied-piper-is-powerless-on-werewolves-side-input\");\n      (toggleButton.vm as VueVm).$emit(\"update:modelValue\", false);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.piedPiper.isPowerlessOnWerewolvesSide = false;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/GameLobbyRolePickerDescriptionBoundaries.nuxt.spec.ts": {
      "tests": [
        {
          "id": "440",
          "name": "Game Lobby Role Picker Description Boundaries Component should match snapshot when rendered."
        },
        {
          "id": "441",
          "name": "Game Lobby Role Picker Description Boundaries Component Role count should translate role count in create game dto when rendered."
        },
        {
          "id": "442",
          "name": "Game Lobby Role Picker Description Boundaries Component Role max reached should render role max reached when max is reached in create game dto."
        },
        {
          "id": "443",
          "name": "Game Lobby Role Picker Description Boundaries Component Role max reached should not render role max reached when max is not reached in create game dto."
        },
        {
          "id": "444",
          "name": "Game Lobby Role Picker Description Boundaries Component Recommended min players should render recommended min players when role has recommended min players."
        },
        {
          "id": "445",
          "name": "Game Lobby Role Picker Description Boundaries Component Recommended min players should not render recommended min players when role has no recommended min players."
        },
        {
          "id": "446",
          "name": "Game Lobby Role Picker Description Boundaries Component Min in game not reached should render min in game not reached when min is not reached in create game dto and there is at least one role already."
        },
        {
          "id": "447",
          "name": "Game Lobby Role Picker Description Boundaries Component Min in game not reached should not render min in game not reached when min is reached in create game dto."
        },
        {
          "id": "448",
          "name": "Game Lobby Role Picker Description Boundaries Component Min in game not reached should not render min in game not reached when there is no role in create game dto."
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport type { GameLobbyRolePickerDescriptionBoundariesProps } from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/game-lobby-role-picker-description-boundaries.types\";\nimport GameLobbyRolePickerDescriptionBoundaries from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionBoundaries/GameLobbyRolePickerDescriptionBoundaries.vue\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGamePlayerDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game-player/create-game-player.dto.factory\";\nimport { createFakeRole } from \"~/tests/unit/utils/factories/composables/api/role/role.factory\";\nimport { mockPiniaStore } from \"~/tests/unit/utils/helpers/mock.helpers\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Lobby Role Picker Description Boundaries Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyRolePickerDescriptionBoundaries>>;\n  const defaultProps: GameLobbyRolePickerDescriptionBoundariesProps = {\n    pickedRole: createFakeRole({\n      name: \"werewolf\",\n      recommendedMinPlayers: 5,\n      minInGame: 1,\n      maxInGame: 3,\n    }),\n  };\n\n  async function mountGameLobbyRolePickerDescriptionBoundariesComponent(options: ComponentMountingOptions<typeof GameLobbyRolePickerDescriptionBoundaries> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyRolePickerDescriptionBoundaries>>> {\n    return mountSuspendedComponent(\n      GameLobbyRolePickerDescriptionBoundaries,\n      {\n        props: defaultProps,\n        ...options,\n      },\n    );\n  }\n\n  beforeEach(async() => {\n    const pinia = createTestingPinia();\n    const createGameDtoStore = mockPiniaStore(useCreateGameDtoStore);\n    createGameDtoStore.getPlayersWithRoleNameInCreateGameDto.mockReturnValue([\n      createFakeCreateGamePlayerDto(),\n      createFakeCreateGamePlayerDto(),\n    ]);\n    wrapper = await mountGameLobbyRolePickerDescriptionBoundariesComponent({ global: { plugins: [pinia] } });\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Role count\", () => {\n    it(\"should translate role count in create game dto when rendered.\", () => {\n      const roleCount = wrapper.find(\"#role-count-in-party\");\n\n      expect(roleCount.text()).toBe(\"components.GameLobbyRolePickerDescriptionBoundaries.roleCountInParty, {\\\"count\\\":2}\");\n    });\n  });\n\n  describe(\"Role max reached\", () => {\n    it(\"should render role max reached when max is reached in create game dto.\", async() => {\n      const pinia = createTestingPinia();\n      const createGameDtoStore = mockPiniaStore(useCreateGameDtoStore);\n      createGameDtoStore.getPlayersWithRoleNameInCreateGameDto.mockReturnValue([createFakeCreateGamePlayerDto()]);\n      createGameDtoStore.isRoleMaxReachedInCreateGameDto.mockReturnValue(true);\n      wrapper = await mountGameLobbyRolePickerDescriptionBoundariesComponent({ global: { plugins: [pinia] } });\n      const roleMaxReached = wrapper.find(\"#role-count-max-reached\");\n\n      expect(roleMaxReached.text()).toBe(\"(components.GameLobbyRolePickerDescriptionBoundaries.roleCountMaxReached)\");\n    });\n\n    it(\"should not render role max reached when max is not reached in create game dto.\", () => {\n      const roleMaxReached = wrapper.find(\"#role-count-max-reached\");\n\n      expect(roleMaxReached.exists()).toBeFalsy();\n    });\n  });\n\n  describe(\"Recommended min players\", () => {\n    it(\"should render recommended min players when role has recommended min players.\", () => {\n      const recommendedMinPlayers = wrapper.find(\"#recommended-role-min-in-game\");\n\n      expect(recommendedMinPlayers.text()).toBe(\"components.GameLobbyRolePickerDescriptionBoundaries.recommendedMinPlayers, {\\\"count\\\":5}\");\n    });\n\n    it(\"should not render recommended min players when role has no recommended min players.\", async() => {\n      const pinia = createTestingPinia();\n      const createGameDtoStore = mockPiniaStore(useCreateGameDtoStore);\n      createGameDtoStore.getPlayersWithRoleNameInCreateGameDto.mockReturnValue([\n        createFakeCreateGamePlayerDto(),\n        createFakeCreateGamePlayerDto(),\n      ]);\n      wrapper = await mountGameLobbyRolePickerDescriptionBoundariesComponent({\n        props: { pickedRole: createFakeRole({ recommendedMinPlayers: undefined }) },\n        global: { plugins: [pinia] },\n      });\n      const recommendedMinPlayers = wrapper.find(\"#recommended-role-min-in-game\");\n\n      expect(recommendedMinPlayers.exists()).toBeFalsy();\n    });\n  });\n\n  describe(\"Min in game not reached\", () => {\n    it(\"should render min in game not reached when min is not reached in create game dto and there is at least one role already.\", async() => {\n      const pinia = createTestingPinia();\n      const createGameDtoStore = mockPiniaStore(useCreateGameDtoStore);\n      createGameDtoStore.getPlayersWithRoleNameInCreateGameDto.mockReturnValue([createFakeCreateGamePlayerDto()]);\n      createGameDtoStore.getRoleLeftCountToReachMinInCreateGameDto.mockReturnValue(2);\n      createGameDtoStore.isRoleMinReachedInCreateGameDto.mockReturnValue(false);\n      wrapper = await mountGameLobbyRolePickerDescriptionBoundariesComponent({ global: { plugins: [pinia] } });\n      const roleMinNotReached = wrapper.find(\"#min-in-game-not-reached\");\n\n      expect(roleMinNotReached.text()).toBe(\"components.GameLobbyRolePickerDescriptionBoundaries.minInGameNotReached, {\\\"count\\\":2}\");\n    });\n\n    it(\"should not render min in game not reached when min is reached in create game dto.\", async() => {\n      const pinia = createTestingPinia();\n      const createGameDtoStore = mockPiniaStore(useCreateGameDtoStore);\n      createGameDtoStore.getPlayersWithRoleNameInCreateGameDto.mockReturnValue([createFakeCreateGamePlayerDto()]);\n      createGameDtoStore.getRoleLeftCountToReachMinInCreateGameDto.mockReturnValue(2);\n      createGameDtoStore.isRoleMinReachedInCreateGameDto.mockReturnValue(true);\n      wrapper = await mountGameLobbyRolePickerDescriptionBoundariesComponent({ global: { plugins: [pinia] } });\n      const roleMinNotReached = wrapper.find(\"#min-in-game-not-reached\");\n\n      expect(roleMinNotReached.exists()).toBeFalsy();\n    });\n\n    it(\"should not render min in game not reached when there is no role in create game dto.\", async() => {\n      const pinia = createTestingPinia();\n      const createGameDtoStore = mockPiniaStore(useCreateGameDtoStore);\n      createGameDtoStore.getPlayersWithRoleNameInCreateGameDto.mockReturnValue([]);\n      createGameDtoStore.getRoleLeftCountToReachMinInCreateGameDto.mockReturnValue(2);\n      createGameDtoStore.isRoleMinReachedInCreateGameDto.mockReturnValue(false);\n      wrapper = await mountGameLobbyRolePickerDescriptionBoundariesComponent({ global: { plugins: [pinia] } });\n      const roleMinNotReached = wrapper.find(\"#min-in-game-not-reached\");\n\n      expect(roleMinNotReached.exists()).toBeFalsy();\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabElder/GameLobbyOptionsHubRolesTabElder.nuxt.spec.ts": {
      "tests": [
        {
          "id": "449",
          "name": "Game Lobby Options Hub Roles Tab Elder Component should match snapshot when rendered."
        },
        {
          "id": "450",
          "name": "Game Lobby Options Hub Roles Tab Elder Component Elder Lives against Werewolves options should translate option label when rendered."
        },
        {
          "id": "451",
          "name": "Game Lobby Options Hub Roles Tab Elder Component Elder Lives against Werewolves options should translate option description with option value when rendered."
        },
        {
          "id": "452",
          "name": "Game Lobby Options Hub Roles Tab Elder Component Elder Lives against Werewolves options should translate option float label when rendered."
        },
        {
          "id": "453",
          "name": "Game Lobby Options Hub Roles Tab Elder Component Elder Lives against Werewolves options should update the create game dto store when the option is changed by the input number."
        },
        {
          "id": "454",
          "name": "Game Lobby Options Hub Roles Tab Elder Component Elder Lives against Werewolves options should update the create game dto store when the option is changed by the slider."
        },
        {
          "id": "455",
          "name": "Game Lobby Options Hub Roles Tab Elder Component Elder Lives against Werewolves options should not update the create game dto store when the option is changed by the input number and the value is null."
        },
        {
          "id": "456",
          "name": "Game Lobby Options Hub Roles Tab Elder Component Elder takes his revenge option should translate option label when rendered."
        },
        {
          "id": "457",
          "name": "Game Lobby Options Hub Roles Tab Elder Component Elder takes his revenge option should translate option description when the option is activated."
        },
        {
          "id": "458",
          "name": "Game Lobby Options Hub Roles Tab Elder Component Elder takes his revenge option should translate option description when the option is deactivated."
        },
        {
          "id": "459",
          "name": "Game Lobby Options Hub Roles Tab Elder Component Elder takes his revenge option should update the create game dto store when the option is toggled."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport type InputNumber from \"primevue/inputnumber\";\nimport type Slider from \"primevue/slider\";\nimport GameLobbyOptionsHubRolesTabElder from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabElder/GameLobbyOptionsHubRolesTabElder.vue\";\nimport type AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport type GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGameDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Options Hub Roles Tab Elder Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabElder>>;\n\n  async function mountGameLobbyOptionsHubRolesTabElderComponent(options: ComponentMountingOptions<typeof GameLobbyOptionsHubRolesTabElder> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabElder>>> {\n    return mountSuspendedComponent(GameLobbyOptionsHubRolesTabElder, {\n      global: {\n        stubs: {\n          Fieldset: false,\n          FloatLabel: false,\n          GameOptionInputGroup: false,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyOptionsHubRolesTabElderComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Elder Lives against Werewolves options\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-elder-lives-count-against-werewolves-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"The Elder lives count against the Werewolves\");\n    });\n\n    it(\"should translate option description with option value when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-elder-lives-count-against-werewolves-input-group\");\n      const expectedOptionDescription = \"components.GameLobbyOptionsHubRolesTabElder.options.livesCountAgainstWerewolves.description, {\\\"livesCount\\\":2}, 2\";\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(expectedOptionDescription);\n    });\n\n    it(\"should translate option float label when rendered.\", () => {\n      const floatLabel = wrapper.find<HTMLLabelElement>(\"#game-lobby-options-hub-roles-tab-elder-lives-count-against-werewolves-label\");\n\n      expect(floatLabel.text()).toBe(\"The Elder lives count against the Werewolves\");\n    });\n\n    it(\"should update the create game dto store when the option is changed by the input number.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const toggleButton = wrapper.findComponent<typeof InputNumber>(\"#game-lobby-options-hub-roles-tab-elder-lives-count-against-werewolves-input\");\n      (toggleButton.vm as VueVm).$emit(\"update:modelValue\", 5);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.elder.livesCountAgainstWerewolves = 5;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n\n    it(\"should update the create game dto store when the option is changed by the slider.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const slider = wrapper.findComponent<typeof Slider>(\"#game-lobby-options-hub-roles-tab-elder-lives-count-against-werewolves-slider\");\n      (slider.vm as VueVm).$emit(\"update:modelValue\", 5);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.elder.livesCountAgainstWerewolves = 5;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n\n    it(\"should not update the create game dto store when the option is changed by the input number and the value is null.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const toggleButton = wrapper.findComponent<typeof InputNumber>(\"#game-lobby-options-hub-roles-tab-elder-lives-count-against-werewolves-input\");\n      (toggleButton.vm as VueVm).$emit(\"update:modelValue\", null);\n      await nextTick();\n\n      expect(createGameDtoStore.setCreateGameDto).not.toHaveBeenCalled();\n    });\n  });\n\n  describe(\"Elder takes his revenge option\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-elder-does-take-his-revenge-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"The Elder takes his revenge\");\n    });\n\n    it(\"should translate option description when the option is activated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.elder.doesTakeHisRevenge = true;\n      await nextTick();\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-elder-does-take-his-revenge-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabElder.options.doesTakeHisRevenge.descriptions.yes\");\n    });\n\n    it(\"should translate option description when the option is deactivated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.elder.doesTakeHisRevenge = false;\n      await nextTick();\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-elder-does-take-his-revenge-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabElder.options.doesTakeHisRevenge.descriptions.no\");\n    });\n\n    it(\"should update the create game dto store when the option is toggled.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const toggleButton = wrapper.findComponent<typeof AffirmativeToggleButton>(\"#game-lobby-options-hub-roles-tab-elder-does-take-his-revenge-input\");\n      (toggleButton.vm as VueVm).$emit(\"update:modelValue\", false);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.elder.doesTakeHisRevenge = false;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GamePlaying/GameTeamSide/GameTeamSide.nuxt.spec.ts": {
      "tests": [
        {
          "id": "460",
          "name": "Game Team Side Component should match snapshot when rendered."
        },
        {
          "id": "461",
          "name": "Game Team Side Component Team Side Image should render the werewolves image when the side is werewolves."
        },
        {
          "id": "462",
          "name": "Game Team Side Component Team Side Image should render the villagers image when the side is villagers."
        },
        {
          "id": "463",
          "name": "Game Team Side Component Title should render the werewolves title when the side is werewolves."
        },
        {
          "id": "464",
          "name": "Game Team Side Component Title should render the villagers title when the side is villagers."
        },
        {
          "id": "465",
          "name": "Game Team Side Component Alive text should render the number of alive werewolves when the side is werewolves."
        },
        {
          "id": "466",
          "name": "Game Team Side Component Alive text should render the number of alive villagers when the side is villagers."
        },
        {
          "id": "467",
          "name": "Game Team Side Component Game Team Side Players should render the werewolves players with alive players first when the side is werewolves."
        },
        {
          "id": "468",
          "name": "Game Team Side Component Game Team Side Players should render the villagers players with alive players first when the side is villagers."
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport type { NuxtImg } from \"#components\";\nimport type { GameTeamSideProps } from \"~/components/pages/game/GamePlaying/GameTeamSide/game-team-side.types\";\nimport GameTeamSide from \"~/components/pages/game/GamePlaying/GameTeamSide/GameTeamSide.vue\";\nimport GameTeamSidePlayer from \"~/components/pages/game/GamePlaying/GameTeamSide/GameTeamSidePlayer/GameTeamSidePlayer.vue\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\nimport { createFakeGame } from \"~/tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { createFakeAccursedWolfFatherAlivePlayer, createFakeBigBadWolfAlivePlayer, createFakeHunterAlivePlayer, createFakeSeerAlivePlayer, createFakeVillagerAlivePlayer, createFakeWerewolfAlivePlayer, createFakeWhiteWerewolfAlivePlayer } from \"~/tests/unit/utils/factories/composables/api/game/player/player-with-role.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Team Side Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameTeamSide>>;\n  const defaultProps: GameTeamSideProps = { side: \"villagers\" };\n  const testingPinia = { initialState: { [StoreIds.GAME]: { game: createFakeGame() } } };\n\n  async function mountGameTeamSideComponent(options: ComponentMountingOptions<typeof GameTeamSide> = {}): Promise<ReturnType<typeof mount<typeof GameTeamSide>>> {\n    return mountSuspendedComponent(GameTeamSide, {\n      props: options.props ?? defaultProps,\n      global: { plugins: [createTestingPinia(testingPinia)] },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameTeamSideComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Team Side Image\", () => {\n    it(\"should render the werewolves image when the side is werewolves.\", async() => {\n      wrapper = await mountGameTeamSideComponent({ props: { side: \"werewolves\" } });\n      const image = wrapper.findComponent<typeof NuxtImg>(\"[alt='Werewolves side']\");\n\n      expect(image.attributes(\"src\")).toBe(\"/svg/role/werewolf.svg\");\n    });\n\n    it(\"should render the villagers image when the side is villagers.\", async() => {\n      wrapper = await mountGameTeamSideComponent({ props: { side: \"villagers\" } });\n      const image = wrapper.findComponent<typeof NuxtImg>(\"[alt='Villagers side']\");\n\n      expect(image.attributes(\"src\")).toBe(\"/svg/role/villager.svg\");\n    });\n  });\n\n  describe(\"Title\", () => {\n    it(\"should render the werewolves title when the side is werewolves.\", async() => {\n      wrapper = await mountGameTeamSideComponent({ props: { side: \"werewolves\" } });\n      const title = wrapper.find<HTMLHeadingElement>(\"#side-title\");\n\n      expect(title.text()).toBe(\"Werewolves\");\n    });\n\n    it(\"should render the villagers title when the side is villagers.\", async() => {\n      wrapper = await mountGameTeamSideComponent({ props: { side: \"villagers\" } });\n      const title = wrapper.find<HTMLHeadingElement>(\"#side-title\");\n\n      expect(title.text()).toBe(\"Villagers\");\n    });\n  });\n\n  describe(\"Alive text\", () => {\n    it(\"should render the number of alive werewolves when the side is werewolves.\", async() => {\n      wrapper = await mountGameTeamSideComponent({ props: { side: \"werewolves\" } });\n      const gameStore = useGameStore();\n      gameStore.game = createFakeGame({\n        players: [\n          createFakeWerewolfAlivePlayer(),\n          createFakeBigBadWolfAlivePlayer({ isAlive: false }),\n          createFakeVillagerAlivePlayer(),\n          createFakeAccursedWolfFatherAlivePlayer(),\n          createFakeWhiteWerewolfAlivePlayer(),\n        ],\n      });\n      await nextTick();\n      const aliveText = wrapper.find<HTMLSpanElement>(\"#alive-team-players\");\n\n      expect(aliveText.text()).toBe(\"components.GameTeamSide.aliveTeamPlayers, {\\\"alivePlayers\\\":3,\\\"totalPlayers\\\":4}\");\n    });\n\n    it(\"should render the number of alive villagers when the side is villagers.\", async() => {\n      wrapper = await mountGameTeamSideComponent({ props: { side: \"villagers\" } });\n      const gameStore = useGameStore();\n      gameStore.game = createFakeGame({\n        players: [\n          createFakeWerewolfAlivePlayer(),\n          createFakeSeerAlivePlayer(),\n          createFakeVillagerAlivePlayer(),\n          createFakeAccursedWolfFatherAlivePlayer({ isAlive: false }),\n          createFakeHunterAlivePlayer({ isAlive: false }),\n        ],\n      });\n      await nextTick();\n      const aliveText = wrapper.find<HTMLSpanElement>(\"#alive-team-players\");\n\n      expect(aliveText.text()).toBe(\"components.GameTeamSide.aliveTeamPlayers, {\\\"alivePlayers\\\":2,\\\"totalPlayers\\\":3}\");\n    });\n  });\n\n  describe(\"Game Team Side Players\", () => {\n    it(\"should render the werewolves players with alive players first when the side is werewolves.\", async() => {\n      wrapper = await mountGameTeamSideComponent({ props: { side: \"werewolves\" } });\n      const gameStore = useGameStore();\n      gameStore.game = createFakeGame({\n        players: [\n          createFakeWerewolfAlivePlayer(),\n          createFakeBigBadWolfAlivePlayer(),\n          createFakeVillagerAlivePlayer(),\n          createFakeAccursedWolfFatherAlivePlayer({ isAlive: false }),\n          createFakeWhiteWerewolfAlivePlayer(),\n        ],\n      });\n      await nextTick();\n      const players = wrapper.findAllComponents<typeof GameTeamSidePlayer>(GameTeamSidePlayer);\n\n      expect(players).toHaveLength(4);\n      expect(players[0].props(\"player\")).toStrictEqual<Player>(gameStore.game.players[0]);\n      expect(players[1].props(\"player\")).toStrictEqual<Player>(gameStore.game.players[1]);\n      expect(players[2].props(\"player\")).toStrictEqual<Player>(gameStore.game.players[4]);\n      expect(players[3].props(\"player\")).toStrictEqual<Player>(gameStore.game.players[3]);\n    });\n\n    it(\"should render the villagers players with alive players first when the side is villagers.\", async() => {\n      wrapper = await mountGameTeamSideComponent({ props: { side: \"villagers\" } });\n      const gameStore = useGameStore();\n      gameStore.game = createFakeGame({\n        players: [\n          createFakeWerewolfAlivePlayer(),\n          createFakeSeerAlivePlayer({ isAlive: false }),\n          createFakeVillagerAlivePlayer(),\n          createFakeAccursedWolfFatherAlivePlayer(),\n          createFakeHunterAlivePlayer(),\n        ],\n      });\n      await nextTick();\n      const players = wrapper.findAllComponents<typeof GameTeamSidePlayer>(GameTeamSidePlayer);\n\n      expect(players).toHaveLength(3);\n      expect(players[0].props(\"player\")).toStrictEqual<Player>(gameStore.game.players[2]);\n      expect(players[1].props(\"player\")).toStrictEqual<Player>(gameStore.game.players[4]);\n      expect(players[2].props(\"player\")).toStrictEqual<Player>(gameStore.game.players[1]);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/about/AboutAvailableRoles/AboutAvailableRoles.nuxt.spec.ts": {
      "tests": [
        {
          "id": "469",
          "name": "About Available Roles Component should match snapshot when rendered."
        },
        {
          "id": "470",
          "name": "About Available Roles Component Title should display role image with angel when rendered."
        },
        {
          "id": "471",
          "name": "About Available Roles Component Title should translate title when rendered."
        },
        {
          "id": "472",
          "name": "About Available Roles Component Available Roles Accordion Roles are not set yet should display loading roles container when roles are not set yet."
        },
        {
          "id": "473",
          "name": "About Available Roles Component Available Roles Accordion Roles are not set yet should translate loading roles text when roles are not set yet."
        },
        {
          "id": "474",
          "name": "About Available Roles Component Available Roles Accordion Roles are set should translate first section when roles are set."
        },
        {
          "id": "475",
          "name": "About Available Roles Component Available Roles Accordion Roles are set should display 3 available roles accordion tabs when 3 roles are set."
        },
        {
          "id": "476",
          "name": "About Available Roles Component Available Roles Accordion Roles are set should render roles accordion tabs with header aria labels when roles are set."
        },
        {
          "id": "477",
          "name": "About Available Roles Component Available Roles Accordion Roles are set should render roles accordion tabs with header images when roles are set."
        },
        {
          "id": "478",
          "name": "About Available Roles Component Available Roles Accordion Roles are set should display werewolf role description for first accordion tab when first accordion tab is for werewolf role."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport Accordion from \"primevue/accordion\";\nimport type { AccordionTabPassThroughOptions } from \"primevue/accordiontab\";\nimport AccordionTab from \"primevue/accordiontab\";\nimport { nextTick } from \"vue\";\n\nimport AboutAvailableRoleDescription from \"~/components/pages/about/AboutAvailableRoles/AboutAvailableRoleDescription/AboutAvailableRoleDescription.vue\";\nimport AboutAvailableRoles from \"~/components/pages/about/AboutAvailableRoles/AboutAvailableRoles.vue\";\nimport type TextProgressSpinner from \"~/components/shared/misc/TextProgressSpinner/TextProgressSpinner.vue\";\nimport RoleImage from \"~/components/shared/role/RoleImage/RoleImage.vue\";\nimport type { Role } from \"~/composables/api/role/types/role.class\";\nimport type { RoleName } from \"~/composables/api/role/types/role.types\";\nimport * as UseRoleName from \"~/composables/api/role/useRoleName\";\nimport { useRolesStore } from \"~/stores/role/useRolesStore\";\nimport { createFakeRole } from \"~/tests/unit/utils/factories/composables/api/role/role.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"About Available Roles Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof AboutAvailableRoles>>;\n\n  beforeEach(async() => {\n    vi.spyOn(UseRoleName, \"useRoleName\").mockReturnValue({\n      getRoleNameLabel: vi.fn((roleName: RoleName) => roleName),\n      getDefiniteRoleNameLabel: vi.fn((roleName: RoleName, count: number) => `${roleName} ${count}`),\n    });\n    wrapper = await mountSuspendedComponent(AboutAvailableRoles);\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Title\", () => {\n    it(\"should display role image with angel when rendered.\", () => {\n      const roleImage = wrapper.findComponent<typeof RoleImage>(\"#about-available-roles-title-role-image\");\n\n      expect(roleImage.props(\"roleName\")).toBe(\"angel\");\n    });\n\n    it(\"should translate title when rendered.\", () => {\n      const title = wrapper.find<HTMLHeadElement>(\"#about-available-roles-title\");\n\n      expect(title.text()).toBe(\"Available roles\");\n    });\n  });\n\n  describe(\"Available Roles Accordion\", () => {\n    describe(\"Roles are not set yet\", () => {\n      beforeEach(async() => {\n        const rolesStore = useRolesStore();\n        rolesStore.roles = null;\n        await nextTick();\n      });\n\n      it(\"should display loading roles container when roles are not set yet.\", () => {\n        const loadingRolesContainer = wrapper.find<HTMLDivElement>(\"#loading-roles-container\");\n\n        expect(loadingRolesContainer.exists()).toBeTruthy();\n      });\n\n      it(\"should translate loading roles text when roles are not set yet.\", () => {\n        const loadingRolesSpinner = wrapper.findComponent<typeof TextProgressSpinner>(\"#loading-roles-spinner\");\n\n        expect(loadingRolesSpinner.props(\"text\")).toBe(\"Loading roles…\");\n      });\n    });\n\n    describe(\"Roles are set\", () => {\n      const roles = [\n        createFakeRole({ name: \"werewolf\" }),\n        createFakeRole({ name: \"angel\" }),\n        createFakeRole({ name: \"accursed-wolf-father\" }),\n      ];\n\n      beforeEach(async() => {\n        wrapper = await mountSuspendedComponent(AboutAvailableRoles, {\n          shallow: false,\n          global: { stubs: { AboutAvailableRoleDescription: true } },\n        });\n        const rolesStore = useRolesStore();\n        rolesStore.roles = roles;\n        await nextTick();\n      });\n\n      it(\"should translate first section when roles are set.\", () => {\n        const firstSection = wrapper.find<HTMLDivElement>(\"#about-available-roles-first-section\");\n\n        expect(firstSection.text()).toBe(\"components.AboutAvailableRoles.assistantHasManyRoles, 3\");\n      });\n\n      it(\"should display 3 available roles accordion tabs when 3 roles are set.\", () => {\n        const availableRolesAccordionTabs = wrapper.findAllComponents<typeof AccordionTab>(AccordionTab);\n\n        expect(availableRolesAccordionTabs).toHaveLength(3);\n      });\n\n      it(\"should render roles accordion tabs with header aria labels when roles are set.\", () => {\n        const availableRolesAccordionTabs = wrapper.findAllComponents<typeof AccordionTab>(AccordionTab);\n        const expectedWerewolfAriaLabel = \"components.AboutAvailableRoles.clickToExpandRoleDescription, {\\\"role\\\":\\\"werewolf\\\"}\";\n        const expectedAngelAriaLabel = \"components.AboutAvailableRoles.clickToExpandRoleDescription, {\\\"role\\\":\\\"angel\\\"}\";\n        const expectedAccursedWolfFatherAriaLabel = \"components.AboutAvailableRoles.clickToExpandRoleDescription, {\\\"role\\\":\\\"accursed-wolf-father\\\"}\";\n        const expectedWerewolfPassThroughOptions: AccordionTabPassThroughOptions = { headerAction: { \"aria-label\": expectedWerewolfAriaLabel } };\n        const expectedAngelPassThroughOptions: AccordionTabPassThroughOptions = { headerAction: { \"aria-label\": expectedAngelAriaLabel } };\n        const expectedAccursedWolfFatherPassThroughOptions: AccordionTabPassThroughOptions = { headerAction: { \"aria-label\": expectedAccursedWolfFatherAriaLabel } };\n\n        expect(availableRolesAccordionTabs[0].props(\"pt\")).toStrictEqual<AccordionTabPassThroughOptions>(expectedWerewolfPassThroughOptions);\n        expect(availableRolesAccordionTabs[1].props(\"pt\")).toStrictEqual<AccordionTabPassThroughOptions>(expectedAngelPassThroughOptions);\n        expect(availableRolesAccordionTabs[2].props(\"pt\")).toStrictEqual<AccordionTabPassThroughOptions>(expectedAccursedWolfFatherPassThroughOptions);\n      });\n\n      it(\"should render roles accordion tabs with header images when roles are set.\", () => {\n        const availableRolesAccordion = wrapper.findComponent<typeof Accordion>(Accordion);\n        const roleImages = availableRolesAccordion.findAllComponents<typeof RoleImage>(RoleImage);\n\n        expect(roleImages).toHaveLength(3);\n        expect(roleImages[0].props(\"alt\")).toBe(\"components.AboutAvailableRoles.availableRoleImage, {\\\"role\\\":\\\"werewolf\\\"}\");\n        expect(roleImages[0].props(\"roleName\")).toBe(\"werewolf\");\n        expect(roleImages[1].props(\"alt\")).toBe(\"components.AboutAvailableRoles.availableRoleImage, {\\\"role\\\":\\\"angel\\\"}\");\n        expect(roleImages[1].props(\"roleName\")).toBe(\"angel\");\n        expect(roleImages[2].props(\"alt\")).toBe(\"components.AboutAvailableRoles.availableRoleImage, {\\\"role\\\":\\\"accursed-wolf-father\\\"}\");\n        expect(roleImages[2].props(\"roleName\")).toBe(\"accursed-wolf-father\");\n      });\n\n      it(\"should display werewolf role description for first accordion tab when first accordion tab is for werewolf role.\", () => {\n        const availableRolesAccordionTabs = wrapper.findAllComponents<typeof AccordionTab>(AccordionTab);\n        const firstAccordionTab = availableRolesAccordionTabs[0];\n        const aboutAvailableRoleDescription = firstAccordionTab.findComponent<typeof AboutAvailableRoleDescription>(AboutAvailableRoleDescription);\n\n        expect(aboutAvailableRoleDescription.props(\"role\")).toStrictEqual<Role>(roles[0]);\n      });\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundContent.nuxt.spec.ts": {
      "tests": [
        {
          "id": "479",
          "name": "Game Playground Content Component should match snapshot when rendered."
        },
        {
          "id": "480",
          "name": "Game Playground Content Component Game Playground Component should render game use potions playground component when current game play is use potions type."
        },
        {
          "id": "481",
          "name": "Game Playground Content Component Game Playground Component should render game choose card playground component when current game play is choose card type."
        },
        {
          "id": "482",
          "name": "Game Playground Content Component Game Playground Component should render game choose side playground component when current game play is choose side type."
        },
        {
          "id": "483",
          "name": "Game Playground Content Component Game Playground Component should render game no action playground component when current game play is no action type."
        },
        {
          "id": "484",
          "name": "Game Playground Content Component Game Playground Component should render game request another vote playground component when current game play is request another vote type."
        },
        {
          "id": "485",
          "name": "Game Playground Content Component Game Playground Component should render game target playground component when current game play is target type."
        },
        {
          "id": "486",
          "name": "Game Playground Content Component Game Playground Component should render game vote playground component when current game play is vote type."
        },
        {
          "id": "487",
          "name": "Game Playground Content Component Game Playground Component should render game bury dead bodies playground component when current game play is bury dead bodies type."
        },
        {
          "id": "488",
          "name": "Game Playground Content Component Game Playground Component should not render any game playground component when current game play type is not defined."
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\n\nimport GameBuryDeadBodiesPlayground from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameBuryDeadBodiesPlayground/GameBuryDeadBodiesPlayground.vue\";\nimport GameChooseCardPlayground from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameChooseCardPlayground/GameChooseCardPlayground.vue\";\nimport GameChooseSidePlayground from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameChooseSidePlayground/GameChooseSidePlayground.vue\";\nimport GameNoActionPlayground from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameNoActionPlayground/GameNoActionPlayground.vue\";\nimport GamePlaygroundContent from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundContent.vue\";\nimport GameRequestAnotherVotePlayground from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameRequestAnotherVotePlayground/GameRequestAnotherVotePlayground.vue\";\nimport GameTargetPlayground from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameTargetPlayground/GameTargetPlayground.vue\";\nimport GameUsePotionsPlayground from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/GameUsePotionsPlayground.vue\";\nimport GameVotePlayground from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameVotePlayground/GameVotePlayground.vue\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\nimport { createFakeGamePlayCupidCharms, createFakeGamePlayLoversMeetEachOther, createFakeGamePlayStutteringJudgeRequestsAnotherVote, createFakeGamePlaySurvivorsBuryDeadBodies, createFakeGamePlaySurvivorsElectSheriff, createFakeGamePlayThiefChoosesCard, createFakeGamePlayWerewolvesEat, createFakeGamePlayWitchUsesPotions, createFakeGamePlayWolfHoundChoosesSide } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play.factory\";\nimport { createFakeGame } from \"~/tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Playground Content Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GamePlaygroundContent>>;\n  const testingPinia = { initialState: { [StoreIds.GAME]: { game: createFakeGame({ currentPlay: createFakeGamePlayCupidCharms() }) } } };\n\n  async function mountGamePlaygroundContentComponent(): Promise<ReturnType<typeof mount<typeof GamePlaygroundContent>>> {\n    return mountSuspendedComponent(GamePlaygroundContent, { global: { plugins: [createTestingPinia(testingPinia)] } });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGamePlaygroundContentComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Game Playground Component\", () => {\n    it(\"should render game use potions playground component when current game play is use potions type.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlayWitchUsesPotions();\n      await nextTick();\n      const gamePlaygroundUsePotions = wrapper.findComponent<typeof GameUsePotionsPlayground>(GameUsePotionsPlayground);\n\n      expect(gamePlaygroundUsePotions.exists()).toBeTruthy();\n    });\n\n    it(\"should render game choose card playground component when current game play is choose card type.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlayThiefChoosesCard();\n      await nextTick();\n      const gamePlaygroundChooseCard = wrapper.findComponent<typeof GameChooseCardPlayground>(GameChooseCardPlayground);\n\n      expect(gamePlaygroundChooseCard.exists()).toBeTruthy();\n    });\n\n    it(\"should render game choose side playground component when current game play is choose side type.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlayWolfHoundChoosesSide();\n      await nextTick();\n      const gamePlaygroundChooseSide = wrapper.findComponent<typeof GameChooseSidePlayground>(GameChooseSidePlayground);\n\n      expect(gamePlaygroundChooseSide.exists()).toBeTruthy();\n    });\n\n    it(\"should render game no action playground component when current game play is no action type.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlayLoversMeetEachOther();\n      await nextTick();\n      const gamePlaygroundNoAction = wrapper.findComponent<typeof GameNoActionPlayground>(GameNoActionPlayground);\n\n      expect(gamePlaygroundNoAction.exists()).toBeTruthy();\n    });\n\n    it(\"should render game request another vote playground component when current game play is request another vote type.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlayStutteringJudgeRequestsAnotherVote();\n      await nextTick();\n      const gamePlaygroundRequestAnotherVote = wrapper.findComponent<typeof GameRequestAnotherVotePlayground>(GameRequestAnotherVotePlayground);\n\n      expect(gamePlaygroundRequestAnotherVote.exists()).toBeTruthy();\n    });\n\n    it(\"should render game target playground component when current game play is target type.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlayWerewolvesEat();\n      await nextTick();\n      const gamePlaygroundTarget = wrapper.findComponent<typeof GameTargetPlayground>(GameTargetPlayground);\n\n      expect(gamePlaygroundTarget.exists()).toBeTruthy();\n    });\n\n    it(\"should render game vote playground component when current game play is vote type.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlaySurvivorsElectSheriff();\n      await nextTick();\n      const gamePlaygroundVote = wrapper.findComponent<typeof GameVotePlayground>(GameVotePlayground);\n\n      expect(gamePlaygroundVote.exists()).toBeTruthy();\n    });\n\n    it(\"should render game bury dead bodies playground component when current game play is bury dead bodies type.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlaySurvivorsBuryDeadBodies();\n      await nextTick();\n      const gamePlaygroundBuryDeadBodies = wrapper.findComponent<typeof GameBuryDeadBodiesPlayground>(GameBuryDeadBodiesPlayground);\n\n      expect(gamePlaygroundBuryDeadBodies.exists()).toBeTruthy();\n    });\n\n    it(\"should not render any game playground component when current game play type is not defined.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = null;\n      await nextTick();\n      const gamePlayground = wrapper.findComponent(\"#game-playground-type\");\n\n      expect(gamePlayground.exists()).toBeFalsy();\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecord.nuxt.spec.ts": {
      "tests": [
        {
          "id": "489",
          "name": "Game Over History Record Component should match snapshot when rendered."
        },
        {
          "id": "490",
          "name": "Game Over History Record Component Game History Record Decision should not display game over history record decision when type is no-action."
        },
        {
          "id": "491",
          "name": "Game Over History Record Component Game History Record Decision should not display game over history record decision when play is skipped."
        },
        {
          "id": "492",
          "name": "Game Over History Record Component Game History Record Decision should display game over history record decision when type is vote and play is not skipped."
        },
        {
          "id": "493",
          "name": "Game Over History Record Component Game History Record Decision should display game over history record decision when type is target and play is not skipped."
        },
        {
          "id": "494",
          "name": "Game Over History Record Component Game History Record Decision should display game over history record decision when type is bury-dead-bodies and play is not skipped."
        },
        {
          "id": "495",
          "name": "Game Over History Record Component Game History Record Decision should display game over history record decision when type is choose-card and play is not skipped."
        },
        {
          "id": "496",
          "name": "Game Over History Record Component Game History Record Decision should display game over history record decision when type is choose-side and play is not skipped."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport type { GameOverHistoryRecordProps } from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/game-over-history-record.types\";\nimport GameOverHistoryRecord from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecord.vue\";\nimport type GameOverHistoryRecordDecision from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecision.vue\";\nimport { createFakeGameAdditionalCard } from \"~/tests/unit/utils/factories/composables/api/game/game-additional-card/game-additional-card.factory\";\nimport { createFakeGameHistoryRecordPlayTarget } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-target/game-history-record-play-target.factory\";\nimport { createFakeGameHistoryRecordPlayVote } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-vote/game-history-record-play-vote.factory\";\nimport { createFakeGameHistoryRecordPlay } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play.factory\";\nimport { createFakeGameHistoryRecord } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Over History Record Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameOverHistoryRecord>>;\n  const defaultGameHistoryRecord = createFakeGameHistoryRecord({\n    play: createFakeGameHistoryRecordPlay({\n      type: \"vote\",\n      action: \"vote\",\n      votes: [createFakeGameHistoryRecordPlayVote()],\n    }),\n  });\n  const defaultProps: GameOverHistoryRecordProps = { gameHistoryRecord: defaultGameHistoryRecord };\n\n  async function mountGameOverHistoryRecordComponent(options: ComponentMountingOptions<typeof GameOverHistoryRecord> = {}):\n  Promise<ReturnType<typeof mount<typeof GameOverHistoryRecord>>> {\n    return mountSuspendedComponent(GameOverHistoryRecord, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameOverHistoryRecordComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Game History Record Decision\", () => {\n    it(\"should not display game over history record decision when type is no-action.\", async() => {\n      wrapper = await mountGameOverHistoryRecordComponent({\n        props: {\n          gameHistoryRecord: createFakeGameHistoryRecord({\n            play: createFakeGameHistoryRecordPlay({\n              type: \"no-action\",\n              action: \"growl\",\n            }),\n          }),\n        },\n      });\n      const gameHistoryRecordDecision = wrapper.findComponent<typeof GameOverHistoryRecordDecision>(\"#game-over-history-record-decision\");\n\n      expect(gameHistoryRecordDecision.exists()).toBeFalsy();\n    });\n\n    it(\"should not display game over history record decision when play is skipped.\", async() => {\n      wrapper = await mountGameOverHistoryRecordComponent({\n        props: {\n          gameHistoryRecord: createFakeGameHistoryRecord({\n            play: createFakeGameHistoryRecordPlay({\n              type: \"vote\",\n              action: \"vote\",\n            }),\n          }),\n        },\n      });\n      const gameHistoryRecordDecision = wrapper.findComponent<typeof GameOverHistoryRecordDecision>(\"#game-over-history-record-decision\");\n\n      expect(gameHistoryRecordDecision.exists()).toBeFalsy();\n    });\n\n    it(\"should display game over history record decision when type is vote and play is not skipped.\", () => {\n      const gameHistoryRecordDecision = wrapper.findComponent<typeof GameOverHistoryRecordDecision>(\"#game-over-history-record-decision\");\n\n      expect(gameHistoryRecordDecision.exists()).toBeTruthy();\n    });\n\n    it(\"should display game over history record decision when type is target and play is not skipped.\", async() => {\n      wrapper = await mountGameOverHistoryRecordComponent({\n        props: {\n          gameHistoryRecord: createFakeGameHistoryRecord({\n            play: createFakeGameHistoryRecordPlay({\n              type: \"target\",\n              action: \"eat\",\n              targets: [createFakeGameHistoryRecordPlayTarget()],\n            }),\n          }),\n        },\n      });\n      const gameHistoryRecordDecision = wrapper.findComponent<typeof GameOverHistoryRecordDecision>(\"#game-over-history-record-decision\");\n\n      expect(gameHistoryRecordDecision.exists()).toBeTruthy();\n    });\n\n    it(\"should display game over history record decision when type is bury-dead-bodies and play is not skipped.\", async() => {\n      wrapper = await mountGameOverHistoryRecordComponent({\n        props: {\n          gameHistoryRecord: createFakeGameHistoryRecord({\n            play: createFakeGameHistoryRecordPlay({\n              type: \"bury-dead-bodies\",\n              action: \"bury-dead-bodies\",\n            }),\n          }),\n        },\n      });\n      const gameHistoryRecordDecision = wrapper.findComponent<typeof GameOverHistoryRecordDecision>(\"#game-over-history-record-decision\");\n\n      expect(gameHistoryRecordDecision.exists()).toBeTruthy();\n    });\n\n    it(\"should display game over history record decision when type is choose-card and play is not skipped.\", async() => {\n      wrapper = await mountGameOverHistoryRecordComponent({\n        props: {\n          gameHistoryRecord: createFakeGameHistoryRecord({\n            play: createFakeGameHistoryRecordPlay({\n              type: \"choose-card\",\n              action: \"choose-card\",\n              chosenCard: createFakeGameAdditionalCard(),\n            }),\n          }),\n        },\n      });\n      const gameHistoryRecordDecision = wrapper.findComponent<typeof GameOverHistoryRecordDecision>(\"#game-over-history-record-decision\");\n\n      expect(gameHistoryRecordDecision.exists()).toBeTruthy();\n    });\n\n    it(\"should display game over history record decision when type is choose-side and play is not skipped.\", async() => {\n      wrapper = await mountGameOverHistoryRecordComponent({\n        props: {\n          gameHistoryRecord: createFakeGameHistoryRecord({\n            play: createFakeGameHistoryRecordPlay({\n              type: \"choose-side\",\n              action: \"choose-side\",\n              chosenSide: \"villagers\",\n            }),\n          }),\n        },\n      });\n      const gameHistoryRecordDecision = wrapper.findComponent<typeof GameOverHistoryRecordDecision>(\"#game-over-history-record-decision\");\n\n      expect(gameHistoryRecordDecision.exists()).toBeTruthy();\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWolfHound/GameLobbyOptionsHubRolesTabWolfHound.nuxt.spec.ts": {
      "tests": [
        {
          "id": "497",
          "name": "Game Lobby Options Hub Roles Tab Wolf Hound Component should match snapshot when rendered."
        },
        {
          "id": "498",
          "name": "Game Lobby Options Hub Roles Tab Wolf Hound Component Is Chosen Side Revealed option should translate option label when rendered."
        },
        {
          "id": "499",
          "name": "Game Lobby Options Hub Roles Tab Wolf Hound Component Is Chosen Side Revealed option should translate option description when the option is activated."
        },
        {
          "id": "500",
          "name": "Game Lobby Options Hub Roles Tab Wolf Hound Component Is Chosen Side Revealed option should translate option description when the option is deactivated."
        },
        {
          "id": "501",
          "name": "Game Lobby Options Hub Roles Tab Wolf Hound Component Is Chosen Side Revealed option should update the create game dto store when the option is changed by the affirmative toggle button."
        },
        {
          "id": "502",
          "name": "Game Lobby Options Hub Roles Tab Wolf Hound Component Is Side randomly chosen option should translate option label when rendered."
        },
        {
          "id": "503",
          "name": "Game Lobby Options Hub Roles Tab Wolf Hound Component Is Side randomly chosen option should translate option description when the option is activated."
        },
        {
          "id": "504",
          "name": "Game Lobby Options Hub Roles Tab Wolf Hound Component Is Side randomly chosen option should translate option description when the option is deactivated."
        },
        {
          "id": "505",
          "name": "Game Lobby Options Hub Roles Tab Wolf Hound Component Is Side randomly chosen option should update the create game dto store when the option is changed by the affirmative toggle button."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport GameLobbyOptionsHubRolesTabWolfHound from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWolfHound/GameLobbyOptionsHubRolesTabWolfHound.vue\";\nimport type AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport type GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGameDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Options Hub Roles Tab Wolf Hound Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabWolfHound>>;\n\n  async function mountGameLobbyOptionsHubRolesTabWolfHoundComponent(options: ComponentMountingOptions<typeof GameLobbyOptionsHubRolesTabWolfHound> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabWolfHound>>> {\n    return mountSuspendedComponent(GameLobbyOptionsHubRolesTabWolfHound, {\n      global: {\n        stubs: {\n          Fieldset: false,\n          GameOptionInputGroup: false,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyOptionsHubRolesTabWolfHoundComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Is Chosen Side Revealed option\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-wolf-hound-is-chosen-side-revealed-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"The Wolf-Hound's chosen side is revealed\");\n    });\n\n    it(\"should translate option description when the option is activated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.wolfHound.isChosenSideRevealed = true;\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-wolf-hound-is-chosen-side-revealed-input-group\");\n      const expectedDescription = \"components.GameLobbyOptionsHubRolesTabWolfHound.options.isChosenSideRevealed.descriptions.yes\";\n      await nextTick();\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(expectedDescription);\n    });\n\n    it(\"should translate option description when the option is deactivated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.wolfHound.isChosenSideRevealed = false;\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-wolf-hound-is-chosen-side-revealed-input-group\");\n      const expectedDescription = \"components.GameLobbyOptionsHubRolesTabWolfHound.options.isChosenSideRevealed.descriptions.no\";\n      await nextTick();\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(expectedDescription);\n    });\n\n    it(\"should update the create game dto store when the option is changed by the affirmative toggle button.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const affirmativeToggleButton = wrapper.findComponent<typeof AffirmativeToggleButton>(\"#game-lobby-options-hub-roles-tab-wolf-hound-is-chosen-side-revealed-input\");\n      (affirmativeToggleButton.vm as VueVm).$emit(\"update:modelValue\", true);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.wolfHound.isChosenSideRevealed = true;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n  });\n\n  describe(\"Is Side randomly chosen option\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-wolf-hound-is-side-randomly-chosen-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"The Wolf-Hound's side is randomly chosen\");\n    });\n\n    it(\"should translate option description when the option is activated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.wolfHound.isSideRandomlyChosen = true;\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-wolf-hound-is-side-randomly-chosen-input-group\");\n      const expectedDescription = \"components.GameLobbyOptionsHubRolesTabWolfHound.options.isSideRandomlyChosen.descriptions.yes\";\n      await nextTick();\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(expectedDescription);\n    });\n\n    it(\"should translate option description when the option is deactivated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.wolfHound.isSideRandomlyChosen = false;\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-wolf-hound-is-side-randomly-chosen-input-group\");\n      const expectedDescription = \"components.GameLobbyOptionsHubRolesTabWolfHound.options.isSideRandomlyChosen.descriptions.no\";\n      await nextTick();\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(expectedDescription);\n    });\n\n    it(\"should update the create game dto store when the option is changed by the affirmative toggle button.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const affirmativeToggleButton = wrapper.findComponent<typeof AffirmativeToggleButton>(\"#game-lobby-options-hub-roles-tab-wolf-hound-is-side-randomly-chosen-input\");\n      (affirmativeToggleButton.vm as VueVm).$emit(\"update:modelValue\", true);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.wolfHound.isSideRandomlyChosen = true;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyHeader/GameLobbyHeader.nuxt.spec.ts": {
      "tests": [
        {
          "id": "506",
          "name": "Game Lobby Header Component should match snapshot when rendered."
        },
        {
          "id": "507",
          "name": "Game Lobby Header Component Title should translate game lobby title when rendered."
        },
        {
          "id": "508",
          "name": "Game Lobby Header Component Game Lobby Player Input Form Game Lobby Player Input should pass empty input value when rendered."
        },
        {
          "id": "509",
          "name": "Game Lobby Header Component Game Lobby Player Input Form Game Lobby Player Input should update ref when input emits update event."
        },
        {
          "id": "510",
          "name": "Game Lobby Header Component Game Lobby Player Input Form Add Player Form should not empty input when game lobby player input ref is not set."
        },
        {
          "id": "511",
          "name": "Game Lobby Header Component Game Lobby Player Input Form Add Player Form should not empty input when add button is disabled."
        },
        {
          "id": "512",
          "name": "Game Lobby Header Component Game Lobby Player Input Form Add Player Form should not trim player input value when add button is disabled and form is submitted."
        },
        {
          "id": "513",
          "name": "Game Lobby Header Component Game Lobby Player Input Form Add Player Form should not add player when trimmed input is empty."
        },
        {
          "id": "514",
          "name": "Game Lobby Header Component Game Lobby Player Input Form Add Player Form should add player when form is valid and submitted."
        },
        {
          "id": "515",
          "name": "Game Lobby Header Component Game Lobby Player Input Form Add Player Form should empty player input when form is valid and submitted."
        },
        {
          "id": "516",
          "name": "Game Lobby Header Component Game Lobby Player Input Form Setup Buttons should emit 'gameOptionsButtonClick' event when options button is clicked."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport { expect } from \"vitest\";\nimport type { Ref } from \"vue\";\n\nimport GameLobbyHeader from \"~/components/pages/game-lobby/GameLobbyHeader/GameLobbyHeader.vue\";\nimport type GameLobbyHeaderSetupButtons from \"~/components/pages/game-lobby/GameLobbyHeader/GameLobbyHeaderSetupButtons/GameLobbyHeaderSetupButtons.vue\";\nimport type GameLobbyPlayerInput from \"~/components/pages/game-lobby/GameLobbyHeader/GameLobbyPlayerInput/GameLobbyPlayerInput.vue\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGamePlayerDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game-player/create-game-player.dto.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Header Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyHeader>>;\n\n  beforeEach(async() => {\n    wrapper = await mountSuspendedComponent(GameLobbyHeader);\n    const gameLobbyPlayerInput = wrapper.findComponent<typeof GameLobbyPlayerInput>(\"#game-lobby-player-input\");\n    (gameLobbyPlayerInput.vm as unknown as typeof GameLobbyPlayerInput).isAddButtonDisabled = false;\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Title\", () => {\n    it(\"should translate game lobby title when rendered.\", () => {\n      const title = wrapper.find<HTMLHeadElement>(\"#game-lobby-header-title\");\n\n      expect(title.text()).toBe(\"Game Lobby\");\n    });\n  });\n\n  describe(\"Game Lobby Player Input Form\", () => {\n    describe(\"Game Lobby Player Input\", () => {\n      it(\"should pass empty input value when rendered.\", () => {\n        const gameLobbyPlayerInput = wrapper.findComponent<typeof GameLobbyPlayerInput>(\"#game-lobby-player-input\");\n\n        expect(gameLobbyPlayerInput.props(\"modelValue\")).toBe(\"\");\n      });\n\n      it(\"should update ref when input emits update event.\", async() => {\n        const gameLobbyPlayerInput = wrapper.findComponent<typeof GameLobbyPlayerInput>(\"#game-lobby-player-input\");\n        (gameLobbyPlayerInput.vm as VueVm).$emit(\"update:modelValue\", \"Player 1\");\n        await nextTick();\n\n        expect(gameLobbyPlayerInput.props(\"modelValue\")).toBe(\"Player 1\");\n      });\n    });\n\n    describe(\"Add Player Form\", () => {\n      it(\"should not empty input when game lobby player input ref is not set.\", async() => {\n        const gameLobbyPlayerInput = wrapper.findComponent<typeof GameLobbyPlayerInput>(\"#game-lobby-player-input\");\n        (gameLobbyPlayerInput.vm as VueVm).$emit(\"update:modelValue\", \"Player 1\");\n        (wrapper.vm.$root?.$refs.VTU_COMPONENT as { gameLobbyPlayerInput: Ref }).gameLobbyPlayerInput.value = null;\n        const form = wrapper.find<HTMLFormElement>(\"#game-lobby-header-form\");\n        await form.trigger(\"submit\");\n\n        expect(createError).toHaveBeenCalledExactlyOnceWith(\"Game Lobby Player Input is not initialized\");\n      });\n\n      it(\"should not empty input when add button is disabled.\", async() => {\n        const gameLobbyPlayerInput = wrapper.findComponent<typeof GameLobbyPlayerInput>(\"#game-lobby-player-input\");\n        (gameLobbyPlayerInput.vm as VueVm).$emit(\"update:modelValue\", \"Player 1\");\n        (gameLobbyPlayerInput.vm as unknown as typeof GameLobbyPlayerInput).isAddButtonDisabled = true;\n        const form = wrapper.find<HTMLFormElement>(\"#game-lobby-header-form\");\n        await form.trigger(\"submit\");\n\n        expect(gameLobbyPlayerInput.props(\"modelValue\")).toBe(\"Player 1\");\n      });\n\n      it(\"should not trim player input value when add button is disabled and form is submitted.\", async() => {\n        const gameLobbyPlayerInput = wrapper.findComponent<typeof GameLobbyPlayerInput>(\"#game-lobby-player-input\");\n        (gameLobbyPlayerInput.vm as VueVm).$emit(\"update:modelValue\", \"Player 1  \");\n        (gameLobbyPlayerInput.vm as unknown as typeof GameLobbyPlayerInput).isAddButtonDisabled = true;\n        const form = wrapper.find<HTMLFormElement>(\"#game-lobby-header-form\");\n        await form.trigger(\"submit\");\n\n        expect(gameLobbyPlayerInput.props(\"modelValue\")).toBe(\"Player 1  \");\n      });\n\n      it(\"should not add player when trimmed input is empty.\", async() => {\n        const gameLobbyPlayerInput = wrapper.findComponent<typeof GameLobbyPlayerInput>(\"#game-lobby-player-input\");\n        (gameLobbyPlayerInput.vm as VueVm).$emit(\"update:modelValue\", \"   \");\n        const form = wrapper.find<HTMLFormElement>(\"#game-lobby-header-form\");\n        await form.trigger(\"submit\");\n        const createGameDtoStore = useCreateGameDtoStore();\n\n        expect(createGameDtoStore.addPlayerToCreateGameDto).not.toHaveBeenCalled();\n      });\n\n      it(\"should add player when form is valid and submitted.\", async() => {\n        const gameLobbyPlayerInput = wrapper.findComponent<typeof GameLobbyPlayerInput>(\"#game-lobby-player-input\");\n        (gameLobbyPlayerInput.vm as VueVm).$emit(\"update:modelValue\", \"Player 1\");\n        const form = wrapper.find<HTMLFormElement>(\"#game-lobby-header-form\");\n        await form.trigger(\"submit\");\n        const createGameDtoStore = useCreateGameDtoStore();\n        const expectedCreatedPlayer = createFakeCreateGamePlayerDto({\n          name: \"Player 1\",\n          role: { name: undefined },\n        });\n\n        expect(createGameDtoStore.addPlayerToCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreatedPlayer);\n      });\n\n      it(\"should empty player input when form is valid and submitted.\", async() => {\n        const gameLobbyPlayerInput = wrapper.findComponent<typeof GameLobbyPlayerInput>(\"#game-lobby-player-input\");\n        (gameLobbyPlayerInput.vm as VueVm).$emit(\"update:modelValue\", \"Player 1\");\n        const form = wrapper.find<HTMLFormElement>(\"#game-lobby-header-form\");\n        await form.trigger(\"submit\");\n\n        expect(gameLobbyPlayerInput.props(\"modelValue\")).toBe(\"\");\n      });\n    });\n\n    describe(\"Setup Buttons\", () => {\n      it(\"should emit 'gameOptionsButtonClick' event when options button is clicked.\", () => {\n        const setupButtons = wrapper.findComponent<typeof GameLobbyHeaderSetupButtons>(\"#game-lobby-header-setup-buttons\");\n        (setupButtons.vm as VueVm).$emit(\"gameOptionsButtonClick\");\n\n        expect(wrapper.emitted(\"gameOptionsButtonClick\")).toBeTruthy();\n      });\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabGeneral/GameLobbyOptionsHubRolesTabGeneral.nuxt.spec.ts": {
      "tests": [
        {
          "id": "517",
          "name": "Game Lobby Options Hub Roles Tab General Component should match snapshot when rendered."
        },
        {
          "id": "518",
          "name": "Game Lobby Options Hub Roles Tab General Component Legend should translate legend when rendered."
        },
        {
          "id": "519",
          "name": "Game Lobby Options Hub Roles Tab General Component Do Skip call if no target option should translate option label when rendered."
        },
        {
          "id": "520",
          "name": "Game Lobby Options Hub Roles Tab General Component Do Skip call if no target option should translate option description when the option is activated."
        },
        {
          "id": "521",
          "name": "Game Lobby Options Hub Roles Tab General Component Do Skip call if no target option should translate option description when the option is deactivated."
        },
        {
          "id": "522",
          "name": "Game Lobby Options Hub Roles Tab General Component Do Skip call if no target option should update the create game dto store when the option is toggled."
        },
        {
          "id": "523",
          "name": "Game Lobby Options Hub Roles Tab General Component Are revealed on death option should translate option label when rendered."
        },
        {
          "id": "524",
          "name": "Game Lobby Options Hub Roles Tab General Component Are revealed on death option should translate option description when the option is activated."
        },
        {
          "id": "525",
          "name": "Game Lobby Options Hub Roles Tab General Component Are revealed on death option should translate option description when the option is deactivated."
        },
        {
          "id": "526",
          "name": "Game Lobby Options Hub Roles Tab General Component Are revealed on death option should update create game dto store when the option is toggled."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport GameLobbyOptionsHubRolesTabGeneral from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabGeneral/GameLobbyOptionsHubRolesTabGeneral.vue\";\nimport type AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport type GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGameDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Options Hub Roles Tab General Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabGeneral>>;\n\n  async function mountGameLobbyOptionsHubRolesTabGeneralComponent(options: ComponentMountingOptions<typeof GameLobbyOptionsHubRolesTabGeneral> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabGeneral>>> {\n    return mountSuspendedComponent(GameLobbyOptionsHubRolesTabGeneral, {\n      global: {\n        stubs: {\n          Fieldset: false,\n          GameOptionInputGroup: false,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyOptionsHubRolesTabGeneralComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Legend\", () => {\n    it(\"should translate legend when rendered.\", () => {\n      const legendTitle = wrapper.find<HTMLHeadingElement>(\"#game-lobby-options-hub-roles-tab-general-title\");\n\n      expect(legendTitle.text()).toBe(\"General\");\n    });\n  });\n\n  describe(\"Do Skip call if no target option\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-general-do-skip-call-if-no-target-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"Skip the call if no target\");\n    });\n\n    it(\"should translate option description when the option is activated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.doSkipCallIfNoTarget = true;\n      await nextTick();\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-general-do-skip-call-if-no-target-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabGeneral.options.doSkipCallIfNoTarget.descriptions.yes\");\n    });\n\n    it(\"should translate option description when the option is deactivated.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-general-do-skip-call-if-no-target-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabGeneral.options.doSkipCallIfNoTarget.descriptions.no\");\n    });\n\n    it(\"should update the create game dto store when the option is toggled.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const toggleButton = wrapper.findComponent<typeof AffirmativeToggleButton>(\"#game-lobby-options-hub-roles-tab-general-do-skip-call-if-no-target-input\");\n      (toggleButton.vm as VueVm).$emit(\"update:modelValue\", true);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.doSkipCallIfNoTarget = true;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n  });\n\n  describe(\"Are revealed on death option\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-general-are-revealed-on-death-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"Revealed on death\");\n    });\n\n    it(\"should translate option description when the option is activated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.areRevealedOnDeath = true;\n      await nextTick();\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-general-are-revealed-on-death-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabGeneral.options.areRevealedOnDeath.descriptions.yes\");\n    });\n\n    it(\"should translate option description when the option is deactivated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.areRevealedOnDeath = false;\n      await nextTick();\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-general-are-revealed-on-death-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabGeneral.options.areRevealedOnDeath.descriptions.no\");\n    });\n\n    it(\"should update create game dto store when the option is toggled.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const toggleButton = wrapper.findComponent<typeof AffirmativeToggleButton>(\"#game-lobby-options-hub-roles-tab-general-are-revealed-on-death-input\");\n      (toggleButton.vm as VueVm).$emit(\"update:modelValue\", false);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.areRevealedOnDeath = false;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabThief/GameLobbyOptionsHubRolesTabThief.nuxt.spec.ts": {
      "tests": [
        {
          "id": "527",
          "name": "Game Lobby Options Hub Roles Tab Thief Component should match snapshot when rendered."
        },
        {
          "id": "528",
          "name": "Game Lobby Options Hub Roles Tab Thief Component Must choose between Werewolves option should translate option label when rendered."
        },
        {
          "id": "529",
          "name": "Game Lobby Options Hub Roles Tab Thief Component Must choose between Werewolves option should translate option description when the option is activated."
        },
        {
          "id": "530",
          "name": "Game Lobby Options Hub Roles Tab Thief Component Must choose between Werewolves option should translate option description when the option is deactivated."
        },
        {
          "id": "531",
          "name": "Game Lobby Options Hub Roles Tab Thief Component Must choose between Werewolves option should update the create game dto store when the option is toggled."
        },
        {
          "id": "532",
          "name": "Game Lobby Options Hub Roles Tab Thief Component Is Chosen Card revealed should translate option label when rendered."
        },
        {
          "id": "533",
          "name": "Game Lobby Options Hub Roles Tab Thief Component Is Chosen Card revealed should translate option description when the option is activated."
        },
        {
          "id": "534",
          "name": "Game Lobby Options Hub Roles Tab Thief Component Is Chosen Card revealed should translate option description when the option is deactivated."
        },
        {
          "id": "535",
          "name": "Game Lobby Options Hub Roles Tab Thief Component Is Chosen Card revealed should update the create game dto store when the option is toggled."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport GameLobbyOptionsHubRolesTabThief from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabThief/GameLobbyOptionsHubRolesTabThief.vue\";\nimport type AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport type GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGameDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Options Hub Roles Tab Thief Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabThief>>;\n\n  async function mountGameLobbyOptionsHubRolesTabThiefComponent(options: ComponentMountingOptions<typeof GameLobbyOptionsHubRolesTabThief> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabThief>>> {\n    return mountSuspendedComponent(GameLobbyOptionsHubRolesTabThief, {\n      global: {\n        stubs: {\n          Fieldset: false,\n          GameOptionInputGroup: false,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyOptionsHubRolesTabThiefComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Must choose between Werewolves option\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-thief-must-choose-between-werewolves-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"The Thief must choose between only Werewolves\");\n    });\n\n    it(\"should translate option description when the option is activated.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-thief-must-choose-between-werewolves-input-group\");\n      const expectedDescription = \"components.GameLobbyOptionsHubRolesTabThief.options.mustChooseBetweenWerewolves.descriptions.yes\";\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(expectedDescription);\n    });\n\n    it(\"should translate option description when the option is deactivated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.thief.mustChooseBetweenWerewolves = false;\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-thief-must-choose-between-werewolves-input-group\");\n      const expectedDescription = \"components.GameLobbyOptionsHubRolesTabThief.options.mustChooseBetweenWerewolves.descriptions.no\";\n      await nextTick();\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(expectedDescription);\n    });\n\n    it(\"should update the create game dto store when the option is toggled.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const toggleButton = wrapper.findComponent<typeof AffirmativeToggleButton>(\"#game-lobby-options-hub-roles-tab-thief-must-choose-between-werewolves-input\");\n      (toggleButton.vm as VueVm).$emit(\"update:modelValue\", false);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.thief.mustChooseBetweenWerewolves = false;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n  });\n\n  describe(\"Is Chosen Card revealed\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-thief-is-chosen-card-revealed-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"The chosen card is revealed\");\n    });\n\n    it(\"should translate option description when the option is activated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.thief.isChosenCardRevealed = true;\n      await nextTick();\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-thief-is-chosen-card-revealed-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabThief.options.isChosenCardRevealed.descriptions.yes\");\n    });\n\n    it(\"should translate option description when the option is deactivated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.thief.isChosenCardRevealed = false;\n      await nextTick();\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-thief-is-chosen-card-revealed-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabThief.options.isChosenCardRevealed.descriptions.no\");\n    });\n\n    it(\"should update the create game dto store when the option is toggled.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const toggleButton = wrapper.findComponent<typeof AffirmativeToggleButton>(\"#game-lobby-options-hub-roles-tab-thief-is-chosen-card-revealed-input\");\n      (toggleButton.vm as VueVm).$emit(\"update:modelValue\", false);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.thief.isChosenCardRevealed = false;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionBuriedPlayers/GameOverHistoryRecordDecisionBuriedPlayer/GameOverHistoryRecordDecisionBuriedPlayer.nuxt.spec.ts": {
      "tests": [
        {
          "id": "536",
          "name": "Game Over History Record Decision Buried Player Component should match snapshot when rendered."
        },
        {
          "id": "537",
          "name": "Game Over History Record Decision Buried Player Component Player Card should render Player Card with the buried player name and role when rendered."
        },
        {
          "id": "538",
          "name": "Game Over History Record Decision Buried Player Component Devoted Servant Tag should render Devoted Servant Tag when the target is the buried player."
        },
        {
          "id": "539",
          "name": "Game Over History Record Decision Buried Player Component Devoted Servant Tag should not render Devoted Servant Tag when there is no targets."
        },
        {
          "id": "540",
          "name": "Game Over History Record Decision Buried Player Component Devoted Servant Tag should not render Devoted Servant Tag when the target is not the buried player."
        },
        {
          "id": "541",
          "name": "Game Over History Record Decision Buried Player Component Devoted Servant Tag Devoted Servant Tag Content should render the tag icon when rendered."
        },
        {
          "id": "542",
          "name": "Game Over History Record Decision Buried Player Component Devoted Servant Tag Devoted Servant Tag Content should render the tag text when rendered."
        }
      ],
      "source": "import type { NuxtImg } from \"#components\";\nimport type { VuePrimeTag } from \"#components\";\nimport type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport type { GameOverHistoryRecordDecisionBuriedPlayerProps } from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionBuriedPlayers/GameOverHistoryRecordDecisionBuriedPlayer/game-over-history-record-decision-buried-player.types\";\nimport GameOverHistoryRecordDecisionBuriedPlayer from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionBuriedPlayers/GameOverHistoryRecordDecisionBuriedPlayer/GameOverHistoryRecordDecisionBuriedPlayer.vue\";\nimport type PlayerCard from \"~/components/shared/game/player/PlayerCard/PlayerCard.vue\";\nimport { createFakeGameHistoryRecordPlayTarget } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-target/game-history-record-play-target.factory\";\nimport { createFakeGameHistoryRecordPlay } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play.factory\";\nimport { createFakeGameHistoryRecord } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record.factory\";\nimport { createFakeActorAlivePlayer } from \"~/tests/unit/utils/factories/composables/api/game/player/player-with-role.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Over History Record Decision Buried Player Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameOverHistoryRecordDecisionBuriedPlayer>>;\n  const defaultBuriedPlayer = createFakeActorAlivePlayer({ name: \"Antoine\" });\n  const defaultGameHistoryRecord = createFakeGameHistoryRecord({ play: createFakeGameHistoryRecordPlay() });\n  const defaultProps: GameOverHistoryRecordDecisionBuriedPlayerProps = {\n    buriedPlayer: defaultBuriedPlayer,\n    gameHistoryRecord: defaultGameHistoryRecord,\n  };\n\n  async function mountGameOverHistoryRecordDecisionBuriedPlayerComponent(options: ComponentMountingOptions<typeof GameOverHistoryRecordDecisionBuriedPlayer> = {}):\n  Promise<ReturnType<typeof mount<typeof GameOverHistoryRecordDecisionBuriedPlayer>>> {\n    return mountSuspendedComponent(GameOverHistoryRecordDecisionBuriedPlayer, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameOverHistoryRecordDecisionBuriedPlayerComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Player Card\", () => {\n    it(\"should render Player Card with the buried player name and role when rendered.\", () => {\n      const playerCard = wrapper.findComponent<typeof PlayerCard>(\".game-over-history-record-decision-buried-player-card\");\n\n      expect(playerCard.props(\"playerName\")).toBe(defaultBuriedPlayer.name);\n      expect(playerCard.props(\"playerRole\")).toBe(defaultBuriedPlayer.role.current);\n    });\n  });\n\n  describe(\"Devoted Servant Tag\", () => {\n    it(\"should render Devoted Servant Tag when the target is the buried player.\", async() => {\n      wrapper = await mountGameOverHistoryRecordDecisionBuriedPlayerComponent({\n        props: {\n          buriedPlayer: defaultBuriedPlayer,\n          gameHistoryRecord: createFakeGameHistoryRecord({\n            play: createFakeGameHistoryRecordPlay({\n              type: \"bury-dead-bodies\",\n              action: \"bury-dead-bodies\",\n              targets: [createFakeGameHistoryRecordPlayTarget({ player: defaultBuriedPlayer })],\n            }),\n          }),\n        },\n      });\n      const devotedServantTag = wrapper.findComponent<typeof VuePrimeTag>(\"#devoted-servant-stolen-role-tag\");\n\n      expect(devotedServantTag.exists()).toBeTruthy();\n    });\n\n    it(\"should not render Devoted Servant Tag when there is no targets.\", () => {\n      const devotedServantTag = wrapper.findComponent<typeof VuePrimeTag>(\"#devoted-servant-stolen-role-tag\");\n\n      expect(devotedServantTag.exists()).toBeFalsy();\n    });\n\n    it(\"should not render Devoted Servant Tag when the target is not the buried player.\", async() => {\n      wrapper = await mountGameOverHistoryRecordDecisionBuriedPlayerComponent({\n        props: {\n          buriedPlayer: defaultBuriedPlayer,\n          gameHistoryRecord: createFakeGameHistoryRecord({\n            play: createFakeGameHistoryRecordPlay({\n              type: \"bury-dead-bodies\",\n              action: \"bury-dead-bodies\",\n              targets: [createFakeGameHistoryRecordPlayTarget({ player: createFakeActorAlivePlayer({ name: \"Vanessa\" }) })],\n            }),\n          }),\n        },\n      });\n      const devotedServantTag = wrapper.findComponent<typeof VuePrimeTag>(\"#devoted-servant-stolen-role-tag\");\n\n      expect(devotedServantTag.exists()).toBeFalsy();\n    });\n\n    describe(\"Devoted Servant Tag Content\", () => {\n      beforeEach(async() => {\n        wrapper = await mountGameOverHistoryRecordDecisionBuriedPlayerComponent({\n          global: { stubs: { Tag: false } },\n          props: {\n            buriedPlayer: defaultBuriedPlayer,\n            gameHistoryRecord: createFakeGameHistoryRecord({\n              play: createFakeGameHistoryRecordPlay({\n                type: \"bury-dead-bodies\",\n                action: \"bury-dead-bodies\",\n                targets: [createFakeGameHistoryRecordPlayTarget({ player: defaultBuriedPlayer })],\n              }),\n            }),\n          },\n        });\n      });\n\n      it(\"should render the tag icon when rendered.\", () => {\n        const tagIcon = wrapper.findComponent<typeof NuxtImg>(\"[alt='Stolen role by the Devoted Servant icon']\");\n\n        expect(tagIcon.attributes(\"src\")).toBe(\"/svg/game/player/player-attribute/stolen-role.svg\");\n      });\n\n      it(\"should render the tag text when rendered.\", () => {\n        const tagText = wrapper.find<HTMLSpanElement>(\"#devoted-servant-stolen-role-tag-text\");\n\n        expect(tagText.text()).toBe(\"Stolen role by the Devoted Servant\");\n      });\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameBuryDeadBodiesPlayground/GameDevotedServantStealsRolePlayground/GameDevotedServantStealsRolePlayground.nuxt.spec.ts": {
      "tests": [
        {
          "id": "543",
          "name": "Game Devoted Servant Steals Role Playground Component should match snapshot when rendered."
        },
        {
          "id": "544",
          "name": "Game Devoted Servant Steals Role Playground Component Devoted Servant steals role question should translate devoted servant steals role question when there are multiple players defined."
        },
        {
          "id": "545",
          "name": "Game Devoted Servant Steals Role Playground Component Devoted Servant steals role question should translate devoted servant steals role question when there is only one player defined."
        },
        {
          "id": "546",
          "name": "Game Devoted Servant Steals Role Playground Component Devoted Servant steals role question should translate devoted servant steals role question as singular when there is no interaction."
        },
        {
          "id": "547",
          "name": "Game Devoted Servant Steals Role Playground Component Devoted Servant steals role question should translate devoted servant steals role question as singular when there is no eliminated players."
        },
        {
          "id": "548",
          "name": "Game Devoted Servant Steals Role Playground Component Targets should render targets when there are multiple eligible targets for devoted servant."
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport { expect } from \"vitest\";\n\nimport GameDevotedServantStealsRolePlayground from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameBuryDeadBodiesPlayground/GameDevotedServantStealsRolePlayground/GameDevotedServantStealsRolePlayground.vue\";\nimport type GamePlaygroundPlayerCard from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.vue\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\nimport { createFakeGamePlaySourceInteraction } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction.factory\";\nimport { createFakeGamePlaySource } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source.factory\";\nimport { createFakeGamePlaySurvivorsBuryDeadBodies } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play.factory\";\nimport { createFakeGame } from \"~/tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { createFakeSeerAlivePlayer } from \"~/tests/unit/utils/factories/composables/api/game/player/player-with-role.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Devoted Servant Steals Role Playground Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameDevotedServantStealsRolePlayground>>;\n  const eligibleTargets = [\n    createFakeSeerAlivePlayer({ name: \"Antoine\" }),\n    createFakeSeerAlivePlayer({ name: \"Florian\" }),\n  ];\n  const testingPinia = {\n    initialState: {\n      [StoreIds.GAME]: {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlaySurvivorsBuryDeadBodies({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  source: \"devoted-servant\",\n                  type: \"steal-role\",\n                  eligibleTargets,\n                }),\n              ],\n            }),\n          }),\n        }),\n      },\n    },\n  };\n\n  async function mountGameDevotedServantStealsRolePlaygroundComponent(options: ComponentMountingOptions<typeof GameDevotedServantStealsRolePlayground> = {}):\n  Promise<ReturnType<typeof mount<typeof GameDevotedServantStealsRolePlayground>>> {\n    return mountSuspendedComponent(GameDevotedServantStealsRolePlayground, {\n      global: { plugins: [createTestingPinia(testingPinia)] },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameDevotedServantStealsRolePlaygroundComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Devoted Servant steals role question\", () => {\n    it(\"should translate devoted servant steals role question when there are multiple players defined.\", () => {\n      const devotedServantStealsRoleQuestion = wrapper.find<HTMLHeadingElement>(\"#devoted-servant-steals-role-question\");\n\n      expect(devotedServantStealsRoleQuestion.text()).toBe(\"components.GameDevotedServantStealsRolePlayground.doesDevotedServantStealRole, 2\");\n    });\n\n    it(\"should translate devoted servant steals role question when there is only one player defined.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlaySurvivorsBuryDeadBodies({\n        source: createFakeGamePlaySource({\n          interactions: [\n            createFakeGamePlaySourceInteraction({\n              source: \"devoted-servant\",\n              type: \"steal-role\",\n              eligibleTargets: [eligibleTargets[0]],\n            }),\n          ],\n        }),\n      });\n      const devotedServantStealsRoleQuestion = wrapper.find<HTMLHeadingElement>(\"#devoted-servant-steals-role-question\");\n      await nextTick();\n\n      expect(devotedServantStealsRoleQuestion.text()).toBe(\"components.GameDevotedServantStealsRolePlayground.doesDevotedServantStealRole, 1\");\n    });\n\n    it(\"should translate devoted servant steals role question as singular when there is no interaction.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlaySurvivorsBuryDeadBodies({ source: createFakeGamePlaySource({ interactions: [] }) });\n      const devotedServantStealsRoleQuestion = wrapper.find<HTMLHeadingElement>(\"#devoted-servant-steals-role-question\");\n      await nextTick();\n\n      expect(devotedServantStealsRoleQuestion.text()).toBe(\"components.GameDevotedServantStealsRolePlayground.doesDevotedServantStealRole, 0\");\n    });\n\n    it(\"should translate devoted servant steals role question as singular when there is no eliminated players.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlaySurvivorsBuryDeadBodies({\n        source: createFakeGamePlaySource({\n          interactions: [\n            createFakeGamePlaySourceInteraction({\n              source: \"devoted-servant\",\n              type: \"steal-role\",\n              eligibleTargets: [],\n            }),\n          ],\n        }),\n      });\n      const devotedServantStealsRoleQuestion = wrapper.find<HTMLHeadingElement>(\"#devoted-servant-steals-role-question\");\n      await nextTick();\n\n      expect(devotedServantStealsRoleQuestion.text()).toBe(\"components.GameDevotedServantStealsRolePlayground.doesDevotedServantStealRole, 0\");\n    });\n  });\n\n  describe(\"Targets\", () => {\n    it(\"should render targets when there are multiple eligible targets for devoted servant.\", () => {\n      const targets = wrapper.findAllComponents<typeof GamePlaygroundPlayerCard>(\".target\");\n\n      expect(targets).toHaveLength(2);\n      expect(targets[0].props(\"player\")).toStrictEqual<Player>(eligibleTargets[0]);\n      expect(targets[1].props(\"player\")).toStrictEqual<Player>(eligibleTargets[1]);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionNominatedPlayers/GameOverHistoryRecordDecisionNominatedPlayers.nuxt.spec.ts": {
      "tests": [
        {
          "id": "549",
          "name": "Game Over History Record Decision Nominated Players Component should match snapshot when rendered."
        },
        {
          "id": "550",
          "name": "Game Over History Record Decision Nominated Players Component Nominated Players should render the truncated nominated players when there are more than 3 nominated players."
        },
        {
          "id": "551",
          "name": "Game Over History Record Decision Nominated Players Component Nominated Players should render the full nominated players when there are less than 3 nominated players."
        },
        {
          "id": "552",
          "name": "Game Over History Record Decision Nominated Players Component Nominated Players should not render the nominated players when there are no voting results."
        },
        {
          "id": "553",
          "name": "Game Over History Record Decision Nominated Players Component Nominated Players should not render the nominated players when there are no nominated players."
        },
        {
          "id": "554",
          "name": "Game Over History Record Decision Nominated Players Component Overflow Tag should render Overflow Tag when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport type { GameOverHistoryRecordDecisionNominatedPlayersProps } from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionNominatedPlayers/game-over-history-record-decision-nominated-players.types\";\nimport GameOverHistoryRecordDecisionNominatedPlayers from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionNominatedPlayers/GameOverHistoryRecordDecisionNominatedPlayers.vue\";\nimport type PlayerCard from \"~/components/shared/game/player/PlayerCard/PlayerCard.vue\";\nimport type OverflowTag from \"~/components/shared/misc/OverflowTag/OverflowTag.vue\";\nimport { createFakeGameHistoryRecordPlayVoting } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-voting/game-history-record-play-voting.factory\";\nimport { createFakeGameHistoryRecordPlay } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play.factory\";\nimport { createFakeGameHistoryRecord } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record.factory\";\nimport { createFakeActorAlivePlayer } from \"~/tests/unit/utils/factories/composables/api/game/player/player-with-role.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Over History Record Decision Nominated Players Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameOverHistoryRecordDecisionNominatedPlayers>>;\n  const defaultNominatedPlayers = [\n    createFakeActorAlivePlayer({ name: \"Antoine\" }),\n    createFakeActorAlivePlayer({ name: \"Vanessa\" }),\n    createFakeActorAlivePlayer({ name: \"Thomas\" }),\n    createFakeActorAlivePlayer({ name: \"Doudou\" }),\n  ];\n  const defaultGameHistoryRecord = createFakeGameHistoryRecord({\n    play: createFakeGameHistoryRecordPlay({\n      type: \"vote\",\n      action: \"vote\",\n      voting: createFakeGameHistoryRecordPlayVoting({\n        nominatedPlayers: defaultNominatedPlayers,\n        result: \"death\",\n      }),\n    }),\n  });\n  const defaultProps: GameOverHistoryRecordDecisionNominatedPlayersProps = { gameHistoryRecord: defaultGameHistoryRecord };\n\n  async function mountGameOverHistoryRecordDecisionNominatedPlayersComponent(options: ComponentMountingOptions<typeof GameOverHistoryRecordDecisionNominatedPlayers> = {}):\n  Promise<ReturnType<typeof mount<typeof GameOverHistoryRecordDecisionNominatedPlayers>>> {\n    return mountSuspendedComponent(GameOverHistoryRecordDecisionNominatedPlayers, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameOverHistoryRecordDecisionNominatedPlayersComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Nominated Players\", () => {\n    it(\"should render the truncated nominated players when there are more than 3 nominated players.\", () => {\n      const nominatedPlayers = wrapper.findAllComponents<typeof PlayerCard>(\".game-over-history-record-decision-nominated-player-card\");\n\n      expect(nominatedPlayers).toHaveLength(3);\n      expect(nominatedPlayers[0].props(\"playerName\")).toBe(\"Antoine\");\n      expect(nominatedPlayers[1].props(\"playerName\")).toBe(\"Vanessa\");\n      expect(nominatedPlayers[2].props(\"playerName\")).toBe(\"Thomas\");\n    });\n\n    it(\"should render the full nominated players when there are less than 3 nominated players.\", async() => {\n      const gameHistoryRecord = createFakeGameHistoryRecord({\n        play: createFakeGameHistoryRecordPlay({\n          type: \"vote\",\n          action: \"vote\",\n          voting: createFakeGameHistoryRecordPlayVoting({\n            nominatedPlayers: [createFakeActorAlivePlayer({ name: \"Antoine\" })],\n            result: \"death\",\n          }),\n        }),\n      });\n      wrapper = await mountGameOverHistoryRecordDecisionNominatedPlayersComponent({ props: { gameHistoryRecord } });\n      const nominatedPlayers = wrapper.findAllComponents<typeof PlayerCard>(\".game-over-history-record-decision-nominated-player-card\");\n\n      expect(nominatedPlayers).toHaveLength(1);\n      expect(nominatedPlayers[0].props(\"playerName\")).toBe(\"Antoine\");\n    });\n\n    it(\"should not render the nominated players when there are no voting results.\", async() => {\n      const gameHistoryRecord = createFakeGameHistoryRecord({ play: createFakeGameHistoryRecordPlay() });\n      wrapper = await mountGameOverHistoryRecordDecisionNominatedPlayersComponent({ props: { gameHistoryRecord } });\n      const nominatedPlayers = wrapper.findAllComponents<typeof PlayerCard>(\".game-over-history-record-decision-nominated-player-card\");\n\n      expect(wrapper).toBeTruthy();\n      expect(nominatedPlayers).toHaveLength(0);\n    });\n\n    it(\"should not render the nominated players when there are no nominated players.\", async() => {\n      const gameHistoryRecord = createFakeGameHistoryRecord({\n        play: createFakeGameHistoryRecordPlay({\n          type: \"vote\",\n          action: \"vote\",\n          voting: createFakeGameHistoryRecordPlayVoting({ result: \"death\" }),\n        }),\n      });\n      wrapper = await mountGameOverHistoryRecordDecisionNominatedPlayersComponent({ props: { gameHistoryRecord } });\n      const nominatedPlayers = wrapper.findAllComponents<typeof PlayerCard>(\".game-over-history-record-decision-nominated-player-card\");\n\n      expect(nominatedPlayers).toHaveLength(0);\n    });\n  });\n\n  describe(\"Overflow Tag\", () => {\n    it(\"should render Overflow Tag when rendered.\", () => {\n      const overflowTag = wrapper.findComponent<typeof OverflowTag>(\"#nominated-players-overflow-tag\");\n\n      expect(overflowTag.props(\"entitiesCount\")).toBe(4);\n      expect(overflowTag.props(\"maximumEntitiesDisplayed\")).toBe(3);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabCupid/GameLobbyOptionsHubRolesTabCupid.nuxt.spec.ts": {
      "tests": [
        {
          "id": "555",
          "name": "Game Lobby Options Hub Roles Tab Cupid Component should match snapshot when rendered."
        },
        {
          "id": "556",
          "name": "Game Lobby Options Hub Roles Tab Cupid Component Cupid must win with Lovers option should translate option label when rendered."
        },
        {
          "id": "557",
          "name": "Game Lobby Options Hub Roles Tab Cupid Component Cupid must win with Lovers option should translate option description when the option is activated."
        },
        {
          "id": "558",
          "name": "Game Lobby Options Hub Roles Tab Cupid Component Cupid must win with Lovers option should translate option description when the option is deactivated."
        },
        {
          "id": "559",
          "name": "Game Lobby Options Hub Roles Tab Cupid Component Cupid must win with Lovers option should update the create game dto store when the option is toggled."
        },
        {
          "id": "560",
          "name": "Game Lobby Options Hub Roles Tab Cupid Component Do Lovers reveal role to each other option should translate option label when rendered."
        },
        {
          "id": "561",
          "name": "Game Lobby Options Hub Roles Tab Cupid Component Do Lovers reveal role to each other option should translate option description when the option is activated."
        },
        {
          "id": "562",
          "name": "Game Lobby Options Hub Roles Tab Cupid Component Do Lovers reveal role to each other option should translate option description when the option is deactivated."
        },
        {
          "id": "563",
          "name": "Game Lobby Options Hub Roles Tab Cupid Component Do Lovers reveal role to each other option should update the create game dto store when the option is toggled."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport GameLobbyOptionsHubRolesTabCupid from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabCupid/GameLobbyOptionsHubRolesTabCupid.vue\";\nimport type AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport type GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGameDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Options Hub Roles Tab Cupid Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabCupid>>;\n\n  async function mountGameLobbyOptionsHubRolesTabCupidComponent(options: ComponentMountingOptions<typeof GameLobbyOptionsHubRolesTabCupid> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabCupid>>> {\n    return mountSuspendedComponent(GameLobbyOptionsHubRolesTabCupid, {\n      global: {\n        stubs: {\n          Fieldset: false,\n          GameOptionInputGroup: false,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyOptionsHubRolesTabCupidComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Cupid must win with Lovers option\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-cupid-must-win-with-lovers-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"Cupid must win with the Lovers\");\n    });\n\n    it(\"should translate option description when the option is activated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.cupid.mustWinWithLovers = true;\n      await nextTick();\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-cupid-must-win-with-lovers-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabCupid.options.mustWinWithLovers.descriptions.yes\");\n    });\n\n    it(\"should translate option description when the option is deactivated.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-cupid-must-win-with-lovers-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabCupid.options.mustWinWithLovers.descriptions.no\");\n    });\n\n    it(\"should update the create game dto store when the option is toggled.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const toggleButton = wrapper.findComponent<typeof AffirmativeToggleButton>(\"#game-lobby-options-hub-roles-tab-cupid-must-win-with-lovers-input\");\n      (toggleButton.vm as VueVm).$emit(\"update:modelValue\", true);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.cupid.mustWinWithLovers = true;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n  });\n\n  describe(\"Do Lovers reveal role to each other option\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-cupid-do-lovers-reveal-role-to-each-other-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"The Lovers reveal their role to each other\");\n    });\n\n    it(\"should translate option description when the option is activated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.cupid.lovers.doRevealRoleToEachOther = true;\n      await nextTick();\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-cupid-do-lovers-reveal-role-to-each-other-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabCupid.options.lovers.doRevealRoleToEachOther.descriptions.yes\");\n    });\n\n    it(\"should translate option description when the option is deactivated.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-cupid-do-lovers-reveal-role-to-each-other-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabCupid.options.lovers.doRevealRoleToEachOther.descriptions.no\");\n    });\n\n    it(\"should update the create game dto store when the option is toggled.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const toggleButton = wrapper.findComponent<typeof AffirmativeToggleButton>(\"#game-lobby-options-hub-roles-tab-cupid-do-lovers-reveal-role-to-each-other-input\");\n      (toggleButton.vm as VueVm).$emit(\"update:modelValue\", true);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.cupid.lovers.doRevealRoleToEachOther = true;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSeer/GameLobbyOptionsHubRolesTabSeer.nuxt.spec.ts": {
      "tests": [
        {
          "id": "564",
          "name": "Game Lobby Options Hub Roles Tab Seer Component should match snapshot when rendered."
        },
        {
          "id": "565",
          "name": "Game Lobby Options Hub Roles Tab Seer Component Is talkative option should translate option label when rendered."
        },
        {
          "id": "566",
          "name": "Game Lobby Options Hub Roles Tab Seer Component Is talkative option should translate option description when the option is activated."
        },
        {
          "id": "567",
          "name": "Game Lobby Options Hub Roles Tab Seer Component Is talkative option should translate option description when the option is deactivated."
        },
        {
          "id": "568",
          "name": "Game Lobby Options Hub Roles Tab Seer Component Is talkative option should update the create game dto store when the option is toggled."
        },
        {
          "id": "569",
          "name": "Game Lobby Options Hub Roles Tab Seer Component Can see Roles option should translate option label when rendered."
        },
        {
          "id": "570",
          "name": "Game Lobby Options Hub Roles Tab Seer Component Can see Roles option should translate option description when the option is activated."
        },
        {
          "id": "571",
          "name": "Game Lobby Options Hub Roles Tab Seer Component Can see Roles option should translate option description when the option is deactivated."
        },
        {
          "id": "572",
          "name": "Game Lobby Options Hub Roles Tab Seer Component Can see Roles option should update the create game dto store when the option is toggled."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport GameLobbyOptionsHubRolesTabSeer from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabSeer/GameLobbyOptionsHubRolesTabSeer.vue\";\nimport type AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport type GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGameDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Options Hub Roles Tab Seer Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabSeer>>;\n\n  async function mountGameLobbyOptionsHubRolesTabSeerComponent(options: ComponentMountingOptions<typeof GameLobbyOptionsHubRolesTabSeer> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabSeer>>> {\n    return mountSuspendedComponent(GameLobbyOptionsHubRolesTabSeer, {\n      global: {\n        stubs: {\n          Fieldset: false,\n          GameOptionInputGroup: false,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyOptionsHubRolesTabSeerComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Is talkative option\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-seer-is-talkative-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"The Seer is talkative\");\n    });\n\n    it(\"should translate option description when the option is activated.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-seer-is-talkative-input-group\");\n      const expectedDescription = \"components.GameLobbyOptionsHubRolesTabSeer.options.isTalkative.descriptions.yes\";\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(expectedDescription);\n    });\n\n    it(\"should translate option description when the option is deactivated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.seer.isTalkative = false;\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-seer-is-talkative-input-group\");\n      const expectedDescription = \"components.GameLobbyOptionsHubRolesTabSeer.options.isTalkative.descriptions.no\";\n      await nextTick();\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(expectedDescription);\n    });\n\n    it(\"should update the create game dto store when the option is toggled.\", async() => {\n      const toggleButton = wrapper.findComponent<typeof AffirmativeToggleButton>(\"#game-lobby-options-hub-roles-tab-seer-is-talkative-input\");\n      const createGameDtoStore = useCreateGameDtoStore();\n      (toggleButton.vm as VueVm).$emit(\"update:modelValue\", false);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.seer.isTalkative = false;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n  });\n\n  describe(\"Can see Roles option\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-seer-can-see-roles-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"The Seer can see the roles\");\n    });\n\n    it(\"should translate option description when the option is activated.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-seer-can-see-roles-input-group\");\n      const expectedDescription = \"components.GameLobbyOptionsHubRolesTabSeer.options.canSeeRoles.descriptions.yes\";\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(expectedDescription);\n    });\n\n    it(\"should translate option description when the option is deactivated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.seer.canSeeRoles = false;\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-seer-can-see-roles-input-group\");\n      const expectedDescription = \"components.GameLobbyOptionsHubRolesTabSeer.options.canSeeRoles.descriptions.no\";\n      await nextTick();\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(expectedDescription);\n    });\n\n    it(\"should update the create game dto store when the option is toggled.\", async() => {\n      const toggleButton = wrapper.findComponent<typeof AffirmativeToggleButton>(\"#game-lobby-options-hub-roles-tab-seer-can-see-roles-input\");\n      const createGameDtoStore = useCreateGameDtoStore();\n      (toggleButton.vm as VueVm).$emit(\"update:modelValue\", false);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.seer.canSeeRoles = false;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionTargets/GameOverHistoryRecordDecisionTargets.nuxt.spec.ts": {
      "tests": [
        {
          "id": "573",
          "name": "Game Over History Record Decision Targets Component should match snapshot when rendered."
        },
        {
          "id": "574",
          "name": "Game Over History Record Decision Targets Component Targets should render the truncated targets when there are more than 3 targets."
        },
        {
          "id": "575",
          "name": "Game Over History Record Decision Targets Component Targets should render the full targets when there are less than 3 targets."
        },
        {
          "id": "576",
          "name": "Game Over History Record Decision Targets Component Targets should not render the targets when there are no targets."
        },
        {
          "id": "577",
          "name": "Game Over History Record Decision Targets Component Overflow Tag should display the overflow tag when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport type { GameOverHistoryRecordDecisionTargetsProps } from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionTargets/game-over-history-record-decision-targets.types\";\nimport type GameOverHistoryRecordDecisionTarget from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionTargets/GameOverHistoryRecordDecisionTarget/GameOverHistoryRecordDecisionTarget.vue\";\nimport GameOverHistoryRecordDecisionTargets from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionTargets/GameOverHistoryRecordDecisionTargets.vue\";\nimport type OverflowTag from \"~/components/shared/misc/OverflowTag/OverflowTag.vue\";\nimport type { GameHistoryRecordPlayTarget } from \"~/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-target/game-history-record-play-target.class\";\nimport { createFakeGameHistoryRecordPlayTarget } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-target/game-history-record-play-target.factory\";\nimport { createFakeGameHistoryRecordPlay } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play.factory\";\nimport { createFakeGameHistoryRecord } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record.factory\";\nimport { createFakeActorAlivePlayer } from \"~/tests/unit/utils/factories/composables/api/game/player/player-with-role.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Over History Record Decision Targets Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameOverHistoryRecordDecisionTargets>>;\n  const defaultPlayers = [\n    createFakeActorAlivePlayer({ name: \"Antoine\" }),\n    createFakeActorAlivePlayer({ name: \"Vanessa\" }),\n    createFakeActorAlivePlayer({ name: \"Thomas\" }),\n    createFakeActorAlivePlayer({ name: \"Doudou\" }),\n  ];\n  const defaultTargets = [\n    createFakeGameHistoryRecordPlayTarget({ player: defaultPlayers[0] }),\n    createFakeGameHistoryRecordPlayTarget({ player: defaultPlayers[1] }),\n    createFakeGameHistoryRecordPlayTarget({ player: defaultPlayers[2] }),\n    createFakeGameHistoryRecordPlayTarget({ player: defaultPlayers[3] }),\n  ];\n  const defaultGameHistoryRecord = createFakeGameHistoryRecord({\n    play: createFakeGameHistoryRecordPlay({\n      type: \"target\",\n      action: \"eat\",\n      targets: defaultTargets,\n    }),\n  });\n  const defaultProps: GameOverHistoryRecordDecisionTargetsProps = { gameHistoryRecord: defaultGameHistoryRecord };\n\n  async function mountGameOverHistoryRecordDecisionTargetsComponent(options: ComponentMountingOptions<typeof GameOverHistoryRecordDecisionTargets> = {}):\n  Promise<ReturnType<typeof mount<typeof GameOverHistoryRecordDecisionTargets>>> {\n    return mountSuspendedComponent(GameOverHistoryRecordDecisionTargets, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameOverHistoryRecordDecisionTargetsComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Targets\", () => {\n    it(\"should render the truncated targets when there are more than 3 targets.\", () => {\n      const targets = wrapper.findAllComponents<typeof GameOverHistoryRecordDecisionTarget>(\".game-over-history-record-target-player\");\n\n      expect(targets).toHaveLength(3);\n      expect(targets[0].props(\"target\")).toStrictEqual<GameHistoryRecordPlayTarget>(defaultTargets[0]);\n      expect(targets[1].props(\"target\")).toStrictEqual<GameHistoryRecordPlayTarget>(defaultTargets[1]);\n      expect(targets[2].props(\"target\")).toStrictEqual<GameHistoryRecordPlayTarget>(defaultTargets[2]);\n    });\n\n    it(\"should render the full targets when there are less than 3 targets.\", async() => {\n      const gameHistoryRecord = createFakeGameHistoryRecord({\n        play: createFakeGameHistoryRecordPlay({\n          type: \"target\",\n          action: \"eat\",\n          targets: [defaultTargets[0], defaultTargets[1]],\n        }),\n      });\n      wrapper = await mountGameOverHistoryRecordDecisionTargetsComponent({ props: { gameHistoryRecord } });\n      const targets = wrapper.findAllComponents<typeof GameOverHistoryRecordDecisionTarget>(\".game-over-history-record-target-player\");\n\n      expect(targets).toHaveLength(2);\n      expect(targets[0].props(\"target\")).toStrictEqual<GameHistoryRecordPlayTarget>(defaultTargets[0]);\n      expect(targets[1].props(\"target\")).toStrictEqual<GameHistoryRecordPlayTarget>(defaultTargets[1]);\n    });\n\n    it(\"should not render the targets when there are no targets.\", async() => {\n      const gameHistoryRecord = createFakeGameHistoryRecord({\n        play: createFakeGameHistoryRecordPlay({\n          type: \"target\",\n          action: \"eat\",\n        }),\n      });\n      wrapper = await mountGameOverHistoryRecordDecisionTargetsComponent({ props: { gameHistoryRecord } });\n      const targets = wrapper.findAllComponents<typeof GameOverHistoryRecordDecisionTarget>(\".game-over-history-record-target-player\");\n\n      expect(targets).toHaveLength(0);\n    });\n  });\n\n  describe(\"Overflow Tag\", () => {\n    it(\"should display the overflow tag when rendered.\", () => {\n      const overflowTag = wrapper.findComponent<typeof OverflowTag>(\"#target-players-overflow-tag\");\n\n      expect(overflowTag.props(\"entitiesCount\")).toBe(4);\n      expect(overflowTag.props(\"maximumEntitiesDisplayed\")).toBe(3);\n    });\n  });\n});"
    },
    "tests/unit/specs/pages/game-lobby/game-lobby.nuxt.spec.ts": {
      "tests": [
        {
          "id": "578",
          "name": "Game Lobby Page should match snapshot when rendered."
        },
        {
          "id": "579",
          "name": "Game Lobby Page should set head title and meta tags when rendered."
        },
        {
          "id": "580",
          "name": "Game Lobby Page Game Lobby Players Party should reset create game dto when rendered."
        },
        {
          "id": "581",
          "name": "Game Lobby Page Game Lobby Players Party should reset game when rendered."
        },
        {
          "id": "582",
          "name": "Game Lobby Page Game Lobby Role Picker should open role picker modal when game lobby players party emits pick role for player event."
        },
        {
          "id": "583",
          "name": "Game Lobby Page Game Lobby Role Picker should not open role picker modal when game lobby players party emits pick role for player event with no player."
        },
        {
          "id": "584",
          "name": "Game Lobby Page Game Lobby Role Picker should throw error when game lobby players party emits pick role for player event but the role picker is not found in refs."
        },
        {
          "id": "585",
          "name": "Game Lobby Page Game Lobby Options Hub should open game lobby options hub when game lobby players party emits open options hub event."
        },
        {
          "id": "586",
          "name": "Game Lobby Page Game Lobby Options Hub should throw error when game lobby header emits game options button click event but the options hub is not found in refs."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { UseHeadInput } from \"unhead\";\nimport type { Mock } from \"vitest\";\nimport { expect } from \"vitest\";\nimport type { Ref } from \"vue\";\nimport type GameLobbyHeader from \"~/components/pages/game-lobby/GameLobbyHeader/GameLobbyHeader.vue\";\n\nimport type GameLobbyPlayersParty from \"~/components/pages/game-lobby/GameLobbyPlayersParty/GameLobbyPlayersParty.vue\";\nimport GameLobby from \"~/pages/game-lobby.vue\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\nimport { createFakeCreateGamePlayerDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game-player/create-game-player.dto.factory\";\nimport { getError } from \"~/tests/unit/utils/helpers/exception.helpers\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Page\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobby>>;\n  let mocks: {\n    components: {\n      gameLobbyRolePicker: {\n        openToPickRoleForPlayer: Mock;\n      }\n      gameLobbyOptionsHub: {\n        open: Mock;\n      };\n    }\n  };\n\n  async function mountGameLobbyPageComponent(): Promise<ReturnType<typeof mount<typeof GameLobby>>> {\n    mocks = {\n      components: {\n        gameLobbyRolePicker: { openToPickRoleForPlayer: vi.fn() },\n        gameLobbyOptionsHub: { open: vi.fn() },\n      },\n    };\n\n    return mountSuspendedComponent(GameLobby, {\n      global: {\n        stubs: {\n          GameLobbyRolePicker: {\n            template: \"<div id='game-lobby-role-picker-stub'></div>\",\n            methods: mocks.components.gameLobbyRolePicker,\n          },\n          GameLobbyOptionsHub: {\n            template: \"<div id='game-lobby-options-hub-stub'></div>\",\n            methods: mocks.components.gameLobbyOptionsHub,\n          },\n        },\n      },\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyPageComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  it(\"should set head title and meta tags when rendered.\", () => {\n    const expectedUseHeadInput: UseHeadInput<object> = {\n      title: \"pages.gameLobby.startGame\",\n      meta: [{ name: \"description\", content: \"pages.gameLobby.seoDescription\" }],\n    };\n\n    expect(useHead).toHaveBeenCalledExactlyOnceWith(expectedUseHeadInput);\n  });\n\n  describe(\"Game Lobby Players Party\", () => {\n    it(\"should reset create game dto when rendered.\", () => {\n      const createGameDtoStore = useCreateGameDtoStore();\n\n      expect(createGameDtoStore.resetCreateGameDto).toHaveBeenCalledExactlyOnceWith();\n    });\n\n    it(\"should reset game when rendered.\", () => {\n      const gameStore = useGameStore();\n\n      expect(gameStore.resetGame).toHaveBeenCalledExactlyOnceWith();\n    });\n  });\n\n  describe(\"Game Lobby Role Picker\", () => {\n    it(\"should open role picker modal when game lobby players party emits pick role for player event.\", async() => {\n      const emittedPlayer = createFakeCreateGamePlayerDto();\n      const gameLobbyPlayersParty = wrapper.findComponent<typeof GameLobbyPlayersParty>(\"#game-lobby-players-party\");\n      (gameLobbyPlayersParty.vm as VueVm).$emit(\"pick-role-for-player\", emittedPlayer);\n      await nextTick();\n\n      expect(mocks.components.gameLobbyRolePicker.openToPickRoleForPlayer).toHaveBeenCalledExactlyOnceWith(emittedPlayer);\n    });\n\n    it(\"should not open role picker modal when game lobby players party emits pick role for player event with no player.\", async() => {\n      const gameLobbyPlayersParty = wrapper.findComponent<typeof GameLobbyPlayersParty>(\"#game-lobby-players-party\");\n      (gameLobbyPlayersParty.vm as VueVm).$emit(\"pick-role-for-player\", undefined);\n      await nextTick();\n\n      expect(mocks.components.gameLobbyRolePicker.openToPickRoleForPlayer).not.toHaveBeenCalled();\n    });\n\n    it(\"should throw error when game lobby players party emits pick role for player event but the role picker is not found in refs.\", async() => {\n      wrapper = await mountGameLobbyPageComponent();\n      (wrapper.vm.$root?.$refs.VTU_COMPONENT as { gameLobbyRolePicker: Ref }).gameLobbyRolePicker.value = null;\n      const gameLobbyPlayersParty = wrapper.findComponent<typeof GameLobbyPlayersParty>(\"#game-lobby-players-party\");\n      await getError(() => (gameLobbyPlayersParty.vm as VueVm).$emit(\"pick-role-for-player\", createFakeCreateGamePlayerDto()));\n\n      expect(createError).toHaveBeenCalledExactlyOnceWith(\"Game Lobby Role Picker is not defined\");\n    });\n  });\n\n  describe(\"Game Lobby Options Hub\", () => {\n    it(\"should open game lobby options hub when game lobby players party emits open options hub event.\", async() => {\n      const gameLobbyHeader = wrapper.findComponent<typeof GameLobbyHeader>(\"#game-lobby-header\");\n      (gameLobbyHeader.vm as VueVm).$emit(\"game-options-button-click\");\n      await nextTick();\n\n      expect(mocks.components.gameLobbyOptionsHub.open).toHaveBeenCalledExactlyOnceWith();\n    });\n\n    it(\"should throw error when game lobby header emits game options button click event but the options hub is not found in refs.\", async() => {\n      wrapper = await mountGameLobbyPageComponent();\n      (wrapper.vm.$root?.$refs.VTU_COMPONENT as { gameLobbyOptionsHub: Ref }).gameLobbyOptionsHub.value = null;\n      const gameLobbyHeader = wrapper.findComponent<typeof GameLobbyHeader>(\"#game-lobby-header\");\n      await getError(() => (gameLobbyHeader.vm as VueVm).$emit(\"game-options-button-click\"));\n\n      expect(createError).toHaveBeenCalledExactlyOnceWith(\"Game Lobby Options Hub is not defined\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionTargets/GameOverHistoryRecordDecisionTarget/GameOverHistoryRecordDecisionTarget.nuxt.spec.ts": {
      "tests": [
        {
          "id": "587",
          "name": "Game Over History Record Decision Target Component should match snapshot when rendered."
        },
        {
          "id": "588",
          "name": "Game Over History Record Decision Target Component Player Card should render Player Card with the target player name when rendered."
        },
        {
          "id": "589",
          "name": "Game Over History Record Decision Target Component Drank potion tag should not render drank potion tag when the target did not drink a potion."
        },
        {
          "id": "590",
          "name": "Game Over History Record Decision Target Component Drank potion tag Target drank life potion should set severity to success when the target drank a life potion."
        },
        {
          "id": "591",
          "name": "Game Over History Record Decision Target Component Drank potion tag Target drank life potion should render drank life potion tag icon when the target drank a life potion."
        },
        {
          "id": "592",
          "name": "Game Over History Record Decision Target Component Drank potion tag Target drank life potion should render drank life potion tag text when the target drank a life potion."
        },
        {
          "id": "593",
          "name": "Game Over History Record Decision Target Component Drank potion tag Target drank death potion should set severity to danger when the target drank a death potion."
        },
        {
          "id": "594",
          "name": "Game Over History Record Decision Target Component Drank potion tag Target drank death potion should render drank death potion tag icon when the target drank a death potion."
        },
        {
          "id": "595",
          "name": "Game Over History Record Decision Target Component Drank potion tag Target drank death potion should render drank death potion tag text when the target drank a death potion."
        }
      ],
      "source": "import type { NuxtImg } from \"#components\";\nimport type { VuePrimeTag } from \"#components\";\nimport type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport type { GameOverHistoryRecordDecisionTargetProps } from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionTargets/GameOverHistoryRecordDecisionTarget/game-over-history-record-decision-target.types\";\nimport GameOverHistoryRecordDecisionTarget from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionTargets/GameOverHistoryRecordDecisionTarget/GameOverHistoryRecordDecisionTarget.vue\";\nimport type PlayerCard from \"~/components/shared/game/player/PlayerCard/PlayerCard.vue\";\nimport { createFakeGameHistoryRecordPlayTarget } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-target/game-history-record-play-target.factory\";\nimport { createFakeActorAlivePlayer } from \"~/tests/unit/utils/factories/composables/api/game/player/player-with-role.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Over History Record Decision Target Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameOverHistoryRecordDecisionTarget>>;\n  const defaultTarget = createFakeGameHistoryRecordPlayTarget({ player: createFakeActorAlivePlayer({ name: \"Antoine\" }) });\n  const defaultProps: GameOverHistoryRecordDecisionTargetProps = { target: defaultTarget };\n\n  async function mountGameOverHistoryRecordDecisionTargetComponent(options: ComponentMountingOptions<typeof GameOverHistoryRecordDecisionTarget> = {}):\n  Promise<ReturnType<typeof mount<typeof GameOverHistoryRecordDecisionTarget>>> {\n    return mountSuspendedComponent(GameOverHistoryRecordDecisionTarget, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameOverHistoryRecordDecisionTargetComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Player Card\", () => {\n    it(\"should render Player Card with the target player name when rendered.\", () => {\n      const playerCard = wrapper.findComponent<typeof PlayerCard>(\".game-over-history-record-decision-target-player-card\");\n\n      expect(playerCard.props(\"playerName\")).toBe(defaultTarget.player.name);\n      expect(playerCard.props(\"playerRole\")).toBe(defaultTarget.player.role.current);\n    });\n  });\n\n  describe(\"Drank potion tag\", () => {\n    it(\"should not render drank potion tag when the target did not drink a potion.\", () => {\n      const overflowTag = wrapper.findComponent<typeof VuePrimeTag>(\"#target-potion-tag\");\n\n      expect(overflowTag.exists()).toBeFalsy();\n    });\n\n    describe(\"Target drank life potion\", () => {\n      beforeEach(async() => {\n        wrapper = await mountGameOverHistoryRecordDecisionTargetComponent({\n          global: { stubs: { Tag: false } },\n          props: {\n            target: createFakeGameHistoryRecordPlayTarget({\n              player: createFakeActorAlivePlayer({ name: \"Antoine\" }),\n              drankPotion: \"life\",\n            }),\n          },\n        });\n      });\n\n      it(\"should set severity to success when the target drank a life potion.\", () => {\n        const lifePotionTag = wrapper.findComponent<typeof VuePrimeTag>(\"#target-potion-tag\");\n\n        expect(lifePotionTag.props(\"severity\")).toBe(\"success\");\n      });\n\n      it(\"should render drank life potion tag icon when the target drank a life potion.\", () => {\n        const lifePotionTagIcon = wrapper.findComponent<typeof NuxtImg>(\"[alt='components.GameOverHistoryRecordDecisionTarget.lifePotion']\");\n\n        expect(lifePotionTagIcon.attributes(\"src\")).toBe(\"/svg/game/player/player-attribute/drank-life-potion.svg\");\n      });\n\n      it(\"should render drank life potion tag text when the target drank a life potion.\", () => {\n        const lifePotionTagText = wrapper.find<HTMLSpanElement>(\"#target-potion-tag-text\");\n\n        expect(lifePotionTagText.text()).toBe(\"components.GameOverHistoryRecordDecisionTarget.lifePotion\");\n      });\n    });\n\n    describe(\"Target drank death potion\", () => {\n      beforeEach(async() => {\n        wrapper = await mountGameOverHistoryRecordDecisionTargetComponent({\n          global: { stubs: { Tag: false } },\n          props: {\n            target: createFakeGameHistoryRecordPlayTarget({\n              player: createFakeActorAlivePlayer({ name: \"Antoine\" }),\n              drankPotion: \"death\",\n            }),\n          },\n        });\n      });\n\n      it(\"should set severity to danger when the target drank a death potion.\", () => {\n        const deathPotionTag = wrapper.findComponent<typeof VuePrimeTag>(\"#target-potion-tag\");\n\n        expect(deathPotionTag.props(\"severity\")).toBe(\"danger\");\n      });\n\n      it(\"should render drank death potion tag icon when the target drank a death potion.\", () => {\n        const deathPotionTagIcon = wrapper.findComponent<typeof NuxtImg>(\"[alt='components.GameOverHistoryRecordDecisionTarget.deathPotion']\");\n\n        expect(deathPotionTagIcon.attributes(\"src\")).toBe(\"/svg/game/player/player-attribute/drank-death-potion.svg\");\n      });\n\n      it(\"should render drank death potion tag text when the target drank a death potion.\", () => {\n        const deathPotionTagText = wrapper.find<HTMLSpanElement>(\"#target-potion-tag-text\");\n\n        expect(deathPotionTagText.text()).toBe(\"components.GameOverHistoryRecordDecisionTarget.deathPotion\");\n      });\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameTargetPlayground/GameTargetPlaygroundTargets/GameTargetPlaygroundTargets.nuxt.spec.ts": {
      "tests": [
        {
          "id": "596",
          "name": "Game Target Playground Targets Component should match snapshot when rendered."
        },
        {
          "id": "597",
          "name": "Game Target Playground Targets Component No targets should render no targets message when current play is not defined."
        },
        {
          "id": "598",
          "name": "Game Target Playground Targets Component No targets should render no targets message when current play is defined but there are no eligible targets."
        },
        {
          "id": "599",
          "name": "Game Target Playground Targets Component No targets should render no targets message when current play is defined but interactions are undefined."
        },
        {
          "id": "600",
          "name": "Game Target Playground Targets Component No targets should render no targets message when current play is defined but interactions are empty."
        },
        {
          "id": "601",
          "name": "Game Target Playground Targets Component No targets should render translated no targets message when current play is not defined."
        },
        {
          "id": "602",
          "name": "Game Target Playground Targets Component Targets should render targets when current play is defined and there are eligible targets in first interaction."
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\n\nimport type GamePlaygroundPlayerCard from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.vue\";\nimport GameTargetPlaygroundTargets from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameTargetPlayground/GameTargetPlaygroundTargets/GameTargetPlaygroundTargets.vue\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\nimport { createFakeGamePlaySourceInteraction } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction.factory\";\nimport { createFakeGamePlaySource } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source.factory\";\nimport { createFakeGamePlay, createFakeGamePlayWerewolvesEat } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play.factory\";\nimport { createFakeGame } from \"~/tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { createFakeSeerAlivePlayer } from \"~/tests/unit/utils/factories/composables/api/game/player/player-with-role.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Target Playground Targets Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameTargetPlaygroundTargets>>;\n  const testingPinia = { initialState: { [StoreIds.GAME]: { game: createFakeGame() } } };\n\n  async function mountGameTargetPlaygroundTargetsComponent(): Promise<ReturnType<typeof mount<typeof GameTargetPlaygroundTargets>>> {\n    return mountSuspendedComponent(GameTargetPlaygroundTargets, { global: { plugins: [createTestingPinia(testingPinia)] } });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameTargetPlaygroundTargetsComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"No targets\", () => {\n    it(\"should render no targets message when current play is not defined.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = null;\n      await nextTick();\n      const noTargetsContainer = wrapper.find<HTMLDivElement>(\"#no-targets\");\n\n      expect(noTargetsContainer.exists()).toBeTruthy();\n    });\n\n    it(\"should render no targets message when current play is defined but there are no eligible targets.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlay();\n      await nextTick();\n      const noTargetsContainer = wrapper.find<HTMLDivElement>(\"#no-targets\");\n\n      expect(noTargetsContainer.exists()).toBeTruthy();\n    });\n\n    it(\"should render no targets message when current play is defined but interactions are undefined.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlay({ source: createFakeGamePlaySource() });\n      await nextTick();\n      const noTargetsContainer = wrapper.find<HTMLDivElement>(\"#no-targets\");\n\n      expect(noTargetsContainer.exists()).toBeTruthy();\n    });\n\n    it(\"should render no targets message when current play is defined but interactions are empty.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlay({ source: createFakeGamePlaySource({ interactions: [] }) });\n      await nextTick();\n      const noTargetsContainer = wrapper.find<HTMLDivElement>(\"#no-targets\");\n\n      expect(noTargetsContainer.exists()).toBeTruthy();\n    });\n\n    it(\"should render translated no targets message when current play is not defined.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = null;\n      await nextTick();\n      const noTargetsContainer = wrapper.find<HTMLDivElement>(\"#no-targets\");\n\n      expect(noTargetsContainer.text()).toBe(\"Nobody can be targeted…\");\n    });\n  });\n\n  describe(\"Targets\", () => {\n    it(\"should render targets when current play is defined and there are eligible targets in first interaction.\", async() => {\n      const expectedTargets = [\n        createFakeSeerAlivePlayer(),\n        createFakeSeerAlivePlayer(),\n        createFakeSeerAlivePlayer(),\n      ];\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlayWerewolvesEat({\n        source: createFakeGamePlaySource({\n          interactions: [\n            createFakeGamePlaySourceInteraction({\n              type: \"eat\",\n              eligibleTargets: expectedTargets,\n            }),\n            createFakeGamePlaySourceInteraction({\n              type: \"charm\",\n              eligibleTargets: [\n                createFakeSeerAlivePlayer(),\n                createFakeSeerAlivePlayer(),\n              ],\n            }),\n          ],\n        }),\n      });\n      await nextTick();\n      const targets = wrapper.findAllComponents<typeof GamePlaygroundPlayerCard>(\".target\");\n\n      expect(targets).toHaveLength(expectedTargets.length);\n      expect(targets[0].props(\"player\")).toStrictEqual<Player>(expectedTargets[0]);\n      expect(targets[1].props(\"player\")).toStrictEqual<Player>(expectedTargets[1]);\n      expect(targets[2].props(\"player\")).toStrictEqual<Player>(expectedTargets[2]);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabThreeBrothers/GameLobbyOptionsHubRolesTabThreeBrothers.nuxt.spec.ts": {
      "tests": [
        {
          "id": "603",
          "name": "Game Lobby Options Hub Roles Tab Three Brothers Component should match snapshot when rendered."
        },
        {
          "id": "604",
          "name": "Game Lobby Options Hub Roles Tab Three Brothers Component Waking up Interval option should translate option label when rendered."
        },
        {
          "id": "605",
          "name": "Game Lobby Options Hub Roles Tab Three Brothers Component Waking up Interval option should translate option description with selected value when rendered."
        },
        {
          "id": "606",
          "name": "Game Lobby Options Hub Roles Tab Three Brothers Component Waking up Interval option should translate option float label when rendered."
        },
        {
          "id": "607",
          "name": "Game Lobby Options Hub Roles Tab Three Brothers Component Waking up Interval option should update the create game dto store when the option is changed by the input number."
        },
        {
          "id": "608",
          "name": "Game Lobby Options Hub Roles Tab Three Brothers Component Waking up Interval option should update the create game dto store when the option is changed by the slider."
        },
        {
          "id": "609",
          "name": "Game Lobby Options Hub Roles Tab Three Brothers Component Waking up Interval option should not update the create game dto store when the option is changed by the input number and the value is null."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport type InputNumber from \"primevue/inputnumber\";\nimport type Slider from \"primevue/slider\";\nimport GameLobbyOptionsHubRolesTabThreeBrothers from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabThreeBrothers/GameLobbyOptionsHubRolesTabThreeBrothers.vue\";\nimport type GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGameDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Options Hub Roles Tab Three Brothers Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabThreeBrothers>>;\n\n  async function mountGameLobbyOptionsHubRolesTabThreeBrothersComponent(options: ComponentMountingOptions<typeof GameLobbyOptionsHubRolesTabThreeBrothers> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabThreeBrothers>>> {\n    return mountSuspendedComponent(GameLobbyOptionsHubRolesTabThreeBrothers, {\n      global: {\n        stubs: {\n          Fieldset: false,\n          GameOptionInputGroup: false,\n          FloatLabel: false,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyOptionsHubRolesTabThreeBrothersComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Waking up Interval option\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-three-brothers-waking-up-interval-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"Three Brothers waking up interval\");\n    });\n\n    it(\"should translate option description with selected value when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-three-brothers-waking-up-interval-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabThreeBrothers.options.wakingUpInterval.description, {\\\"interval\\\":2}, 2\");\n    });\n\n    it(\"should translate option float label when rendered.\", () => {\n      const floatLabel = wrapper.find<HTMLLabelElement>(\"#game-lobby-options-hub-roles-tab-three-brothers-waking-up-interval-label\");\n\n      expect(floatLabel.text()).toBe(\"Three Brothers waking up interval\");\n    });\n\n    it(\"should update the create game dto store when the option is changed by the input number.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const inputId = \"#game-lobby-options-hub-roles-tab-three-brothers-waking-up-interval-input\";\n      const inputNumber = wrapper.findComponent<typeof InputNumber>(inputId);\n      const expectedWakingUpInterval = 2;\n      (inputNumber.vm as VueVm).$emit(\"update:modelValue\", expectedWakingUpInterval);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.threeBrothers.wakingUpInterval = expectedWakingUpInterval;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n\n    it(\"should update the create game dto store when the option is changed by the slider.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const inputId = \"#game-lobby-options-hub-roles-tab-three-brothers-waking-up-interval-slider\";\n      const slider = wrapper.findComponent<typeof Slider>(inputId);\n      const expectedWakingUpInterval = 2;\n      (slider.vm as VueVm).$emit(\"update:modelValue\", expectedWakingUpInterval);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.threeBrothers.wakingUpInterval = expectedWakingUpInterval;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n\n    it(\"should not update the create game dto store when the option is changed by the input number and the value is null.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const inputId = \"#game-lobby-options-hub-roles-tab-three-brothers-waking-up-interval-input\";\n      const inputNumber = wrapper.findComponent<typeof InputNumber>(inputId);\n      (inputNumber.vm as VueVm).$emit(\"update:modelValue\", null);\n      await nextTick();\n\n      expect(createGameDtoStore.setCreateGameDto).not.toHaveBeenCalled();\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWhiteWerewolf/GameLobbyOptionsHubRolesTabWhiteWerewolf.nuxt.spec.ts": {
      "tests": [
        {
          "id": "610",
          "name": "Game Lobby Options Hub Roles Tab White Werewolf Component should match snapshot when rendered."
        },
        {
          "id": "611",
          "name": "Game Lobby Options Hub Roles Tab White Werewolf Component Waking up Interval option should translate option label when rendered."
        },
        {
          "id": "612",
          "name": "Game Lobby Options Hub Roles Tab White Werewolf Component Waking up Interval option should translate option description with selected value when rendered."
        },
        {
          "id": "613",
          "name": "Game Lobby Options Hub Roles Tab White Werewolf Component Waking up Interval option should translate option float label when rendered."
        },
        {
          "id": "614",
          "name": "Game Lobby Options Hub Roles Tab White Werewolf Component Waking up Interval option should update the create game dto store when the option is changed by the input number."
        },
        {
          "id": "615",
          "name": "Game Lobby Options Hub Roles Tab White Werewolf Component Waking up Interval option should update the create game dto store when the option is changed by the slider."
        },
        {
          "id": "616",
          "name": "Game Lobby Options Hub Roles Tab White Werewolf Component Waking up Interval option should not update the create game dto store when the option is changed by the input number and the value is null."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport type InputNumber from \"primevue/inputnumber\";\nimport type Slider from \"primevue/slider\";\nimport GameLobbyOptionsHubRolesTabWhiteWerewolf from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWhiteWerewolf/GameLobbyOptionsHubRolesTabWhiteWerewolf.vue\";\nimport type GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGameDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Options Hub Roles Tab White Werewolf Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabWhiteWerewolf>>;\n\n  async function mountGameLobbyOptionsHubRolesTabWhiteWerewolfComponent(options: ComponentMountingOptions<typeof GameLobbyOptionsHubRolesTabWhiteWerewolf> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabWhiteWerewolf>>> {\n    return mountSuspendedComponent(GameLobbyOptionsHubRolesTabWhiteWerewolf, {\n      global: {\n        stubs: {\n          Fieldset: false,\n          GameOptionInputGroup: false,\n          FloatLabel: false,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyOptionsHubRolesTabWhiteWerewolfComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Waking up Interval option\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-white-werewolf-waking-up-interval-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"White Werewolf waking up interval\");\n    });\n\n    it(\"should translate option description with selected value when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-white-werewolf-waking-up-interval-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabWhiteWerewolf.options.wakingUpInterval.description, {\\\"interval\\\":2}, 2\");\n    });\n\n    it(\"should translate option float label when rendered.\", () => {\n      const floatLabel = wrapper.find<HTMLLabelElement>(\"#game-lobby-options-hub-roles-tab-white-werewolf-waking-up-interval-label\");\n\n      expect(floatLabel.text()).toBe(\"White Werewolf waking up interval\");\n    });\n\n    it(\"should update the create game dto store when the option is changed by the input number.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const inputId = \"#game-lobby-options-hub-roles-tab-white-werewolf-waking-up-interval-input\";\n      const inputNumber = wrapper.findComponent<typeof InputNumber>(inputId);\n      const expectedWakingUpInterval = 2;\n      (inputNumber.vm as VueVm).$emit(\"update:modelValue\", expectedWakingUpInterval);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.whiteWerewolf.wakingUpInterval = expectedWakingUpInterval;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n\n    it(\"should update the create game dto store when the option is changed by the slider.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const inputId = \"#game-lobby-options-hub-roles-tab-white-werewolf-waking-up-interval-slider\";\n      const slider = wrapper.findComponent<typeof Slider>(inputId);\n      const expectedWakingUpInterval = 2;\n      (slider.vm as VueVm).$emit(\"update:modelValue\", expectedWakingUpInterval);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.whiteWerewolf.wakingUpInterval = expectedWakingUpInterval;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n\n    it(\"should not update the create game dto store when the option is changed by the input number and the value is null.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const inputId = \"#game-lobby-options-hub-roles-tab-white-werewolf-waking-up-interval-input\";\n      const inputNumber = wrapper.findComponent<typeof InputNumber>(inputId);\n      (inputNumber.vm as VueVm).$emit(\"update:modelValue\", null);\n      await nextTick();\n\n      expect(createGameDtoStore.setCreateGameDto).not.toHaveBeenCalled();\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHub.nuxt.spec.ts": {
      "tests": [
        {
          "id": "617",
          "name": "Game Lobby Options Hub Component should match snapshot when rendered."
        },
        {
          "id": "618",
          "name": "Game Lobby Options Hub Component Dialog not open should set dialog to invisible when rendered."
        },
        {
          "id": "619",
          "name": "Game Lobby Options Hub Component Dialog not open Game Lobby Options Hub Header should not render game lobby options hub header when dialog is not open."
        },
        {
          "id": "620",
          "name": "Game Lobby Options Hub Component Dialog not open Game Lobby Options Hub Content should not render game lobby options hub content when dialog is not open."
        },
        {
          "id": "621",
          "name": "Game Lobby Options Hub Component Dialog not open Game Lobby Options Hub Footer should not render game lobby options hub footer when dialog is not open."
        },
        {
          "id": "622",
          "name": "Game Lobby Options Hub Component Dialog open should set dialog to visible when opened."
        },
        {
          "id": "623",
          "name": "Game Lobby Options Hub Component Dialog open Game Lobby Options Hub Header should render game lobby options hub header when opened."
        },
        {
          "id": "624",
          "name": "Game Lobby Options Hub Component Dialog open Game Lobby Options Hub Content should render game lobby options hub content when opened."
        },
        {
          "id": "625",
          "name": "Game Lobby Options Hub Component Dialog open Game Lobby Options Hub Footer should render game lobby options hub footer when opened."
        },
        {
          "id": "626",
          "name": "Game Lobby Options Hub Component Dialog open Game Lobby Options Hub Footer should close options hub when option hub footer emits event."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport Dialog from \"primevue/dialog\";\nimport type { GameLobbyOptionsHubExposed } from \"~/components/pages/game-lobby/GameLobbyOptionsHub/game-lobby-options-hub.types\";\nimport GameLobbyOptionsHub from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHub.vue\";\nimport type GameLobbyOptionsHubHeader from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubHeader/GameLobbyOptionsHubHeader.vue\";\nimport type GameLobbyOptionsHubContent from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubContent/GameLobbyOptionsHubContent.vue\";\nimport type DialogFooterCloseButtonOnly from \"~/components/shared/dialogs/DialogFooterCloseButtonOnly/DialogFooterCloseButtonOnly.vue\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Options Hub Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyOptionsHub>>;\n\n  async function mountGameLobbyOptionsHubComponent(options: ComponentMountingOptions<typeof GameLobbyOptionsHub> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyOptionsHub>>> {\n    return mountSuspendedComponent(GameLobbyOptionsHub, {\n      shallow: false,\n      global: {\n        stubs: {\n          GameLobbyOptionsHubHeader: true,\n          GameLobbyOptionsHubContent: true,\n          DialogFooterCloseButtonOnly: true,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyOptionsHubComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Dialog not open\", () => {\n    it(\"should set dialog to invisible when rendered.\", async() => {\n      await mountGameLobbyOptionsHubComponent({ shallow: true });\n      const dialog = wrapper.findComponent<typeof Dialog>(Dialog);\n\n      expect(dialog.props(\"visible\")).toBeFalsy();\n    });\n\n    describe(\"Game Lobby Options Hub Header\", () => {\n      it(\"should not render game lobby options hub header when dialog is not open.\", () => {\n        const gameLobbyOptionsHubHeader = wrapper.findComponent<typeof GameLobbyOptionsHubHeader>(\"#game-lobby-options-hub-header\");\n\n        expect(gameLobbyOptionsHubHeader.exists()).toBeFalsy();\n      });\n    });\n\n    describe(\"Game Lobby Options Hub Content\", () => {\n      it(\"should not render game lobby options hub content when dialog is not open.\", () => {\n        const gameLobbyOptionsHubContent = wrapper.findComponent<typeof GameLobbyOptionsHubContent>(\"#game-lobby-options-hub-content\");\n\n        expect(gameLobbyOptionsHubContent.exists()).toBeFalsy();\n      });\n    });\n\n    describe(\"Game Lobby Options Hub Footer\", () => {\n      it(\"should not render game lobby options hub footer when dialog is not open.\", () => {\n        const dialogFooterCloseButtonOnly = wrapper.findComponent<typeof DialogFooterCloseButtonOnly>(\"#close-button-only-dialog-footer\");\n\n        expect(dialogFooterCloseButtonOnly.exists()).toBeFalsy();\n      });\n    });\n  });\n\n  describe(\"Dialog open\", () => {\n    beforeEach(async() => {\n      wrapper = await mountGameLobbyOptionsHubComponent();\n      (wrapper.vm as unknown as GameLobbyOptionsHubExposed).open();\n    });\n\n    it(\"should set dialog to visible when opened.\", () => {\n      const dialog = wrapper.findComponent<typeof Dialog>(Dialog);\n\n      expect(dialog.props(\"visible\")).toBeTruthy();\n    });\n\n    describe(\"Game Lobby Options Hub Header\", () => {\n      it(\"should render game lobby options hub header when opened.\", () => {\n        const gameLobbyOptionsHubHeader = wrapper.findComponent<typeof GameLobbyOptionsHubHeader>(\"#game-lobby-options-hub-header\");\n\n        expect(gameLobbyOptionsHubHeader.exists()).toBeTruthy();\n      });\n    });\n\n    describe(\"Game Lobby Options Hub Content\", () => {\n      it(\"should render game lobby options hub content when opened.\", () => {\n        const gameLobbyOptionsHubContent = wrapper.findComponent<typeof GameLobbyOptionsHubContent>(\"#game-lobby-options-hub-content\");\n\n        expect(gameLobbyOptionsHubContent.exists()).toBeTruthy();\n      });\n    });\n\n    describe(\"Game Lobby Options Hub Footer\", () => {\n      it(\"should render game lobby options hub footer when opened.\", () => {\n        const dialogFooterCloseButtonOnly = wrapper.findComponent<typeof DialogFooterCloseButtonOnly>(\"#close-button-only-dialog-footer\");\n\n        expect(dialogFooterCloseButtonOnly.exists()).toBeTruthy();\n      });\n\n      it(\"should close options hub when option hub footer emits event.\", async() => {\n        const dialogFooterCloseButtonOnly = wrapper.findComponent<typeof DialogFooterCloseButtonOnly>(\"#close-button-only-dialog-footer\");\n        (dialogFooterCloseButtonOnly.vm as VueVm).$emit(\"close-dialog\");\n        await wrapper.vm.$nextTick();\n        const dialog = wrapper.findComponent<typeof Dialog>(Dialog);\n\n        expect(dialog.props(\"visible\")).toBeFalsy();\n      });\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundFooter/GamePlaygroundFooterMakePlayButton/GamePlaygroundFooterMakePlayButton.nuxt.spec.ts": {
      "tests": [
        {
          "id": "627",
          "name": "Game Playground Footer Make Play Button Component should match snapshot when rendered."
        },
        {
          "id": "628",
          "name": "Game Playground Footer Make Play Button Component Make Game Play Button should be disabled when make game play dto is not valid."
        },
        {
          "id": "629",
          "name": "Game Playground Footer Make Play Button Component Make Game Play Button should be enabled when make game play dto is valid."
        },
        {
          "id": "630",
          "name": "Game Playground Footer Make Play Button Component Make Game Play Button should have a translated label when rendered."
        },
        {
          "id": "631",
          "name": "Game Playground Footer Make Play Button Component Make Game Play Button Click on button should make play when clicked."
        },
        {
          "id": "632",
          "name": "Game Playground Footer Make Play Button Component Make Game Play Button Click on button should reset make game play dto when clicked."
        },
        {
          "id": "633",
          "name": "Game Playground Footer Make Play Button Component Make Game Play Button Click on button should be loading when fetch is in progress."
        },
        {
          "id": "634",
          "name": "Game Playground Footer Make Play Button Component Make Game Play Button Click on button should not be loading when fetch is finished."
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\nimport type { Ref } from \"vue\";\n\nimport type { VuePrimeButton } from \"#components\";\nimport GamePlaygroundFooterMakePlayButton from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundFooter/GamePlaygroundFooterMakePlayButton/GamePlaygroundFooterMakePlayButton.vue\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\nimport { useMakeGamePlayDtoStore } from \"~/stores/game/make-game-play-dto/useMakeGamePlayDtoStore\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\nimport { createFakeMakeGamePlayDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/make-game-play/make-game-play.dto.factory\";\nimport { createFakeGamePlaySource } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source.factory\";\nimport { createFakeGamePlay } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play.factory\";\nimport { createFakeGame } from \"~/tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Playground Footer Make Play Button Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GamePlaygroundFooterMakePlayButton>>;\n  const testingPinia = {\n    initialState: {\n      [StoreIds.GAME]: {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlay({\n            source: createFakeGamePlaySource({ name: \"sheriff\" }),\n            action: \"delegate\",\n          }),\n        }),\n      },\n    },\n  };\n\n  async function mountGamePlaygroundFooterMakePlayButtonComponent(): Promise<ReturnType<typeof mount<typeof GamePlaygroundFooterMakePlayButton>>> {\n    return mountSuspendedComponent(GamePlaygroundFooterMakePlayButton, { global: { plugins: [createTestingPinia(testingPinia)] } });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGamePlaygroundFooterMakePlayButtonComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Make Game Play Button\", () => {\n    it(\"should be disabled when make game play dto is not valid.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlay({ canBeSkipped: false });\n      await nextTick();\n      const makeGamePlayButton = wrapper.findComponent<typeof VuePrimeButton>(\"#make-play-button\");\n\n      expect(makeGamePlayButton.attributes(\"disabled\")).toBe(\"true\");\n    });\n\n    it(\"should be enabled when make game play dto is valid.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlay({ canBeSkipped: true });\n      await nextTick();\n      const makeGamePlayButton = wrapper.findComponent<typeof VuePrimeButton>(\"#make-play-button\");\n\n      expect(makeGamePlayButton.attributes(\"disabled\")).toBe(\"false\");\n    });\n\n    it(\"should have a translated label when rendered.\", () => {\n      const makeGamePlayButton = wrapper.findComponent<typeof VuePrimeButton>(\"#make-play-button\");\n\n      expect(makeGamePlayButton.attributes(\"label\")).toBe(\"Make play\");\n    });\n\n    describe(\"Click on button\", () => {\n      beforeEach(() => {\n        const gameStore = useGameStore();\n        gameStore.game.currentPlay = createFakeGamePlay({ canBeSkipped: true });\n      });\n\n      it(\"should make play when clicked.\", async() => {\n        const makeGamePlayDto = createFakeMakeGamePlayDto();\n        const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n        makeGamePlayDtoStore.makeGamePlayDto = makeGamePlayDto;\n        const gameStore = useGameStore();\n        const makeGamePlayButton = wrapper.findComponent<typeof VuePrimeButton>(\"#make-play-button\");\n        await makeGamePlayButton.trigger(\"click\");\n\n        expect(gameStore.makeGamePlay).toHaveBeenCalledExactlyOnceWith(makeGamePlayDto);\n      });\n\n      it(\"should reset make game play dto when clicked.\", async() => {\n        const makeGamePlayDto = createFakeMakeGamePlayDto();\n        const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n        makeGamePlayDtoStore.makeGamePlayDto = makeGamePlayDto;\n        const makeGamePlayButton = wrapper.findComponent<typeof VuePrimeButton>(\"#make-play-button\");\n        await makeGamePlayButton.trigger(\"click\");\n\n        expect(makeGamePlayDtoStore.resetMakeGamePlayDto).toHaveBeenCalledExactlyOnceWith();\n      });\n\n      it(\"should be loading when fetch is in progress.\", () => {\n        const makeGamePlayButton = wrapper.findComponent<typeof VuePrimeButton>(\"#make-play-button\");\n        void makeGamePlayButton.trigger(\"click\");\n\n        expect((wrapper.vm as unknown as { isLoadingMakePlay: Ref<boolean> }).isLoadingMakePlay.value).toBeTrue();\n      });\n\n      it(\"should not be loading when fetch is finished.\", async() => {\n        const makeGamePlayButton = wrapper.findComponent<typeof VuePrimeButton>(\"#make-play-button\");\n        await makeGamePlayButton.trigger(\"click\");\n\n        expect(makeGamePlayButton.attributes(\"loading\")).toBe(\"false\");\n      });\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabTwoSisters/GameLobbyOptionsHubRolesTabTwoSisters.nuxt.spec.ts": {
      "tests": [
        {
          "id": "635",
          "name": "Game Lobby Options Hub Roles Tab Two Sisters Component should match snapshot when rendered."
        },
        {
          "id": "636",
          "name": "Game Lobby Options Hub Roles Tab Two Sisters Component Waking up Interval option should translate option label when rendered."
        },
        {
          "id": "637",
          "name": "Game Lobby Options Hub Roles Tab Two Sisters Component Waking up Interval option should translate option description with selected value when rendered."
        },
        {
          "id": "638",
          "name": "Game Lobby Options Hub Roles Tab Two Sisters Component Waking up Interval option should translate option float label when rendered."
        },
        {
          "id": "639",
          "name": "Game Lobby Options Hub Roles Tab Two Sisters Component Waking up Interval option should update the create game dto store when the option is changed by the input number."
        },
        {
          "id": "640",
          "name": "Game Lobby Options Hub Roles Tab Two Sisters Component Waking up Interval option should update the create game dto store when the option is changed by the slider."
        },
        {
          "id": "641",
          "name": "Game Lobby Options Hub Roles Tab Two Sisters Component Waking up Interval option should not update the create game dto store when the option is changed by the input number and the value is null."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport type InputNumber from \"primevue/inputnumber\";\nimport type Slider from \"primevue/slider\";\nimport GameLobbyOptionsHubRolesTabTwoSisters from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabTwoSisters/GameLobbyOptionsHubRolesTabTwoSisters.vue\";\nimport type GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGameDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Options Hub Roles Tab Two Sisters Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabTwoSisters>>;\n\n  async function mountGameLobbyOptionsHubRolesTabTwoSistersComponent(options: ComponentMountingOptions<typeof GameLobbyOptionsHubRolesTabTwoSisters> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabTwoSisters>>> {\n    return mountSuspendedComponent(GameLobbyOptionsHubRolesTabTwoSisters, {\n      global: {\n        stubs: {\n          Fieldset: false,\n          GameOptionInputGroup: false,\n          FloatLabel: false,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyOptionsHubRolesTabTwoSistersComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Waking up Interval option\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-two-sisters-waking-up-interval-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"Two Sisters waking up interval\");\n    });\n\n    it(\"should translate option description with selected value when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-two-sisters-waking-up-interval-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabTwoSisters.options.wakingUpInterval.description, {\\\"interval\\\":2}, 2\");\n    });\n\n    it(\"should translate option float label when rendered.\", () => {\n      const floatLabel = wrapper.find<HTMLLabelElement>(\"#game-lobby-options-hub-roles-tab-two-sisters-waking-up-interval-label\");\n\n      expect(floatLabel.text()).toBe(\"Two Sisters waking up interval\");\n    });\n\n    it(\"should update the create game dto store when the option is changed by the input number.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const inputId = \"#game-lobby-options-hub-roles-tab-two-sisters-waking-up-interval-input\";\n      const inputNumber = wrapper.findComponent<typeof InputNumber>(inputId);\n      const expectedWakingUpInterval = 2;\n      (inputNumber.vm as VueVm).$emit(\"update:modelValue\", expectedWakingUpInterval);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.twoSisters.wakingUpInterval = expectedWakingUpInterval;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n\n    it(\"should update the create game dto store when the option is changed by the slider.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const inputId = \"#game-lobby-options-hub-roles-tab-two-sisters-waking-up-interval-slider\";\n      const slider = wrapper.findComponent<typeof Slider>(inputId);\n      const expectedWakingUpInterval = 2;\n      (slider.vm as VueVm).$emit(\"update:modelValue\", expectedWakingUpInterval);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.twoSisters.wakingUpInterval = expectedWakingUpInterval;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n\n    it(\"should not update the create game dto store when the option is changed by the input number and the value is null.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const inputId = \"#game-lobby-options-hub-roles-tab-two-sisters-waking-up-interval-input\";\n      const inputNumber = wrapper.findComponent<typeof InputNumber>(inputId);\n      (inputNumber.vm as VueVm).$emit(\"update:modelValue\", null);\n      await nextTick();\n\n      expect(createGameDtoStore.setCreateGameDto).not.toHaveBeenCalled();\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameChooseSidePlayground/GameChooseSidePlayground.nuxt.spec.ts": {
      "tests": [
        {
          "id": "642",
          "name": "Game Choose Side Playground Component should match snapshot when rendered."
        },
        {
          "id": "643",
          "name": "Game Choose Side Playground Component Choose Villager Side Button should select the villager side when clicked."
        },
        {
          "id": "644",
          "name": "Game Choose Side Playground Component Choose Villager Side Button should have green border when side is villagers."
        },
        {
          "id": "645",
          "name": "Game Choose Side Playground Component Choose Villager Side Button Villagers Button Image should have green border when side is villagers."
        },
        {
          "id": "646",
          "name": "Game Choose Side Playground Component Choose Villager Side Button Villagers Button Text should have translated text when rendered."
        },
        {
          "id": "647",
          "name": "Game Choose Side Playground Component Choose Werewolves Side button should select the werewolves side when clicked."
        },
        {
          "id": "648",
          "name": "Game Choose Side Playground Component Choose Werewolves Side button should have red border when side is werewolves."
        },
        {
          "id": "649",
          "name": "Game Choose Side Playground Component Choose Werewolves Side button Werewolves Button Image should have red border when side is werewolves."
        },
        {
          "id": "650",
          "name": "Game Choose Side Playground Component Choose Werewolves Side button Werewolves Button Text should have translated text when rendered."
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\n\nimport GameChooseSidePlayground from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameChooseSidePlayground/GameChooseSidePlayground.vue\";\nimport type RoleImage from \"~/components/shared/role/RoleImage/RoleImage.vue\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\nimport { useMakeGamePlayDtoStore } from \"~/stores/game/make-game-play-dto/useMakeGamePlayDtoStore\";\nimport { createFakeGame } from \"~/tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Choose Side Playground Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameChooseSidePlayground>>;\n  const testingPinia = { initialState: { [StoreIds.GAME]: { game: createFakeGame() } } };\n\n  async function mountGameChooseSidePlaygroundComponent(): Promise<ReturnType<typeof mount<typeof GameChooseSidePlayground>>> {\n    return mountSuspendedComponent(GameChooseSidePlayground, {\n      shallow: false,\n      global: {\n        plugins: [createTestingPinia(testingPinia)],\n        stubs: { RoleImage: true },\n      },\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameChooseSidePlaygroundComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Choose Villager Side Button\", () => {\n    it(\"should select the villager side when clicked.\", async() => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      const button = wrapper.find<HTMLButtonElement>(\"#choose-villagers-side-button\");\n      await button.trigger(\"click\");\n\n      expect(makeGamePlayDtoStore.setChosenSide).toHaveBeenCalledExactlyOnceWith(\"villagers\");\n    });\n\n    it(\"should have green border when side is villagers.\", async() => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      makeGamePlayDtoStore.makeGamePlayDto.chosenSide = \"villagers\";\n      await nextTick();\n      const button = wrapper.find<HTMLButtonElement>(\"#choose-villagers-side-button\");\n\n      expect(button.classes(\"!border-green-500\")).toBeTruthy();\n    });\n\n    describe(\"Villagers Button Image\", () => {\n      it(\"should have green border when side is villagers.\", async() => {\n        const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n        makeGamePlayDtoStore.makeGamePlayDto.chosenSide = \"villagers\";\n        await nextTick();\n        const button = wrapper.find<HTMLButtonElement>(\"#choose-villagers-side-button\");\n        const image = button.findComponent<typeof RoleImage>(\"#villagers-side-image\");\n\n        expect(image.classes(\"border-green-500\")).toBeTruthy();\n      });\n    });\n\n    describe(\"Villagers Button Text\", () => {\n      it(\"should have translated text when rendered.\", async() => {\n        const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n        makeGamePlayDtoStore.makeGamePlayDto.chosenSide = \"villagers\";\n        await nextTick();\n        const button = wrapper.find<HTMLButtonElement>(\"#choose-villagers-side-button\");\n\n        expect(button.text()).toBe(\"Villagers side\");\n      });\n    });\n  });\n\n  describe(\"Choose Werewolves Side button\", () => {\n    it(\"should select the werewolves side when clicked.\", async() => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      const button = wrapper.find<HTMLButtonElement>(\"#choose-werewolves-side-button\");\n      await button.trigger(\"click\");\n\n      expect(makeGamePlayDtoStore.setChosenSide).toHaveBeenCalledExactlyOnceWith(\"werewolves\");\n    });\n\n    it(\"should have red border when side is werewolves.\", async() => {\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      makeGamePlayDtoStore.makeGamePlayDto.chosenSide = \"werewolves\";\n      await nextTick();\n      const button = wrapper.find<HTMLButtonElement>(\"#choose-werewolves-side-button\");\n\n      expect(button.classes(\"!border-red-500\")).toBeTruthy();\n    });\n\n    describe(\"Werewolves Button Image\", () => {\n      it(\"should have red border when side is werewolves.\", async() => {\n        const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n        makeGamePlayDtoStore.makeGamePlayDto.chosenSide = \"werewolves\";\n        await nextTick();\n        const button = wrapper.find<HTMLButtonElement>(\"#choose-werewolves-side-button\");\n        const image = button.findComponent<typeof RoleImage>(\"#werewolves-side-image\");\n\n        expect(image.classes(\"border-red-500\")).toBeTruthy();\n      });\n    });\n\n    describe(\"Werewolves Button Text\", () => {\n      it(\"should have translated text when rendered.\", async() => {\n        const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n        makeGamePlayDtoStore.makeGamePlayDto.chosenSide = \"werewolves\";\n        await nextTick();\n        const button = wrapper.find<HTMLButtonElement>(\"#choose-werewolves-side-button\");\n\n        expect(button.text()).toBe(\"Werewolves side\");\n      });\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabStutteringJudge/GameLobbyOptionsHubRolesTabStutteringJudge.nuxt.spec.ts": {
      "tests": [
        {
          "id": "651",
          "name": "Game Lobby Options Hub Roles Tab Stuttering Judge Component should match snapshot when rendered."
        },
        {
          "id": "652",
          "name": "Game Lobby Options Hub Roles Tab Stuttering Judge Component Vote Requests Count option should translate option label when rendered."
        },
        {
          "id": "653",
          "name": "Game Lobby Options Hub Roles Tab Stuttering Judge Component Vote Requests Count option should translate option description with selected option value when rendered."
        },
        {
          "id": "654",
          "name": "Game Lobby Options Hub Roles Tab Stuttering Judge Component Vote Requests Count option should translate option float label when rendered."
        },
        {
          "id": "655",
          "name": "Game Lobby Options Hub Roles Tab Stuttering Judge Component Vote Requests Count option should update the create game dto store when the option is changed by the input number."
        },
        {
          "id": "656",
          "name": "Game Lobby Options Hub Roles Tab Stuttering Judge Component Vote Requests Count option should update the create game dto store when the option is changed by the slider."
        },
        {
          "id": "657",
          "name": "Game Lobby Options Hub Roles Tab Stuttering Judge Component Vote Requests Count option should not update the create game dto store when the option is changed by the input number and the value is null."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport type InputNumber from \"primevue/inputnumber\";\nimport type Slider from \"primevue/slider\";\nimport GameLobbyOptionsHubRolesTabStutteringJudge from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabStutteringJudge/GameLobbyOptionsHubRolesTabStutteringJudge.vue\";\nimport type GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGameDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Options Hub Roles Tab Stuttering Judge Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabStutteringJudge>>;\n\n  async function mountStutteringJudgeGameOptionsComponent(options: ComponentMountingOptions<typeof GameLobbyOptionsHubRolesTabStutteringJudge> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabStutteringJudge>>> {\n    return mountSuspendedComponent(GameLobbyOptionsHubRolesTabStutteringJudge, {\n      global: {\n        stubs: {\n          Fieldset: false,\n          GameOptionInputGroup: false,\n          FloatLabel: false,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountStutteringJudgeGameOptionsComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Vote Requests Count option\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-stuttering-judge-vote-requests-count-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"Stuttering Judge vote requests\");\n    });\n\n    it(\"should translate option description with selected option value when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-stuttering-judge-vote-requests-count-input-group\");\n      const expectedDescription = \"components.GameLobbyOptionsHubRolesTabStutteringJudge.options.voteRequestsCount.description, {\\\"count\\\":1}\";\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(expectedDescription);\n    });\n\n    it(\"should translate option float label when rendered.\", () => {\n      const floatLabel = wrapper.find<HTMLLabelElement>(\"#game-lobby-options-hub-roles-tab-stuttering-judge-vote-requests-count-label\");\n\n      expect(floatLabel.text()).toBe(\"Stuttering Judge vote requests\");\n    });\n\n    it(\"should update the create game dto store when the option is changed by the input number.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const inputNumber = wrapper.findComponent<typeof InputNumber>(\"#game-lobby-options-hub-roles-tab-stuttering-judge-vote-requests-count-input\");\n      (inputNumber.vm as VueVm).$emit(\"update:modelValue\", 2);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.stutteringJudge.voteRequestsCount = 2;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n\n    it(\"should update the create game dto store when the option is changed by the slider.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const slider = wrapper.findComponent<typeof Slider>(\"#game-lobby-options-hub-roles-tab-stuttering-judge-vote-requests-count-slider\");\n      (slider.vm as VueVm).$emit(\"update:modelValue\", 2);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.stutteringJudge.voteRequestsCount = 2;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n\n    it(\"should not update the create game dto store when the option is changed by the input number and the value is null.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const inputNumber = wrapper.findComponent<typeof InputNumber>(\"#game-lobby-options-hub-roles-tab-stuttering-judge-vote-requests-count-input\");\n      (inputNumber.vm as VueVm).$emit(\"update:modelValue\", null);\n      await nextTick();\n\n      expect(createGameDtoStore.setCreateGameDto).not.toHaveBeenCalled();\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabScandalmonger/GameLobbyOptionsHubRolesTabScandalmonger.nuxt.spec.ts": {
      "tests": [
        {
          "id": "658",
          "name": "Game Lobby Options Hub Roles Tab Scandalmonger Component should match snapshot when rendered."
        },
        {
          "id": "659",
          "name": "Game Lobby Options Hub Roles Tab Scandalmonger Component Mark Penalty option should translate option label when rendered."
        },
        {
          "id": "660",
          "name": "Game Lobby Options Hub Roles Tab Scandalmonger Component Mark Penalty option should translate option description with selected value when rendered."
        },
        {
          "id": "661",
          "name": "Game Lobby Options Hub Roles Tab Scandalmonger Component Mark Penalty option should translate option float label when rendered."
        },
        {
          "id": "662",
          "name": "Game Lobby Options Hub Roles Tab Scandalmonger Component Mark Penalty option should update the create game dto store when the option is changed by the input number."
        },
        {
          "id": "663",
          "name": "Game Lobby Options Hub Roles Tab Scandalmonger Component Mark Penalty option should update the create game dto store when the option is changed by the slider."
        },
        {
          "id": "664",
          "name": "Game Lobby Options Hub Roles Tab Scandalmonger Component Mark Penalty option should not update the create game dto store when the option is changed by the slider and the value is null."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport type InputNumber from \"primevue/inputnumber\";\nimport type Slider from \"primevue/slider\";\nimport GameLobbyOptionsHubRolesTabScandalmonger from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabScandalmonger/GameLobbyOptionsHubRolesTabScandalmonger.vue\";\nimport type GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGameDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Options Hub Roles Tab Scandalmonger Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabScandalmonger>>;\n\n  async function mountGameLobbyOptionsHubRolesTabScandalmongerComponent(options: ComponentMountingOptions<typeof GameLobbyOptionsHubRolesTabScandalmonger> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabScandalmonger>>> {\n    return mountSuspendedComponent(GameLobbyOptionsHubRolesTabScandalmonger, {\n      global: {\n        stubs: {\n          Fieldset: false,\n          GameOptionInputGroup: false,\n          FloatLabel: false,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyOptionsHubRolesTabScandalmongerComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Mark Penalty option\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-scandalmonger-mark-penalty-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"Mark penalty\");\n    });\n\n    it(\"should translate option description with selected value when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-scandalmonger-mark-penalty-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabScandalmonger.options.markPenalty.description, {\\\"markPenalty\\\":2}, 2\");\n    });\n\n    it(\"should translate option float label when rendered.\", () => {\n      const floatLabel = wrapper.find<HTMLLabelElement>(\"#game-lobby-options-hub-roles-tab-scandalmonger-mark-penalty-label\");\n\n      expect(floatLabel.text()).toBe(\"Mark penalty\");\n    });\n\n    it(\"should update the create game dto store when the option is changed by the input number.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const inputId = \"#game-lobby-options-hub-roles-tab-scandalmonger-mark-penalty-input\";\n      const markPenaltyInputNumber = wrapper.findComponent<typeof InputNumber>(inputId);\n      (markPenaltyInputNumber.vm as VueVm).$emit(\"update:modelValue\", 4);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.scandalmonger.markPenalty = 4;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n\n    it(\"should update the create game dto store when the option is changed by the slider.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const inputId = \"#game-lobby-options-hub-roles-tab-scandalmonger-mark-penalty-slider\";\n      const markPenaltyInputNumber = wrapper.findComponent<typeof Slider>(inputId);\n      (markPenaltyInputNumber.vm as VueVm).$emit(\"update:modelValue\", 1);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.scandalmonger.markPenalty = 1;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n\n    it(\"should not update the create game dto store when the option is changed by the slider and the value is null.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const inputId = \"#game-lobby-options-hub-roles-tab-scandalmonger-mark-penalty-slider\";\n      const markPenaltyInputNumber = wrapper.findComponent<typeof Slider>(inputId);\n      (markPenaltyInputNumber.vm as VueVm).$emit(\"update:modelValue\", null);\n      await nextTick();\n\n      expect(createGameDtoStore.setCreateGameDto).not.toHaveBeenCalled();\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/GameUsePotionsPlayground.nuxt.spec.ts": {
      "tests": [
        {
          "id": "665",
          "name": "Game Use Potions Playground Component should match snapshot when rendered."
        },
        {
          "id": "666",
          "name": "Game Use Potions Playground Component No potion left should render no potion container when witch has no potion left."
        },
        {
          "id": "667",
          "name": "Game Use Potions Playground Component No potion left should translate no potion text when witch has no potion left."
        },
        {
          "id": "668",
          "name": "Game Use Potions Playground Component At least one potion left should render witch use potions tab view when witch has her life potion."
        },
        {
          "id": "669",
          "name": "Game Use Potions Playground Component At least one potion left should render witch use potions tab view when witch has her death potion."
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\n\nimport GameUsePotionsPlayground from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/GameUsePotionsPlayground.vue\";\nimport type WitchUsePotionsTabView from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameUsePotionsPlayground/WitchUsePotionsTabView/WitchUsePotionsTabView.vue\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\nimport { createFakeGamePlaySourceInteraction } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction.factory\";\nimport { createFakeGamePlaySource } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source.factory\";\nimport { createFakeGamePlayWitchUsesPotions } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play.factory\";\nimport { createFakeGame } from \"~/tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { createFakePlayer } from \"~/tests/unit/utils/factories/composables/api/game/player/player.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Use Potions Playground Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameUsePotionsPlayground>>;\n  const testingPinia = {\n    initialState: {\n      [StoreIds.GAME]: {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlayWitchUsesPotions({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  type: \"give-life-potion\",\n                  eligibleTargets: [\n                    createFakePlayer(),\n                    createFakePlayer(),\n                  ],\n                }),\n              ],\n            }),\n          }),\n        }),\n      },\n    },\n  };\n\n  async function mountGameUsePotionsPlaygroundComponent(): Promise<ReturnType<typeof mount<typeof GameUsePotionsPlayground>>> {\n    return mountSuspendedComponent(GameUsePotionsPlayground, { global: { plugins: [createTestingPinia(testingPinia)] } });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameUsePotionsPlaygroundComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"No potion left\", () => {\n    it(\"should render no potion container when witch has no potion left.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = null;\n      await wrapper.vm.$nextTick();\n      const noPotionContainer = wrapper.find<HTMLHeadingElement>(\"#no-potion\");\n\n      expect(noPotionContainer.exists()).toBeTruthy();\n    });\n\n    it(\"should translate no potion text when witch has no potion left.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = null;\n      await wrapper.vm.$nextTick();\n      const noPotionContainer = wrapper.find<HTMLHeadingElement>(\"#no-potion\");\n\n      expect(noPotionContainer.text()).toBe(\"The Witch has used both potions, the game can proceed\");\n    });\n  });\n\n  describe(\"At least one potion left\", () => {\n    it(\"should render witch use potions tab view when witch has her life potion.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlayWitchUsesPotions({\n        source: createFakeGamePlaySource({\n          interactions: [\n            createFakeGamePlaySourceInteraction({\n              type: \"give-life-potion\",\n              eligibleTargets: [\n                createFakePlayer(),\n                createFakePlayer(),\n              ],\n            }),\n          ],\n        }),\n      });\n      await wrapper.vm.$nextTick();\n      const witchUsePotionsTabView = wrapper.findComponent<typeof WitchUsePotionsTabView>(\"#witch-use-potions-tab-view\");\n\n      expect(witchUsePotionsTabView.exists()).toBeTruthy();\n    });\n\n    it(\"should render witch use potions tab view when witch has her death potion.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlayWitchUsesPotions({\n        source: createFakeGamePlaySource({\n          interactions: [\n            createFakeGamePlaySourceInteraction({\n              type: \"give-death-potion\",\n              eligibleTargets: [\n                createFakePlayer(),\n                createFakePlayer(),\n              ],\n            }),\n          ],\n        }),\n      });\n      await wrapper.vm.$nextTick();\n      const witchUsePotionsTabView = wrapper.findComponent<typeof WitchUsePotionsTabView>(\"#witch-use-potions-tab-view\");\n\n      expect(witchUsePotionsTabView.exists()).toBeTruthy();\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GameOver/GameOver.nuxt.spec.ts": {
      "tests": [
        {
          "id": "670",
          "name": "Game Over Component should match snapshot when rendered."
        },
        {
          "id": "671",
          "name": "Game Over Component should set head title and meta tags when rendered."
        },
        {
          "id": "672",
          "name": "Game Over Component should fetch and set game history records when rendered."
        },
        {
          "id": "673",
          "name": "Game Over Component Game Over Winners should display game over winners when there are winners."
        },
        {
          "id": "674",
          "name": "Game Over Component Game Over Winners should not display game over winners when there is no victory."
        },
        {
          "id": "675",
          "name": "Game Over Component Game Over Winners should not display game over winners when there are no winners."
        },
        {
          "id": "676",
          "name": "Game Over Component Game History should show game history when the show game history button is clicked."
        },
        {
          "id": "677",
          "name": "Game Over Component Game History should throw an error when the show game history button is clicked and the game history is not defined."
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\nimport type { UseHeadInput } from \"unhead\";\nimport type { Mock } from \"vitest\";\nimport { expect } from \"vitest\";\nimport type { Ref } from \"vue\";\n\nimport GameOver from \"~/components/pages/game/GameOver/GameOver.vue\";\nimport type GameOverActions from \"~/components/pages/game/GameOver/GameOverActions/GameOverActions.vue\";\nimport type GameOverWinners from \"~/components/pages/game/GameOver/GameOverWinners/GameOverWinners.vue\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\nimport { useGameHistoryRecordsStore } from \"~/stores/game/game-history-record/useGameHistoryRecordsStore\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\nimport { createFakeGameVictory } from \"~/tests/unit/utils/factories/composables/api/game/game-victory/game-victory.factory\";\nimport { createFakeGame } from \"~/tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { createFakeSeerAlivePlayer, createFakeVillagerAlivePlayer } from \"~/tests/unit/utils/factories/composables/api/game/player/player-with-role.factory\";\nimport { getError } from \"~/tests/unit/utils/helpers/exception.helpers\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Over Component\", () => {\n  const game = createFakeGame({\n    victory: createFakeGameVictory({\n      winners: [\n        createFakeSeerAlivePlayer(),\n        createFakeVillagerAlivePlayer(),\n      ],\n      type: \"villagers\",\n    }),\n  });\n  let mocks: {\n    components: {\n      gameOverHistory: {\n        showGameHistory: Mock;\n      }\n    }\n  };\n  let wrapper: ReturnType<typeof mount<typeof GameOver>>;\n  const testingPinia = { initialState: { [StoreIds.GAME]: { game } } };\n\n  beforeEach(async() => {\n    mocks = { components: { gameOverHistory: { showGameHistory: vi.fn() } } };\n    wrapper = await mountSuspendedComponent(GameOver, {\n      global: {\n        stubs: {\n          GameOverHistory: {\n            template: \"<div id='game-over-history-stub'></div>\",\n            methods: mocks.components.gameOverHistory,\n          },\n        },\n        plugins: [createTestingPinia(testingPinia)],\n      },\n    });\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  it(\"should set head title and meta tags when rendered.\", () => {\n    const expectedUseHeadInput: UseHeadInput<object> = { title: \"components.GameOver.gameOver\" };\n\n    expect(useHead).toHaveBeenCalledExactlyOnceWith(expectedUseHeadInput);\n  });\n\n  it(\"should fetch and set game history records when rendered.\", () => {\n    const gameHistoryRecordsStore = useGameHistoryRecordsStore();\n\n    expect(gameHistoryRecordsStore.fetchAndSetGameHistoryRecords).toHaveBeenCalledExactlyOnceWith(game._id);\n  });\n\n  describe(\"Game Over Winners\", () => {\n    it(\"should display game over winners when there are winners.\", () => {\n      const gameOverWinners = wrapper.findComponent<typeof GameOverWinners>(\"#game-over-winners\");\n\n      expect(gameOverWinners.exists()).toBeTruthy();\n    });\n\n    it(\"should not display game over winners when there is no victory.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.victory = undefined;\n      await nextTick();\n      const gameOverWinners = wrapper.findComponent<typeof GameOverWinners>(\"#game-over-winners\");\n\n      expect(gameOverWinners.exists()).toBeFalsy();\n    });\n\n    it(\"should not display game over winners when there are no winners.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.victory = createFakeGameVictory({ winners: undefined });\n      await nextTick();\n      const gameOverWinners = wrapper.findComponent<typeof GameOverWinners>(\"#game-over-winners\");\n\n      expect(gameOverWinners.exists()).toBeFalsy();\n    });\n  });\n\n  describe(\"Game History\", () => {\n    it(\"should show game history when the show game history button is clicked.\", async() => {\n      const gameOverActions = wrapper.findComponent<typeof GameOverActions>(\"#game-over-actions\");\n      (gameOverActions.vm as VueVm).$emit(\"show-game-history\");\n      await nextTick();\n\n      expect(mocks.components.gameOverHistory.showGameHistory).toHaveBeenCalledExactlyOnceWith();\n    });\n\n    it(\"should throw an error when the show game history button is clicked and the game history is not defined.\", async() => {\n      (wrapper.vm.$root?.$refs.VTU_COMPONENT as { gameOverHistory: Ref }).gameOverHistory.value = null;\n      const gameOverActions = wrapper.findComponent<typeof GameOverActions>(\"#game-over-actions\");\n      await getError(() => (gameOverActions.vm as VueVm).$emit(\"showGameHistory\"));\n\n      expect(createError).toHaveBeenCalledExactlyOnceWith(\"Game Over History is not defined\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameBuryDeadBodiesPlayground/GameBuryDeadBodiesPlayground.nuxt.spec.ts": {
      "tests": [
        {
          "id": "678",
          "name": "Game Bury Dead Bodies Playground Component should match snapshot when rendered."
        },
        {
          "id": "679",
          "name": "Game Bury Dead Bodies Playground Component Devoted Servant Playground should render devoted servant playground when one interaction for her is available."
        },
        {
          "id": "680",
          "name": "Game Bury Dead Bodies Playground Component Devoted Servant Playground should not render devoted servant playground when no interaction for her is available."
        },
        {
          "id": "681",
          "name": "Game Bury Dead Bodies Playground Component No Action needed should render no action needed when no interaction for devoted servant is available."
        },
        {
          "id": "682",
          "name": "Game Bury Dead Bodies Playground Component No Action needed should not render no action needed when one interaction for her is available."
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\n\nimport GameBuryDeadBodiesPlayground from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameBuryDeadBodiesPlayground/GameBuryDeadBodiesPlayground.vue\";\nimport type GameDevotedServantStealsRolePlayground from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameBuryDeadBodiesPlayground/GameDevotedServantStealsRolePlayground/GameDevotedServantStealsRolePlayground.vue\";\nimport type NoActionNeeded from \"~/components/shared/game/game-play/NoNeededAction/NoActionNeeded.vue\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\nimport { createFakeGamePlaySourceInteraction } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction.factory\";\nimport { createFakeGamePlaySource } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source.factory\";\nimport { createFakeGamePlay, createFakeGamePlaySurvivorsBuryDeadBodies } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play.factory\";\nimport { createFakeGame } from \"~/tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { createFakePlayer } from \"~/tests/unit/utils/factories/composables/api/game/player/player.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Bury Dead Bodies Playground Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameBuryDeadBodiesPlayground>>;\n  const testingPinia = { initialState: { [StoreIds.GAME]: { game: createFakeGame({ currentPlay: createFakeGamePlaySurvivorsBuryDeadBodies() }) } } };\n\n  async function mountGameBuryDeadBodiesPlaygroundComponent(): Promise<ReturnType<typeof mount<typeof GameBuryDeadBodiesPlayground>>> {\n    return mountSuspendedComponent(GameBuryDeadBodiesPlayground, { global: { plugins: [createTestingPinia(testingPinia)] } });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameBuryDeadBodiesPlaygroundComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Devoted Servant Playground\", () => {\n    it(\"should render devoted servant playground when one interaction for her is available.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlaySurvivorsBuryDeadBodies({\n        source: createFakeGamePlaySource({\n          interactions: [\n            createFakeGamePlaySourceInteraction({\n              source: \"devoted-servant\",\n              type: \"steal-role\",\n              eligibleTargets: [\n                createFakePlayer(),\n                createFakePlayer(),\n              ],\n            }),\n          ],\n        }),\n      });\n      await nextTick();\n      const devotedServantPlayground = wrapper.findComponent<typeof GameDevotedServantStealsRolePlayground>(\"#game-devoted-servant-steals-role-playground\");\n\n      expect(devotedServantPlayground.exists()).toBeTruthy();\n    });\n\n    it(\"should not render devoted servant playground when no interaction for her is available.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlay();\n      await nextTick();\n      const devotedServantPlayground = wrapper.findComponent<typeof GameDevotedServantStealsRolePlayground>(\"#game-devoted-servant-steals-role-playground\");\n\n      expect(devotedServantPlayground.exists()).toBeFalsy();\n    });\n  });\n\n  describe(\"No Action needed\", () => {\n    it(\"should render no action needed when no interaction for devoted servant is available.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlay();\n      await nextTick();\n      const noActionNeeded = wrapper.findComponent<typeof NoActionNeeded>(\"#no-action-needed\");\n\n      expect(noActionNeeded.exists()).toBeTruthy();\n    });\n\n    it(\"should not render no action needed when one interaction for her is available.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlay({\n        source: createFakeGamePlaySource({\n          interactions: [\n            createFakeGamePlaySourceInteraction({\n              source: \"devoted-servant\",\n              type: \"steal-role\",\n              eligibleTargets: [\n                createFakePlayer(),\n                createFakePlayer(),\n              ],\n            }),\n          ],\n        }),\n      });\n      await nextTick();\n      const noActionNeeded = wrapper.findComponent<typeof NoActionNeeded>(\"#no-action-needed\");\n\n      expect(noActionNeeded.exists()).toBeFalsy();\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordSource/GameOverHistoryRecordSource.nuxt.spec.ts": {
      "tests": [
        {
          "id": "683",
          "name": "Game Over History Record Source Component should match snapshot when rendered."
        },
        {
          "id": "684",
          "name": "Game Over History Record Source Component Source Name should display source name when rendered."
        },
        {
          "id": "685",
          "name": "Game Over History Record Source Component Source Players should display truncated players when there are more than 3 players in source."
        },
        {
          "id": "686",
          "name": "Game Over History Record Source Component Source Players should display all players when there are less than 4 players in source."
        },
        {
          "id": "687",
          "name": "Game Over History Record Source Component Overflow tag should display overflow when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport type Radash from \"radash\";\nimport { vi } from \"vitest\";\nimport type { GameOverHistoryRecordSourceProps } from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordSource/game-over-history-record-source.types\";\nimport GameOverHistoryRecordSource from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordSource/GameOverHistoryRecordSource.vue\";\nimport type PlayerCard from \"~/components/shared/game/player/PlayerCard/PlayerCard.vue\";\nimport type OverflowTag from \"~/components/shared/misc/OverflowTag/OverflowTag.vue\";\nimport { createFakeGameHistoryRecordPlaySource } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-source/game-history-record-play-source.factory\";\nimport { createFakeGameHistoryRecordPlay } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play.factory\";\nimport { createFakeGameHistoryRecord } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record.factory\";\nimport { createFakeActorAlivePlayer } from \"~/tests/unit/utils/factories/composables/api/game/player/player-with-role.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\nconst { radash: mockedRadash } = vi.hoisted(() => ({ radash: { shuffle: vi.fn() } }));\n\nvi.mock(\"radash\", async importOriginal => ({\n  ...await importOriginal<typeof Radash>(),\n  shuffle: vi.fn(mockedRadash.shuffle),\n}));\n\ndescribe(\"Game Over History Record Source Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameOverHistoryRecordSource>>;\n  const defaultSourcePlayers = [\n    createFakeActorAlivePlayer({ name: \"Antoine\" }),\n    createFakeActorAlivePlayer({ name: \"Vanessa\" }),\n    createFakeActorAlivePlayer({ name: \"Thomas\" }),\n    createFakeActorAlivePlayer({ name: \"Doudou\" }),\n  ];\n  const defaultGameHistoryRecord = createFakeGameHistoryRecord({\n    play: createFakeGameHistoryRecordPlay({\n      type: \"vote\",\n      action: \"vote\",\n      source: createFakeGameHistoryRecordPlaySource({\n        name: \"survivors\",\n        players: defaultSourcePlayers,\n      }),\n    }),\n  });\n  const defaultProps: GameOverHistoryRecordSourceProps = { gameHistoryRecord: defaultGameHistoryRecord };\n\n  async function mountGameOverHistoryRecordSourceComponent(options: ComponentMountingOptions<typeof GameOverHistoryRecordSource> = {}):\n  Promise<ReturnType<typeof mount<typeof GameOverHistoryRecordSource>>> {\n    return mountSuspendedComponent(GameOverHistoryRecordSource, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    mockedRadash.shuffle.mockReturnValue(defaultSourcePlayers);\n    wrapper = await mountGameOverHistoryRecordSourceComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Source Name\", () => {\n    it(\"should display source name when rendered.\", () => {\n      const sourceName = wrapper.find<HTMLHeadElement>(\"#game-over-history-record-source-name\");\n\n      expect(sourceName.text()).toBe(\"shared.game.player.group.definiteName.survivors, 4\");\n    });\n  });\n\n  describe(\"Source Players\", () => {\n    it(\"should display truncated players when there are more than 3 players in source.\", () => {\n      const sourcePlayerCards = wrapper.findAllComponents<typeof PlayerCard>(\".game-over-history-record-source-player-card\");\n\n      expect(sourcePlayerCards).toHaveLength(3);\n      expect(sourcePlayerCards[0].props(\"playerName\")).toBe(\"Antoine\");\n      expect(sourcePlayerCards[1].props(\"playerName\")).toBe(\"Vanessa\");\n      expect(sourcePlayerCards[2].props(\"playerName\")).toBe(\"Thomas\");\n    });\n\n    it(\"should display all players when there are less than 4 players in source.\", async() => {\n      mockedRadash.shuffle.mockReturnValue(defaultSourcePlayers.slice(0, 2));\n      wrapper = await mountGameOverHistoryRecordSourceComponent();\n      const sourcePlayerCards = wrapper.findAllComponents<typeof PlayerCard>(\".game-over-history-record-source-player-card\");\n\n      expect(sourcePlayerCards).toHaveLength(2);\n      expect(sourcePlayerCards[0].props(\"playerName\")).toBe(\"Antoine\");\n      expect(sourcePlayerCards[1].props(\"playerName\")).toBe(\"Vanessa\");\n    });\n  });\n\n  describe(\"Overflow tag\", () => {\n    it(\"should display overflow when rendered.\", () => {\n      const overflowTag = wrapper.findComponent<typeof OverflowTag>(\"#source-player-overflow-tag\");\n\n      expect(overflowTag.exists()).toBeTruthy();\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GameOver/GameOverHistory/GameOverHistory.nuxt.spec.ts": {
      "tests": [
        {
          "id": "688",
          "name": "Game Over History Component should match snapshot when rendered."
        },
        {
          "id": "689",
          "name": "Game Over History Component Dialog not open should set dialog to invisible when rendered."
        },
        {
          "id": "690",
          "name": "Game Over History Component Dialog not open Game Over History Header should not render game over history header when dialog is not open."
        },
        {
          "id": "691",
          "name": "Game Over History Component Dialog not open Game Over History Records should not render game over history records when dialog is not open."
        },
        {
          "id": "692",
          "name": "Game Over History Component Dialog not open Game Over History Footer should not render game over history footer when dialog is not open."
        },
        {
          "id": "693",
          "name": "Game Over History Component Dialog open should set dialog to visible when showGameHistory is called."
        },
        {
          "id": "694",
          "name": "Game Over History Component Dialog open Game Over History Header should render game over history header when dialog is open."
        },
        {
          "id": "695",
          "name": "Game Over History Component Dialog open Game Over History Records should render game over history records when dialog is open."
        },
        {
          "id": "696",
          "name": "Game Over History Component Dialog open Game Over History Footer should render game over history footer when dialog is open."
        },
        {
          "id": "697",
          "name": "Game Over History Component Dialog open Game Over History Footer should close game history when game over history footer emits event."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport Dialog from \"primevue/dialog\";\n\nimport type { GameOverHistoryExposed } from \"~/components/pages/game/GameOver/GameOverHistory/game-over-history.types\";\nimport GameOverHistory from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistory.vue\";\nimport type GameOverHistoryHeader from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryHeader/GameOverHistoryHeader.vue\";\nimport type DialogFooterCloseButtonOnly from \"~/components/shared/dialogs/DialogFooterCloseButtonOnly/DialogFooterCloseButtonOnly.vue\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Over History Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameOverHistory>>;\n\n  async function mountGameOverHistoryComponent(options: ComponentMountingOptions<typeof GameOverHistory> = {}):\n  Promise<ReturnType<typeof mount<typeof GameOverHistory>>> {\n    return mountSuspendedComponent(GameOverHistory, {\n      shallow: false,\n      global: {\n        stubs: {\n          GameOverHistoryHeader: true,\n          GameOverHistoryRecords: true,\n          GameOverHistoryFooter: true,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameOverHistoryComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Dialog not open\", () => {\n    it(\"should set dialog to invisible when rendered.\", async() => {\n      await mountGameOverHistoryComponent({ shallow: true });\n      const dialog = wrapper.findComponent<typeof Dialog>(Dialog);\n\n      expect(dialog.props(\"visible\")).toBeFalsy();\n    });\n\n    describe(\"Game Over History Header\", () => {\n      it(\"should not render game over history header when dialog is not open.\", () => {\n        const gameOverHistoryHeader = wrapper.findComponent<typeof GameOverHistoryHeader>(\"#game-over-history-header\");\n\n        expect(gameOverHistoryHeader.exists()).toBeFalsy();\n      });\n    });\n\n    describe(\"Game Over History Records\", () => {\n      it(\"should not render game over history records when dialog is not open.\", () => {\n        const gameOverHistoryRecords = wrapper.findComponent<typeof GameOverHistory>(\"#game-over-history-records\");\n\n        expect(gameOverHistoryRecords.exists()).toBeFalsy();\n      });\n    });\n\n    describe(\"Game Over History Footer\", () => {\n      it(\"should not render game over history footer when dialog is not open.\", () => {\n        const gameOverHistoryFooter = wrapper.find(\"#game-over-history-footer\");\n\n        expect(gameOverHistoryFooter.exists()).toBeFalsy();\n      });\n    });\n  });\n\n  describe(\"Dialog open\", () => {\n    beforeEach(async() => {\n      wrapper = await mountGameOverHistoryComponent();\n      (wrapper.vm as unknown as GameOverHistoryExposed).showGameHistory();\n    });\n\n    it(\"should set dialog to visible when showGameHistory is called.\", () => {\n      const dialog = wrapper.findComponent<typeof Dialog>(Dialog);\n\n      expect(dialog.props(\"visible\")).toBeTruthy();\n    });\n\n    describe(\"Game Over History Header\", () => {\n      it(\"should render game over history header when dialog is open.\", () => {\n        const gameOverHistoryHeader = wrapper.findComponent<typeof GameOverHistoryHeader>(\"#game-over-history-header\");\n\n        expect(gameOverHistoryHeader.exists()).toBeTruthy();\n      });\n    });\n\n    describe(\"Game Over History Records\", () => {\n      it(\"should render game over history records when dialog is open.\", () => {\n        const gameOverHistoryRecords = wrapper.findComponent<typeof GameOverHistory>(\"#game-over-history-records\");\n\n        expect(gameOverHistoryRecords.exists()).toBeTruthy();\n      });\n    });\n\n    describe(\"Game Over History Footer\", () => {\n      it(\"should render game over history footer when dialog is open.\", () => {\n        const gameOverHistoryFooter = wrapper.findComponent<typeof DialogFooterCloseButtonOnly>(\"#dialog-footer-close-button-only\");\n\n        expect(gameOverHistoryFooter.exists()).toBeTruthy();\n      });\n\n      it(\"should close game history when game over history footer emits event.\", async() => {\n        const gameOverHistoryFooter = wrapper.findComponent<typeof DialogFooterCloseButtonOnly>(\"#dialog-footer-close-button-only\");\n        (gameOverHistoryFooter.vm as VueVm).$emit(\"close-dialog\");\n        await nextTick();\n        const dialog = wrapper.findComponent<typeof Dialog>(Dialog);\n\n        expect(dialog.props(\"visible\")).toBeFalsy();\n      });\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/about/AboutWerewolvesAssistant/AboutWerewolvesAssistant.nuxt.spec.ts": {
      "tests": [
        {
          "id": "698",
          "name": "About Werewolves Assistant Component should match snapshot when rendered."
        },
        {
          "id": "699",
          "name": "About Werewolves Assistant Component Title should display translated title when rendered."
        },
        {
          "id": "700",
          "name": "About Werewolves Assistant Component Sections should translate first section when rendered."
        },
        {
          "id": "701",
          "name": "About Werewolves Assistant Component Sections should translate second section when rendered."
        },
        {
          "id": "702",
          "name": "About Werewolves Assistant Component Sections should translate third section for each bullet item when rendered."
        },
        {
          "id": "703",
          "name": "About Werewolves Assistant Component Sections should translate fourth section when rendered."
        },
        {
          "id": "704",
          "name": "About Werewolves Assistant Component Sections Disclaimer should translate disclaimer title when rendered."
        },
        {
          "id": "705",
          "name": "About Werewolves Assistant Component Sections Disclaimer should translate disclaimer first section when rendered."
        },
        {
          "id": "706",
          "name": "About Werewolves Assistant Component Sections Disclaimer should translate disclaimer second section when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport { expect } from \"vitest\";\n\nimport AboutWerewolvesAssistant from \"~/components/pages/about/AboutWerewolvesAssistant.vue\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"About Werewolves Assistant Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof AboutWerewolvesAssistant>>;\n\n  beforeEach(async() => {\n    wrapper = await mountSuspendedComponent(AboutWerewolvesAssistant);\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Title\", () => {\n    it(\"should display translated title when rendered.\", () => {\n      const title = wrapper.find<HTMLHeadElement>(\"#about-werewolves-assistant-title\");\n\n      expect(title.text()).toBe(\"The Werewolves Assistant takes the stage !\");\n    });\n  });\n\n  describe(\"Sections\", () => {\n    it(\"should translate first section when rendered.\", () => {\n      const firstSection = wrapper.find<HTMLParagraphElement>(\"#about-werewolves-assistant-first-section\");\n\n      expect(firstSection.text()).toBe(\"To ease the heavy task that falls on the game master when hosting a Werewolves game, \" +\n      \"the Werewolves Assistant proves to be the ideal tool !\");\n    });\n\n    it(\"should translate second section when rendered.\", () => {\n      const secondSection = wrapper.find<HTMLParagraphElement>(\"#about-werewolves-assistant-second-section\");\n\n      expect(secondSection.text()).toBe(\"This Assistant offers a variety of features, including:\");\n    });\n\n    it(\"should translate third section for each bullet item when rendered.\", () => {\n      const thirdSection = wrapper.find<HTMLUListElement>(\"#about-werewolves-assistant-third-section\");\n      const thirdSectionBulletItems = thirdSection.findAll<HTMLLIElement>(\"li\");\n\n      expect(thirdSectionBulletItems).toHaveLength(5);\n      expect(thirdSectionBulletItems[0].text()).toBe(\"A game composition screen allowing the creation of sessions for 4 to 40 players, \" +\n      \"with the option to randomly assign roles.\");\n      expect(thirdSectionBulletItems[1].text()).toBe(\"A playful game tracking interface, providing a pleasant visual experience.\");\n      expect(thirdSectionBulletItems[2].text()).toBe(\"For each key event, the ability to input players' choices, such as the selection of \" +\n      \"the Werewolves' target or the election of the mayor.\");\n      expect(thirdSectionBulletItems[3].text()).toBe(\"The Assistant handles the scheduling of game turns, displaying deaths and other events, \" +\n      \"as well as retaining all choices made during the game.\");\n      expect(thirdSectionBulletItems[4].text()).toBe(\"At the end of the game, a summary is generated, indicating the victorious camp and \" +\n      \"providing a complete history of past actions.\");\n    });\n\n    it(\"should translate fourth section when rendered.\", () => {\n      const fourthSection = wrapper.find<HTMLParagraphElement>(\"#about-werewolves-assistant-fourth-section\");\n\n      expect(fourthSection.text()).toBe(\"In summary, the Werewolves Assistant invites you to (re)discover the joy of taking on the role of the game master in a Werewolves \" +\n      \"game. Accessible from any device with an internet browser, this tool is and will remain entirely FREE.\");\n    });\n\n    describe(\"Disclaimer\", () => {\n      it(\"should translate disclaimer title when rendered.\", () => {\n        const disclaimerTitle = wrapper.find<HTMLParagraphElement>(\"#about-werewolves-assistant-disclaimer-title\");\n\n        expect(disclaimerTitle.text()).toBe(\"However, please be aware\");\n      });\n\n      it(\"should translate disclaimer first section when rendered.\", () => {\n        const disclaimerFirstSection = wrapper.find<HTMLParagraphElement>(\"#about-werewolves-assistant-disclaimer-first-section\");\n\n        expect(disclaimerFirstSection.text()).toBe(\"The Werewolves Assistant has no intention of replacing the original \" +\n        \"Werewolves of Miller's Hollow™ game. Its use requires prior possession of a game with its cards.\");\n      });\n\n      it(\"should translate disclaimer second section when rendered.\", () => {\n        const disclaimerSecondSection = wrapper.find<HTMLParagraphElement>(\"#about-werewolves-assistant-disclaimer-second-section\");\n\n        expect(disclaimerSecondSection.text()).toBe(\"It is important to emphasize that the Assistant positions itself as an exclusive aid \" +\n        \"to the game master, facilitating game management without altering the essence and experience unique to the original board game. \" +\n        \"Thus, it complements and enhances the game's dynamics while preserving its authentic character.\");\n      });\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundHeader/GamePlaygroundHeaderCard/GamePlaygroundHeaderCard.nuxt.spec.ts": {
      "tests": [
        {
          "id": "707",
          "name": "Game Playground Header Card Component should match snapshot when rendered."
        },
        {
          "id": "708",
          "name": "Game Playground Header Card Component Role Image 'should pass the villager role name to…'"
        },
        {
          "id": "709",
          "name": "Game Playground Header Card Component Role Image 'should pass the werewolf role name to…'"
        },
        {
          "id": "710",
          "name": "Game Playground Header Card Component Role Image 'should pass the witch role name to th…'"
        },
        {
          "id": "711",
          "name": "Game Playground Header Card Component Role Image 'should pass the seer role name to the…'"
        },
        {
          "id": "712",
          "name": "Game Playground Header Card Component Role Image 'should pass the hunter role name to t…'"
        },
        {
          "id": "713",
          "name": "Game Playground Header Card Component Role Image should pass undefined to the role image component when the current play is not set."
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\n\nimport GamePlaygroundHeaderCard from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundHeader/GamePlaygroundHeaderCard/GamePlaygroundHeaderCard.vue\";\nimport RoleImage from \"~/components/shared/role/RoleImage/RoleImage.vue\";\nimport type { GamePlaySourceName } from \"~/composables/api/game/types/game-play/game-play-source/game-play-source.types\";\nimport type { RoleName } from \"~/composables/api/role/types/role.types\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\nimport { createFakeGamePlaySource } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source.factory\";\nimport { createFakeGamePlay } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play.factory\";\nimport { createFakeGame } from \"~/tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Playground Header Card Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GamePlaygroundHeaderCard>>;\n  const testingPinia = {\n    initialState: {\n      [StoreIds.GAME]: {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlay({\n            source: createFakeGamePlaySource({ name: \"sheriff\" }),\n            action: \"delegate\",\n          }),\n        }),\n      },\n    },\n  };\n\n  async function mountGamePlaygroundHeaderCard(): Promise<ReturnType<typeof mount<typeof GamePlaygroundHeaderCard>>> {\n    return mountSuspendedComponent(GamePlaygroundHeaderCard, { global: { plugins: [createTestingPinia(testingPinia)] } });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGamePlaygroundHeaderCard();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Role Image\", () => {\n    it.each<{\n      sourceName: GamePlaySourceName;\n      expectedRoleImageRoleName: RoleName;\n      test: string;\n    }>([\n      {\n        sourceName: \"sheriff\",\n        expectedRoleImageRoleName: \"villager\",\n        test: \"should pass the villager role name to the role image component when the current play source name is sheriff.\",\n      },\n      {\n        sourceName: \"survivors\",\n        expectedRoleImageRoleName: \"villager\",\n        test: \"should pass the villager role name to the role image component when the current play source name is survivors.\",\n      },\n      {\n        sourceName: \"charmed\",\n        expectedRoleImageRoleName: \"villager\",\n        test: \"should pass the villager role name to the role image component when the current play source name is charmed.\",\n      },\n      {\n        sourceName: \"lovers\",\n        expectedRoleImageRoleName: \"villager\",\n        test: \"should pass the villager role name to the role image component when the current play source name is lovers.\",\n      },\n      {\n        sourceName: \"werewolves\",\n        expectedRoleImageRoleName: \"werewolf\",\n        test: \"should pass the werewolf role name to the role image component when the current play source name is werewolf.\",\n      },\n      {\n        sourceName: \"witch\",\n        expectedRoleImageRoleName: \"witch\",\n        test: \"should pass the witch role name to the role image component when the current play source name is witch.\",\n      },\n      {\n        sourceName: \"seer\",\n        expectedRoleImageRoleName: \"seer\",\n        test: \"should pass the seer role name to the role image component when the current play source name is seer.\",\n      },\n      {\n        sourceName: \"hunter\",\n        expectedRoleImageRoleName: \"hunter\",\n        test: \"should pass the hunter role name to the role image component when the current play source name is hunter.\",\n      },\n    ])(\"$test\", async({ sourceName, expectedRoleImageRoleName }) => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlay({ source: createFakeGamePlaySource({ name: sourceName }) });\n      await nextTick();\n      const roleImage = wrapper.findComponent<typeof RoleImage>(RoleImage);\n\n      expect(roleImage.props(\"roleName\")).toBe(expectedRoleImageRoleName);\n    });\n\n    it(\"should pass undefined to the role image component when the current play is not set.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = null;\n      await nextTick();\n      const roleImage = wrapper.findComponent<typeof RoleImage>(RoleImage);\n\n      expect(roleImage.props(\"roleName\")).toBeUndefined();\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyPlayersParty/GameLobbyPlayerCard/GameLobbyPlayerCard.nuxt.spec.ts": {
      "tests": [
        {
          "id": "714",
          "name": "Game Lobby Player Card Component should match snapshot when rendered."
        },
        {
          "id": "715",
          "name": "Game Lobby Player Card Component should match snapshot when rendered without shallow."
        },
        {
          "id": "716",
          "name": "Game Lobby Player Card Component Delete button should have translated tooltip with player name when rendered."
        },
        {
          "id": "717",
          "name": "Game Lobby Player Card Component Delete button should remove player from party when clicked."
        },
        {
          "id": "718",
          "name": "Game Lobby Player Card Component Role should translate role not selected when player doesn't have role yet."
        },
        {
          "id": "719",
          "name": "Game Lobby Player Card Component Role should translate role when player has role."
        },
        {
          "id": "720",
          "name": "Game Lobby Player Card Component Emits should emit pickRoleForPlayer event when player card is selected."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type Button from \"primevue/button\";\nimport type { Mock } from \"vitest\";\n\nimport type { GameLobbyPlayerCardProps } from \"~/components/pages/game-lobby/GameLobbyPlayersParty/GameLobbyPlayerCard/game-lobby-player-card.types\";\nimport GameLobbyPlayerCard from \"~/components/pages/game-lobby/GameLobbyPlayersParty/GameLobbyPlayerCard/GameLobbyPlayerCard.vue\";\nimport type { CreateGamePlayerDto } from \"~/composables/api/game/dto/create-game/create-game-player/create-game-player.dto\";\nimport * as UseRoleName from \"~/composables/api/role/useRoleName\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGamePlayerDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game-player/create-game-player.dto.factory\";\nimport { pTooltipDirectiveBinder } from \"~/tests/unit/utils/helpers/directive.helpers\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { BoundTooltip } from \"~/tests/unit/utils/types/directive.types\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Player Card Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyPlayerCard>>;\n  const defaultProps: GameLobbyPlayerCardProps = {\n    player: createFakeCreateGamePlayerDto({\n      name: \"Toto\",\n      role: { name: \"werewolf\" },\n    }),\n  };\n  let mocks: {\n    composables: {\n      useRoleName: {\n        getRoleNameLabel: Mock;\n        getDefiniteRoleNameLabel: Mock;\n      }\n    }\n  };\n\n  beforeEach(async() => {\n    mocks = {\n      composables: {\n        useRoleName: {\n          getRoleNameLabel: vi.fn(),\n          getDefiniteRoleNameLabel: vi.fn(),\n        },\n      },\n    };\n    vi.spyOn(UseRoleName, \"useRoleName\").mockImplementation(() => mocks.composables.useRoleName);\n    wrapper = await mountSuspendedComponent(GameLobbyPlayerCard, { props: defaultProps });\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  it(\"should match snapshot when rendered without shallow.\", async() => {\n    wrapper = await mountSuspendedComponent(GameLobbyPlayerCard, { props: defaultProps, shallow: false });\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Delete button\", () => {\n    it(\"should have translated tooltip with player name when rendered.\", async() => {\n      const tooltip: BoundTooltip = { value: undefined };\n      const directives = { ...pTooltipDirectiveBinder(tooltip, \"[aria-label='Remove player Toto']\") };\n      wrapper = await mountSuspendedComponent(GameLobbyPlayerCard, { props: defaultProps, global: { directives } });\n\n      expect(tooltip.value).toBe(\"Remove player Toto\");\n    });\n\n    it(\"should remove player from party when clicked.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const deleteButton = wrapper.findComponent<Button>(\"[aria-label='Remove player Toto']\");\n      await deleteButton.trigger(\"click\");\n\n      expect(createGameDtoStore.removePlayerFromCreateGameDto).toHaveBeenCalledExactlyOnceWith(defaultProps.player.name);\n    });\n  });\n\n  describe(\"Role\", () => {\n    it(\"should translate role not selected when player doesn't have role yet.\", async() => {\n      wrapper = await mountSuspendedComponent(GameLobbyPlayerCard, { props: { player: createFakeCreateGamePlayerDto({ name: \"Toto\" }) } });\n      const role = wrapper.find<HTMLSpanElement>(\".player-card-role\");\n\n      expect(role.text()).toBe(\"components.GameLobbyPlayerCard.roleNotSelected\");\n    });\n\n    it(\"should translate role when player has role.\", async() => {\n      mocks.composables.useRoleName.getRoleNameLabel.mockReturnValue(\"Translated Role\");\n      wrapper = await mountSuspendedComponent(GameLobbyPlayerCard, { props: defaultProps });\n      const role = wrapper.find<HTMLSpanElement>(\".player-card-role\");\n\n      expect(role.text()).toBe(\"Translated Role\");\n    });\n  });\n\n  describe(\"Emits\", () => {\n    it(\"should emit pickRoleForPlayer event when player card is selected.\", () => {\n      const playerCard = wrapper.findComponent<typeof GameLobbyPlayerCard>(\".player-card\");\n      (playerCard.vm as VueVm).$emit(\"player-card-selector-click\", defaultProps.player);\n      const emittedEvents = wrapper.emitted(\"pickRoleForPlayer\");\n\n      expect(emittedEvents).toHaveLength(1);\n      expect(emittedEvents?.[0]).toStrictEqual<CreateGamePlayerDto[]>([defaultProps.player]);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabPrejudicedManipulator/GameLobbyOptionsHubRolesTabPrejudicedManipulator.nuxt.spec.ts": {
      "tests": [
        {
          "id": "721",
          "name": "Game Lobby Options Hub Roles Tab Prejudiced Manipulator Component should match snapshot when rendered."
        },
        {
          "id": "722",
          "name": "Game Lobby Options Hub Roles Tab Prejudiced Manipulator Component Is powerless on Werewolves Side option should translate option label when rendered."
        },
        {
          "id": "723",
          "name": "Game Lobby Options Hub Roles Tab Prejudiced Manipulator Component Is powerless on Werewolves Side option should translate option description when the option is activated."
        },
        {
          "id": "724",
          "name": "Game Lobby Options Hub Roles Tab Prejudiced Manipulator Component Is powerless on Werewolves Side option should translate option description when the option is deactivated."
        },
        {
          "id": "725",
          "name": "Game Lobby Options Hub Roles Tab Prejudiced Manipulator Component Is powerless on Werewolves Side option should update the create game dto store when the option is toggled."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport GameLobbyOptionsHubRolesTabPrejudicedManipulator from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabPrejudicedManipulator/GameLobbyOptionsHubRolesTabPrejudicedManipulator.vue\";\nimport type AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport type GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGameDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Options Hub Roles Tab Prejudiced Manipulator Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabPrejudicedManipulator>>;\n\n  async function mountGameLobbyOptionsHubRolesTabPrejudicedManipulatorComponent(options: ComponentMountingOptions<typeof GameLobbyOptionsHubRolesTabPrejudicedManipulator> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabPrejudicedManipulator>>> {\n    return mountSuspendedComponent(GameLobbyOptionsHubRolesTabPrejudicedManipulator, {\n      global: {\n        stubs: {\n          Fieldset: false,\n          GameOptionInputGroup: false,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyOptionsHubRolesTabPrejudicedManipulatorComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Is powerless on Werewolves Side option\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const inputGroupId = \"game-lobby-options-hub-roles-tab-prejudiced-manipulator-is-powerless-on-werewolves-side-input-group\";\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(`#${inputGroupId}`);\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"The Prejudiced Manipulator is powerless on the Werewolves side\");\n    });\n\n    it(\"should translate option description when the option is activated.\", () => {\n      const inputGroupId = \"game-lobby-options-hub-roles-tab-prejudiced-manipulator-is-powerless-on-werewolves-side-input-group\";\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(`#${inputGroupId}`);\n      const expectedDescription = \"components.GameLobbyOptionsHubRolesTabPrejudicedManipulator.options.isPowerlessOnWerewolvesSide.descriptions.yes\";\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(expectedDescription);\n    });\n\n    it(\"should translate option description when the option is deactivated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.prejudicedManipulator.isPowerlessOnWerewolvesSide = false;\n      await nextTick();\n      const inputGroupId = \"game-lobby-options-hub-roles-tab-prejudiced-manipulator-is-powerless-on-werewolves-side-input-group\";\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(`#${inputGroupId}`);\n      const expectedDescription = \"components.GameLobbyOptionsHubRolesTabPrejudicedManipulator.options.isPowerlessOnWerewolvesSide.descriptions.no\";\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(expectedDescription);\n    });\n\n    it(\"should update the create game dto store when the option is toggled.\", async() => {\n      const inputId = \"game-lobby-options-hub-roles-tab-prejudiced-manipulator-is-powerless-on-werewolves-side-input\";\n      const toggleButton = wrapper.findComponent<typeof AffirmativeToggleButton>(`#${inputId}`);\n      const createGameDtoStore = useCreateGameDtoStore();\n      (toggleButton.vm as VueVm).$emit(\"update:modelValue\", false);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.prejudicedManipulator.isPowerlessOnWerewolvesSide = false;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameVotePlayground/GameVotePlaygroundVoters/GameVotePlaygroundVoters.nuxt.spec.ts": {
      "tests": [
        {
          "id": "726",
          "name": "Game Vote Playground Voter Component should match snapshot when rendered."
        },
        {
          "id": "727",
          "name": "Game Vote Playground Voter Component No voters should render no voters message when current play is not defined."
        },
        {
          "id": "728",
          "name": "Game Vote Playground Voter Component No voters should render no voters message when current play is defined but there are no expected players to vote."
        },
        {
          "id": "729",
          "name": "Game Vote Playground Voter Component No voters should render translated no voters message when current play is not defined."
        },
        {
          "id": "730",
          "name": "Game Vote Playground Voter Component Voters should render shuffled voters when current play is defined and there are expected players to vote."
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\nimport { vi } from \"vitest\";\nimport type Radash from \"radash\";\n\nimport GamePlaygroundPlayerCard from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GamePlaygroundPlayerCard/GamePlaygroundPlayerCard.vue\";\nimport GameVotePlaygroundVoters from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameVotePlayground/GameVotePlaygroundVoters/GameVotePlaygroundVoters.vue\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\nimport { createFakeGamePlaySource } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source.factory\";\nimport { createFakeGamePlay } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play.factory\";\nimport { createFakeGame } from \"~/tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { createFakeSeerAlivePlayer } from \"~/tests/unit/utils/factories/composables/api/game/player/player-with-role.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\nconst { radash: mockedRadash } = vi.hoisted(() => ({ radash: { shuffle: vi.fn() } }));\n\nvi.mock(\"radash\", async importOriginal => ({\n  ...await importOriginal<typeof Radash>(),\n  shuffle: vi.fn(mockedRadash.shuffle),\n}));\n\ndescribe(\"Game Vote Playground Voter Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameVotePlaygroundVoters>>;\n  const testingPinia = { initialState: { [StoreIds.GAME]: { game: createFakeGame() } } };\n\n  async function mountGameVotePlaygroundVotersComponent(): Promise<ReturnType<typeof mount<typeof GameVotePlaygroundVoters>>> {\n    return mountSuspendedComponent(GameVotePlaygroundVoters, { global: { plugins: [createTestingPinia(testingPinia)] } });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameVotePlaygroundVotersComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"No voters\", () => {\n    it(\"should render no voters message when current play is not defined.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = null;\n      await nextTick();\n      const noVotersContainer = wrapper.find<HTMLDivElement>(\"#no-voters\");\n\n      expect(noVotersContainer.exists()).toBeTruthy();\n    });\n\n    it(\"should render no voters message when current play is defined but there are no expected players to vote.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlay({ source: createFakeGamePlaySource({ players: [] }) });\n      await nextTick();\n      const noVotersContainer = wrapper.find<HTMLDivElement>(\"#no-voters\");\n\n      expect(noVotersContainer.exists()).toBeTruthy();\n    });\n\n    it(\"should render translated no voters message when current play is not defined.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = null;\n      await nextTick();\n      const noVotersContainer = wrapper.find<HTMLDivElement>(\"#no-voters\");\n\n      expect(noVotersContainer.text()).toBe(\"Nobody can vote…\");\n    });\n  });\n\n  describe(\"Voters\", () => {\n    it(\"should render shuffled voters when current play is defined and there are expected players to vote.\", async() => {\n      const expectedPlayersToVote = [\n        createFakeSeerAlivePlayer(),\n        createFakeSeerAlivePlayer(),\n        createFakeSeerAlivePlayer(),\n      ];\n      const shuffledPlayers = [\n        createFakeSeerAlivePlayer(),\n        createFakeSeerAlivePlayer(),\n        createFakeSeerAlivePlayer(),\n      ];\n      mockedRadash.shuffle.mockReturnValue(shuffledPlayers);\n      wrapper = await mountGameVotePlaygroundVotersComponent();\n      const gameStore = useGameStore();\n      gameStore.game.currentPlay = createFakeGamePlay({ source: createFakeGamePlaySource({ players: expectedPlayersToVote }) });\n      await nextTick();\n      const voters = wrapper.findAllComponents<typeof GamePlaygroundPlayerCard>(GamePlaygroundPlayerCard);\n\n      expect(voters).toHaveLength(shuffledPlayers.length);\n      expect(voters[0].props(\"player\")).toBe(shuffledPlayers[0]);\n      expect(voters[1].props(\"player\")).toBe(shuffledPlayers[1]);\n      expect(voters[2].props(\"player\")).toBe(shuffledPlayers[2]);\n    });\n  });\n});"
    },
    "tests/unit/specs/pages/game/game-page.nuxt.spec.ts": {
      "tests": [
        {
          "id": "731",
          "name": "Game Page should match snapshot when rendered."
        },
        {
          "id": "732",
          "name": "Game Page should set head title and meta tags when rendered."
        },
        {
          "id": "733",
          "name": "Game Page should fetch and set game in store when rendered with valid game id as string."
        },
        {
          "id": "734",
          "name": "Game Page should fetch and set game in store when rendered with valid game id as array of strings."
        },
        {
          "id": "735",
          "name": "Game Page Game Status Containers should render game is loading container when game fetching status is pending."
        },
        {
          "id": "736",
          "name": "Game Page Game Status Containers should render loading game spinner with text when game fetching status is pending."
        },
        {
          "id": "737",
          "name": "Game Page Game Status Containers should render game not found when game fetching status is error."
        },
        {
          "id": "738",
          "name": "Game Page Game Status Containers should render playing game when game fetching status is success and game status is playing."
        },
        {
          "id": "739",
          "name": "Game Page Game Status Containers should render game over when game fetching status is success and game status is over."
        },
        {
          "id": "740",
          "name": "Game Page Game Status Containers should render game canceled when game fetching status is success and game status is canceled."
        }
      ],
      "source": "import { mockNuxtImport } from \"@nuxt/test-utils/runtime\";\nimport type { mount } from \"@vue/test-utils\";\nimport type { UseHeadInput } from \"unhead\";\nimport { expect } from \"vitest\";\n\nimport GameCanceled from \"~/components/pages/game/GameCanceled/GameCanceled.vue\";\nimport type GameNotFound from \"~/components/pages/game/GameNotFound/GameNotFound.vue\";\nimport GameOver from \"~/components/pages/game/GameOver/GameOver.vue\";\nimport GamePlaying from \"~/components/pages/game/GamePlaying/GamePlaying.vue\";\nimport type TextProgressSpinner from \"~/components/shared/misc/TextProgressSpinner/TextProgressSpinner.vue\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\nimport { createFakeUseRoute } from \"~/tests/unit/utils/factories/composables/nuxt/useRoute.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport GamePage from \"~/pages/game/[id].vue\";\n\nconst hoistedMocks = vi.hoisted(() => ({ useRoute: {} as ReturnType<typeof createFakeUseRoute> }));\n\ndescribe(\"Game Page\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GamePage>>;\n\n  beforeAll(() => {\n    mockNuxtImport<typeof useRoute>(\"useRoute\", () => vi.fn(() => createFakeUseRoute(hoistedMocks.useRoute)));\n  });\n\n  beforeEach(async() => {\n    hoistedMocks.useRoute.params = { id: \"1\" };\n    wrapper = await mountSuspendedComponent(GamePage);\n    const gameStore = useGameStore();\n    gameStore.fetchingGameStatus = \"pending\";\n    await nextTick();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  it(\"should set head title and meta tags when rendered.\", () => {\n    const expectedUseHeadInput: UseHeadInput<object> = {\n      title: \"pages.game.playingGame\",\n      meta: [{ name: \"robots\", content: \"noindex, nofollow\" }],\n    };\n\n    expect(useHead).toHaveBeenCalledExactlyOnceWith(expectedUseHeadInput);\n  });\n\n  it(\"should fetch and set game in store when rendered with valid game id as string.\", () => {\n    const gameStore = useGameStore();\n\n    expect(gameStore.fetchAndSetGame).toHaveBeenCalledExactlyOnceWith(\"1\");\n  });\n\n  it(\"should fetch and set game in store when rendered with valid game id as array of strings.\", async() => {\n    hoistedMocks.useRoute.params.id = [\"4\", \"2\", \"3\"];\n    wrapper = await mountSuspendedComponent(GamePage);\n    const gameStore = useGameStore();\n\n    expect(gameStore.fetchAndSetGame).toHaveBeenCalledExactlyOnceWith(\"4\");\n  });\n\n  describe(\"Game Status Containers\", () => {\n    it(\"should render game is loading container when game fetching status is pending.\", () => {\n      expect(wrapper.find<HTMLDivElement>(\"#loading-game-container\").exists()).toBeTruthy();\n    });\n\n    it(\"should render loading game spinner with text when game fetching status is pending.\", () => {\n      const loadingGameSpinner = wrapper.findComponent<typeof TextProgressSpinner>(\"#loading-game-spinner\");\n\n      expect(loadingGameSpinner.props(\"text\")).toBe(\"Loading game…\");\n    });\n\n    it(\"should render game not found when game fetching status is error.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.fetchingGameStatus = \"error\";\n      await nextTick();\n\n      expect(wrapper.findComponent<typeof GameNotFound>(\"#game-not-found\").exists()).toBeTruthy();\n    });\n\n    it(\"should render playing game when game fetching status is success and game status is playing.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.fetchingGameStatus = \"success\";\n      gameStore.game.status = \"playing\";\n      await nextTick();\n\n      expect(wrapper.findComponent<typeof GamePlaying>(GamePlaying).exists()).toBeTruthy();\n    });\n\n    it(\"should render game over when game fetching status is success and game status is over.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.fetchingGameStatus = \"success\";\n      gameStore.game.status = \"over\";\n      await nextTick();\n\n      expect(wrapper.findComponent<typeof GameOver>(GameOver).exists()).toBeTruthy();\n    });\n\n    it(\"should render game canceled when game fetching status is success and game status is canceled.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.fetchingGameStatus = \"success\";\n      gameStore.game.status = \"canceled\";\n      await nextTick();\n\n      expect(wrapper.findComponent<typeof GameCanceled>(GameCanceled).exists()).toBeTruthy();\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWildChild/GameLobbyOptionsHubRolesTabWildChild.nuxt.spec.ts": {
      "tests": [
        {
          "id": "741",
          "name": "Game Lobby Options Hub Roles Tab Wild Child Component should match snapshot when rendered."
        },
        {
          "id": "742",
          "name": "Game Lobby Options Hub Roles Tab Wild Child Component Is Transformation revealed option should translate option label when rendered."
        },
        {
          "id": "743",
          "name": "Game Lobby Options Hub Roles Tab Wild Child Component Is Transformation revealed option should translate option description when the option is activated."
        },
        {
          "id": "744",
          "name": "Game Lobby Options Hub Roles Tab Wild Child Component Is Transformation revealed option should translate option description when the option is deactivated."
        },
        {
          "id": "745",
          "name": "Game Lobby Options Hub Roles Tab Wild Child Component Is Transformation revealed option should update the create game dto store when the option is changed by the affirmative toggle button."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport GameLobbyOptionsHubRolesTabWildChild from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWildChild/GameLobbyOptionsHubRolesTabWildChild.vue\";\nimport type AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport type GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGameDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Options Hub Roles Tab Wild Child Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabWildChild>>;\n\n  async function mountGameLobbyOptionsHubRolesTabWildChildComponent(options: ComponentMountingOptions<typeof GameLobbyOptionsHubRolesTabWildChild> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabWildChild>>> {\n    return mountSuspendedComponent(GameLobbyOptionsHubRolesTabWildChild, {\n      global: {\n        stubs: {\n          Fieldset: false,\n          GameOptionInputGroup: false,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyOptionsHubRolesTabWildChildComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Is Transformation revealed option\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-wild-child-is-transformation-revealed-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"The Wild Child's transformation is revealed\");\n    });\n\n    it(\"should translate option description when the option is activated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.wildChild.isTransformationRevealed = true;\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-wild-child-is-transformation-revealed-input-group\");\n      const expectedDescription = \"components.GameLobbyOptionsHubRolesTabWildChild.options.isTransformationRevealed.descriptions.yes\";\n      await nextTick();\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(expectedDescription);\n    });\n\n    it(\"should translate option description when the option is deactivated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.wildChild.isTransformationRevealed = false;\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-wild-child-is-transformation-revealed-input-group\");\n      const expectedDescription = \"components.GameLobbyOptionsHubRolesTabWildChild.options.isTransformationRevealed.descriptions.no\";\n      await nextTick();\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(expectedDescription);\n    });\n\n    it(\"should update the create game dto store when the option is changed by the affirmative toggle button.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const inputId = \"#game-lobby-options-hub-roles-tab-wild-child-is-transformation-revealed-input\";\n      const affirmativeToggleButton = wrapper.findComponent<typeof AffirmativeToggleButton>(inputId);\n      (affirmativeToggleButton.vm as VueVm).$emit(\"update:modelValue\", true);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.wildChild.isTransformationRevealed = true;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyPlayersParty/GameLobbyPlayersParty.nuxt.spec.ts": {
      "tests": [
        {
          "id": "746",
          "name": "Game Lobby Players Party Component should match snapshot when rendered."
        },
        {
          "id": "747",
          "name": "Game Lobby Players Party Component Player Cards should render add player with input message when there are no players in the create game dto."
        },
        {
          "id": "748",
          "name": "Game Lobby Players Party Component Player Cards should render no players in lobby when there are no players in the create game dto."
        },
        {
          "id": "749",
          "name": "Game Lobby Players Party Component Player Cards should render 4 players cards when there are 4 players in the create game dto."
        },
        {
          "id": "750",
          "name": "Game Lobby Players Party Component Emits should emit pickRoleForPlayer event when game lobby player card emits pick role for player event."
        },
        {
          "id": "751",
          "name": "Game Lobby Players Party Component Emits should not emit pickRoleForPlayer event when game lobby player card emits pick role for player event with undefined player."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\n\nimport GameLobbyPlayerCard from \"~/components/pages/game-lobby/GameLobbyPlayersParty/GameLobbyPlayerCard/GameLobbyPlayerCard.vue\";\nimport GameLobbyPlayersParty from \"~/components/pages/game-lobby/GameLobbyPlayersParty/GameLobbyPlayersParty.vue\";\nimport type { CreateGamePlayerDto } from \"~/composables/api/game/dto/create-game/create-game-player/create-game-player.dto\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGamePlayerDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game-player/create-game-player.dto.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Players Party Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyPlayersParty>>;\n\n  beforeEach(async() => {\n    wrapper = await mountSuspendedComponent(GameLobbyPlayersParty);\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Player Cards\", () => {\n    it(\"should render add player with input message when there are no players in the create game dto.\", () => {\n      const addPlayerWithInputMessage = wrapper.find<HTMLHeadingElement>(\"#no-players-in-lobby-message\");\n\n      expect(addPlayerWithInputMessage.exists()).toBeTruthy();\n    });\n\n    it(\"should render no players in lobby when there are no players in the create game dto.\", () => {\n      const playerCards = wrapper.findAllComponents<typeof GameLobbyPlayerCard>(GameLobbyPlayerCard);\n\n      expect(playerCards).toHaveLength(0);\n    });\n\n    it(\"should render 4 players cards when there are 4 players in the create game dto.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.players = [\n        createFakeCreateGamePlayerDto({ name: \"Player 1\" }),\n        createFakeCreateGamePlayerDto({ name: \"Player 2\" }),\n        createFakeCreateGamePlayerDto({ name: \"Player 3\" }),\n        createFakeCreateGamePlayerDto({ name: \"Player 4\" }),\n      ];\n      await nextTick();\n      const playerCards = wrapper.findAllComponents<typeof GameLobbyPlayerCard>(GameLobbyPlayerCard);\n\n      expect(playerCards).toHaveLength(4);\n    });\n  });\n\n  describe(\"Emits\", () => {\n    it(\"should emit pickRoleForPlayer event when game lobby player card emits pick role for player event.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.players = [\n        createFakeCreateGamePlayerDto({ name: \"Player 1\" }),\n        createFakeCreateGamePlayerDto({ name: \"Player 2\" }),\n        createFakeCreateGamePlayerDto({ name: \"Player 3\" }),\n        createFakeCreateGamePlayerDto({ name: \"Player 4\" }),\n      ];\n      await nextTick();\n      const emittedPlayer = createGameDtoStore.createGameDto.players[0];\n      const gameLobbyPlayerCards = wrapper.findAllComponents<typeof GameLobbyPlayerCard>(\".game-lobby-player-card\");\n      const playerCard = gameLobbyPlayerCards[0];\n      (playerCard.vm as VueVm).$emit(\"pick-role-for-player\", emittedPlayer);\n      const emittedEvents = wrapper.emitted(\"pickRoleForPlayer\");\n\n      expect(emittedEvents).toHaveLength(1);\n      expect(emittedEvents?.[0]).toStrictEqual<CreateGamePlayerDto[]>([emittedPlayer]);\n    });\n\n    it(\"should not emit pickRoleForPlayer event when game lobby player card emits pick role for player event with undefined player.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.players = [\n        createFakeCreateGamePlayerDto({ name: \"Player 1\" }),\n        createFakeCreateGamePlayerDto({ name: \"Player 2\" }),\n        createFakeCreateGamePlayerDto({ name: \"Player 3\" }),\n        createFakeCreateGamePlayerDto({ name: \"Player 4\" }),\n      ];\n      await nextTick();\n      const gameLobbyPlayerCards = wrapper.findAllComponents<typeof GameLobbyPlayerCard>(\".game-lobby-player-card\");\n      const playerCard = gameLobbyPlayerCards[0];\n      (playerCard.vm as VueVm).$emit(\"pick-role-for-player\", undefined);\n      const emittedEvents = wrapper.emitted(\"pickRoleForPlayer\");\n\n      expect(emittedEvents).toBeUndefined();\n    });\n  });\n});"
    },
    "tests/unit/specs/components/shared/role/RoleImage/RoleFlippingImage/RoleFlippingImage.nuxt.spec.ts": {
      "tests": [
        {
          "id": "752",
          "name": "Role Flipping Image Component should match snapshot when rendered."
        },
        {
          "id": "753",
          "name": "Role Flipping Image Component Flip Container should set flipped to false when rendered."
        },
        {
          "id": "754",
          "name": "Role Flipping Image Component Flip Container should set height and width from props when rendered."
        },
        {
          "id": "755",
          "name": "Role Flipping Image Component Flip Container Front Role Image should set front image role from props when rendered."
        },
        {
          "id": "756",
          "name": "Role Flipping Image Component Flip Container Front Role Image should set back flip to false when the role is updated twice in props."
        },
        {
          "id": "757",
          "name": "Role Flipping Image Component Flip Container Front Role Image should set front image role as the new role when the role is updated twice in props."
        },
        {
          "id": "758",
          "name": "Role Flipping Image Component Flip Container Back Role Image should set back image role as undefined when rendered."
        },
        {
          "id": "759",
          "name": "Role Flipping Image Component Flip Container Back Role Image should flip the card when the role is updated in props."
        },
        {
          "id": "760",
          "name": "Role Flipping Image Component Flip Container Back Role Image should set back image role as the new role when the role is updated in props."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport type { VueFlip } from \"#components\";\nimport type { RoleFlippingImageProps } from \"~/components/shared/role/RoleImage/RoleFlippingImage/role-flipping-image.types\";\nimport RoleFlippingImage from \"~/components/shared/role/RoleImage/RoleFlippingImage/RoleFlippingImage.vue\";\nimport type RoleImage from \"~/components/shared/role/RoleImage/RoleImage.vue\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Role Flipping Image Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof RoleFlippingImage>>;\n  const defaultProps: RoleFlippingImageProps = { roleName: \"werewolf\" };\n\n  async function mountRoleFlippingImageComponent(options: ComponentMountingOptions<typeof RoleFlippingImage> = {}): Promise<ReturnType<typeof mount<typeof RoleFlippingImage>>> {\n    return mountSuspendedComponent(RoleFlippingImage, {\n      shallow: false,\n      global: { stubs: { RoleImage: true } },\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountRoleFlippingImageComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Flip Container\", () => {\n    it(\"should set flipped to false when rendered.\", async() => {\n      wrapper = await mountRoleFlippingImageComponent({ shallow: true });\n\n      const flipContainer = wrapper.findComponent<typeof VueFlip>(\"#role-flipping-image\");\n\n      expect(flipContainer.attributes(\"modelvalue\")).toBe(\"false\");\n    });\n\n    it(\"should set height and width from props when rendered.\", async() => {\n      wrapper = await mountRoleFlippingImageComponent({\n        shallow: true,\n        props: {\n          ...defaultProps,\n          sizes: \"100px\",\n        },\n      });\n      const flipContainer = wrapper.findComponent<typeof VueFlip>(\"#role-flipping-image\");\n\n      expect(flipContainer.attributes(\"height\")).toBe(\"100px\");\n      expect(flipContainer.attributes(\"width\")).toBe(\"100px\");\n    });\n\n    describe(\"Front Role Image\", () => {\n      it(\"should set front image role from props when rendered.\", () => {\n        const frontRoleImage = wrapper.findComponent<typeof RoleImage>(\"#front-role-image\");\n\n        expect(frontRoleImage.props(\"roleName\")).toBe(\"werewolf\");\n      });\n\n      it(\"should set back flip to false when the role is updated twice in props.\", async() => {\n        wrapper = await mountRoleFlippingImageComponent({ shallow: true });\n        const flipContainer = wrapper.findComponent<typeof VueFlip>(\"#role-flipping-image\");\n        await wrapper.setProps({ roleName: \"villager\" });\n        await wrapper.setProps({ roleName: \"seer\" });\n\n        expect(flipContainer.attributes(\"modelvalue\")).toBe(\"false\");\n      });\n\n      it(\"should set front image role as the new role when the role is updated twice in props.\", async() => {\n        const frontRoleImage = wrapper.findComponent<typeof RoleImage>(\"#front-role-image\");\n        await wrapper.setProps({ roleName: \"villager\" });\n        await wrapper.setProps({ roleName: \"seer\" });\n\n        expect(frontRoleImage.props(\"roleName\")).toBe(\"seer\");\n      });\n    });\n\n    describe(\"Back Role Image\", () => {\n      it(\"should set back image role as undefined when rendered.\", () => {\n        const backRoleImage = wrapper.findComponent<typeof RoleImage>(\"#back-role-image\");\n\n        expect(backRoleImage.props(\"roleName\")).toBeUndefined();\n      });\n\n      it(\"should flip the card when the role is updated in props.\", async() => {\n        wrapper = await mountRoleFlippingImageComponent({ shallow: true });\n        const flipContainer = wrapper.findComponent<typeof VueFlip>(\"#role-flipping-image\");\n        await wrapper.setProps({ roleName: \"villager\" });\n\n        expect(flipContainer.attributes(\"modelvalue\")).toBe(\"true\");\n      });\n\n      it(\"should set back image role as the new role when the role is updated in props.\", async() => {\n        const backRoleImage = wrapper.findComponent<typeof RoleImage>(\"#back-role-image\");\n        await wrapper.setProps({ roleName: \"villager\" });\n\n        expect(backRoleImage.props(\"roleName\")).toBe(\"villager\");\n      });\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-history-record/useGameHistoryRecord.spec.ts": {
      "tests": [
        {
          "id": "761",
          "name": "Use Game History Record Spec didSourceSkipped 'should return true when called with v…'"
        },
        {
          "id": "762",
          "name": "Use Game History Record Spec didSourceSkipped 'should return true when called with t…'"
        },
        {
          "id": "763",
          "name": "Use Game History Record Spec didSourceSkipped 'should return true when called with r…'"
        },
        {
          "id": "764",
          "name": "Use Game History Record Spec didSourceSkipped 'should return true when called with c…'"
        },
        {
          "id": "765",
          "name": "Use Game History Record Spec didSourceSkipped 'should return false when called with …'"
        }
      ],
      "source": "import { useGameHistoryRecord } from \"~/composables/api/game/game-history-record/useGameHistoryRecord\";\nimport type { GameHistoryRecord } from \"~/composables/api/game/types/game-history-record/game-history-record.class\";\nimport { createFakeGameAdditionalCard } from \"~/tests/unit/utils/factories/composables/api/game/game-additional-card/game-additional-card.factory\";\nimport { createFakeGameHistoryRecordPlayTarget } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-target/game-history-record-play-target.factory\";\nimport { createFakeGameHistoryRecordPlayVote } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-vote/game-history-record-play-vote.factory\";\nimport { createFakeGameHistoryRecordPlay } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play.factory\";\nimport { createFakeGameHistoryRecord } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record.factory\";\n\ndescribe(\"Use Game History Record Spec\", () => {\n  describe(\"didSourceSkipped\", () => {\n    it.each<{\n      gameHistoryRecord: GameHistoryRecord\n      expected: boolean;\n      test: string;\n    }>([\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            type: \"vote\",\n            votes: undefined,\n          }),\n        }),\n        expected: true,\n        test: \"should return true when called with vote type and votes undefined.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            type: \"target\",\n            targets: undefined,\n          }),\n        }),\n        expected: true,\n        test: \"should return true when called with target type and targets undefined.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            type: \"request-another-vote\",\n            didJudgeRequestAnotherVote: undefined,\n          }),\n        }),\n        expected: true,\n        test: \"should return true when called with request-another-vote type and didJudgeRequestAnotherVote undefined.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            type: \"choose-card\",\n            chosenCard: undefined,\n          }),\n        }),\n        expected: true,\n        test: \"should return true when called with choose-card type and chosenCard undefined.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            type: \"vote\",\n            votes: [createFakeGameHistoryRecordPlayVote()],\n          }),\n        }),\n        expected: false,\n        test: \"should return false when called with vote type and votes are not empty.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            type: \"target\",\n            targets: [createFakeGameHistoryRecordPlayTarget()],\n          }),\n        }),\n        expected: false,\n        test: \"should return false when called with target type and targets are not empty.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            type: \"request-another-vote\",\n            didJudgeRequestAnotherVote: true,\n          }),\n        }),\n        expected: false,\n        test: \"should return false when called with request-another-vote type and didJudgeRequestAnotherVote is true.\",\n      },\n      {\n        gameHistoryRecord: createFakeGameHistoryRecord({\n          play: createFakeGameHistoryRecordPlay({\n            type: \"choose-card\",\n            chosenCard: createFakeGameAdditionalCard(),\n          }),\n        }),\n        expected: false,\n        test: \"should return false when called with choose-card type and chosenCard is not empty.\",\n      },\n    ])(\"$test\", ({ gameHistoryRecord, expected }) => {\n      expect(useGameHistoryRecord().didSourceSkipped(gameHistoryRecord)).toBe(expected);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabBearTamer/GameLobbyOptionsHubRolesTabBearTamer.nuxt.spec.ts": {
      "tests": [
        {
          "id": "766",
          "name": "Game Lobby Options Hub Tab Bear Tamer Component should match snapshot when rendered."
        },
        {
          "id": "767",
          "name": "Game Lobby Options Hub Tab Bear Tamer Component Does Growl on Werewolves Side option should translate option label when rendered."
        },
        {
          "id": "768",
          "name": "Game Lobby Options Hub Tab Bear Tamer Component Does Growl on Werewolves Side option should translate option description when the option is activated."
        },
        {
          "id": "769",
          "name": "Game Lobby Options Hub Tab Bear Tamer Component Does Growl on Werewolves Side option should translate option description when the option is deactivated."
        },
        {
          "id": "770",
          "name": "Game Lobby Options Hub Tab Bear Tamer Component Does Growl on Werewolves Side option should update create game dto store when the option is toggled."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport GameLobbyOptionsHubRolesTabBearTamer from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabBearTamer/GameLobbyOptionsHubRolesTabBearTamer.vue\";\nimport type AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport type GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGameDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Options Hub Tab Bear Tamer Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabBearTamer>>;\n\n  async function mountGameLobbyOptionsHubRolesTabBearTamerComponent(options: ComponentMountingOptions<typeof GameLobbyOptionsHubRolesTabBearTamer> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabBearTamer>>> {\n    return mountSuspendedComponent(GameLobbyOptionsHubRolesTabBearTamer, {\n      global: {\n        stubs: {\n          Fieldset: false,\n          GameOptionInputGroup: false,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyOptionsHubRolesTabBearTamerComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Does Growl on Werewolves Side option\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-bear-tamer-does-growl-on-werewolves-side-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"The Bear Tamer growls on the Werewolves side\");\n    });\n\n    it(\"should translate option description when the option is activated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.bearTamer.doesGrowlOnWerewolvesSide = true;\n      await nextTick();\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-bear-tamer-does-growl-on-werewolves-side-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabBearTamer.options.doesGrowlOnWerewolvesSide.descriptions.yes\");\n    });\n\n    it(\"should translate option description when the option is deactivated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.bearTamer.doesGrowlOnWerewolvesSide = false;\n      await nextTick();\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-bear-tamer-does-growl-on-werewolves-side-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabBearTamer.options.doesGrowlOnWerewolvesSide.descriptions.no\");\n    });\n\n    it(\"should update create game dto store when the option is toggled.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const toggleButton = wrapper.findComponent<typeof AffirmativeToggleButton>(\"#game-lobby-options-hub-roles-tab-bear-tamer-does-growl-on-werewolves-side-input\");\n      (toggleButton.vm as VueVm).$emit(\"update:modelValue\", false);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.bearTamer.doesGrowlOnWerewolvesSide = false;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabBigBadWolf/GameLobbyOptionsHubRolesTabBigBadWolf.nuxt.spec.ts": {
      "tests": [
        {
          "id": "771",
          "name": "Game Lobby Options Hub Roles Tab Big Bad Wolf Component should match snapshot when rendered."
        },
        {
          "id": "772",
          "name": "Game Lobby Options Hub Roles Tab Big Bad Wolf Component Is Powerless if one Werewolf dies option should translate option label when rendered."
        },
        {
          "id": "773",
          "name": "Game Lobby Options Hub Roles Tab Big Bad Wolf Component Is Powerless if one Werewolf dies option should translate option description when the option is activated."
        },
        {
          "id": "774",
          "name": "Game Lobby Options Hub Roles Tab Big Bad Wolf Component Is Powerless if one Werewolf dies option should translate option description when the option is deactivated."
        },
        {
          "id": "775",
          "name": "Game Lobby Options Hub Roles Tab Big Bad Wolf Component Is Powerless if one Werewolf dies option should update the create game dto store when the option is toggled."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport GameLobbyOptionsHubRolesTabBigBadWolf from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabBigBadWolf/GameLobbyOptionsHubRolesTabBigBadWolf.vue\";\nimport type AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport type GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGameDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Options Hub Roles Tab Big Bad Wolf Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabBigBadWolf>>;\n\n  async function mountComponent(options: ComponentMountingOptions<typeof GameLobbyOptionsHubRolesTabBigBadWolf> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabBigBadWolf>>> {\n    return mountSuspendedComponent(GameLobbyOptionsHubRolesTabBigBadWolf, {\n      global: {\n        stubs: {\n          Fieldset: false,\n          GameOptionInputGroup: false,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Is Powerless if one Werewolf dies option\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-big-bad-wolf-is-powerless-if-werewolf-dies-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"The Big Bad Wolf is powerless if a Werewolf dies\");\n    });\n\n    it(\"should translate option description when the option is activated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.bigBadWolf.isPowerlessIfWerewolfDies = true;\n      await nextTick();\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-big-bad-wolf-is-powerless-if-werewolf-dies-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabBigBadWolf.options.isPowerlessIfWerewolfDies.descriptions.yes\");\n    });\n\n    it(\"should translate option description when the option is deactivated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.bigBadWolf.isPowerlessIfWerewolfDies = false;\n      await nextTick();\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-big-bad-wolf-is-powerless-if-werewolf-dies-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabBigBadWolf.options.isPowerlessIfWerewolfDies.descriptions.no\");\n    });\n\n    it(\"should update the create game dto store when the option is toggled.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const toggleButton = wrapper.findComponent<typeof AffirmativeToggleButton>(\"#game-lobby-options-hub-roles-tab-big-bad-wolf-is-powerless-if-werewolf-dies-input\");\n      (toggleButton.vm as VueVm).$emit(\"update:modelValue\", false);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.bigBadWolf.isPowerlessIfWerewolfDies = false;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWitch/GameLobbyOptionsHubRolesTabWitch.nuxt.spec.ts": {
      "tests": [
        {
          "id": "776",
          "name": "Game Lobby Options Hub Roles Tab Witch Component should match snapshot when rendered."
        },
        {
          "id": "777",
          "name": "Game Lobby Options Hub Roles Tab Witch Component Does know Werewolves targets option should translate option label when rendered."
        },
        {
          "id": "778",
          "name": "Game Lobby Options Hub Roles Tab Witch Component Does know Werewolves targets option should translate option description when the option is activated."
        },
        {
          "id": "779",
          "name": "Game Lobby Options Hub Roles Tab Witch Component Does know Werewolves targets option should translate option description when the option is deactivated."
        },
        {
          "id": "780",
          "name": "Game Lobby Options Hub Roles Tab Witch Component Does know Werewolves targets option should update the create game dto store when the option is changed by the affirmative toggle button."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport GameLobbyOptionsHubRolesTabWitch from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabWitch/GameLobbyOptionsHubRolesTabWitch.vue\";\nimport type AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport type GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGameDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Options Hub Roles Tab Witch Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabWitch>>;\n\n  async function mountGameLobbyOptionsHubRolesTabWitchComponent(options: ComponentMountingOptions<typeof GameLobbyOptionsHubRolesTabWitch> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabWitch>>> {\n    return mountSuspendedComponent(GameLobbyOptionsHubRolesTabWitch, {\n      global: {\n        stubs: {\n          Fieldset: false,\n          GameOptionInputGroup: false,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyOptionsHubRolesTabWitchComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Does know Werewolves targets option\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-witch-does-know-werewolves-targets-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"The Witch knows the Werewolves targets\");\n    });\n\n    it(\"should translate option description when the option is activated.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-witch-does-know-werewolves-targets-input-group\");\n      const expectedDescription = \"components.GameLobbyOptionsHubRolesTabWitch.options.doesKnowWerewolvesTargets.descriptions.yes\";\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(expectedDescription);\n    });\n\n    it(\"should translate option description when the option is deactivated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.witch.doesKnowWerewolvesTargets = false;\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-witch-does-know-werewolves-targets-input-group\");\n      const expectedDescription = \"components.GameLobbyOptionsHubRolesTabWitch.options.doesKnowWerewolvesTargets.descriptions.no\";\n      await nextTick();\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(expectedDescription);\n    });\n\n    it(\"should update the create game dto store when the option is changed by the affirmative toggle button.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const toggleButtonId = \"#game-lobby-options-hub-roles-tab-witch-does-know-werewolves-targets-input\";\n      const affirmativeToggleButton = wrapper.findComponent<typeof AffirmativeToggleButton>(toggleButtonId);\n      (affirmativeToggleButton.vm as VueVm).$emit(\"update:modelValue\", false);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.witch.doesKnowWerewolvesTargets = false;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabActor/GameLobbyOptionsHubRolesTabActor.nuxt.spec.ts": {
      "tests": [
        {
          "id": "781",
          "name": "Game Lobby Options Hub Roles Tab Actor Component should match snapshot when rendered."
        },
        {
          "id": "782",
          "name": "Game Lobby Options Hub Roles Tab Actor Component Is powerless on werewolves side option should translate option label when rendered."
        },
        {
          "id": "783",
          "name": "Game Lobby Options Hub Roles Tab Actor Component Is powerless on werewolves side option should translate option description when the option is activated."
        },
        {
          "id": "784",
          "name": "Game Lobby Options Hub Roles Tab Actor Component Is powerless on werewolves side option should translate option description when the option is deactivated."
        },
        {
          "id": "785",
          "name": "Game Lobby Options Hub Roles Tab Actor Component Is powerless on werewolves side option should update create game dto store when the option is toggled."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport GameLobbyOptionsHubRolesTabActor from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabActor/GameLobbyOptionsHubRolesTabActor.vue\";\nimport type AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport type GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGameDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Options Hub Roles Tab Actor Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabActor>>;\n\n  async function mountGameLobbyOptionsHubRolesTabActorComponent(options: ComponentMountingOptions<typeof GameLobbyOptionsHubRolesTabActor> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabActor>>> {\n    return mountSuspendedComponent(GameLobbyOptionsHubRolesTabActor, {\n      global: {\n        stubs: {\n          Fieldset: false,\n          GameOptionInputGroup: false,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyOptionsHubRolesTabActorComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Is powerless on werewolves side option\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-actor-is-powerless-on-werewolves-side-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"The Actor is powerless on the Werewolves side\");\n    });\n\n    it(\"should translate option description when the option is activated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.actor.isPowerlessOnWerewolvesSide = true;\n      await nextTick();\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-actor-is-powerless-on-werewolves-side-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabActor.options.isPowerlessOnWerewolvesSide.descriptions.yes\");\n    });\n\n    it(\"should translate option description when the option is deactivated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.actor.isPowerlessOnWerewolvesSide = false;\n      await nextTick();\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-actor-is-powerless-on-werewolves-side-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabActor.options.isPowerlessOnWerewolvesSide.descriptions.no\");\n    });\n\n    it(\"should update create game dto store when the option is toggled.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const toggleButton = wrapper.findComponent<typeof AffirmativeToggleButton>(\"#game-lobby-options-hub-roles-tab-actor-is-powerless-on-werewolves-side-input\");\n      (toggleButton.vm as VueVm).$emit(\"update:modelValue\", false);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.actor.isPowerlessOnWerewolvesSide = false;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabIdiot/GameLobbyOptionsHubRolesTabIdiot.nuxt.spec.ts": {
      "tests": [
        {
          "id": "786",
          "name": "Game Lobby Options Hub Roles Tab Idiot Component should match snapshot when rendered."
        },
        {
          "id": "787",
          "name": "Game Lobby Options Hub Roles Tab Idiot Component Die on Elder death option should translate option label when rendered."
        },
        {
          "id": "788",
          "name": "Game Lobby Options Hub Roles Tab Idiot Component Die on Elder death option should translate option description when the option is activated."
        },
        {
          "id": "789",
          "name": "Game Lobby Options Hub Roles Tab Idiot Component Die on Elder death option should translate option description when the option is deactivated."
        },
        {
          "id": "790",
          "name": "Game Lobby Options Hub Roles Tab Idiot Component Die on Elder death option should update the create game dto store when the option is toggled."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport GameLobbyOptionsHubRolesTabIdiot from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabIdiot/GameLobbyOptionsHubRolesTabIdiot.vue\";\nimport type AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport type GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGameDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Options Hub Roles Tab Idiot Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabIdiot>>;\n\n  async function mountGameLobbyOptionsHubRolesTabIdiotComponent(options: ComponentMountingOptions<typeof GameLobbyOptionsHubRolesTabIdiot> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabIdiot>>> {\n    return mountSuspendedComponent(GameLobbyOptionsHubRolesTabIdiot, {\n      global: {\n        stubs: {\n          Fieldset: false,\n          GameOptionInputGroup: false,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyOptionsHubRolesTabIdiotComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Die on Elder death option\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-idiot-does-die-on-elder-death-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"The revealed Idiot dies on Elder's death\");\n    });\n\n    it(\"should translate option description when the option is activated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.idiot.doesDieOnElderDeath = true;\n      await nextTick();\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-idiot-does-die-on-elder-death-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabIdiot.options.doesDieOnElderDeath.descriptions.yes\");\n    });\n\n    it(\"should translate option description when the option is deactivated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.idiot.doesDieOnElderDeath = false;\n      await nextTick();\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-idiot-does-die-on-elder-death-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabIdiot.options.doesDieOnElderDeath.descriptions.no\");\n    });\n\n    it(\"should update the create game dto store when the option is toggled.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const toggleButton = wrapper.findComponent<typeof AffirmativeToggleButton>(\"#game-lobby-options-hub-roles-tab-idiot-does-die-on-elder-death-input\");\n      (toggleButton.vm as VueVm).$emit(\"update:modelValue\", false);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.idiot.doesDieOnElderDeath = false;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubCompositionTab/GameLobbyOptionsHubCompositionTab.nuxt.spec.ts": {
      "tests": [
        {
          "id": "791",
          "name": "Game Lobby Options Hub Composition Tab Component should match snapshot when rendered."
        },
        {
          "id": "792",
          "name": "Game Lobby Options Hub Composition Tab Component Is Composition hidden option should translate option label when rendered."
        },
        {
          "id": "793",
          "name": "Game Lobby Options Hub Composition Tab Component Is Composition hidden option should translate option description when the option is activated."
        },
        {
          "id": "794",
          "name": "Game Lobby Options Hub Composition Tab Component Is Composition hidden option should translate option description when the option is deactivated."
        },
        {
          "id": "795",
          "name": "Game Lobby Options Hub Composition Tab Component Is Composition hidden option should update create game dto when the option is toggled."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport GameLobbyOptionsHubCompositionTab from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubCompositionTab/GameLobbyOptionsHubCompositionTab.vue\";\nimport type AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport type GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGameDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Options Hub Composition Tab Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyOptionsHubCompositionTab>>;\n\n  async function mountGameLobbyOptionsHubCompositionTabComponent(options: ComponentMountingOptions<typeof GameLobbyOptionsHubCompositionTab> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyOptionsHubCompositionTab>>> {\n    return mountSuspendedComponent(GameLobbyOptionsHubCompositionTab, {\n      global: {\n        stubs: {\n          GameOptionInputGroup: false,\n          Fieldset: false,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyOptionsHubCompositionTabComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Is Composition hidden option\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-composition-tab-is-hidden-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"Composition is hidden\");\n    });\n\n    it(\"should translate option description when the option is activated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.composition.isHidden = true;\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-composition-tab-is-hidden-input-group\");\n      const expectedDescription = \"components.GameLobbyOptionsHubCompositionTab.options.isHidden.descriptions.yes\";\n      await nextTick();\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(expectedDescription);\n    });\n\n    it(\"should translate option description when the option is deactivated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.composition.isHidden = false;\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-composition-tab-is-hidden-input-group\");\n      const expectedDescription = \"components.GameLobbyOptionsHubCompositionTab.options.isHidden.descriptions.no\";\n      await nextTick();\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(expectedDescription);\n    });\n\n    it(\"should update create game dto when the option is toggled.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const toggleButton = wrapper.findComponent<typeof AffirmativeToggleButton>(\"#game-lobby-options-hub-composition-tab-is-hidden-input\");\n      (toggleButton.vm as VueVm).$emit(\"update:modelValue\", true);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.composition.isHidden = true;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabLittleGirl/GameLobbyOptionsHubRolesTabLittleGirl.nuxt.spec.ts": {
      "tests": [
        {
          "id": "796",
          "name": "Game Lobby Options Hub Roles Tab Little Girl Component should match snapshot when rendered."
        },
        {
          "id": "797",
          "name": "Game Lobby Options Hub Roles Tab Little Girl Component Is Protected by Defender Option should translate option label when rendered."
        },
        {
          "id": "798",
          "name": "Game Lobby Options Hub Roles Tab Little Girl Component Is Protected by Defender Option should translate option description when the option is activated."
        },
        {
          "id": "799",
          "name": "Game Lobby Options Hub Roles Tab Little Girl Component Is Protected by Defender Option should translate option description when the option is deactivated."
        },
        {
          "id": "800",
          "name": "Game Lobby Options Hub Roles Tab Little Girl Component Is Protected by Defender Option should update the create game dto store when the option is toggled."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport GameLobbyOptionsHubRolesTabLittleGirl from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabLittleGirl/GameLobbyOptionsHubRolesTabLittleGirl.vue\";\nimport type AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport type GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGameDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Options Hub Roles Tab Little Girl Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabLittleGirl>>;\n\n  async function mountGameLobbyOptionsHubRolesTabLittleGirlComponent(options: ComponentMountingOptions<typeof GameLobbyOptionsHubRolesTabLittleGirl> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabLittleGirl>>> {\n    return mountSuspendedComponent(GameLobbyOptionsHubRolesTabLittleGirl, {\n      global: {\n        stubs: {\n          Fieldset: false,\n          GameOptionInputGroup: false,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyOptionsHubRolesTabLittleGirlComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Is Protected by Defender Option\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-little-girl-is-protected-by-defender-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"The Little Girl is protected by the Defender\");\n    });\n\n    it(\"should translate option description when the option is activated.\", async() => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-little-girl-is-protected-by-defender-input-group\");\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.littleGirl.isProtectedByDefender = true;\n      await nextTick();\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabLittleGirl.options.isProtectedByDefender.descriptions.yes\");\n    });\n\n    it(\"should translate option description when the option is deactivated.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-little-girl-is-protected-by-defender-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabLittleGirl.options.isProtectedByDefender.descriptions.no\");\n    });\n\n    it(\"should update the create game dto store when the option is toggled.\", async() => {\n      const toggleButton = wrapper.findComponent<typeof AffirmativeToggleButton>(\"#game-lobby-options-hub-roles-tab-little-girl-is-protected-by-defender-input\");\n      const createGameDtoStore = useCreateGameDtoStore();\n      (toggleButton.vm as VueVm).$emit(\"update:modelValue\", true);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.littleGirl.isProtectedByDefender = true;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabFox/GameLobbyOptionsHubRolesTabFox.nuxt.spec.ts": {
      "tests": [
        {
          "id": "801",
          "name": "Game Lobby Options Hub Roles Tab Fox Component should match snapshot when rendered."
        },
        {
          "id": "802",
          "name": "Game Lobby Options Hub Roles Tab Fox Component Fox Powerless if misses Werewolf option should translate option label when rendered."
        },
        {
          "id": "803",
          "name": "Game Lobby Options Hub Roles Tab Fox Component Fox Powerless if misses Werewolf option should translate option description when the option is activated."
        },
        {
          "id": "804",
          "name": "Game Lobby Options Hub Roles Tab Fox Component Fox Powerless if misses Werewolf option should translate option description when the option is deactivated."
        },
        {
          "id": "805",
          "name": "Game Lobby Options Hub Roles Tab Fox Component Fox Powerless if misses Werewolf option should update the create game dto store when the option is toggled."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport GameLobbyOptionsHubRolesTabFoxVue from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabFox/GameLobbyOptionsHubRolesTabFox.vue\";\nimport type AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport type GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGameDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Options Hub Roles Tab Fox Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabFoxVue>>;\n\n  async function mountGameLobbyOptionsHubRolesTabFoxVueComponent(options: ComponentMountingOptions<typeof GameLobbyOptionsHubRolesTabFoxVue> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabFoxVue>>> {\n    return mountSuspendedComponent(GameLobbyOptionsHubRolesTabFoxVue, {\n      global: {\n        stubs: {\n          Fieldset: false,\n          GameOptionInputGroup: false,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyOptionsHubRolesTabFoxVueComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Fox Powerless if misses Werewolf option\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-fox-is-powerless-if-misses-werewolf-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"The Fox is powerless if he misses to sniff a Werewolf\");\n    });\n\n    it(\"should translate option description when the option is activated.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-fox-is-powerless-if-misses-werewolf-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabFox.options.isPowerlessIfMissesWerewolf.descriptions.yes\");\n    });\n\n    it(\"should translate option description when the option is deactivated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.fox.isPowerlessIfMissesWerewolf = false;\n      await nextTick();\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-fox-is-powerless-if-misses-werewolf-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabFox.options.isPowerlessIfMissesWerewolf.descriptions.no\");\n    });\n\n    it(\"should update the create game dto store when the option is toggled.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const toggleButton = wrapper.findComponent<typeof AffirmativeToggleButton>(\"#game-lobby-options-hub-roles-tab-fox-is-powerless-if-misses-werewolf-input\");\n      (toggleButton.vm as VueVm).$emit(\"update:modelValue\", false);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.fox.isPowerlessIfMissesWerewolf = false;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubVotesTab/GameLobbyOptionsHubVotesTab.nuxt.spec.ts": {
      "tests": [
        {
          "id": "806",
          "name": "Game Lobby Options Hub Votes Tab Component should match snapshot when rendered."
        },
        {
          "id": "807",
          "name": "Game Lobby Options Hub Votes Tab Component Can Votes be Skipped option should translate option label when rendered."
        },
        {
          "id": "808",
          "name": "Game Lobby Options Hub Votes Tab Component Can Votes be Skipped option should translate option description when the option is activated."
        },
        {
          "id": "809",
          "name": "Game Lobby Options Hub Votes Tab Component Can Votes be Skipped option should translate option description when the option is deactivated."
        },
        {
          "id": "810",
          "name": "Game Lobby Options Hub Votes Tab Component Can Votes be Skipped option should update create game dto store when the option is toggled."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport GameLobbyOptionsHubVotesTab from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubVotesTab/GameLobbyOptionsHubVotesTab.vue\";\nimport type AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport type GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGameDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Options Hub Votes Tab Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyOptionsHubVotesTab>>;\n\n  async function mountGameLobbyOptionsHubVotesTabComponent(options: ComponentMountingOptions<typeof GameLobbyOptionsHubVotesTab> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyOptionsHubVotesTab>>> {\n    return mountSuspendedComponent(GameLobbyOptionsHubVotesTab, {\n      global: {\n        stubs: {\n          GameOptionInputGroup: false,\n          Fieldset: false,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyOptionsHubVotesTabComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Can Votes be Skipped option\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-votes-tab-can-be-skipped-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"Votes can be skipped\");\n    });\n\n    it(\"should translate option description when the option is activated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.votes.canBeSkipped = true;\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-votes-tab-can-be-skipped-input-group\");\n      const expectedDescription = \"components.GameLobbyOptionsHubVotesTab.options.canBeSkipped.descriptions.yes\";\n      await nextTick();\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(expectedDescription);\n    });\n\n    it(\"should translate option description when the option is deactivated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.votes.canBeSkipped = false;\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-votes-tab-can-be-skipped-input-group\");\n      const expectedDescription = \"components.GameLobbyOptionsHubVotesTab.options.canBeSkipped.descriptions.no\";\n      await nextTick();\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(expectedDescription);\n    });\n\n    it(\"should update create game dto store when the option is toggled.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const toggleButton = wrapper.findComponent<typeof AffirmativeToggleButton>(\"#game-lobby-options-hub-votes-tab-can-be-skipped-input\");\n      (toggleButton.vm as VueVm).$emit(\"update:modelValue\", false);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.votes.canBeSkipped = false;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabDefender/GameLobbyOptionsHubRolesTabDefender.nuxt.spec.ts": {
      "tests": [
        {
          "id": "811",
          "name": "Game Lobby Options Hub Roles Tab Defender Component should match snapshot when rendered."
        },
        {
          "id": "812",
          "name": "Game Lobby Options Hub Roles Tab Defender Component Can Defender protect twice option should translate option label when rendered."
        },
        {
          "id": "813",
          "name": "Game Lobby Options Hub Roles Tab Defender Component Can Defender protect twice option should translate option description when the option is activated."
        },
        {
          "id": "814",
          "name": "Game Lobby Options Hub Roles Tab Defender Component Can Defender protect twice option should translate option description when the option is deactivated."
        },
        {
          "id": "815",
          "name": "Game Lobby Options Hub Roles Tab Defender Component Can Defender protect twice option should update the create game dto store when the option is toggled."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport GameLobbyOptionsHubRolesTabDefenderVue from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTabDefender/GameLobbyOptionsHubRolesTabDefender.vue\";\nimport type AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\nimport type GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\nimport { useCreateGameDtoStore } from \"~/stores/game/create-game-dto/useCreateGameDtoStore\";\nimport { createFakeCreateGameDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Options Hub Roles Tab Defender Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabDefenderVue>>;\n\n  async function mountGameLobbyOptionsHubRolesTabDefenderVueComponent(options: ComponentMountingOptions<typeof GameLobbyOptionsHubRolesTabDefenderVue> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTabDefenderVue>>> {\n    return mountSuspendedComponent(GameLobbyOptionsHubRolesTabDefenderVue, {\n      global: {\n        stubs: {\n          Fieldset: false,\n          GameOptionInputGroup: false,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyOptionsHubRolesTabDefenderVueComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Can Defender protect twice option\", () => {\n    it(\"should translate option label when rendered.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-defender-can-protect-twice-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionLabel\")).toBe(\"The Defender can protect twice\");\n    });\n\n    it(\"should translate option description when the option is activated.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      createGameDtoStore.createGameDto.options.roles.defender.canProtectTwice = true;\n      await nextTick();\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-defender-can-protect-twice-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabDefender.options.canProtectTwice.descriptions.yes\");\n    });\n\n    it(\"should translate option description when the option is deactivated.\", () => {\n      const gameOptionInputGroup = wrapper.findComponent<typeof GameOptionInputGroup>(\"#game-lobby-options-hub-roles-tab-defender-can-protect-twice-input-group\");\n\n      expect(gameOptionInputGroup.props(\"optionDescription\")).toBe(\"components.GameLobbyOptionsHubRolesTabDefender.options.canProtectTwice.descriptions.no\");\n    });\n\n    it(\"should update the create game dto store when the option is toggled.\", async() => {\n      const createGameDtoStore = useCreateGameDtoStore();\n      const toggleButton = wrapper.findComponent<typeof AffirmativeToggleButton>(\"#game-lobby-options-hub-roles-tab-defender-can-protect-twice-input\");\n      (toggleButton.vm as VueVm).$emit(\"update:modelValue\", true);\n      await nextTick();\n      const expectedCreateGameDto = createFakeCreateGameDto(createGameDtoStore.createGameDto);\n      expectedCreateGameDto.options.roles.defender.canProtectTwice = true;\n\n      expect(createGameDtoStore.setCreateGameDto).toHaveBeenCalledExactlyOnceWith(expectedCreateGameDto);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/useFetchGames.spec.ts": {
      "tests": [
        {
          "id": "816",
          "name": "Use Fetch Game Composable createGame should create game when called."
        },
        {
          "id": "817",
          "name": "Use Fetch Game Composable createGame should return null when create game throws."
        },
        {
          "id": "818",
          "name": "Use Fetch Game Composable getGame should get game when called."
        },
        {
          "id": "819",
          "name": "Use Fetch Game Composable getGame should return null when get game throws."
        },
        {
          "id": "820",
          "name": "Use Fetch Game Composable cancelGame should cancel game when called."
        },
        {
          "id": "821",
          "name": "Use Fetch Game Composable cancelGame should return null when cancel game throws."
        },
        {
          "id": "822",
          "name": "Use Fetch Game Composable makeGamePlay should make game play when called."
        },
        {
          "id": "823",
          "name": "Use Fetch Game Composable makeGamePlay should return null when make game play throws."
        }
      ],
      "source": "import type { Mock } from \"vitest\";\n\nimport { useFetchGames } from \"~/composables/api/game/useFetchGames\";\nimport * as UseWerewolvesAssistantApi from \"~/composables/api/useWerewolvesAssistantApi\";\nimport { createFakeCreateGameDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game.dto.factory\";\nimport { createFakeMakeGamePlayDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/make-game-play/make-game-play.dto.factory\";\n\ndescribe(\"Use Fetch Game Composable\", () => {\n  let mocks: {\n    composables: {\n      useWerewolvesAssistantApi: {\n        fetchWerewolvesAssistantApi: Mock;\n      }\n    }\n  };\n\n  beforeEach(() => {\n    mocks = { composables: { useWerewolvesAssistantApi: { fetchWerewolvesAssistantApi: vi.fn() } } };\n    const useWerewolvesAssistantApiMock = mocks.composables.useWerewolvesAssistantApi as unknown as ReturnType<typeof UseWerewolvesAssistantApi.useWerewolvesAssistantApi>;\n    vi.spyOn(UseWerewolvesAssistantApi, \"useWerewolvesAssistantApi\").mockReturnValue(useWerewolvesAssistantApiMock);\n  });\n\n  describe(\"createGame\", () => {\n    it(\"should create game when called.\", async() => {\n      const createGameDto = createFakeCreateGameDto();\n      await useFetchGames().createGame(createGameDto);\n      const expectedOptions = { method: \"POST\", body: JSON.stringify(createGameDto) };\n\n      expect(mocks.composables.useWerewolvesAssistantApi.fetchWerewolvesAssistantApi).toHaveBeenCalledExactlyOnceWith(`/games`, expectedOptions);\n    });\n\n    it(\"should return null when create game throws.\", async() => {\n      vi.spyOn(mocks.composables.useWerewolvesAssistantApi, \"fetchWerewolvesAssistantApi\").mockRejectedValue(undefined);\n      const result = await useFetchGames().createGame(createFakeCreateGameDto());\n\n      expect(result).toBeNull();\n    });\n  });\n\n  describe(\"getGame\", () => {\n    it(\"should get game when called.\", async() => {\n      const gameId = \"game-id\";\n      await useFetchGames().getGame(gameId);\n\n      expect(mocks.composables.useWerewolvesAssistantApi.fetchWerewolvesAssistantApi).toHaveBeenCalledExactlyOnceWith(`/games/${gameId}`, { method: \"GET\" });\n    });\n\n    it(\"should return null when get game throws.\", async() => {\n      vi.spyOn(mocks.composables.useWerewolvesAssistantApi, \"fetchWerewolvesAssistantApi\").mockRejectedValue(new Error(\"error\"));\n      const result = await useFetchGames().getGame(\"game-id\");\n\n      expect(result).toBeNull();\n    });\n  });\n\n  describe(\"cancelGame\", () => {\n    it(\"should cancel game when called.\", async() => {\n      const gameId = \"game-id\";\n      await useFetchGames().cancelGame(gameId);\n\n      expect(mocks.composables.useWerewolvesAssistantApi.fetchWerewolvesAssistantApi).toHaveBeenCalledExactlyOnceWith(`/games/${gameId}`, { method: \"DELETE\" });\n    });\n\n    it(\"should return null when cancel game throws.\", async() => {\n      vi.spyOn(mocks.composables.useWerewolvesAssistantApi, \"fetchWerewolvesAssistantApi\").mockRejectedValue(new Error(\"error\"));\n      const result = await useFetchGames().cancelGame(\"game-id\");\n\n      expect(result).toBeNull();\n    });\n  });\n\n  describe(\"makeGamePlay\", () => {\n    it(\"should make game play when called.\", async() => {\n      const gameId = \"game-id\";\n      const makeGamePlayDto = createFakeMakeGamePlayDto();\n      await useFetchGames().makeGamePlay(gameId, makeGamePlayDto);\n\n      expect(mocks.composables.useWerewolvesAssistantApi.fetchWerewolvesAssistantApi).toHaveBeenCalledExactlyOnceWith(`/games/${gameId}/play`, { method: \"POST\", body: JSON.stringify(makeGamePlayDto) });\n    });\n\n    it(\"should return null when make game play throws.\", async() => {\n      vi.spyOn(mocks.composables.useWerewolvesAssistantApi, \"fetchWerewolvesAssistantApi\").mockRejectedValue(new Error(\"error\"));\n      const result = await useFetchGames().makeGamePlay(\"game-id\", createFakeMakeGamePlayDto());\n\n      expect(result).toBeNull();\n    });\n  });\n});"
    },
    "tests/unit/specs/components/shared/role/RoleImage/RoleImage.nuxt.spec.ts": {
      "tests": [
        {
          "id": "824",
          "name": "Role Image Component should match snapshot when rendered."
        },
        {
          "id": "825",
          "name": "Role Image Component Image Size should have default width and height from props sizes when rendered."
        },
        {
          "id": "826",
          "name": "Role Image Component Image Src should have back src when prop role image is undefined."
        },
        {
          "id": "827",
          "name": "Role Image Component Image Src should have src based on role name from props when rendered."
        },
        {
          "id": "828",
          "name": "Role Image Component Image Src should have small suffix for src when definition from props is small."
        },
        {
          "id": "829",
          "name": "Role Image Component Image Alt should have alt from props when rendered."
        },
        {
          "id": "830",
          "name": "Role Image Component Image Alt should have alt from role name when alt from props is undefined but role name is defined."
        },
        {
          "id": "831",
          "name": "Role Image Component Image Alt should have back alt when alt from props is undefined and role name is undefined."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport { NuxtImg } from \"#components\";\nimport type { RoleImageProps } from \"~/components/shared/role/RoleImage/role-image.types\";\nimport RoleImage from \"~/components/shared/role/RoleImage/RoleImage.vue\";\nimport * as UseRoleName from \"~/composables/api/role/useRoleName\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Role Image Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof RoleImage>>;\n  const defaultProps: RoleImageProps = {\n    alt: \"werewolf img\",\n    roleName: \"werewolf\",\n  };\n\n  async function mountRoleImageComponent(options: ComponentMountingOptions<typeof RoleImage> = {}): Promise<ReturnType<typeof mount<typeof RoleImage>>> {\n    return mountSuspendedComponent(RoleImage, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    vi.spyOn(UseRoleName, \"useRoleName\").mockReturnValue({\n      getRoleNameLabel: vi.fn().mockReturnValue(\"werewolf\"),\n      getDefiniteRoleNameLabel: vi.fn().mockReturnValue(\"werewolf 1\"),\n    });\n    wrapper = await mountRoleImageComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Image\", () => {\n    describe(\"Size\", () => {\n      it(\"should have default width and height from props sizes when rendered.\", () => {\n        const image = wrapper.findComponent<typeof NuxtImg>(\"[alt='werewolf img']\");\n\n        expect(image.attributes(\"width\")).toBe(\"50px\");\n        expect(image.attributes(\"height\")).toBe(\"50px\");\n      });\n    });\n\n    describe(\"Src\", () => {\n      it(\"should have back src when prop role image is undefined.\", async() => {\n        wrapper = await mountRoleImageComponent({ props: { alt: \"back image\" } });\n        const image = wrapper.findComponent<typeof NuxtImg>(\"[alt='back image']\");\n\n        expect(image.attributes(\"src\")).toBe(\"/img/role/back.jpeg\");\n      });\n\n      it(\"should have src based on role name from props when rendered.\", () => {\n        const image = wrapper.findComponent<typeof NuxtImg>(\"[alt='werewolf img']\");\n\n        expect(image.attributes(\"src\")).toBe(\"http://127.0.0.1/public/assets/images/roles/werewolf/werewolf.jpeg\");\n      });\n\n      it(\"should have small suffix for src when definition from props is small.\", async() => {\n        await wrapper.setProps({ definition: \"small\" });\n        const image = wrapper.findComponent<typeof NuxtImg>(\"[alt='werewolf img']\");\n\n        expect(image.attributes(\"src\")).toBe(\"http://127.0.0.1/public/assets/images/roles/werewolf/werewolf-small.jpeg\");\n      });\n    });\n\n    describe(\"Alt\", () => {\n      it(\"should have alt from props when rendered.\", () => {\n        const image = wrapper.findComponent<typeof NuxtImg>(\"[alt='werewolf img']\");\n\n        expect(image.attributes(\"alt\")).toBe(\"werewolf img\");\n      });\n\n      it(\"should have alt from role name when alt from props is undefined but role name is defined.\", async() => {\n        wrapper = await mountRoleImageComponent({ props: { alt: undefined, roleName: \"werewolf\" } });\n        const image = wrapper.findComponent<typeof NuxtImg>(NuxtImg);\n\n        expect(image.attributes(\"alt\")).toBe(\"shared.role.name.werewolf\");\n      });\n\n      it(\"should have back alt when alt from props is undefined and role name is undefined.\", async() => {\n        await mountRoleImageComponent({ props: { alt: undefined, roleName: undefined } });\n        wrapper = await mountRoleImageComponent({ props: { alt: undefined, roleName: undefined } });\n        const image = wrapper.findComponent<typeof NuxtImg>(NuxtImg);\n\n        expect(image.attributes(\"alt\")).toBe(\"components.RoleImage.back\");\n      });\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameRequestAnotherVotePlayground/GameRequestAnotherVotePlayground.nuxt.spec.ts": {
      "tests": [
        {
          "id": "832",
          "name": "Game Request Another Vote Playground Component should match snapshot when rendered."
        },
        {
          "id": "833",
          "name": "Game Request Another Vote Playground Component Toggle Button should translate off button label when rendered."
        },
        {
          "id": "834",
          "name": "Game Request Another Vote Playground Component Toggle Button should translate on button label when rendered."
        },
        {
          "id": "835",
          "name": "Game Request Another Vote Playground Component Toggle Button should set the does request another vote value to true in dto when the toggle button emits true change event."
        },
        {
          "id": "836",
          "name": "Game Request Another Vote Playground Component Toggle Button should set the does request another vote value to false in dto when the toggle button emits first true then false change event."
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport { expect } from \"vitest\";\n\nimport type { VuePrimeToggleButton } from \"#components\";\nimport GameRequestAnotherVotePlayground from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameRequestAnotherVotePlayground/GameRequestAnotherVotePlayground.vue\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\nimport { useMakeGamePlayDtoStore } from \"~/stores/game/make-game-play-dto/useMakeGamePlayDtoStore\";\nimport { createFakeGame } from \"~/tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Request Another Vote Playground Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameRequestAnotherVotePlayground>>;\n  const testingPinia = { initialState: { [StoreIds.GAME]: { game: createFakeGame() } } };\n\n  async function mountGameRequestAnotherVotePlaygroundComponent(options: ComponentMountingOptions<typeof GameRequestAnotherVotePlayground> = {}):\n  Promise<ReturnType<typeof mount<typeof GameRequestAnotherVotePlayground>>> {\n    return mountSuspendedComponent(GameRequestAnotherVotePlayground, {\n      global: { plugins: [createTestingPinia(testingPinia)] },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameRequestAnotherVotePlaygroundComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Toggle Button\", () => {\n    it(\"should translate off button label when rendered.\", async() => {\n      wrapper = await mountGameRequestAnotherVotePlaygroundComponent({ shallow: false });\n      const toggleButton = wrapper.findComponent<typeof VuePrimeToggleButton>(\"#does-judge-request-another-vote-button\");\n\n      expect(toggleButton.props(\"offLabel\")).toBe(\"He doesn't request another vote\");\n    });\n\n    it(\"should translate on button label when rendered.\", async() => {\n      wrapper = await mountGameRequestAnotherVotePlaygroundComponent({ shallow: false });\n      const toggleButton = wrapper.findComponent<typeof VuePrimeToggleButton>(\"#does-judge-request-another-vote-button\");\n\n      expect(toggleButton.props(\"onLabel\")).toBe(\"He requests another vote\");\n    });\n\n    it(\"should set the does request another vote value to true in dto when the toggle button emits true change event.\", async() => {\n      wrapper = await mountGameRequestAnotherVotePlaygroundComponent({ shallow: false });\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      const toggleButtonCheckbox = wrapper.find<HTMLInputElement>(\"#does-judge-request-another-vote-button > .p-togglebutton-input\");\n      await toggleButtonCheckbox.setValue(true);\n\n      expect(makeGamePlayDtoStore.setDoesJudgeRequestAnotherVote).toHaveBeenCalledExactlyOnceWith(true);\n    });\n\n    it(\"should set the does request another vote value to false in dto when the toggle button emits first true then false change event.\", async() => {\n      wrapper = await mountGameRequestAnotherVotePlaygroundComponent({ shallow: false });\n      const makeGamePlayDtoStore = useMakeGamePlayDtoStore();\n      const toggleButtonCheckbox = wrapper.find<HTMLInputElement>(\"#does-judge-request-another-vote-button > .p-togglebutton-input\");\n      await toggleButtonCheckbox.setValue(true);\n      await toggleButtonCheckbox.setValue(false);\n\n      expect(makeGamePlayDtoStore.setDoesJudgeRequestAnotherVote).toHaveBeenNthCalledWith(1, true);\n      expect(makeGamePlayDtoStore.setDoesJudgeRequestAnotherVote).toHaveBeenNthCalledWith(2, false);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-play/useGamePlay.spec.ts": {
      "tests": [
        {
          "id": "837",
          "name": "Use Current Game Play Composable getEligibleTargetsWithInteractionInCurrentGamePlay 'should return undefined when game cur…'"
        },
        {
          "id": "838",
          "name": "Use Current Game Play Composable getEligibleTargetsWithInteractionInCurrentGamePlay 'should return player when game curren…'"
        }
      ],
      "source": "import { useCurrentGamePlay } from \"~/composables/api/game/game-play/useCurrentGamePlay\";\nimport type { Game } from \"~/composables/api/game/types/game.class\";\nimport type { PlayerInteractionType } from \"~/composables/api/game/types/players/player-interaction/player-interaction.types\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { createFakeGamePlaySourceInteraction } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction.factory\";\nimport { createFakeGamePlaySource } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source.factory\";\nimport { createFakeGamePlaySurvivorsBuryDeadBodies } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play.factory\";\nimport { createFakeGame } from \"~/tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { createFakePlayer } from \"~/tests/unit/utils/factories/composables/api/game/player/player.factory\";\n\ndescribe(\"Use Current Game Play Composable\", () => {\n  describe(\"getEligibleTargetsWithInteractionInCurrentGamePlay\", () => {\n    const foundPlayersWithInteraction = [\n      createFakePlayer(),\n      createFakePlayer(),\n      createFakePlayer(),\n    ];\n\n    it.each<{\n      game: Game;\n      interaction: PlayerInteractionType;\n      expectedPlayers: Player[] | undefined;\n      test: string;\n    }>([\n      {\n        game: createFakeGame(),\n        interaction: \"steal-role\",\n        expectedPlayers: undefined,\n        test: \"should return undefined when game current play is null.\",\n      },\n      {\n        game: createFakeGame({ currentPlay: createFakeGamePlaySurvivorsBuryDeadBodies() }),\n        interaction: \"steal-role\",\n        expectedPlayers: undefined,\n        test: \"should return undefined when game current play source interactions are undefined.\",\n      },\n      {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlaySurvivorsBuryDeadBodies({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  type: \"charm\",\n                  eligibleTargets: [createFakePlayer()],\n                }),\n              ],\n            }),\n          }),\n        }),\n        interaction: \"steal-role\",\n        expectedPlayers: undefined,\n        test: \"should return undefined when game current play interaction is not found among interactions.\",\n      },\n      {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlaySurvivorsBuryDeadBodies({\n            source: createFakeGamePlaySource({\n              interactions: [\n                createFakeGamePlaySourceInteraction({\n                  type: \"charm\",\n                  eligibleTargets: [\n                    createFakePlayer(),\n                    createFakePlayer(),\n                  ],\n                }),\n                createFakeGamePlaySourceInteraction({\n                  type: \"steal-role\",\n                  eligibleTargets: foundPlayersWithInteraction,\n                }),\n              ],\n            }),\n          }),\n        }),\n        interaction: \"steal-role\",\n        expectedPlayers: foundPlayersWithInteraction,\n        test: \"should return player when game current play interaction is found among interactable players.\",\n      },\n    ])(\"$test\", ({ game, interaction, expectedPlayers }) => {\n      const { getEligibleTargetsWithInteractionInCurrentGamePlay } = useCurrentGamePlay(ref(game));\n\n      expect(getEligibleTargetsWithInteractionInCurrentGamePlay(interaction)).toStrictEqual<Player[] | undefined>(expectedPlayers);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescription.nuxt.spec.ts": {
      "tests": [
        {
          "id": "839",
          "name": "Game Lobby Role Picker Description Component should match snapshot when rendered."
        },
        {
          "id": "840",
          "name": "Game Lobby Role Picker Description Component Main Content should render no picked role container when picked role is not defined."
        },
        {
          "id": "841",
          "name": "Game Lobby Role Picker Description Component Main Content should translate no picked role text when picked role is not defined."
        },
        {
          "id": "842",
          "name": "Game Lobby Role Picker Description Component Main Content should render description content when picked role is defined."
        },
        {
          "id": "843",
          "name": "Game Lobby Role Picker Description Component Main Content should initialize smooth scrolling when rendered."
        },
        {
          "id": "844",
          "name": "Game Lobby Role Picker Description Component Main Content should scroll back to top when picked role is changed."
        }
      ],
      "source": "import { mockNuxtImport } from \"@nuxt/test-utils/runtime\";\nimport type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport type { GameLobbyRolePickerDescriptionProps } from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/game-lobby-role-picker-description.types\";\nimport GameLobbyRolePickerDescription from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescription.vue\";\nimport type GameLobbyRolePickerDescriptionContent from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionContent.vue\";\nimport { createFakeRole } from \"~/tests/unit/utils/factories/composables/api/role/role.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\nconst { useScroll: partialMockedUsedScroll } = vi.hoisted(() => ({ useScroll: { y: { value: 0 } } }));\n\ndescribe(\"Game Lobby Role Picker Description Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyRolePickerDescription>>;\n  const defaultProps: GameLobbyRolePickerDescriptionProps = { pickedRole: createFakeRole({ name: \"seer\" }) };\n\n  async function mountGameLobbyRolePickerDescriptionComponent(options: ComponentMountingOptions<typeof GameLobbyRolePickerDescription> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyRolePickerDescription>>> {\n    return mountSuspendedComponent(GameLobbyRolePickerDescription, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    partialMockedUsedScroll.y = ref(0);\n    mockNuxtImport<typeof useScroll>(\"useScroll\", () => vi.fn(() => partialMockedUsedScroll as ReturnType<typeof useScroll>));\n    wrapper = await mountGameLobbyRolePickerDescriptionComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Main Content\", () => {\n    it(\"should render no picked role container when picked role is not defined.\", async() => {\n      wrapper = await mountGameLobbyRolePickerDescriptionComponent({ props: { pickedRole: undefined } });\n      const noPickedRoleContainer = wrapper.find<HTMLDivElement>(\"#no-picked-role-container\");\n\n      expect(noPickedRoleContainer.exists()).toBeTruthy();\n    });\n\n    it(\"should translate no picked role text when picked role is not defined.\", async() => {\n      wrapper = await mountGameLobbyRolePickerDescriptionComponent({ props: { pickedRole: undefined } });\n      const noPickedRoleText = wrapper.find<HTMLParagraphElement>(\"#no-picked-role-container\");\n\n      expect(noPickedRoleText.text()).toBe(\"Pick a role\");\n    });\n\n    it(\"should render description content when picked role is defined.\", () => {\n      const descriptionContent = wrapper.findComponent<typeof GameLobbyRolePickerDescriptionContent>(\"#game-lobby-role-picker-description-content\");\n\n      expect(descriptionContent.exists()).toBeTruthy();\n    });\n\n    it(\"should initialize smooth scrolling when rendered.\", () => {\n      expect(useScroll).toHaveBeenCalledExactlyOnceWith(expect.anything(), { behavior: \"smooth\" });\n    });\n\n    it(\"should scroll back to top when picked role is changed.\", async() => {\n      partialMockedUsedScroll.y.value = 20;\n      await wrapper.setProps({ pickedRole: createFakeRole({ name: \"villager\" }) });\n      await nextTick();\n\n      expect(partialMockedUsedScroll.y.value).toBe(0);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GamePlaying/GamePlayground/CurrentPlayExpectedPlayersToAct/CurrentPlayExpectedPlayersToAct.nuxt.spec.ts": {
      "tests": [
        {
          "id": "845",
          "name": "Current Play Expected Players To Act Component should match snapshot when rendered."
        },
        {
          "id": "846",
          "name": "Current Play Expected Players To Act Component should not render the expected players to act when there is no current play."
        },
        {
          "id": "847",
          "name": "Current Play Expected Players To Act Component should not render the expected players to act when there is no source players in current play."
        },
        {
          "id": "848",
          "name": "Current Play Expected Players To Act Component should render the expected players to act when there is a current play."
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\n\nimport CurrentPlayExpectedPlayersToAct from \"~/components/pages/game/GamePlaying/GamePlayground/CurrentPlayExpectedPlayersToAct/CurrentPlayExpectedPlayersToAct.vue\";\nimport type PlayersHorizontalList from \"~/components/shared/game/player/PlayersHorizontalList/PlayersHorizontalList.vue\";\nimport type { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\nimport { createFakeGamePlaySource } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source.factory\";\nimport { createFakeGamePlayCupidCharms } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play.factory\";\nimport { createFakeGame } from \"~/tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { createFakeCupidAlivePlayer } from \"~/tests/unit/utils/factories/composables/api/game/player/player-with-role.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Current Play Expected Players To Act Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof CurrentPlayExpectedPlayersToAct>>;\n  const expectedPlayersToAct = [\n    createFakeCupidAlivePlayer({ name: \"Toto\" }),\n    createFakeCupidAlivePlayer({ name: \"Juju\" }),\n    createFakeCupidAlivePlayer({ name: \"Doudou\" }),\n  ];\n  const testingPinia = {\n    initialState: {\n      [StoreIds.GAME]: {\n        game: createFakeGame({\n          currentPlay: createFakeGamePlayCupidCharms({\n            source: createFakeGamePlaySource({\n              players: expectedPlayersToAct,\n              name: \"cupid\",\n            }),\n          }),\n        }),\n      },\n    },\n  };\n\n  async function mountCurrentPlayExpectedPlayersToActComponent(): Promise<ReturnType<typeof mount<typeof CurrentPlayExpectedPlayersToAct>>> {\n    return mountSuspendedComponent(CurrentPlayExpectedPlayersToAct, { global: { plugins: [createTestingPinia(testingPinia)] } });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountCurrentPlayExpectedPlayersToActComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  it(\"should not render the expected players to act when there is no current play.\", async() => {\n    const gameStore = useGameStore();\n    gameStore.game.currentPlay = null;\n    await nextTick();\n    const playersHorizontalList = wrapper.findComponent<typeof PlayersHorizontalList>(\"#player-horizontal-list\");\n\n    expect(playersHorizontalList.props(\"players\")).toStrictEqual<Player[]>([]);\n  });\n\n  it(\"should not render the expected players to act when there is no source players in current play.\", async() => {\n    const gameStore = useGameStore();\n    gameStore.game.currentPlay = createFakeGamePlayCupidCharms({ source: createFakeGamePlaySource({ players: undefined }) });\n    await nextTick();\n    const playersHorizontalList = wrapper.findComponent<typeof PlayersHorizontalList>(\"#player-horizontal-list\");\n\n    expect(playersHorizontalList.props(\"players\")).toStrictEqual<Player[]>([]);\n  });\n\n  it(\"should render the expected players to act when there is a current play.\", () => {\n    const playersHorizontalList = wrapper.findComponent<typeof PlayersHorizontalList>(\"#player-horizontal-list\");\n\n    expect(playersHorizontalList.props(\"players\")).toStrictEqual<Player[]>(expectedPlayersToAct);\n  });\n});"
    },
    "tests/unit/specs/stores/game/useGameStore.spec.ts": {
      "tests": [
        {
          "id": "849",
          "name": "Game Store should have initial state when created."
        },
        {
          "id": "850",
          "name": "Game Store resetGame should reset game when called."
        },
        {
          "id": "851",
          "name": "Game Store fetchAndSetGame should fetch game when called."
        },
        {
          "id": "852",
          "name": "Game Store fetchAndSetGame should set game when called."
        },
        {
          "id": "853",
          "name": "Game Store cancelGame should cancel game when called."
        },
        {
          "id": "854",
          "name": "Game Store cancelGame should set game when called."
        },
        {
          "id": "855",
          "name": "Game Store makeGamePlay should make game play when called."
        },
        {
          "id": "856",
          "name": "Game Store makeGamePlay should set game when called."
        }
      ],
      "source": "import { createPinia, setActivePinia } from \"pinia\";\n\nimport { Game } from \"~/composables/api/game/types/game.class\";\nimport * as UseFetchGames from \"~/composables/api/game/useFetchGames\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\nimport { createFakeMakeGamePlayDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/make-game-play/make-game-play.dto.factory\";\nimport { createFakeGame } from \"~/tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { createFakeUseFetchGames } from \"~/tests/unit/utils/factories/composables/api/game/useFetchGames.factory\";\n\ndescribe(\"Game Store\", () => {\n  let mocks: {\n    composables: {\n      useFetchGames: ReturnType<typeof createFakeUseFetchGames>\n    }\n  };\n\n  beforeEach(() => {\n    mocks = { composables: { useFetchGames: createFakeUseFetchGames() } };\n    vi.spyOn(UseFetchGames, \"useFetchGames\").mockImplementation(() => mocks.composables.useFetchGames);\n    setActivePinia(createPinia());\n  });\n\n  it(\"should have initial state when created.\", () => {\n    const gameStore = useGameStore();\n    const expectedGame = new Game();\n\n    expect(gameStore.game).toStrictEqual<Game>(expectedGame);\n    expect(gameStore.fetchingGameStatus).toBe(\"idle\");\n  });\n\n  describe(\"resetGame\", () => {\n    it(\"should reset game when called.\", () => {\n      const gameStore = useGameStore();\n      gameStore.game = createFakeGame();\n      gameStore.resetGame();\n\n      expect(gameStore.game).toStrictEqual<Game>(new Game());\n    });\n  });\n\n  describe(\"fetchAndSetGame\", () => {\n    it(\"should fetch game when called.\", async() => {\n      const gameStore = useGameStore();\n      await gameStore.fetchAndSetGame(\"gameId\");\n\n      expect(mocks.composables.useFetchGames.getGame).toHaveBeenCalledExactlyOnceWith(\"gameId\");\n    });\n\n    it(\"should set game when called.\", async() => {\n      const game = createFakeGame();\n      mocks.composables.useFetchGames.getGame.mockResolvedValue(game);\n      const gameStore = useGameStore();\n      await gameStore.fetchAndSetGame(\"gameId\");\n\n      expect(gameStore.game).toStrictEqual<Game>(game);\n    });\n  });\n\n  describe(\"cancelGame\", () => {\n    it(\"should cancel game when called.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game._id = \"gameId\";\n      await gameStore.cancelGame();\n\n      expect(mocks.composables.useFetchGames.cancelGame).toHaveBeenCalledExactlyOnceWith(\"gameId\");\n    });\n\n    it(\"should set game when called.\", async() => {\n      const game = createFakeGame();\n      mocks.composables.useFetchGames.cancelGame.mockResolvedValue(game);\n      const gameStore = useGameStore();\n      await gameStore.cancelGame();\n\n      expect(gameStore.game).toStrictEqual<Game>(game);\n    });\n  });\n\n  describe(\"makeGamePlay\", () => {\n    it(\"should make game play when called.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game._id = \"gameId\";\n      const makeGamePlayDto = createFakeMakeGamePlayDto();\n      await gameStore.makeGamePlay(makeGamePlayDto);\n\n      expect(mocks.composables.useFetchGames.makeGamePlay).toHaveBeenCalledExactlyOnceWith(\"gameId\", makeGamePlayDto);\n    });\n\n    it(\"should set game when called.\", async() => {\n      const game = createFakeGame();\n      const makeGamePlayDto = createFakeMakeGamePlayDto();\n      mocks.composables.useFetchGames.makeGamePlay.mockResolvedValue(game);\n      const gameStore = useGameStore();\n      await gameStore.makeGamePlay(makeGamePlayDto);\n\n      expect(gameStore.game).toStrictEqual<Game>(game);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerHeader/GameLobbyRolePickerHeader.nuxt.spec.ts": {
      "tests": [
        {
          "id": "857",
          "name": "Game Lobby Role Picker Header Component should match snapshot when rendered."
        },
        {
          "id": "858",
          "name": "Game Lobby Role Picker Header Component Current Role should translate current role title when rendered."
        },
        {
          "id": "859",
          "name": "Game Lobby Role Picker Header Component Current Role should translate current role when rendered."
        },
        {
          "id": "860",
          "name": "Game Lobby Role Picker Header Component Current Role should translate no role text when player is not defined."
        },
        {
          "id": "861",
          "name": "Game Lobby Role Picker Header Component Current Role should translate no role text when player doesn't have any role yet."
        },
        {
          "id": "862",
          "name": "Game Lobby Role Picker Header Component Title should translate title when rendered."
        },
        {
          "id": "863",
          "name": "Game Lobby Role Picker Header Component Title should translate title without player name when player is not defined."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport type { GameLobbyRolePickerHeaderProps } from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerHeader/game-lobby-role-picker-header.types\";\nimport GameLobbyRolePickerHeader from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerHeader/GameLobbyRolePickerHeader.vue\";\nimport { createFakeCreateGamePlayerDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game-player/create-game-player.dto.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Lobby Role Picker Header Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyRolePickerHeader>>;\n  const defaultProps: GameLobbyRolePickerHeaderProps = {\n    player: createFakeCreateGamePlayerDto({\n      name: \"Toto\",\n      role: { name: \"werewolf\" },\n    }),\n  };\n\n  async function mountGameLobbyRolePickerHeaderComponent(options: ComponentMountingOptions<typeof GameLobbyRolePickerHeader> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyRolePickerHeader>>> {\n    return mountSuspendedComponent(GameLobbyRolePickerHeader, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyRolePickerHeaderComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Current Role\", () => {\n    it(\"should translate current role title when rendered.\", () => {\n      const currentRoleTitle = wrapper.find<HTMLSpanElement>(\"#current-role-title\");\n\n      expect(currentRoleTitle.text()).toBe(\"components.GameLobbyRolePickerHeader.currentRole\");\n    });\n\n    it(\"should translate current role when rendered.\", () => {\n      const currentRole = wrapper.find<HTMLSpanElement>(\"#current-role-text\");\n\n      expect(currentRole.text()).toBe(\"shared.role.name.werewolf\");\n    });\n\n    it(\"should translate no role text when player is not defined.\", async() => {\n      wrapper = await mountGameLobbyRolePickerHeaderComponent({ props: {} });\n      const currentRole = wrapper.find<HTMLSpanElement>(\"#current-role-text\");\n\n      expect(currentRole.text()).toBe(\"components.GameLobbyRolePickerHeader.noRole\");\n    });\n\n    it(\"should translate no role text when player doesn't have any role yet.\", async() => {\n      wrapper = await mountGameLobbyRolePickerHeaderComponent({ props: { player: createFakeCreateGamePlayerDto({ name: \"Toto\" }) } });\n      const currentRole = wrapper.find<HTMLSpanElement>(\"#current-role-text\");\n\n      expect(currentRole.text()).toBe(\"components.GameLobbyRolePickerHeader.noRole\");\n    });\n  });\n\n  describe(\"Title\", () => {\n    it(\"should translate title when rendered.\", () => {\n      const title = wrapper.find<HTMLHeadingElement>(\"#role-picker-header-title\");\n\n      expect(title.text()).toBe(\"components.GameLobbyRolePickerHeader.pickRoleForPlayer, {\\\"playerName\\\":\\\"Toto\\\"}\");\n    });\n\n    it(\"should translate title without player name when player is not defined.\", async() => {\n      wrapper = await mountGameLobbyRolePickerHeaderComponent({ props: {} });\n      const title = wrapper.find<HTMLHeadingElement>(\"#role-picker-header-title\");\n\n      expect(title.text()).toBe(\"components.GameLobbyRolePickerHeader.pickRoleForPlayer, {}\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecords.nuxt.spec.ts": {
      "tests": [
        {
          "id": "864",
          "name": "Game Over History Records Component should match snapshot when rendered."
        },
        {
          "id": "865",
          "name": "Game Over History Records Component Timeline should render game history records from store in record for each when rendered."
        },
        {
          "id": "866",
          "name": "Game Over History Records Component Timeline should render game history records from stores in phase for each when rendered."
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport type GameOverHistoryRecord from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecord.vue\";\nimport type GameOverHistoryRecordPhase from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecordPhase/GameOverHistoryRecordPhase.vue\";\nimport GameOverHistoryRecords from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecords.vue\";\nimport type { GameHistoryRecord } from \"~/composables/api/game/types/game-history-record/game-history-record.class\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\nimport { createFakeGameHistoryRecord } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Over History Records Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameOverHistoryRecords>>;\n  const gameHistoryRecords = [\n    createFakeGameHistoryRecord(),\n    createFakeGameHistoryRecord(),\n    createFakeGameHistoryRecord(),\n  ];\n  const testingPinia = { initialState: { [StoreIds.GAME_HISTORY_RECORDS]: { gameHistoryRecords } } };\n\n  async function mountGameOverHistoryRecordsComponent(options: ComponentMountingOptions<typeof GameOverHistoryRecords> = {}):\n  Promise<ReturnType<typeof mount<typeof GameOverHistoryRecords>>> {\n    return mountSuspendedComponent(GameOverHistoryRecords, {\n      shallow: false,\n      global: {\n        plugins: [createTestingPinia(testingPinia)],\n        stubs: {\n          GameOverHistoryRecordPhase: true,\n          GameOverHistoryRecordIcon: true,\n          GameOverHistoryRecord: true,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameOverHistoryRecordsComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Timeline\", () => {\n    it(\"should render game history records from store in record for each when rendered.\", () => {\n      const records = wrapper.findAllComponents<typeof GameOverHistoryRecord>(\".game-over-history-record\");\n\n      expect(records).toHaveLength(gameHistoryRecords.length);\n      expect(records[0].props(\"gameHistoryRecord\")).toStrictEqual<GameHistoryRecord>(gameHistoryRecords[0]);\n      expect(records[1].props(\"gameHistoryRecord\")).toStrictEqual<GameHistoryRecord>(gameHistoryRecords[1]);\n      expect(records[2].props(\"gameHistoryRecord\")).toStrictEqual<GameHistoryRecord>(gameHistoryRecords[2]);\n    });\n\n    it(\"should render game history records from stores in phase for each when rendered.\", () => {\n      const phases = wrapper.findAllComponents<typeof GameOverHistoryRecordPhase>(\".game-over-history-record-phase\");\n\n      expect(phases).toHaveLength(gameHistoryRecords.length);\n      expect(phases[0].props(\"gameHistoryRecord\")).toStrictEqual<GameHistoryRecord>(gameHistoryRecords[0]);\n      expect(phases[1].props(\"gameHistoryRecord\")).toStrictEqual<GameHistoryRecord>(gameHistoryRecords[1]);\n      expect(phases[2].props(\"gameHistoryRecord\")).toStrictEqual<GameHistoryRecord>(gameHistoryRecords[2]);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionChosenSide/GameOverHistoryRecordDecisionChosenSide.nuxt.spec.ts": {
      "tests": [
        {
          "id": "867",
          "name": "Game Over History Record Decision Chosen Side Component should match snapshot when rendered."
        },
        {
          "id": "868",
          "name": "Game Over History Record Decision Chosen Side Component Chosen Side Text should render the chosen side text when rendered."
        },
        {
          "id": "869",
          "name": "Game Over History Record Decision Chosen Side Component Chosen Side Icon should render the chosen werewolves side icon when rendered."
        },
        {
          "id": "870",
          "name": "Game Over History Record Decision Chosen Side Component Chosen Side Icon should render the chosen villagers side icon when rendered."
        }
      ],
      "source": "import type { NuxtImg } from \"#components\";\nimport type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport type { GameOverHistoryRecordDecisionChosenSideProps } from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionChosenSide/game-over-history-record-decision-chosen-side.types\";\nimport GameOverHistoryRecordDecisionChosenSide from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordDecision/GameOverHistoryRecordDecisionChosenSide/GameOverHistoryRecordDecisionChosenSide.vue\";\nimport { createFakeGameHistoryRecordPlay } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play.factory\";\nimport { createFakeGameHistoryRecord } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record.factory\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Over History Record Decision Chosen Side Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameOverHistoryRecordDecisionChosenSide>>;\n  const defaultGameHistoryRecord = createFakeGameHistoryRecord({ play: createFakeGameHistoryRecordPlay({ chosenSide: \"werewolves\" }) });\n  const defaultProps: GameOverHistoryRecordDecisionChosenSideProps = { gameHistoryRecord: defaultGameHistoryRecord };\n\n  async function mountGameOverHistoryRecordDecisionChosenSideComponent(options: ComponentMountingOptions<typeof GameOverHistoryRecordDecisionChosenSide> = {}):\n  Promise<ReturnType<typeof mount<typeof GameOverHistoryRecordDecisionChosenSide>>> {\n    return mountSuspendedComponent(GameOverHistoryRecordDecisionChosenSide, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameOverHistoryRecordDecisionChosenSideComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Chosen Side Text\", () => {\n    it(\"should render the chosen side text when rendered.\", () => {\n      const chosenSideText = wrapper.find<HTMLHeadElement>(\"#game-over-history-record-decision-chosen-side-text\");\n\n      expect(chosenSideText.text()).toBe(\"shared.role.definiteSide.werewolves\");\n    });\n  });\n\n  describe(\"Chosen Side Icon\", () => {\n    it(\"should render the chosen werewolves side icon when rendered.\", () => {\n      const chosenSideIcon = wrapper.findComponent<typeof NuxtImg>(\"[alt='Werewolves side']\");\n\n      expect(chosenSideIcon.attributes(\"src\")).toBe(\"/svg/role/werewolf.svg\");\n    });\n\n    it(\"should render the chosen villagers side icon when rendered.\", async() => {\n      const gameHistoryRecord = createFakeGameHistoryRecord({ play: createFakeGameHistoryRecordPlay({ chosenSide: \"villagers\" }) });\n      wrapper = await mountGameOverHistoryRecordDecisionChosenSideComponent({ props: { gameHistoryRecord } });\n      const chosenSideIcon = wrapper.findComponent<typeof NuxtImg>(\"[alt='Villagers side']\");\n\n      expect(chosenSideIcon.attributes(\"src\")).toBe(\"/svg/role/villager.svg\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/shared/game/player/PlayerCard/PlayerCard.nuxt.spec.ts": {
      "tests": [
        {
          "id": "871",
          "name": "Player Card Component should match snapshot when rendered."
        },
        {
          "id": "872",
          "name": "Player Card Component Selector Button should render selector button without aria label when not provided in props."
        },
        {
          "id": "873",
          "name": "Player Card Component Selector Button should emit playerCardSelectorClick event when clicked."
        },
        {
          "id": "874",
          "name": "Player Card Component Selector Button should have tooltip with aria label as value when doesShowSelectorTooltip prop is true."
        },
        {
          "id": "875",
          "name": "Player Card Component Selector Button should not have tooltip when doesShowSelectorTooltip prop is false."
        },
        {
          "id": "876",
          "name": "Player Card Component Selector Button Flipping Role Image should render role image of player with correct alt when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\n\nimport type { PlayerCardProps } from \"~/components/shared/game/player/PlayerCard/player-card.types\";\nimport PlayerCard from \"~/components/shared/game/player/PlayerCard/PlayerCard.vue\";\nimport RoleFlippingImage from \"~/components/shared/role/RoleImage/RoleFlippingImage/RoleFlippingImage.vue\";\nimport { pTooltipDirectiveBinder } from \"~/tests/unit/utils/helpers/directive.helpers\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { BoundTooltip } from \"~/tests/unit/utils/types/directive.types\";\n\ndescribe(\"Player Card Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof PlayerCard>>;\n  const defaultProps: PlayerCardProps = {\n    playerName: \"Player\",\n    playerRole: \"werewolf\",\n    selectorAriaLabel: \"Select Player\",\n  };\n\n  beforeEach(async() => {\n    wrapper = await mountSuspendedComponent(PlayerCard, { props: defaultProps });\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Selector Button\", () => {\n    it(\"should render selector button without aria label when not provided in props.\", async() => {\n      wrapper = await mountSuspendedComponent(PlayerCard, { props: { ...defaultProps, selectorAriaLabel: undefined } });\n      const selectorButton = wrapper.find<HTMLButtonElement>(\".player-card-selector\");\n\n      expect(selectorButton.attributes(\"aria-label\")).toBeUndefined();\n    });\n\n    it(\"should emit playerCardSelectorClick event when clicked.\", async() => {\n      const selectorButton = wrapper.find<HTMLButtonElement>(\"[aria-label=\\\"Select Player\\\"]\");\n      await selectorButton.trigger(\"click\");\n      const emittedEvents = wrapper.emitted(\"playerCardSelectorClick\");\n\n      expect(emittedEvents).toHaveLength(1);\n    });\n\n    it(\"should have tooltip with aria label as value when doesShowSelectorTooltip prop is true.\", async() => {\n      const tooltip: BoundTooltip = { value: undefined };\n      const directives = { ...pTooltipDirectiveBinder(tooltip, \".player-card-selector\") };\n      wrapper = await mountSuspendedComponent(PlayerCard, { props: { ...defaultProps, doesShowSelectorTooltip: true }, global: { directives } });\n\n      expect(tooltip.value).toBe(\"Select Player\");\n    });\n\n    it(\"should not have tooltip when doesShowSelectorTooltip prop is false.\", async() => {\n      const tooltip: BoundTooltip = { value: undefined };\n      const directives = { ...pTooltipDirectiveBinder(tooltip, \".player-card-selector\") };\n      wrapper = await mountSuspendedComponent(PlayerCard, { props: { ...defaultProps, doesShowSelectorTooltip: false }, global: { directives } });\n\n      expect(tooltip.value).toBeUndefined();\n    });\n\n    describe(\"Flipping Role Image\", () => {\n      it(\"should render role image of player with correct alt when rendered.\", () => {\n        const roleImage = wrapper.findComponent<typeof RoleFlippingImage>(RoleFlippingImage);\n\n        expect(roleImage.attributes(\"alt\")).toBe(\"components.PlayerCard.playerCardRoleImageAlt, {\\\"playerName\\\":\\\"Player\\\"}\");\n      });\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/vue-prime/useVuePrimeToasts.spec.ts": {
      "tests": [
        {
          "id": "877",
          "name": "Use Vue Prime Toasts Composable addToast should add a toast with default options when called."
        },
        {
          "id": "878",
          "name": "Use Vue Prime Toasts Composable addSuccessToast should add a success toast with default options when called."
        },
        {
          "id": "879",
          "name": "Use Vue Prime Toasts Composable addInfoToast should add an info toast with default options when called."
        },
        {
          "id": "880",
          "name": "Use Vue Prime Toasts Composable addWarnToast should add a warn toast with default options when called."
        },
        {
          "id": "881",
          "name": "Use Vue Prime Toasts Composable addErrorToast should add an error toast with default options when called."
        }
      ],
      "source": "import type { ToastMessageOptions } from \"primevue/toast\";\nimport type { Mock } from \"vitest\";\nimport * as UseToast from \"primevue/usetoast\";\n\nimport { useVuePrimeToasts } from \"~/composables/vue-prime/useVuePrimeToasts\";\n\ndescribe(\"Use Vue Prime Toasts Composable\", () => {\n  let mocks: {\n    composables: {\n      useToast: {\n        add: Mock;\n        remove: Mock;\n        removeGroup: Mock;\n        removeAllGroups: Mock;\n      };\n    };\n  };\n\n  beforeEach(() => {\n    mocks = {\n      composables: {\n        useToast: {\n          add: vi.fn(),\n          remove: vi.fn(),\n          removeGroup: vi.fn(),\n          removeAllGroups: vi.fn(),\n        },\n      },\n    };\n    vi.spyOn(UseToast, \"useToast\").mockReturnValue(mocks.composables.useToast);\n  });\n\n  describe(\"addToast\", () => {\n    it(\"should add a toast with default options when called.\", () => {\n      const { addToast } = useVuePrimeToasts();\n      const options: ToastMessageOptions = { summary: \"summary\", detail: \"detail\" };\n      addToast(options);\n      const expectedOptions = { life: 4000, closable: true, ...options };\n\n      expect(mocks.composables.useToast.add).toHaveBeenCalledExactlyOnceWith(expectedOptions);\n    });\n  });\n\n  describe(\"addSuccessToast\", () => {\n    it(\"should add a success toast with default options when called.\", () => {\n      const { addSuccessToast } = useVuePrimeToasts();\n      const options: ToastMessageOptions = { summary: \"summary\", detail: \"detail\" };\n      addSuccessToast(options);\n      const expectedOptions = { severity: \"success\", life: 4000, closable: true, ...options };\n\n      expect(mocks.composables.useToast.add).toHaveBeenCalledExactlyOnceWith(expectedOptions);\n    });\n  });\n\n  describe(\"addInfoToast\", () => {\n    it(\"should add an info toast with default options when called.\", () => {\n      const { addInfoToast } = useVuePrimeToasts();\n      const options: ToastMessageOptions = { summary: \"summary\", detail: \"detail\" };\n      addInfoToast(options);\n      const expectedOptions = { severity: \"info\", life: 4000, closable: true, ...options };\n\n      expect(mocks.composables.useToast.add).toHaveBeenCalledExactlyOnceWith(expectedOptions);\n    });\n  });\n\n  describe(\"addWarnToast\", () => {\n    it(\"should add a warn toast with default options when called.\", () => {\n      const { addWarnToast } = useVuePrimeToasts();\n      const options: ToastMessageOptions = { summary: \"summary\", detail: \"detail\" };\n      addWarnToast(options);\n      const expectedOptions = { severity: \"warn\", life: 4000, closable: true, ...options };\n\n      expect(mocks.composables.useToast.add).toHaveBeenCalledExactlyOnceWith(expectedOptions);\n    });\n  });\n\n  describe(\"addErrorToast\", () => {\n    it(\"should add an error toast with default options when called.\", () => {\n      const { addErrorToast } = useVuePrimeToasts();\n      const options: ToastMessageOptions = { summary: \"summary\", detail: \"detail\" };\n      addErrorToast(options);\n      const expectedOptions = { severity: \"error\", life: 4000, closable: true, ...options };\n\n      expect(mocks.composables.useToast.add).toHaveBeenCalledExactlyOnceWith(expectedOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordIcon/GameOverHistoryRecordIcon.nuxt.spec.ts": {
      "tests": [
        {
          "id": "882",
          "name": "Game Over History Record Icon Component should match snapshot when rendered."
        },
        {
          "id": "883",
          "name": "Game Over History Record Icon Component Icon should display the game history record icon when rendered."
        },
        {
          "id": "884",
          "name": "Game Over History Record Icon Component Icon should return question mark icon when the game history record icon is not found."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport type { GameOverHistoryRecordIconProps } from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecordIcon/game-over-history-record-icon.types\";\nimport GameOverHistoryRecordIcon from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecordIcon/GameOverHistoryRecordIcon.vue\";\nimport { createFakeGameHistoryRecordPlaySource } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-source/game-history-record-play-source.factory\";\nimport { createFakeGameHistoryRecordPlay } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play.factory\";\nimport { createFakeGameHistoryRecord } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Over History Record Icon Component\", () => {\n  const gameHistoryRecord = createFakeGameHistoryRecord({\n    play: createFakeGameHistoryRecordPlay({\n      source: createFakeGameHistoryRecordPlaySource({ name: \"sheriff\" }),\n      action: \"delegate\",\n    }),\n  });\n  let wrapper: ReturnType<typeof mount<typeof GameOverHistoryRecordIcon>>;\n  const defaultProps: GameOverHistoryRecordIconProps = { gameHistoryRecord };\n\n  async function mountGameOverHistoryRecordIconComponent(options: ComponentMountingOptions<typeof GameOverHistoryRecordIcon> = {}):\n  Promise<ReturnType<typeof mount<typeof GameOverHistoryRecordIcon>>> {\n    return mountSuspendedComponent(GameOverHistoryRecordIcon, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameOverHistoryRecordIconComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Icon\", () => {\n    it(\"should display the game history record icon when rendered.\", () => {\n      const icon = wrapper.find<HTMLImageElement>(\"[alt='Game history record icon']\");\n\n      expect(icon.attributes(\"src\")).toBe(\"/svg/game/player/player-attribute/sheriff.svg\");\n    });\n\n    it(\"should return question mark icon when the game history record icon is not found.\", async() => {\n      wrapper = await mountGameOverHistoryRecordIconComponent({\n        props: {\n          gameHistoryRecord: createFakeGameHistoryRecord({\n            play: createFakeGameHistoryRecordPlay({\n              source: createFakeGameHistoryRecordPlaySource({ name: \"sheriff\" }),\n              action: \"eat\",\n            }),\n          }),\n        },\n      });\n      const icon = wrapper.find<HTMLImageElement>(\"[alt='Game history record icon']\");\n\n      expect(icon.attributes(\"src\")).toBe(\"/svg/misc/question-mark.svg\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/shared/role/RoleTypeBadge/RoleTypeBadge.nuxt.spec.ts": {
      "tests": [
        {
          "id": "885",
          "name": "Role Type Badge Component should match snapshot when rendered."
        },
        {
          "id": "886",
          "name": "Role Type Badge Component Badge should have tooltip when rendered."
        },
        {
          "id": "887",
          "name": "Role Type Badge Component Badge should translate role type when rendered."
        },
        {
          "id": "888",
          "name": "Role Type Badge Component Badge 'should have severity of danger when r…'"
        },
        {
          "id": "889",
          "name": "Role Type Badge Component Badge 'should have severity of success when …'"
        },
        {
          "id": "890",
          "name": "Role Type Badge Component Badge 'should have severity of warning when …'"
        },
        {
          "id": "891",
          "name": "Role Type Badge Component Badge 'should have severity of info when rol…'"
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport type Badge from \"primevue/badge\";\n\nimport type { RoleTypeBadgeProps } from \"~/components/shared/role/RoleTypeBadge/role-type-badge-types\";\nimport RoleTypeBadge from \"~/components/shared/role/RoleTypeBadge/RoleTypeBadge.vue\";\nimport type { RoleType } from \"~/composables/api/role/types/role.types\";\nimport { pTooltipDirectiveBinder } from \"~/tests/unit/utils/helpers/directive.helpers\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { BoundTooltip } from \"~/tests/unit/utils/types/directive.types\";\n\ndescribe(\"Role Type Badge Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof RoleTypeBadge>>;\n  const defaultProps: RoleTypeBadgeProps = { roleType: \"werewolf\" };\n\n  async function mountRoleTypeBadgeComponent(options: ComponentMountingOptions<typeof RoleTypeBadge> = {}): Promise<ReturnType<typeof mount<typeof RoleTypeBadge>>> {\n    return mountSuspendedComponent(RoleTypeBadge, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountRoleTypeBadgeComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Badge\", () => {\n    it(\"should have tooltip when rendered.\", async() => {\n      const tooltip: BoundTooltip = { value: undefined };\n      const directives = { ...pTooltipDirectiveBinder(tooltip, \".role-type-badge\") };\n      wrapper = await mountRoleTypeBadgeComponent({ global: { directives } });\n\n      expect(tooltip.value).toBe(\"His goal is to eliminate all Villagers.\");\n    });\n\n    it(\"should translate role type when rendered.\", () => {\n      const badge = wrapper.findComponent<Badge>(\".role-type-badge\");\n\n      expect(badge.attributes(\"value\")).toBe(\"Werewolf\");\n    });\n\n    it.each< {\n      roleType: RoleType;\n      expectedSeverity: \"danger\" | \"info\" | \"success\" | \"warning\";\n      test: string;\n    }>([\n      {\n        roleType: \"werewolf\",\n        expectedSeverity: \"danger\",\n        test: \"should have severity of danger when role type is werewolf.\",\n      },\n      {\n        roleType: \"villager\",\n        expectedSeverity: \"success\",\n        test: \"should have severity of success when role type is villager.\",\n      },\n      {\n        roleType: \"ambiguous\",\n        expectedSeverity: \"warning\",\n        test: \"should have severity of warning when role type is ambiguous.\",\n      },\n      {\n        roleType: \"lonely\",\n        expectedSeverity: \"info\",\n        test: \"should have severity of info when role type is lonely.\",\n      },\n    ])(\"$test\", async({ roleType, expectedSeverity }) => {\n      await wrapper.setProps({ roleType });\n      const badge = wrapper.findComponent<Badge>(\".role-type-badge\");\n\n      expect(badge.attributes(\"severity\")).toBe(expectedSeverity);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/about/AboutAvailableRoles/AboutAvailableRoleDescription/AboutAvailableRoleDescription.nuxt.spec.ts": {
      "tests": [
        {
          "id": "892",
          "name": "About Available Role Description Component should match snapshot when rendered."
        },
        {
          "id": "893",
          "name": "About Available Role Description Component Role Left Description Role Image should display role image when rendered."
        },
        {
          "id": "894",
          "name": "About Available Role Description Component Role Left Description Role Image should display role image with correct alt when rendered."
        },
        {
          "id": "895",
          "name": "About Available Role Description Component Role Left Description should display role name when rendered."
        },
        {
          "id": "896",
          "name": "About Available Role Description Component Role Left Description should display role type badge when rendered."
        },
        {
          "id": "897",
          "name": "About Available Role Description Component Role Left Description should display role origin badge when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\n\nimport type { AboutAvailableRoleDescriptionProps } from \"~/components/pages/about/AboutAvailableRoles/AboutAvailableRoleDescription/about-available-role-description.types\";\nimport AboutAvailableRoleDescription from \"~/components/pages/about/AboutAvailableRoles/AboutAvailableRoleDescription/AboutAvailableRoleDescription.vue\";\nimport type RoleImage from \"~/components/shared/role/RoleImage/RoleImage.vue\";\nimport type RoleOriginBadge from \"~/components/shared/role/RoleOriginBadge/RoleOriginBadge.vue\";\nimport type RoleTypeBadge from \"~/components/shared/role/RoleTypeBadge/RoleTypeBadge.vue\";\nimport type { Role } from \"~/composables/api/role/types/role.class\";\nimport { createFakeRole } from \"~/tests/unit/utils/factories/composables/api/role/role.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"About Available Role Description Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof AboutAvailableRoleDescription>>;\n  const defaultRole: Role = createFakeRole({\n    name: \"werewolf\",\n    type: \"werewolf\",\n    origin: \"classic\",\n  });\n  const defaultProps: AboutAvailableRoleDescriptionProps = { role: defaultRole };\n\n  beforeEach(async() => {\n    wrapper = await mountSuspendedComponent(AboutAvailableRoleDescription, { props: defaultProps });\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Role Left Description\", () => {\n    describe(\"Role Image\", () => {\n      it(\"should display role image when rendered.\", () => {\n        const roleImage = wrapper.findComponent<typeof RoleImage>(\".available-role-description-role-image\");\n\n        expect(roleImage.props(\"roleName\")).toBe(\"werewolf\");\n      });\n\n      it(\"should display role image with correct alt when rendered.\", () => {\n        const roleImage = wrapper.find<HTMLImageElement>(\".available-role-description-role-image\");\n\n        expect(roleImage.attributes(\"alt\")).toBe(\"components.AboutAvailableRoleDescription.roleDescriptionLeftImageAlt, {\\\"role\\\":\\\"shared.role.name.werewolf\\\"}\");\n      });\n    });\n\n    it(\"should display role name when rendered.\", () => {\n      const roleName = wrapper.find<HTMLHeadElement>(\".available-role-description-role-name\");\n\n      expect(roleName.text()).toBe(\"shared.role.name.werewolf\");\n    });\n\n    it(\"should display role type badge when rendered.\", () => {\n      const roleTypeBadge = wrapper.findComponent<typeof RoleTypeBadge>(\".available-role-description-role-type-badge\");\n\n      expect(roleTypeBadge.props(\"roleType\")).toBe(\"werewolf\");\n    });\n\n    it(\"should display role origin badge when rendered.\", () => {\n      const roleOriginBadge = wrapper.findComponent<typeof RoleOriginBadge>(\".available-role-description-role-origin-badge\");\n\n      expect(roleOriginBadge.props(\"roleOrigin\")).toBe(\"classic\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/about/AboutWerewolvesGame/AboutWerewolvesGame.nuxt.spec.ts": {
      "tests": [
        {
          "id": "898",
          "name": "About Werewolves Game Component should match snapshot when rendered."
        },
        {
          "id": "899",
          "name": "About Werewolves Game Component Title should display translated title when rendered."
        },
        {
          "id": "900",
          "name": "About Werewolves Game Component Watch tutorial on Youtube Anchor should have tooltip when rendered."
        },
        {
          "id": "901",
          "name": "About Werewolves Game Component Watch tutorial on Youtube Anchor should have translated button when rendered."
        },
        {
          "id": "902",
          "name": "About Werewolves Game Component Sections should translate first section when rendered."
        },
        {
          "id": "903",
          "name": "About Werewolves Game Component Sections should translate second section when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\n\nimport AboutWerewolvesGame from \"~/components/pages/about/AboutWerewolvesGame.vue\";\nimport { pTooltipDirectiveBinder } from \"~/tests/unit/utils/helpers/directive.helpers\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { BoundTooltip } from \"~/tests/unit/utils/types/directive.types\";\n\ndescribe(\"About Werewolves Game Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof AboutWerewolvesGame>>;\n\n  beforeEach(async() => {\n    wrapper = await mountSuspendedComponent(AboutWerewolvesGame);\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Title\", () => {\n    it(\"should display translated title when rendered.\", () => {\n      const title = wrapper.find<HTMLHeadElement>(\"#about-werewolves-game-title\");\n\n      expect(title.text()).toBe(\"The Werewolves of Miller's Hollow™ game\");\n    });\n  });\n\n  describe(\"Watch tutorial on Youtube Anchor\", () => {\n    it(\"should have tooltip when rendered.\", async() => {\n      const tooltip: BoundTooltip = { value: undefined };\n      const directives = { ...pTooltipDirectiveBinder(tooltip, \"#about-werewolves-game-watch-tutorial-video-on-youtube\") };\n      wrapper = await mountSuspendedComponent(AboutWerewolvesGame, { global: { directives } });\n\n      expect(tooltip.value).toBe(\"Watch an explanatory video on YouTube\");\n    });\n\n    it(\"should have translated button when rendered.\", () => {\n      const watchTutorialOnYoutubeAnchor = wrapper.find<HTMLAnchorElement>(\"#about-werewolves-game-watch-tutorial-video-on-youtube\");\n\n      expect(watchTutorialOnYoutubeAnchor.text()).toBe(\"I don't know this game\");\n    });\n  });\n\n  describe(\"Sections\", () => {\n    it(\"should translate first section when rendered.\", () => {\n      const firstSection = wrapper.find<HTMLParagraphElement>(\"#about-werewolves-game-first-section\");\n\n      expect(firstSection.text()).toBe(\"The Werewolves of Miller's Hollow™ is a captivating social board game, where each participant takes\" +\n      \" on the role of either a Villager or a Werewolf. Under the guidance of a game master, each session unveils a range of surprises,\" +\n      \" betrayals, twists, and even moments filled with laughter and sometimes tears.\");\n    });\n\n    it(\"should translate second section when rendered.\", () => {\n      const secondSection = wrapper.find<HTMLParagraphElement>(\"#about-werewolves-game-second-section\");\n\n      expect(secondSection.text()).toBe(\"The success of a game relies on the shoulders of the game master, tasked with creating an \" +\n      \"enchanting atmosphere, maintaining a dynamic pace, and mastering the subtleties of the game rules. Managing a sizable group of players, \" +\n      \"lacking experience, or being in a state of distraction make this task a significant challenge.\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GameOver/GameOverActions/GameOverActions.nuxt.spec.ts": {
      "tests": [
        {
          "id": "904",
          "name": "Game Over Actions Component should match snapshot when rendered."
        },
        {
          "id": "905",
          "name": "Game Over Actions Component Create another game button should translate create another game button text when rendered."
        },
        {
          "id": "906",
          "name": "Game Over Actions Component Show Game History Button should be in loading state when the game history is empty."
        },
        {
          "id": "907",
          "name": "Game Over Actions Component Show Game History Button should translate loading show game history button text when the game history is empty."
        },
        {
          "id": "908",
          "name": "Game Over Actions Component Show Game History Button should translate show game history button text when the game history records have been fetched."
        },
        {
          "id": "909",
          "name": "Game Over Actions Component Emits should emit show game history event when the show game history button is clicked."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type Button from \"primevue/button\";\n\nimport GameOverActions from \"~/components/pages/game/GameOver/GameOverActions/GameOverActions.vue\";\nimport { useGameHistoryRecordsStore } from \"~/stores/game/game-history-record/useGameHistoryRecordsStore\";\nimport { createFakeGameHistoryRecord } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Over Actions Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameOverActions>>;\n\n  async function mountGameOverActionsComponent(): Promise<ReturnType<typeof mount<typeof GameOverActions>>> {\n    return mountSuspendedComponent(GameOverActions, { shallow: false });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameOverActionsComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Create another game button\", () => {\n    it(\"should translate create another game button text when rendered.\", () => {\n      const createAnotherGameButton = wrapper.findComponent<typeof GameOverActions>(\"#new-game-button\");\n\n      expect(createAnotherGameButton.text()).toBe(\"Create another game\");\n    });\n  });\n\n  describe(\"Show Game History Button\", () => {\n    it(\"should be in loading state when the game history is empty.\", () => {\n      const showGameHistoryButton = wrapper.findComponent<typeof Button>(\"#show-game-history-button\");\n\n      expect(showGameHistoryButton.props(\"loading\")).toBeTruthy();\n    });\n\n    it(\"should translate loading show game history button text when the game history is empty.\", () => {\n      const showGameHistoryButton = wrapper.findComponent<Button>(\"#show-game-history-button\");\n\n      expect(showGameHistoryButton.text()).toBe(\"components.GameOverActions.loadingGameHistory\");\n    });\n\n    it(\"should translate show game history button text when the game history records have been fetched.\", async() => {\n      const gameHistoryRecordsStore = useGameHistoryRecordsStore();\n      gameHistoryRecordsStore.gameHistoryRecords = [createFakeGameHistoryRecord()];\n      await nextTick();\n      const showGameHistoryButton = wrapper.findComponent<Button>(\"#show-game-history-button\");\n\n      expect(showGameHistoryButton.text()).toBe(\"components.GameOverActions.showGameHistory\");\n    });\n  });\n\n  describe(\"Emits\", () => {\n    it(\"should emit show game history event when the show game history button is clicked.\", () => {\n      const showGameHistoryButton = wrapper.findComponent<Button>(\"#show-game-history-button\");\n      (showGameHistoryButton.vm as VueVm).$emit(\"click\");\n\n      expect(wrapper.emitted(\"showGameHistory\")).toBeTruthy();\n    });\n  });\n});"
    },
    "tests/unit/specs/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.nuxt.spec.ts": {
      "tests": [
        {
          "id": "910",
          "name": "Game Option Input Group Component should match snapshot when rendered."
        },
        {
          "id": "911",
          "name": "Game Option Input Group Component Label Icon should pass the icon class from props to the label icon when rendered."
        },
        {
          "id": "912",
          "name": "Game Option Input Group Component Label Text should pass the label text from props to the label text when rendered."
        },
        {
          "id": "913",
          "name": "Game Option Input Group Component Description should pass the description text from props to the description when rendered."
        },
        {
          "id": "914",
          "name": "Game Option Input Group Component Bottom Divider should not render the bottom divider when doesHaveBottomDivider prop is not provided."
        },
        {
          "id": "915",
          "name": "Game Option Input Group Component Bottom Divider should render the bottom divider when doesHaveBottomDivider prop is provided as true."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport type Divider from \"primevue/divider\";\nimport type { GameOptionInputGroupProps } from \"~/components/shared/game/game-options/GameOptionInputGroup/game-option-input-group.types\";\nimport GameOptionInputGroup from \"~/components/shared/game/game-options/GameOptionInputGroup/GameOptionInputGroup.vue\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Option Input Group Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameOptionInputGroup>>;\n  const defaultProps: GameOptionInputGroupProps = {\n    optionLabel: \"label\",\n    optionIconClass: \"icon\",\n    optionDescription: \"description\",\n  };\n\n  async function mountGameOptionInputGroupComponent(options: ComponentMountingOptions<typeof GameOptionInputGroup> = {}):\n  Promise<ReturnType<typeof mount<typeof GameOptionInputGroup>>> {\n    return mountSuspendedComponent(GameOptionInputGroup, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameOptionInputGroupComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Label Icon\", () => {\n    it(\"should pass the icon class from props to the label icon when rendered.\", () => {\n      const labelIcon = wrapper.find<HTMLSpanElement>(\"#game-option-label-icon\");\n\n      expect(labelIcon.classes()).toContain(defaultProps.optionIconClass);\n    });\n  });\n\n  describe(\"Label Text\", () => {\n    it(\"should pass the label text from props to the label text when rendered.\", () => {\n      const labelText = wrapper.find<HTMLHeadingElement>(\"#game-option-label\");\n\n      expect(labelText.text()).toBe(defaultProps.optionLabel);\n    });\n  });\n\n  describe(\"Description\", () => {\n    it(\"should pass the description text from props to the description when rendered.\", () => {\n      const description = wrapper.find<HTMLParagraphElement>(\"#game-option-description\");\n\n      expect(description.text()).toBe(defaultProps.optionDescription);\n    });\n  });\n\n  describe(\"Bottom Divider\", () => {\n    it(\"should not render the bottom divider when doesHaveBottomDivider prop is not provided.\", () => {\n      const divider = wrapper.findComponent<typeof Divider>(\"#game-option-bottom-divider\");\n\n      expect(divider.exists()).toBeFalsy();\n    });\n\n    it(\"should render the bottom divider when doesHaveBottomDivider prop is provided as true.\", async() => {\n      wrapper = await mountGameOptionInputGroupComponent({\n        props: {\n          ...defaultProps,\n          doesHaveBottomDivider: true,\n        },\n      });\n      const divider = wrapper.findComponent<typeof Divider>(\"#game-option-bottom-divider\");\n\n      expect(divider.exists()).toBeTruthy();\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/about/AboutCreator/AboutCreator.nuxt.spec.ts": {
      "tests": [
        {
          "id": "916",
          "name": "About Creator Component should match snapshot when rendered."
        },
        {
          "id": "917",
          "name": "About Creator Component Title should translate title when rendered."
        },
        {
          "id": "918",
          "name": "About Creator Component Sections should translate first section when rendered."
        },
        {
          "id": "919",
          "name": "About Creator Component Sections should translate portfolio button when rendered."
        },
        {
          "id": "920",
          "name": "About Creator Component Sections should translate second section when rendered."
        },
        {
          "id": "921",
          "name": "About Creator Component Sections should translate third section when rendered."
        },
        {
          "id": "922",
          "name": "About Creator Component Sections should translate fourth section when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\n\nimport AboutCreator from \"~/components/pages/about/AboutCreator.vue\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"About Creator Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof AboutCreator>>;\n\n  beforeEach(async() => {\n    wrapper = await mountSuspendedComponent(AboutCreator);\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Title\", () => {\n    it(\"should translate title when rendered.\", () => {\n      const title = wrapper.find<HTMLHeadElement>(\"#about-creator-title\");\n\n      expect(title.text()).toBe(\"A word from the creator\");\n    });\n  });\n\n  describe(\"Sections\", () => {\n    it(\"should translate first section when rendered.\", () => {\n      const firstSection = wrapper.find<HTMLParagraphElement>(\"#about-creator-first-section\");\n\n      expect(firstSection.text()).toBe(\"I am Antoine ZANARDI, a Full-Stack Web developer and a fan of open source in general. \" +\n      \"If you want to learn more about me, I invite you to explore my portfolio.\");\n    });\n\n    it(\"should translate portfolio button when rendered.\", () => {\n      const portfolioButton = wrapper.find<HTMLAnchorElement>(\"#about-creator-portfolio-button\");\n\n      expect(portfolioButton.text()).toBe(\"My portfolio\");\n    });\n\n    it(\"should translate second section when rendered.\", () => {\n      const secondSection = wrapper.find<HTMLParagraphElement>(\"#about-creator-second-section\");\n\n      expect(secondSection.text()).toBe(\"For me, Werewolves of Miller's Hollow™ game is one of the best games to play with friends or \" +\n      \"family around a table, where alliances and betrayals intertwine, much like in Mario Kart. \" +\n      \"As the game progresses, the true nature of each player is revealed, masks fall, and everyone feels threatened. Each game is a unique adventure, full of unexpected twists.\");\n    });\n\n    it(\"should translate third section when rendered.\", () => {\n      const thirdSection = wrapper.find<HTMLParagraphElement>(\"#about-creator-third-section\");\n\n      expect(thirdSection.text()).toBe(\"As a big fan of the game master role, I've always wanted to share the rewarding feeling of being \" +\n      \"the conductor during a game. So, I created this assistant so that anyone can take on this important role, in any game configuration.\");\n    });\n\n    it(\"should translate fourth section when rendered.\", () => {\n      const fourthSection = wrapper.find<HTMLParagraphElement>(\"#about-creator-forth-section\");\n\n      expect(fourthSection.text()).toBe(\"Your feedback on this assistant is welcome. \" +\n      \"It was created to serve all game masters, whether novice or expert, and make your games memorable. Have fun!\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGrid.nuxt.spec.ts": {
      "tests": [
        {
          "id": "923",
          "name": "Game Lobby Role Picker Grid Component should match snapshot when rendered."
        },
        {
          "id": "924",
          "name": "Game Lobby Role Picker Grid Component Available roles should render available roles plus random role when rendered."
        },
        {
          "id": "925",
          "name": "Game Lobby Role Picker Grid Component Emits should emit pickRole event when role element emits a pick role event."
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport GameLobbyRolePickerGrid from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGrid.vue\";\nimport type GameLobbyRolePickerGridElement from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerGrid/GameLobbyRolePickerGridElement/GameLobbyRolePickerGridElement.vue\";\nimport type { Role } from \"~/composables/api/role/types/role.class\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\nimport { createFakeRole } from \"~/tests/unit/utils/factories/composables/api/role/role.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Role Picker Grid Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyRolePickerGrid>>;\n  const roles = [\n    createFakeRole({ name: \"seer\" }),\n    createFakeRole({ name: \"villager\" }),\n    createFakeRole({ name: \"werewolf\" }),\n  ];\n  const testingPinia = { initialState: { [StoreIds.ROLES]: { roles } } };\n\n  async function mountGameLobbyRolePickerGridComponent(options: ComponentMountingOptions<typeof GameLobbyRolePickerGrid> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyRolePickerGrid>>> {\n    return mountSuspendedComponent(GameLobbyRolePickerGrid, {\n      global: { plugins: [createTestingPinia(testingPinia)] },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyRolePickerGridComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Available roles\", () => {\n    it(\"should render available roles plus random role when rendered.\", () => {\n      const roleCards = wrapper.findAllComponents<typeof GameLobbyRolePickerGridElement>(\".available-role\");\n\n      expect(roleCards).toHaveLength(roles.length + 1);\n      expect(roleCards[0].props(\"role\")).toBeUndefined();\n      expect(roleCards[1].props(\"role\")).toStrictEqual<Role>(roles[0]);\n      expect(roleCards[2].props(\"role\")).toStrictEqual<Role>(roles[1]);\n      expect(roleCards[3].props(\"role\")).toStrictEqual<Role>(roles[2]);\n    });\n  });\n\n  describe(\"Emits\", () => {\n    it(\"should emit pickRole event when role element emits a pick role event.\", () => {\n      const roleCards = wrapper.findAllComponents<typeof GameLobbyRolePickerGridElement>(\".available-role\");\n\n      (roleCards[0].vm as VueVm).$emit(\"pick-role\", roles[0]);\n\n      expect(wrapper.emitted(\"pickRole\")).toHaveLength(1);\n      expect(wrapper.emitted(\"pickRole\")?.[0]).toStrictEqual<Role[]>([roles[0]]);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GameOver/GameOverWinners/GameOverWinners.nuxt.spec.ts": {
      "tests": [
        {
          "id": "926",
          "name": "Game Over Winners Component should match snapshot when rendered."
        },
        {
          "id": "927",
          "name": "Game Over Winners Component Players Horizontal List should display players horizontal list when there are winners."
        },
        {
          "id": "928",
          "name": "Game Over Winners Component Players Horizontal List should not display players horizontal list when there is no victory."
        },
        {
          "id": "929",
          "name": "Game Over Winners Component Players Horizontal List should not display players horizontal list when there are no winners."
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\n\nimport GameOverWinners from \"~/components/pages/game/GameOver/GameOverWinners/GameOverWinners.vue\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\nimport { createFakeGameVictory } from \"~/tests/unit/utils/factories/composables/api/game/game-victory/game-victory.factory\";\nimport { createFakeGame } from \"~/tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { createFakeSeerAlivePlayer, createFakeVillagerAlivePlayer } from \"~/tests/unit/utils/factories/composables/api/game/player/player-with-role.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Over Winners Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameOverWinners>>;\n  const testingPinia = {\n    initialState: {\n      [StoreIds.GAME]: {\n        game: createFakeGame({\n          victory: createFakeGameVictory({\n            winners: [\n              createFakeSeerAlivePlayer(),\n              createFakeVillagerAlivePlayer(),\n            ],\n            type: \"villagers\",\n          }),\n        }),\n      },\n    },\n  };\n\n  async function mountGameOverWinnersComponent(): Promise<ReturnType<typeof mount<typeof GameOverWinners>>> {\n    return mountSuspendedComponent(GameOverWinners, { global: { plugins: [createTestingPinia(testingPinia)] } });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameOverWinnersComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Players Horizontal List\", () => {\n    it(\"should display players horizontal list when there are winners.\", () => {\n      const playersHorizontalList = wrapper.findComponent<typeof GameOverWinners>(\"#players-horizontal-list\");\n\n      expect(playersHorizontalList.exists()).toBeTruthy();\n    });\n\n    it(\"should not display players horizontal list when there is no victory.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.victory = undefined;\n      await nextTick();\n      const playersHorizontalList = wrapper.findComponent<typeof GameOverWinners>(\"#players-horizontal-list\");\n\n      expect(playersHorizontalList.exists()).toBeFalsy();\n    });\n\n    it(\"should not display players horizontal list when there are no winners.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.victory = createFakeGameVictory({ winners: undefined });\n      await nextTick();\n      const playersHorizontalList = wrapper.findComponent<typeof GameOverWinners>(\"#players-horizontal-list\");\n\n      expect(playersHorizontalList.exists()).toBeFalsy();\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/about/AboutHowToContribute/AboutHowToContribute.nuxt.spec.ts": {
      "tests": [
        {
          "id": "930",
          "name": "About How To Contribute Component should match snapshot when rendered."
        },
        {
          "id": "931",
          "name": "About How To Contribute Component Title should translate title when rendered."
        },
        {
          "id": "932",
          "name": "About How To Contribute Component Sections should translate first section when rendered."
        },
        {
          "id": "933",
          "name": "About How To Contribute Component Sections should translate second section for each bullet item when rendered."
        },
        {
          "id": "934",
          "name": "About How To Contribute Component Sections should translate gitHub text button when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\n\nimport AboutHowToContribute from \"~/components/pages/about/AboutHowToContribute.vue\";\nimport type GitHubRepositoryButton from \"~/components/shared/external/GitHubRepositoryButton/GitHubRepositoryButton.vue\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"About How To Contribute Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof AboutHowToContribute>>;\n\n  beforeEach(async() => {\n    wrapper = await mountSuspendedComponent(AboutHowToContribute);\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Title\", () => {\n    it(\"should translate title when rendered.\", () => {\n      const title = wrapper.find<HTMLHeadElement>(\"#about-how-to-contribute-title\");\n\n      expect(title.text()).toBe(\"How to contribute to this project?\");\n    });\n  });\n\n  describe(\"Sections\", () => {\n    it(\"should translate first section when rendered.\", () => {\n      const firstSection = wrapper.find<HTMLParagraphElement>(\"#about-how-to-contribute-first-section\");\n\n      expect(firstSection.text()).toBe(\"There are several ways to contribute to this project:\");\n    });\n\n    it(\"should translate second section for each bullet item when rendered.\", () => {\n      const secondSection = wrapper.find<HTMLUListElement>(\"#about-how-to-contribute-second-section\");\n      const secondSectionBulletItems = secondSection.findAll<HTMLLIElement>(\"li\");\n\n      expect(secondSectionBulletItems).toHaveLength(3);\n      expect(secondSectionBulletItems[0].text()).toBe(\"The Werewolf Assistant is an open-source project! Available on GitHub, whether you are a developer, graphic designer, \" +\n      \"or even a tester, your help is welcome. If you like the project, feel free to star it or follow the creator!\");\n      expect(secondSectionBulletItems[1].text()).toBe(\"This project is intended to remain a free service. However, both hosting and tool infrastructure are paid for. \" +\n      \"If you would like to contribute or appreciate the creator's work, you can make a donation on their Buy Me A Coffee page.\");\n      expect(secondSectionBulletItems[2].text()).toBe(\"Talk about this project around you! \" +\n      \"Word of mouth will encourage many role-play enthusiasts to embark on the grand adventure of the game master with the Werewolf Assistant.\");\n    });\n\n    it(\"should translate gitHub text button when rendered.\", () => {\n      const gitHubButton = wrapper.findComponent<typeof GitHubRepositoryButton>(\"#about-how-to-contribute-github-button\");\n\n      expect(gitHubButton.props(\"textButton\")).toBe(\"Access the project on GitHub\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/layouts/default/NavBar.nuxt.spec.ts": {
      "tests": [
        {
          "id": "935",
          "name": "NavBar Component should match snapshot when rendered."
        },
        {
          "id": "936",
          "name": "NavBar Component Home Page Link should have the prop 'to' set to home page when rendered."
        },
        {
          "id": "937",
          "name": "NavBar Component Home Page Link Werewolves Assistant Logo should have the prop 'src' set to the small logo when rendered."
        },
        {
          "id": "938",
          "name": "NavBar Component Home Page Link Werewolves Assistant Logo Text should translate the logo text when rendered."
        },
        {
          "id": "939",
          "name": "NavBar Component Parameters Menu should have left tooltip when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport type { NuxtImg, NuxtLink } from \"#components\";\nimport NavBar from \"~/components/layouts/default/NavBar/NavBar.vue\";\nimport { pTooltipDirectiveBinder } from \"~/tests/unit/utils/helpers/directive.helpers\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { BoundTooltip } from \"~/tests/unit/utils/types/directive.types\";\n\ndescribe(\"NavBar Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof NavBar>>;\n\n  async function mountNavBarComponent(options: ComponentMountingOptions<typeof NavBar> = {}): Promise<ReturnType<typeof mount<typeof NavBar>>> {\n    const defaultMountingOptions: ComponentMountingOptions<typeof NavBar> = { global: { stubs: { ParametersMenu: true } } };\n\n    return mountSuspendedComponent(NavBar, {\n      ...defaultMountingOptions,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountNavBarComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Home Page Link\", () => {\n    it(\"should have the prop 'to' set to home page when rendered.\", () => {\n      const homePageLink = wrapper.findComponent<typeof NuxtLink>(\"#navbar-logo-link\");\n\n      expect(homePageLink.props(\"to\")).toBe(\"/\");\n    });\n\n    describe(\"Werewolves Assistant Logo\", () => {\n      it(\"should have the prop 'src' set to the small logo when rendered.\", async() => {\n        wrapper = await mountNavBarComponent({ shallow: false });\n        const werewolvesAssistantLogo = wrapper.findComponent<typeof NuxtImg>(\"[alt='Werewolves Assistant logo']\");\n\n        expect(werewolvesAssistantLogo.attributes(\"src\")).toBe(\"/_ipx/_/img/logo/square/werewolves-logo-small.png\");\n      });\n    });\n\n    describe(\"Werewolves Assistant Logo Text\", () => {\n      it(\"should translate the logo text when rendered.\", async() => {\n        wrapper = await mountNavBarComponent({ shallow: false });\n        const werewolvesAssistantLogoText = wrapper.find<HTMLHeadElement>(\"#navbar-werewolves-assistant-logo-text\");\n\n        expect(werewolvesAssistantLogoText.text()).toBe(\"Werewolves Assistant\");\n      });\n    });\n  });\n\n  describe(\"Parameters Menu\", () => {\n    it(\"should have left tooltip when rendered.\", async() => {\n      const tooltip: BoundTooltip = { value: undefined };\n      const directives = { ...pTooltipDirectiveBinder(tooltip, \"#navbar-parameters-menu\") };\n      wrapper = await mountNavBarComponent({ shallow: false, global: { directives } });\n\n      expect(tooltip.value).toBe(\"Parameters\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/shared/role/RoleDescriptionLines/RoleDescriptionLines.nuxt.spec.ts": {
      "tests": [
        {
          "id": "940",
          "name": "Role Description Lines Component should match snapshot when rendered."
        },
        {
          "id": "941",
          "name": "Role Description Lines Component Description Lines should display role description lines when rendered."
        },
        {
          "id": "942",
          "name": "Role Description Lines Component Description Lines should not display role description lines when rendered if role description is not set in messages."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport type { RoleDescriptionLinesProps } from \"~/components/shared/role/RoleDescriptionLines/role-description-lines.types\";\nimport RoleDescriptionLines from \"~/components/shared/role/RoleDescriptionLines/RoleDescriptionLines.vue\";\nimport type { Role } from \"~/composables/api/role/types/role.class\";\nimport type { RoleName } from \"~/composables/api/role/types/role.types\";\nimport { createFakeRole } from \"~/tests/unit/utils/factories/composables/api/role/role.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Role Description Lines Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof RoleDescriptionLines>>;\n  const defaultRole: Role = createFakeRole({\n    name: \"werewolf\",\n    type: \"werewolf\",\n    origin: \"classic\",\n  });\n  const defaultProps: RoleDescriptionLinesProps = { role: defaultRole };\n\n  async function mountRoleDescriptionLinesComponent(options: ComponentMountingOptions<typeof RoleDescriptionLines> = {}):\n  Promise<ReturnType<typeof mount<typeof RoleDescriptionLines>>> {\n    return mountSuspendedComponent(RoleDescriptionLines, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountRoleDescriptionLinesComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Description Lines\", () => {\n    it(\"should display role description lines when rendered.\", () => {\n      const roleDescriptionLines = wrapper.findAll<HTMLParagraphElement>(\".role-description-line\");\n\n      expect(roleDescriptionLines).toHaveLength(4);\n      expect(roleDescriptionLines[0].text()).toBe(\"shared.role.descriptions.werewolf.hisGoalIsToKillVillagers\");\n      expect(roleDescriptionLines[1].text()).toBe(\"shared.role.descriptions.werewolf.eachNightEatsVillager\");\n      expect(roleDescriptionLines[2].text()).toBe(\"shared.role.descriptions.werewolf.numberOfWolvesVaries\");\n      expect(roleDescriptionLines[3].text()).toBe(\"shared.role.descriptions.werewolf.werewolvesCantEatEachOther\");\n    });\n\n    it(\"should not display role description lines when rendered if role description is not set in messages.\", async() => {\n      const unknownRole = createFakeRole({ name: \"unknown\" as RoleName });\n      wrapper = await mountRoleDescriptionLinesComponent({ props: { role: unknownRole } });\n      const roleDescriptionLines = wrapper.findAll<HTMLParagraphElement>(\".role-description-line\");\n\n      expect(roleDescriptionLines).toHaveLength(0);\n    });\n  });\n});"
    },
    "tests/unit/specs/stores/role/useRolesStore.spec.ts": {
      "tests": [
        {
          "id": "943",
          "name": "Roles Store should have initial state when created."
        },
        {
          "id": "944",
          "name": "Roles Store fetchAndSetRoles should fetch roles when called."
        },
        {
          "id": "945",
          "name": "Roles Store fetchAndSetRoles should set roles when called."
        },
        {
          "id": "946",
          "name": "Roles Store getRoleWithNameInRoles should return role with given name when found."
        },
        {
          "id": "947",
          "name": "Roles Store getRoleWithNameInRoles should return undefined when role with given name is not found."
        }
      ],
      "source": "import { createPinia, setActivePinia } from \"pinia\";\nimport { expect } from \"vitest\";\nimport type { Mock } from \"vitest\";\n\nimport type { Role } from \"~/composables/api/role/types/role.class\";\nimport { useRolesStore } from \"~/stores/role/useRolesStore\";\nimport * as UseFetchRolesComposable from \"~/composables/api/role/useFetchRoles\";\nimport { createFakeRole } from \"~/tests/unit/utils/factories/composables/api/role/role.factory\";\n\ndescribe(\"Roles Store\", () => {\n  let mocks: {\n    composables: {\n      useFetchRoles: {\n        fetchRoles: Mock;\n      }\n    }\n  };\n\n  beforeEach(() => {\n    mocks = { composables: { useFetchRoles: { fetchRoles: vi.fn() } } };\n    vi.spyOn(UseFetchRolesComposable, \"useFetchRoles\").mockImplementation(() => mocks.composables.useFetchRoles);\n    setActivePinia(createPinia());\n  });\n\n  it(\"should have initial state when created.\", () => {\n    const rolesStore = useRolesStore();\n\n    expect(rolesStore.roles).toBeNull();\n    expect(rolesStore.fetchingRoleStatus).toBe(\"idle\");\n  });\n\n  describe(\"fetchAndSetRoles\", () => {\n    it(\"should fetch roles when called.\", async() => {\n      const rolesStore = useRolesStore();\n      await rolesStore.fetchAndSetRoles();\n\n      expect(mocks.composables.useFetchRoles.fetchRoles).toHaveBeenCalledExactlyOnceWith();\n    });\n\n    it(\"should set roles when called.\", async() => {\n      const roles = [\n        createFakeRole(),\n        createFakeRole(),\n        createFakeRole(),\n      ];\n      mocks.composables.useFetchRoles.fetchRoles.mockResolvedValue(roles);\n      const rolesStore = useRolesStore();\n      await rolesStore.fetchAndSetRoles();\n\n      expect(rolesStore.roles).toStrictEqual<Role[]>(roles);\n    });\n  });\n\n  describe(\"getRoleWithNameInRoles\", () => {\n    it(\"should return role with given name when found.\", () => {\n      const roles = [\n        createFakeRole({ name: \"werewolf\" }),\n        createFakeRole({ name: \"villager\" }),\n        createFakeRole({ name: \"seer\" }),\n      ];\n      const rolesStore = useRolesStore();\n      rolesStore.roles = roles;\n      const role = rolesStore.getRoleWithNameInRoles(\"villager\");\n\n      expect(role).toStrictEqual<Role>(roles[1]);\n    });\n\n    it(\"should return undefined when role with given name is not found.\", () => {\n      const roles = [\n        createFakeRole({ name: \"werewolf\" }),\n        createFakeRole({ name: \"villager\" }),\n        createFakeRole({ name: \"seer\" }),\n      ];\n      const rolesStore = useRolesStore();\n      rolesStore.roles = roles;\n      const role = rolesStore.getRoleWithNameInRoles(\"elder\");\n\n      expect(role).toBeUndefined();\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-history-record/game-history-record-play/game-history-record-play.class.spec.ts": {
      "tests": [
        {
          "id": "948",
          "name": "Game History Record Play Class Create should create a game history record play when called."
        }
      ],
      "source": "import { GameHistoryRecordPlay } from \"~/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play.class\";\nimport { createFakeGameAdditionalCard } from \"~/tests/unit/utils/factories/composables/api/game/game-additional-card/game-additional-card.factory\";\nimport { createFakeGameHistoryRecordPlaySource } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-source/game-history-record-play-source.factory\";\nimport { createFakeGameHistoryRecordPlayTarget } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-target/game-history-record-play-target.factory\";\nimport { createFakeGameHistoryRecordPlayVote } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-vote/game-history-record-play-vote.factory\";\nimport { createFakeGameHistoryRecordPlayVoting } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-voting/game-history-record-play-voting.factory\";\n\ndescribe(\"Game History Record Play Class\", () => {\n  describe(\"Create\", () => {\n    it(\"should create a game history record play when called.\", () => {\n      const source = createFakeGameHistoryRecordPlaySource();\n      const targets = [\n        createFakeGameHistoryRecordPlayTarget(),\n        createFakeGameHistoryRecordPlayTarget(),\n      ];\n      const votes = [\n        createFakeGameHistoryRecordPlayVote(),\n        createFakeGameHistoryRecordPlayVote(),\n      ];\n      const chosenCard = createFakeGameAdditionalCard();\n      const voting = createFakeGameHistoryRecordPlayVoting();\n      const gameHistoryRecordPlay = GameHistoryRecordPlay.create({\n        action: \"eat\",\n        source,\n        type: \"vote\",\n        targets,\n        votes,\n        voting,\n        chosenCard,\n        extra: \"Extra\",\n      } as GameHistoryRecordPlay);\n      const expectedGameHistoryRecordPlay = new GameHistoryRecordPlay();\n      expectedGameHistoryRecordPlay.action = \"eat\";\n      expectedGameHistoryRecordPlay.source = source;\n      expectedGameHistoryRecordPlay.type = \"vote\";\n      expectedGameHistoryRecordPlay.targets = targets;\n      expectedGameHistoryRecordPlay.votes = votes;\n      expectedGameHistoryRecordPlay.voting = voting;\n      expectedGameHistoryRecordPlay.chosenCard = chosenCard;\n\n      expect(gameHistoryRecordPlay).toStrictEqual<GameHistoryRecordPlay>(expectedGameHistoryRecordPlay);\n    });\n  });\n});"
    },
    "tests/unit/specs/stores/game/game-history-record/useGameHistoryRecordsStore.spec.ts": {
      "tests": [
        {
          "id": "949",
          "name": "Game History Records Store should have initial state when created."
        },
        {
          "id": "950",
          "name": "Game History Records Store fetchAndSetGameHistoryRecords should fetch game history records when called."
        },
        {
          "id": "951",
          "name": "Game History Records Store fetchAndSetGameHistoryRecords should set game history records when called."
        }
      ],
      "source": "import { createPinia, setActivePinia } from \"pinia\";\n\nimport * as UseFetchGameHistoryRecords from \"~/composables/api/game/game-history-record/useFetchGameHistoryRecords\";\nimport type { GameHistoryRecord } from \"~/composables/api/game/types/game-history-record/game-history-record.class\";\nimport { useGameHistoryRecordsStore } from \"~/stores/game/game-history-record/useGameHistoryRecordsStore\";\nimport { createFakeGameHistoryRecord } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record.factory\";\nimport { createFakeUseFetchGameHistoryRecords } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/useFetchGameHistoryRecords.factory\";\n\ndescribe(\"Game History Records Store\", () => {\n  let mocks: {\n    composables: {\n      useFetchGameHistoryRecords: ReturnType<typeof createFakeUseFetchGameHistoryRecords>\n    }\n  };\n\n  beforeEach(() => {\n    mocks = { composables: { useFetchGameHistoryRecords: createFakeUseFetchGameHistoryRecords() } };\n    vi.spyOn(UseFetchGameHistoryRecords, \"useFetchGameHistoryRecords\").mockImplementation(() => mocks.composables.useFetchGameHistoryRecords);\n    setActivePinia(createPinia());\n  });\n\n  it(\"should have initial state when created.\", () => {\n    const gameHistoryRecordsStore = useGameHistoryRecordsStore();\n\n    expect(gameHistoryRecordsStore.gameHistoryRecords).toStrictEqual<GameHistoryRecord[]>([]);\n    expect(gameHistoryRecordsStore.fetchingGameHistoryRecordsStatus).toBe(\"idle\");\n  });\n\n  describe(\"fetchAndSetGameHistoryRecords\", () => {\n    it(\"should fetch game history records when called.\", async() => {\n      const gameHistoryRecordsStore = useGameHistoryRecordsStore();\n      await gameHistoryRecordsStore.fetchAndSetGameHistoryRecords(\"gameId\");\n\n      expect(mocks.composables.useFetchGameHistoryRecords.getGameHistoryRecords).toHaveBeenCalledExactlyOnceWith(\"gameId\");\n    });\n\n    it(\"should set game history records when called.\", async() => {\n      const expectedGameHistoryRecords = [\n        createFakeGameHistoryRecord(),\n        createFakeGameHistoryRecord(),\n        createFakeGameHistoryRecord(),\n      ];\n      mocks.composables.useFetchGameHistoryRecords.getGameHistoryRecords.mockResolvedValue(expectedGameHistoryRecords);\n      const gameHistoryRecordsStore = useGameHistoryRecordsStore();\n      await gameHistoryRecordsStore.fetchAndSetGameHistoryRecords(\"gameId\");\n\n      expect(gameHistoryRecordsStore.gameHistoryRecords).toStrictEqual<GameHistoryRecord[]>(expectedGameHistoryRecords);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/shared/role/RoleSideBadge/RoleSideBadge.nuxt.spec.ts": {
      "tests": [
        {
          "id": "952",
          "name": "Role Side Badge Component should match snapshot when rendered."
        },
        {
          "id": "953",
          "name": "Role Side Badge Component Badge should translate role side when side is villagers."
        },
        {
          "id": "954",
          "name": "Role Side Badge Component Badge should translate role side when side is werewolves."
        },
        {
          "id": "955",
          "name": "Role Side Badge Component Badge should set severity to success when side is villagers."
        },
        {
          "id": "956",
          "name": "Role Side Badge Component Badge should set severity to danger when side is werewolves."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport type { VuePrimeBadge } from \"#components\";\nimport type { RoleSideBadgeProps } from \"~/components/shared/role/RoleSideBadge/role-side-badge-types\";\nimport RoleSideBadge from \"~/components/shared/role/RoleSideBadge/RoleSideBadge.vue\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Role Side Badge Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof RoleSideBadge>>;\n  const defaultProps: RoleSideBadgeProps = { roleSide: \"villagers\" };\n\n  async function mountRoleSideBadgeComponent(options: ComponentMountingOptions<typeof RoleSideBadge> = {}):\n  Promise<ReturnType<typeof mount<typeof RoleSideBadge>>> {\n    return mountSuspendedComponent(\n      RoleSideBadge,\n      {\n        props: defaultProps,\n        ...options,\n      },\n    );\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountRoleSideBadgeComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Badge\", () => {\n    it(\"should translate role side when side is villagers.\", () => {\n      const badge = wrapper.findComponent<typeof VuePrimeBadge>(\"#role-side-badge\");\n\n      expect(badge.attributes(\"value\")).toBe(\"components.RoleSideBadge.villagersSide\");\n    });\n\n    it(\"should translate role side when side is werewolves.\", async() => {\n      wrapper = await mountRoleSideBadgeComponent({ props: { roleSide: \"werewolves\" } });\n      const badge = wrapper.findComponent<typeof VuePrimeBadge>(\"#role-side-badge\");\n\n      expect(badge.attributes(\"value\")).toBe(\"components.RoleSideBadge.werewolvesSide\");\n    });\n\n    it(\"should set severity to success when side is villagers.\", () => {\n      const badge = wrapper.findComponent<typeof VuePrimeBadge>(\"#role-side-badge\");\n\n      expect(badge.attributes(\"severity\")).toBe(\"success\");\n    });\n\n    it(\"should set severity to danger when side is werewolves.\", async() => {\n      wrapper = await mountRoleSideBadgeComponent({ props: { roleSide: \"werewolves\" } });\n      const badge = wrapper.findComponent<typeof VuePrimeBadge>(\"#role-side-badge\");\n\n      expect(badge.attributes(\"severity\")).toBe(\"danger\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundHeader/GamePlaygroundHeaderPhase/GamePlaygroundHeaderPhase.nuxt.spec.ts": {
      "tests": [
        {
          "id": "957",
          "name": "Game Playground Header Phase should match snapshot when rendered."
        },
        {
          "id": "958",
          "name": "Game Playground Header Phase Phase text should display night phase text with the turn number when the phase is night."
        },
        {
          "id": "959",
          "name": "Game Playground Header Phase Phase text should display day phase text with the turn number when the phase is day."
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\n\nimport GamePlaygroundHeaderPhase from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundHeader/GamePlaygroundHeaderPhase/GamePlaygroundHeaderPhase.vue\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\nimport { useGameStore } from \"~/stores/game/useGameStore\";\nimport { createFakeGamePhase } from \"~/tests/unit/utils/factories/composables/api/game/game-phase/game-phase.factory\";\nimport { createFakeGame } from \"~/tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Playground Header Phase\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GamePlaygroundHeaderPhase>>;\n  const testingPinia = {\n    initialState: {\n      [StoreIds.GAME]: {\n        game: createFakeGame({\n          phase: createFakeGamePhase({ name: \"night\" }),\n          turn: 3,\n        }),\n      },\n    },\n  };\n\n  async function mountGamePlaygroundHeaderPhaseComponent(): Promise<ReturnType<typeof mount<typeof GamePlaygroundHeaderPhase>>> {\n    return mountSuspendedComponent(GamePlaygroundHeaderPhase, { global: { plugins: [createTestingPinia(testingPinia)] } });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGamePlaygroundHeaderPhaseComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Phase text\", () => {\n    it(\"should display night phase text with the turn number when the phase is night.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.phase.name = \"night\";\n      gameStore.game.turn = 3;\n      await nextTick();\n      const phaseText = wrapper.find(\"#game-phase-text\");\n\n      expect(phaseText.text()).toBe(\"shared.game.phase.night 3\");\n    });\n\n    it(\"should display day phase text with the turn number when the phase is day.\", async() => {\n      const gameStore = useGameStore();\n      gameStore.game.phase.name = \"day\";\n      gameStore.game.turn = 3;\n      await nextTick();\n      const phaseText = wrapper.find(\"#game-phase-text\");\n\n      expect(phaseText.text()).toBe(\"shared.game.phase.day 3\");\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/error/useWerewolvesAssistantApiError.spec.ts": {
      "tests": [
        {
          "id": "960",
          "name": "Use Werewolves Assistant Api Error Composable handleWerewolvesAssistantApiError should log error in console when called."
        },
        {
          "id": "961",
          "name": "Use Werewolves Assistant Api Error Composable handleWerewolvesAssistantApiError should add error toast when called."
        }
      ],
      "source": "import type { FetchResponse } from \"ofetch\";\nimport type { Mock, MockInstance } from \"vitest\";\n\nimport type { WerewolvesAssistantApiError } from \"~/composables/api/error/types/api-error.types\";\nimport { useWerewolvesAssistantApiError } from \"~/composables/api/error/useWerewolvesAssistantApiError\";\nimport * as UseVuePrimeToasts from \"~/composables/vue-prime/useVuePrimeToasts\";\n\ndescribe(\"Use Werewolves Assistant Api Error Composable\", () => {\n  let mocks: {\n    console: {\n      error: MockInstance;\n    };\n    composables: {\n      useVuePrimeToasts: {\n        addToast: Mock;\n        addSuccessToast: Mock;\n        addInfoToast: Mock;\n        addWarnToast: Mock;\n        addErrorToast: Mock;\n      }\n    }\n  };\n\n  beforeEach(() => {\n    mocks = {\n      console: { error: vi.spyOn(console, \"error\").mockImplementation(vi.fn()) },\n      composables: {\n        useVuePrimeToasts: {\n          addToast: vi.fn(),\n          addErrorToast: vi.fn(),\n          addInfoToast: vi.fn(),\n          addSuccessToast: vi.fn(),\n          addWarnToast: vi.fn(),\n        },\n      },\n    };\n    vi.spyOn(UseVuePrimeToasts, \"useVuePrimeToasts\").mockReturnValue(mocks.composables.useVuePrimeToasts);\n  });\n\n  describe(\"handleWerewolvesAssistantApiError\", () => {\n    it(\"should log error in console when called.\", () => {\n      const response = { _data: \"error-data\" } as unknown as FetchResponse<WerewolvesAssistantApiError>;\n      useWerewolvesAssistantApiError().handleWerewolvesAssistantApiError({ response });\n      const { _data: expectedData } = response;\n\n      expect(mocks.console.error).toHaveBeenCalledExactlyOnceWith(expectedData);\n    });\n\n    it(\"should add error toast when called.\", () => {\n      const response = { status: 404 } as unknown as FetchResponse<WerewolvesAssistantApiError>;\n      useWerewolvesAssistantApiError().handleWerewolvesAssistantApiError({ response });\n\n      expect(mocks.composables.useVuePrimeToasts.addErrorToast).toHaveBeenCalledExactlyOnceWith({\n        summary: \"composables.useWerewolvesAssistantApiError.statusCode.404\",\n        detail: \"composables.useWerewolvesAssistantApiError.checkConsoleForMoreDetails\",\n      });\n    });\n  });\n});"
    },
    "tests/unit/specs/components/shared/game/player/PlayersHorizontalList/PlayersHorizontalList.nuxt.spec.ts": {
      "tests": [
        {
          "id": "962",
          "name": "Players Horizontal List Component should match snapshot when rendered."
        },
        {
          "id": "963",
          "name": "Players Horizontal List Component Players should render the expected players to act when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport type { PlayersHorizontalListProps } from \"~/components/shared/game/player/PlayersHorizontalList/players-horizontal-list.types\";\nimport PlayersHorizontalList from \"~/components/shared/game/player/PlayersHorizontalList/PlayersHorizontalList.vue\";\nimport { createFakeFoxAlivePlayer, createFakeSeerAlivePlayer, createFakeWerewolfAlivePlayer } from \"~/tests/unit/utils/factories/composables/api/game/player/player-with-role.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Players Horizontal List Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof PlayersHorizontalList>>;\n  const defaultPlayers = [\n    createFakeFoxAlivePlayer({ name: \"Antoine\" }),\n    createFakeSeerAlivePlayer({ name: \"Benoit\" }),\n    createFakeWerewolfAlivePlayer({ name: \"Alice\" }),\n  ];\n  const defaultProps: PlayersHorizontalListProps = { players: defaultPlayers };\n\n  async function mountPlayersHorizontalListComponent(options: ComponentMountingOptions<typeof PlayersHorizontalList> = {}):\n  Promise<ReturnType<typeof mount<typeof PlayersHorizontalList>>> {\n    return mountSuspendedComponent(PlayersHorizontalList, {\n      props: defaultProps,\n      shallow: false,\n      global: { stubs: { RoleImage: true } },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountPlayersHorizontalListComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Players\", () => {\n    it(\"should render the expected players to act when rendered.\", () => {\n      const playersInList = wrapper.findAll<HTMLDivElement>(\".player-in-list\");\n\n      expect(playersInList).toHaveLength(defaultPlayers.length);\n      expect(playersInList[0].text()).toBe(defaultPlayers[0].name);\n      expect(playersInList[1].text()).toBe(defaultPlayers[1].name);\n      expect(playersInList[2].text()).toBe(defaultPlayers[2].name);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.nuxt.spec.ts": {
      "tests": [
        {
          "id": "964",
          "name": "Affirmative Toggle Button Component should match snapshot when rendered."
        },
        {
          "id": "965",
          "name": "Affirmative Toggle Button Component Toggle Button should pass v-model value to the toggle button when rendered."
        },
        {
          "id": "966",
          "name": "Affirmative Toggle Button Component Toggle Button should change v-model value when toggle button emits input event."
        },
        {
          "id": "967",
          "name": "Affirmative Toggle Button Component Toggle Button should translate no label when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport type ToggleButton from \"primevue/togglebutton\";\nimport AffirmativeToggleButton from \"~/components/shared/buttons/AffirmativeToggleButton/AffirmativeToggleButton.vue\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Affirmative Toggle Button Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof AffirmativeToggleButton>>;\n\n  async function mountAffirmativeToggleButtonComponent(options: ComponentMountingOptions<typeof AffirmativeToggleButton> = {}):\n  Promise<ReturnType<typeof mount<typeof AffirmativeToggleButton>>> {\n    return mountSuspendedComponent(AffirmativeToggleButton, {\n      props: { modelValue: true },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountAffirmativeToggleButtonComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Toggle Button\", () => {\n    it(\"should pass v-model value to the toggle button when rendered.\", () => {\n      const toggleButton = wrapper.findComponent<typeof ToggleButton>(\"#affirmative-toggle-button\");\n\n      expect(toggleButton.attributes(\"modelvalue\")).toBe(\"true\");\n    });\n\n    it(\"should change v-model value when toggle button emits input event.\", async() => {\n      wrapper = await mountAffirmativeToggleButtonComponent({ shallow: false });\n      const toggleButtonCheckbox = wrapper.find<HTMLInputElement>(\"#affirmative-toggle-button > .p-togglebutton-input\");\n      await toggleButtonCheckbox.setValue(false);\n\n      expect(toggleButtonCheckbox.attributes(\"value\")).toBe(\"false\");\n    });\n\n    it(\"should translate no label when rendered.\", () => {\n      const toggleButton = wrapper.findComponent<typeof ToggleButton>(\"#affirmative-toggle-button\");\n\n      expect(toggleButton.attributes(\"off-label\")).toBe(\"No\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionContent.nuxt.spec.ts": {
      "tests": [
        {
          "id": "968",
          "name": "Game Lobby Role Picker Description Content Component should match snapshot when rendered."
        },
        {
          "id": "969",
          "name": "Game Lobby Role Picker Description Content Component Role Name should translate role name when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport type { GameLobbyRolePickerDescriptionContentProps } from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/game-lobby-role-picker-description-content.types\";\nimport GameLobbyRolePickerDescriptionContent from \"~/components/pages/game-lobby/GameLobbyRolePicker/GameLobbyRolePickerDescription/GameLobbyRolePickerDescriptionContent/GameLobbyRolePickerDescriptionContent.vue\";\nimport { createFakeRole } from \"~/tests/unit/utils/factories/composables/api/role/role.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Lobby Role Picker Description Content Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyRolePickerDescriptionContent>>;\n  const defaultProps: GameLobbyRolePickerDescriptionContentProps = {\n    pickedRole: createFakeRole({\n      name: \"seer\",\n      type: \"villager\",\n      side: \"villagers\",\n      origin: \"classic\",\n    }),\n  };\n\n  async function mountGameLobbyRolePickerDescriptionContentComponent(options: ComponentMountingOptions<typeof GameLobbyRolePickerDescriptionContent> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyRolePickerDescriptionContent>>> {\n    return mountSuspendedComponent(GameLobbyRolePickerDescriptionContent, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyRolePickerDescriptionContentComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Role Name\", () => {\n    it(\"should translate role name when rendered.\", () => {\n      const roleName = wrapper.find<HTMLHeadingElement>(\"#role-name\");\n\n      expect(roleName.text()).toBe(\"shared.role.name.seer\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/shared/role/RoleOriginBadge/RoleOriginBadge.nuxt.spec.ts": {
      "tests": [
        {
          "id": "970",
          "name": "Role Origin Badge Component should match snapshot when rendered."
        },
        {
          "id": "971",
          "name": "Role Origin Badge Component Badge should have tooltip when rendered."
        },
        {
          "id": "972",
          "name": "Role Origin Badge Component Badge should translate role origin when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport { expect } from \"vitest\";\n\nimport type { VuePrimeBadge } from \"#components\";\nimport type { RoleOriginBadgeProps } from \"~/components/shared/role/RoleOriginBadge/role-origin-badge.types\";\nimport RoleOriginBadge from \"~/components/shared/role/RoleOriginBadge/RoleOriginBadge.vue\";\nimport { pTooltipDirectiveBinder } from \"~/tests/unit/utils/helpers/directive.helpers\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { BoundTooltip } from \"~/tests/unit/utils/types/directive.types\";\n\ndescribe(\"Role Origin Badge Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof RoleOriginBadge>>;\n  const defaultProps: RoleOriginBadgeProps = { roleOrigin: \"classic\" };\n\n  async function mountRoleOriginBadgeComponent(options: ComponentMountingOptions<typeof RoleOriginBadge> = {}): Promise<ReturnType<typeof mount<typeof RoleOriginBadge>>> {\n    return mountSuspendedComponent(RoleOriginBadge, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountRoleOriginBadgeComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Badge\", () => {\n    it(\"should have tooltip when rendered.\", async() => {\n      const tooltip: BoundTooltip = { value: undefined };\n      const directives = { ...pTooltipDirectiveBinder(tooltip, \".role-origin-badge\") };\n      wrapper = await mountRoleOriginBadgeComponent({ global: { directives } });\n\n      expect(tooltip.value).toBe(\"Role Origin\");\n    });\n\n    it(\"should translate role origin when rendered.\", () => {\n      const badge = wrapper.findComponent<typeof VuePrimeBadge>(\".role-origin-badge\");\n\n      expect(badge.attributes(\"value\")).toBe(\"Base Game\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubTabView.nuxt.spec.ts": {
      "tests": [
        {
          "id": "973",
          "name": "Game Lobby Options Hub Tab View Component should match snapshot when rendered."
        },
        {
          "id": "974",
          "name": "Game Lobby Options Hub Tab View Component Role Tab Panel should translate role tab panel title when rendered."
        },
        {
          "id": "975",
          "name": "Game Lobby Options Hub Tab View Component Composition Tab Panel should translate composition tab panel title when rendered."
        },
        {
          "id": "976",
          "name": "Game Lobby Options Hub Tab View Component Votes Tab Panel should translate votes tab panel title when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport GameLobbyOptionsHubTabView from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubTabView.vue\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Lobby Options Hub Tab View Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyOptionsHubTabView>>;\n\n  async function mountGameLobbyOptionsHubTabViewComponent(options: ComponentMountingOptions<typeof GameLobbyOptionsHubTabView> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyOptionsHubTabView>>> {\n    return mountSuspendedComponent(GameLobbyOptionsHubTabView, {\n      shallow: false,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyOptionsHubTabViewComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Role Tab Panel\", () => {\n    it(\"should translate role tab panel title when rendered.\", () => {\n      const roleTabPanel = wrapper.find<HTMLHeadElement>(\"#roles-tab-header-text\");\n\n      expect(roleTabPanel.text()).toBe(\"Roles\");\n    });\n  });\n\n  describe(\"Composition Tab Panel\", () => {\n    it(\"should translate composition tab panel title when rendered.\", () => {\n      const compositionTabPanel = wrapper.find<HTMLHeadElement>(\"#composition-tab-header-text\");\n\n      expect(compositionTabPanel.text()).toBe(\"Composition\");\n    });\n  });\n\n  describe(\"Votes Tab Panel\", () => {\n    it(\"should translate votes tab panel title when rendered.\", () => {\n      const votesTabPanel = wrapper.find<HTMLHeadElement>(\"#votes-tab-header-text\");\n\n      expect(votesTabPanel.text()).toBe(\"Votes\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/shared/game/game-options/GameOptionRoleLegend/GameOptionRoleLegend.nuxt.spec.ts": {
      "tests": [
        {
          "id": "977",
          "name": "Game Option Role Legend Component should match snapshot when rendered."
        },
        {
          "id": "978",
          "name": "Game Option Role Legend Component Role Image should pass the role name in props to role image component when rendered."
        },
        {
          "id": "979",
          "name": "Game Option Role Legend Component Title should translate title as role name when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport type { GameOptionRoleLegendProps } from \"~/components/shared/game/game-options/GameOptionRoleLegend/game-option-role-legend.types\";\nimport GameOptionRoleLegend from \"~/components/shared/game/game-options/GameOptionRoleLegend/GameOptionRoleLegend.vue\";\nimport type RoleImage from \"~/components/shared/role/RoleImage/RoleImage.vue\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Option Role Legend Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameOptionRoleLegend>>;\n  const defaultProps: GameOptionRoleLegendProps = { roleName: \"werewolf\" };\n\n  async function mountGameOptionRoleLegendComponent(options: ComponentMountingOptions<typeof GameOptionRoleLegend> = {}):\n  Promise<ReturnType<typeof mount<typeof GameOptionRoleLegend>>> {\n    return mountSuspendedComponent(GameOptionRoleLegend, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameOptionRoleLegendComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Role Image\", () => {\n    it(\"should pass the role name in props to role image component when rendered.\", () => {\n      const roleImage = wrapper.findComponent<typeof RoleImage>(\"#game-option-role-legend-image\");\n\n      expect(roleImage.props(\"roleName\")).toBe(defaultProps.roleName);\n    });\n  });\n\n  describe(\"Title\", () => {\n    it(\"should translate title as role name when rendered.\", () => {\n      const title = wrapper.find<HTMLHeadingElement>(\"#game-option-role-legend-title\");\n\n      expect(title.text()).toBe(\"shared.role.name.werewolf\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/shared/misc/OverflowTag/OverflowTag.nuxt.spec.ts": {
      "tests": [
        {
          "id": "980",
          "name": "Overflow Tag Component should match snapshot when rendered."
        },
        {
          "id": "981",
          "name": "Overflow Tag Component Overflow Tag should display the overflow number when the entities count is greater than the maximum entities displayed."
        },
        {
          "id": "982",
          "name": "Overflow Tag Component Overflow Tag should not display the overflow number when the entities count is less than or equal to the maximum entities displayed."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport type Tag from \"primevue/tag\";\nimport type { OverflowTagProps } from \"~/components/shared/misc/OverflowTag/overflow-tag.types\";\n\nimport OverflowTag from \"~/components/shared/misc/OverflowTag/OverflowTag.vue\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Overflow Tag Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof OverflowTag>>;\n  const defaultProps: OverflowTagProps = {\n    entitiesCount: 4,\n    maximumEntitiesDisplayed: 3,\n  };\n\n  async function mountOverflowTagComponent(options: ComponentMountingOptions<typeof OverflowTag> = {}): Promise<ReturnType<typeof mount<typeof OverflowTag>>> {\n    return mountSuspendedComponent(OverflowTag, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountOverflowTagComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Overflow Tag\", () => {\n    it(\"should display the overflow number when the entities count is greater than the maximum entities displayed.\", () => {\n      const tag = wrapper.findComponent<Tag>(\"#overflow-tag\");\n\n      expect(tag.attributes(\"value\")).toBe(\"+ 1\");\n    });\n\n    it(\"should not display the overflow number when the entities count is less than or equal to the maximum entities displayed.\", async() => {\n      wrapper = await mountOverflowTagComponent({\n        props: {\n          entitiesCount: 3,\n          maximumEntitiesDisplayed: 3,\n        },\n      });\n      const tag = wrapper.findComponent<Tag>(\"#overflow-tag\");\n\n      expect(tag.exists()).toBeFalsy();\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecord/GameOverHistoryRecordPhase/GameOverHistoryRecordPhase.nuxt.spec.ts": {
      "tests": [
        {
          "id": "983",
          "name": "Game Over History Record Phase Component should match snapshot when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport type { GameOverHistoryRecordPhaseProps } from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecordPhase/game-over-history-record-phase.types\";\nimport GameOverHistoryRecordPhase from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryRecords/GameOverHistoryRecordPhase/GameOverHistoryRecordPhase.vue\";\nimport { createFakeGameHistoryRecord } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record.factory\";\nimport { createFakeGamePhase } from \"~/tests/unit/utils/factories/composables/api/game/game-phase/game-phase.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Over History Record Phase Component\", () => {\n  const defaultGameHistoryRecord = createFakeGameHistoryRecord({\n    phase: createFakeGamePhase({ name: \"day\" }),\n    turn: 1,\n  });\n  const defaultProps: GameOverHistoryRecordPhaseProps = { gameHistoryRecord: defaultGameHistoryRecord } as const;\n  let wrapper: ReturnType<typeof mount<typeof GameOverHistoryRecordPhase>>;\n\n  async function mountGameOverHistoryRecordPhaseComponent(options: ComponentMountingOptions<typeof GameOverHistoryRecordPhase> = {}):\n  Promise<ReturnType<typeof mount<typeof GameOverHistoryRecordPhase>>> {\n    return mountSuspendedComponent(GameOverHistoryRecordPhase, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameOverHistoryRecordPhaseComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-history-record/game-history-record.class.spec.ts": {
      "tests": [
        {
          "id": "984",
          "name": "Game History Record Class Create should create a game history record when called."
        }
      ],
      "source": "import { GameHistoryRecord } from \"~/composables/api/game/types/game-history-record/game-history-record.class\";\nimport { createFakeGameHistoryRecordPlay } from \"~/tests/unit/utils/factories/composables/api/game/game-history-record/game-history-record-play/game-history-record-play.factory\";\nimport { createFakeGamePhase } from \"~/tests/unit/utils/factories/composables/api/game/game-phase/game-phase.factory\";\nimport { createFakePlayer } from \"~/tests/unit/utils/factories/composables/api/game/player/player.factory\";\n\ndescribe(\"Game History Record Class\", () => {\n  describe(\"Create\", () => {\n    it(\"should create a game history record when called.\", () => {\n      const gameHistoryRecordPlay = createFakeGameHistoryRecordPlay();\n      const revealedPlayers = [\n        createFakePlayer(),\n        createFakePlayer(),\n      ];\n      const phase = createFakeGamePhase();\n      const createdAt = new Date();\n      const gameHistoryRecord = GameHistoryRecord.create({\n        _id: \"1\",\n        gameId: \"1\",\n        phase,\n        play: gameHistoryRecordPlay,\n        tick: 1,\n        turn: 1,\n        revealedPlayers,\n        createdAt,\n        extra: \"Extra\",\n      } as GameHistoryRecord);\n      const expectedGameHistoryRecord = new GameHistoryRecord();\n      expectedGameHistoryRecord._id = \"1\";\n      expectedGameHistoryRecord.gameId = \"1\";\n      expectedGameHistoryRecord.phase = phase;\n      expectedGameHistoryRecord.play = gameHistoryRecordPlay;\n      expectedGameHistoryRecord.revealedPlayers = revealedPlayers;\n      expectedGameHistoryRecord.tick = 1;\n      expectedGameHistoryRecord.turn = 1;\n      expectedGameHistoryRecord.createdAt = createdAt;\n\n      expect(gameHistoryRecord).toStrictEqual<GameHistoryRecord>(expectedGameHistoryRecord);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyHeader/GameLobbyHeaderSetupButtons/GameLobbyHeaderSetupButtons.nuxt.spec.ts": {
      "tests": [
        {
          "id": "985",
          "name": "Game Lobby Header Setup Buttons Component should match snapshot when rendered."
        },
        {
          "id": "986",
          "name": "Game Lobby Header Setup Buttons Component Options Button should emit 'gameOptionsButtonClick' event when clicked."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport type GameLobbyHeaderOptionsButton from \"~/components/pages/game-lobby/GameLobbyHeader/GameLobbyHeaderSetupButtons/GameLobbyHeaderOptionsButton/GameLobbyHeaderOptionsButton.vue\";\nimport GameLobbyHeaderSetupButtons from \"~/components/pages/game-lobby/GameLobbyHeader/GameLobbyHeaderSetupButtons/GameLobbyHeaderSetupButtons.vue\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\nimport type { VueVm } from \"~/tests/unit/utils/types/vue-test-utils.types\";\n\ndescribe(\"Game Lobby Header Setup Buttons Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyHeaderSetupButtons>>;\n\n  async function mountGameLobbyHeaderSetupButtonsComponent(options: ComponentMountingOptions<typeof GameLobbyHeaderSetupButtons> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyHeaderSetupButtons>>> {\n    return mountSuspendedComponent(GameLobbyHeaderSetupButtons, {\n      global: { stubs: { ButtonGroup: false } },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyHeaderSetupButtonsComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Options Button\", () => {\n    it(\"should emit 'gameOptionsButtonClick' event when clicked.\", () => {\n      const optionsButton = wrapper.findComponent<typeof GameLobbyHeaderOptionsButton>(\"#game-lobby-header-options-button\");\n      (optionsButton.vm as VueVm).$emit(\"gameOptionsButtonClick\");\n\n      expect(wrapper.emitted(\"gameOptionsButtonClick\")).toBeTruthy();\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyHeader/GameLobbyHeaderSetupButtons/GameLobbyHeaderOptionsButton/GameLobbyHeaderOptionsButton.nuxt.spec.ts": {
      "tests": [
        {
          "id": "987",
          "name": "Game Lobby Header Options Button Component should match snapshot when rendered."
        },
        {
          "id": "988",
          "name": "Game Lobby Header Options Button Component Options Button should translate button label when rendered."
        },
        {
          "id": "989",
          "name": "Game Lobby Header Options Button Component Options Button Click on button should emit 'gameOptionsButtonClick' event when clicked."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport type Button from \"primevue/button\";\nimport GameLobbyHeaderOptionsButton from \"~/components/pages/game-lobby/GameLobbyHeader/GameLobbyHeaderSetupButtons/GameLobbyHeaderOptionsButton/GameLobbyHeaderOptionsButton.vue\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Lobby Header Options Button Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyHeaderOptionsButton>>;\n\n  async function mountGameLobbyHeaderOptionsButtonComponent(options: ComponentMountingOptions<typeof GameLobbyHeaderOptionsButton> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyHeaderOptionsButton>>> {\n    return mountSuspendedComponent(GameLobbyHeaderOptionsButton, { ...options });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyHeaderOptionsButtonComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Options Button\", () => {\n    it(\"should translate button label when rendered.\", () => {\n      const button = wrapper.findComponent<typeof Button>(\"#game-lobby-header-options-button\");\n\n      expect(button.attributes(\"label\")).toBe(\"Game options\");\n    });\n\n    describe(\"Click on button\", () => {\n      it(\"should emit 'gameOptionsButtonClick' event when clicked.\", async() => {\n        const button = wrapper.findComponent<typeof Button>(\"#game-lobby-header-options-button\");\n        await button.trigger(\"click\");\n\n        expect(wrapper.emitted(\"gameOptionsButtonClick\")).toBeTruthy();\n      });\n    });\n  });\n});"
    },
    "tests/unit/specs/app.nuxt.spec.ts": {
      "tests": [
        {
          "id": "990",
          "name": "App Component should match snapshot when rendered."
        },
        {
          "id": "991",
          "name": "App Component should render component without shallow and match snapshot when rendered."
        },
        {
          "id": "992",
          "name": "App Component should set head title and meta tags when rendered."
        },
        {
          "id": "993",
          "name": "App Component should fetch and set roles from store when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { UseHeadInput } from \"unhead\";\n\nimport App from \"@/app.vue\";\nimport { useRolesStore } from \"~/stores/role/useRolesStore\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"App Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof App>>;\n\n  beforeEach(async() => {\n    wrapper = await mountSuspendedComponent(App);\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  it(\"should render component without shallow and match snapshot when rendered.\", async() => {\n    wrapper = await mountSuspendedComponent(App, { shallow: false });\n\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  it(\"should set head title and meta tags when rendered.\", () => {\n    const expectedUseHeadInput: UseHeadInput<object> = {\n      title: \"shared.werewolvesAssistant\",\n      meta: [\n        { name: \"application-name\", content: \"shared.werewolvesAssistant\" },\n        { name: \"creator\", content: \"Antoine ZANARDI\" },\n        { name: \"description\", content: \"components.App.seoDescription\" },\n        { name: \"viewport\", content: \"width=device-width, initial-scale=1\" },\n        { name: \"charset\", content: \"utf-8\" },\n        { name: \"generator\", content: \"nuxt\" },\n        { name: \"color-scheme\", content: \"dark\" },\n      ],\n    };\n\n    expect(useHead).toHaveBeenCalledExactlyOnceWith(expectedUseHeadInput);\n  });\n\n  it(\"should fetch and set roles from store when rendered.\", () => {\n    const rolesStore = useRolesStore();\n\n    expect(rolesStore.fetchAndSetRoles).toHaveBeenCalledExactlyOnceWith();\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game.class.spec.ts": {
      "tests": [
        {
          "id": "994",
          "name": "Game Class create should create a game when called."
        }
      ],
      "source": "import { Game } from \"~/composables/api/game/types/game.class\";\nimport { createFakeGameOptions } from \"~/tests/unit/utils/factories/composables/api/game/game-options/game-options.factory\";\nimport { createFakeGamePhase } from \"~/tests/unit/utils/factories/composables/api/game/game-phase/game-phase.factory\";\nimport { createFakeGamePlay } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play.factory\";\n\ndescribe(\"Game Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a game when called.\", () => {\n      const currentPlay = createFakeGamePlay();\n      const upcomingPlays = [\n        createFakeGamePlay(),\n        createFakeGamePlay(),\n      ];\n      const options = createFakeGameOptions();\n      const phase = createFakeGamePhase();\n      const createdAt = new Date();\n      const updatedAt = new Date();\n      const createdGame = Game.create({\n        _id: \"1\",\n        phase,\n        players: [],\n        status: \"playing\",\n        currentPlay,\n        upcomingPlays,\n        tick: 1,\n        turn: 1,\n        options,\n        createdAt,\n        updatedAt,\n        extra: \"Extra\",\n      } as Game);\n      const expectedGame = new Game();\n      expectedGame._id = \"1\";\n      expectedGame.phase = phase;\n      expectedGame.players = [];\n      expectedGame.status = \"playing\";\n      expectedGame.tick = 1;\n      expectedGame.turn = 1;\n      expectedGame.currentPlay = currentPlay;\n      expectedGame.upcomingPlays = upcomingPlays;\n      expectedGame.options = options;\n      expectedGame.createdAt = createdAt;\n      expectedGame.updatedAt = updatedAt;\n\n      expect(createdGame).toStrictEqual<Game>(expectedGame);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/shared/game/game-phase/GamePhaseIcon/GamePhaseIcon.nuxt.spec.ts": {
      "tests": [
        {
          "id": "995",
          "name": "Game Phase Icon Component should match snapshot when rendered."
        },
        {
          "id": "996",
          "name": "Game Phase Icon Component Icon classes should display the night icon when the phase is night."
        },
        {
          "id": "997",
          "name": "Game Phase Icon Component Icon classes should display the sun icon when the phase is day."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport type { GamePhaseIconProps } from \"~/components/shared/game/game-phase/GamePhaseIcon/game-phase-icon.types\";\nimport GamePhaseIcon from \"~/components/shared/game/game-phase/GamePhaseIcon/GamePhaseIcon.vue\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Phase Icon Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GamePhaseIcon>>;\n  const defaultProps: GamePhaseIconProps = { phase: \"day\" };\n\n  async function mountGamePhaseIconComponent(options: ComponentMountingOptions<typeof GamePhaseIcon> = {}): Promise<ReturnType<typeof mount<typeof GamePhaseIcon>>> {\n    return mountSuspendedComponent(GamePhaseIcon, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGamePhaseIconComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Icon classes\", () => {\n    it(\"should display the night icon when the phase is night.\", async() => {\n      wrapper = await mountGamePhaseIconComponent({ props: { phase: \"night\" } });\n      const phaseIcon = wrapper.find(\"#game-phase-icon\");\n\n      expect(phaseIcon.classes()).toContainValues([\"fa-moon\", \"text-night\"]);\n    });\n\n    it(\"should display the sun icon when the phase is day.\", () => {\n      const phaseIcon = wrapper.find(\"#game-phase-icon\");\n\n      expect(phaseIcon.classes()).toContainValues([\"fa-sun\", \"text-day\"]);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/shared/dialogs/DialogFooterCloseButtonOnly/DialogFooterCloseButtonOnly.nuxt.spec.ts": {
      "tests": [
        {
          "id": "998",
          "name": "Dialog Footer Close Button Only Component should match snapshot when rendered."
        },
        {
          "id": "999",
          "name": "Dialog Footer Close Button Only Component Close Button should translate close button when rendered."
        },
        {
          "id": "1000",
          "name": "Dialog Footer Close Button Only Component Close Button should emit close event when close button is clicked."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport type Button from \"primevue/button\";\nimport DialogFooterCloseButtonOnly from \"~/components/shared/dialogs/DialogFooterCloseButtonOnly/DialogFooterCloseButtonOnly.vue\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Dialog Footer Close Button Only Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof DialogFooterCloseButtonOnly>>;\n\n  async function mountDialogFooterCloseButtonOnlyComponent(options: ComponentMountingOptions<typeof DialogFooterCloseButtonOnly> = {}):\n  Promise<ReturnType<typeof mount<typeof DialogFooterCloseButtonOnly>>> {\n    return mountSuspendedComponent(DialogFooterCloseButtonOnly, { ...options });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountDialogFooterCloseButtonOnlyComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Close Button\", () => {\n    it(\"should translate close button when rendered.\", () => {\n      const closeButton = wrapper.findComponent<typeof Button>(\"#close-button-only-dialog-footer-close-button\");\n\n      expect(closeButton.attributes(\"label\")).toBe(\"Close\");\n    });\n\n    it(\"should emit close event when close button is clicked.\", async() => {\n      const closeButton = wrapper.findComponent<typeof Button>(\"#close-button-only-dialog-footer-close-button\");\n      await closeButton.trigger(\"click\");\n\n      expect(wrapper.emitted(\"closeDialog\")).toBeTruthy();\n    });\n  });\n});"
    },
    "tests/unit/specs/components/shared/external/GitHubRepositoryButton/GitHubRepositoryButton.nuxt.spec.ts": {
      "tests": [
        {
          "id": "1001",
          "name": "GitHub Repository Button should match snapshot when rendered."
        },
        {
          "id": "1002",
          "name": "GitHub Repository Button Button Text should render button text with other text when text is passed as prop."
        },
        {
          "id": "1003",
          "name": "GitHub Repository Button Button Text should render button text with default text when text is not passed as prop."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\n\nimport type { GitHubRepositoryButtonProps } from \"~/components/shared/external/GitHubRepositoryButton/git-hub-repository-button.types\";\nimport GitHubRepositoryButton from \"~/components/shared/external/GitHubRepositoryButton/GitHubRepositoryButton.vue\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"GitHub Repository Button\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GitHubRepositoryButton>>;\n  const defaultProps: GitHubRepositoryButtonProps = { textButton: \"GitHub\" };\n\n  beforeEach(async() => {\n    wrapper = await mountSuspendedComponent(GitHubRepositoryButton, { props: defaultProps });\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Button Text\", () => {\n    it(\"should render button text with other text when text is passed as prop.\", async() => {\n      wrapper = await mountSuspendedComponent(GitHubRepositoryButton, { props: { textButton: \"Other text\" } });\n      const buttonText = wrapper.find<HTMLAnchorElement>(\"#github-repository-link\");\n\n      expect(buttonText.text()).toBe(\"Other text\");\n    });\n\n    it(\"should render button text with default text when text is not passed as prop.\", async() => {\n      wrapper = await mountSuspendedComponent(GitHubRepositoryButton);\n      const buttonText = wrapper.find<HTMLAnchorElement>(\"#github-repository-link\");\n\n      expect(buttonText.text()).toBe(\"components.GitHubRepositoryButton.thisProjectIsOpenSource\");\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-history-record/useFetchGameHistoryRecords.spec.ts": {
      "tests": [
        {
          "id": "1004",
          "name": "Use Fetch Game History Records getGameHistoryRecords should get game history records when called."
        },
        {
          "id": "1005",
          "name": "Use Fetch Game History Records getGameHistoryRecords should return null when an error is thrown."
        }
      ],
      "source": "import type { Mock } from \"vitest\";\n\nimport { useFetchGameHistoryRecords } from \"~/composables/api/game/game-history-record/useFetchGameHistoryRecords\";\nimport * as UseWerewolvesAssistantApi from \"~/composables/api/useWerewolvesAssistantApi\";\n\ndescribe(\"Use Fetch Game History Records\", () => {\n  let mocks: {\n    composables: {\n      useWerewolvesAssistantApi: {\n        fetchWerewolvesAssistantApi: Mock;\n      }\n    }\n  };\n\n  beforeEach(() => {\n    mocks = { composables: { useWerewolvesAssistantApi: { fetchWerewolvesAssistantApi: vi.fn() } } };\n    const useWerewolvesAssistantApiMock = mocks.composables.useWerewolvesAssistantApi as unknown as ReturnType<typeof UseWerewolvesAssistantApi.useWerewolvesAssistantApi>;\n    vi.spyOn(UseWerewolvesAssistantApi, \"useWerewolvesAssistantApi\").mockReturnValue(useWerewolvesAssistantApiMock);\n  });\n\n  describe(\"getGameHistoryRecords\", () => {\n    it(\"should get game history records when called.\", async() => {\n      const gameId = \"gameId\";\n      await useFetchGameHistoryRecords().getGameHistoryRecords(gameId);\n\n      expect(mocks.composables.useWerewolvesAssistantApi.fetchWerewolvesAssistantApi).toHaveBeenCalledExactlyOnceWith(`/games/${gameId}/history`, { method: \"GET\" });\n    });\n\n    it(\"should return null when an error is thrown.\", async() => {\n      mocks.composables.useWerewolvesAssistantApi.fetchWerewolvesAssistantApi.mockRejectedValue(undefined);\n      const gameId = \"gameId\";\n      const result = await useFetchGameHistoryRecords().getGameHistoryRecords(gameId);\n\n      expect(result).toBeNull();\n    });\n  });\n});"
    },
    "tests/unit/specs/pages/index/index.nuxt.spec.ts": {
      "tests": [
        {
          "id": "1006",
          "name": "Index Page Component should match snapshot when rendered."
        },
        {
          "id": "1007",
          "name": "Index Page Component Title should display translated title when rendered."
        },
        {
          "id": "1008",
          "name": "Index Page Component Play button should display play button with translated label when rendered."
        },
        {
          "id": "1009",
          "name": "Index Page Component About button should display about button with translated label when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\n\nimport type { NuxtLink } from \"#components\";\nimport Index from \"@/pages/index.vue\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Index Page Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof Index>>;\n\n  beforeEach(async() => {\n    wrapper = await mountSuspendedComponent(Index);\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Title\", () => {\n    it(\"should display translated title when rendered.\", () => {\n      const title = wrapper.find(\"#title\");\n\n      expect(title.text()).toBe(\"Werewolves Assistant\");\n    });\n  });\n\n  describe(\"Play button\", () => {\n    it(\"should display play button with translated label when rendered.\", async() => {\n      wrapper = await mountSuspendedComponent(Index, {\n        shallow: false,\n        stubs: { IndexFooter: true },\n      });\n      const playButton = wrapper.findComponent<typeof NuxtLink>(\"#play-button\");\n\n      expect(playButton.text()).toBe(\"Play\");\n    });\n  });\n\n  describe(\"About button\", () => {\n    it(\"should display about button with translated label when rendered.\", async() => {\n      wrapper = await mountSuspendedComponent(Index, {\n        shallow: false,\n        stubs: { IndexFooter: true },\n      });\n      const aboutButton = wrapper.findComponent<typeof NuxtLink>(\"#about-button\");\n\n      expect(aboutButton.text()).toBe(\"What is it ?\");\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/useGameSource.spec.ts": {
      "tests": [
        {
          "id": "1010",
          "name": "Use Game Source Composable getDefiniteGameSourceNameLabel 'should translate game source when cal…'"
        },
        {
          "id": "1011",
          "name": "Use Game Source Composable getDefiniteGameSourceNameLabel 'should translate definite role name w…'"
        }
      ],
      "source": "import type { GameSource } from \"~/composables/api/game/types/game.types\";\nimport { useGameSourceName } from \"~/composables/api/game/useGameSource\";\n\ndescribe(\"Use Game Source Composable\", () => {\n  describe(\"getDefiniteGameSourceNameLabel\", () => {\n    it.each<{\n      gameSource: GameSource;\n      count: number;\n      expectedLabel: string;\n      test: string;\n    }>([\n      {\n        gameSource: \"sheriff\",\n        count: 1,\n        expectedLabel: \"shared.game.player.attribute.definiteName.sheriff, 1\",\n        test: \"should translate game source when called with sheriff and count 1.\",\n      },\n      {\n        gameSource: \"werewolves\",\n        count: 1,\n        expectedLabel: \"shared.game.player.group.definiteName.werewolves, 1\",\n        test: \"should translate game source when called with werewolves and count 1.\",\n      },\n      {\n        gameSource: \"villagers\",\n        count: 1,\n        expectedLabel: \"shared.game.player.group.definiteName.villagers, 1\",\n        test: \"should translate game source when called with villagers and count 1.\",\n      },\n      {\n        gameSource: \"werewolf\",\n        count: 1,\n        expectedLabel: \"shared.role.definiteName.werewolf, 1\",\n        test: \"should translate definite role name when called with werewolf and count 1.\",\n      },\n    ])(\"$test\", ({ gameSource, count, expectedLabel }) => {\n      expect(useGameSourceName().getDefiniteGameSourceNameLabel(gameSource, count)).toBe(expectedLabel);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/useFetchRandomGameComposition.spec.ts": {
      "tests": [
        {
          "id": "1012",
          "name": "Use Fetch Random Game Composition fetchRandomGameComposition should fetch random game composition when called."
        }
      ],
      "source": "import type { $Fetch } from \"nitropack\";\n\nimport { useFetchRandomGameComposition } from \"~/composables/api/game/useFetchRandomGameComposition\";\nimport * as UseWerewolvesAssistantApi from \"~/composables/api/useWerewolvesAssistantApi\";\n\nconst { stringifyMock } = vi.hoisted(() => ({ stringifyMock: vi.fn() }));\n\nvi.mock(\"qs\", () => ({ stringify: stringifyMock }));\n\ndescribe(\"Use Fetch Random Game Composition\", () => {\n  let mocks: {\n    composables: {\n      useWerewolvesAssistantApi: {\n        fetchWerewolvesAssistantApi: $Fetch;\n      }\n    }\n  };\n\n  beforeEach(() => {\n    mocks = { composables: { useWerewolvesAssistantApi: { fetchWerewolvesAssistantApi: vi.fn() as unknown as $Fetch } } };\n    vi.spyOn(UseWerewolvesAssistantApi, \"useWerewolvesAssistantApi\").mockReturnValue(mocks.composables.useWerewolvesAssistantApi);\n  });\n\n  describe(\"fetchRandomGameComposition\", () => {\n    it(\"should fetch random game composition when called.\", async() => {\n      stringifyMock.mockReturnValue(\"stringifiedQuery\");\n      const expectedUrl = `/games/random-composition?stringifiedQuery`;\n      await useFetchRandomGameComposition().fetchRandomGameComposition({\n        players: [\n          { name: \"Player 1\" },\n          { name: \"Player 2\" },\n          { name: \"Player 3\" },\n        ],\n      });\n\n      expect(mocks.composables.useWerewolvesAssistantApi.fetchWerewolvesAssistantApi).toHaveBeenCalledExactlyOnceWith(expectedUrl, { method: \"GET\" });\n    });\n  });\n});"
    },
    "tests/unit/specs/pages/about/about.nuxt.spec.ts": {
      "tests": [
        {
          "id": "1013",
          "name": "About Page Component should match snapshot when rendered."
        },
        {
          "id": "1014",
          "name": "About Page Component should set head title and meta tags when rendered."
        },
        {
          "id": "1015",
          "name": "About Page Component Title should display role image of werewolf when rendered."
        },
        {
          "id": "1016",
          "name": "About Page Component Title should display translated title when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { UseHeadInput } from \"unhead\";\nimport { expect } from \"vitest\";\n\nimport type RoleImage from \"~/components/shared/role/RoleImage/RoleImage.vue\";\nimport About from \"~/pages/about.vue\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"About Page Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof About>>;\n\n  beforeEach(async() => {\n    wrapper = await mountSuspendedComponent(About);\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  it(\"should set head title and meta tags when rendered.\", () => {\n    const expectedUseHeadInput: UseHeadInput<object> = {\n      title: \"pages.about.whyAnAssistant\",\n      meta: [{ name: \"description\", content: \"pages.about.seoDescription\" }],\n    };\n\n    expect(useHead).toHaveBeenCalledExactlyOnceWith(expectedUseHeadInput);\n  });\n\n  describe(\"Title\", () => {\n    it(\"should display role image of werewolf when rendered.\", () => {\n      const roleImage = wrapper.findComponent<typeof RoleImage>(\"#about-role-image-title\");\n\n      expect(roleImage.props(\"roleName\")).toBe(\"werewolf\");\n    });\n\n    it(\"should display translated title when rendered.\", () => {\n      const title = wrapper.find<HTMLHeadElement>(\"#about-title\");\n\n      expect(title.text()).toBe(\"Why an assistant ?\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/shared/misc/TextProgressSpinner/TextProgressSpinner.nuxt.spec.ts": {
      "tests": [
        {
          "id": "1017",
          "name": "Text Progress Spinner Component should match snapshot when rendered."
        },
        {
          "id": "1018",
          "name": "Text Progress Spinner Component Spinner should render spinner with aria label as text prop when rendered."
        },
        {
          "id": "1019",
          "name": "Text Progress Spinner Component Text should render text with value as text prop when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\n\nimport type { VuePrimeProgressSpinner } from \"#components\";\nimport type { TextProgressSpinnerProps } from \"~/components/shared/misc/TextProgressSpinner/text-progress-spinner.types\";\nimport TextProgressSpinner from \"~/components/shared/misc/TextProgressSpinner/TextProgressSpinner.vue\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Text Progress Spinner Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof TextProgressSpinner>>;\n  const defaultProps: TextProgressSpinnerProps = { text: \"Loading…\" };\n\n  beforeEach(async() => {\n    wrapper = await mountSuspendedComponent(TextProgressSpinner, { props: defaultProps });\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Spinner\", () => {\n    it(\"should render spinner with aria label as text prop when rendered.\", () => {\n      const spinner = wrapper.findComponent<typeof VuePrimeProgressSpinner>(\"[aria-label=\\\"Loading…\\\"]\");\n\n      expect(spinner).toBeTruthy();\n    });\n  });\n\n  describe(\"Text\", () => {\n    it(\"should render text with value as text prop when rendered.\", () => {\n      const text = wrapper.find<HTMLSpanElement>(\".text-progress-spinner-text\");\n\n      expect(text.text()).toBe(\"Loading…\");\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/role/useFetchRoles.spec.ts": {
      "tests": [
        {
          "id": "1020",
          "name": "Use Fetch Roles Composable fetchRoles should fetch roles when called."
        },
        {
          "id": "1021",
          "name": "Use Fetch Roles Composable fetchRoles should return null when fetch roles throws."
        }
      ],
      "source": "import type { Mock } from \"vitest\";\n\nimport { useFetchRoles } from \"~/composables/api/role/useFetchRoles\";\nimport * as UseWerewolvesAssistantApi from \"~/composables/api/useWerewolvesAssistantApi\";\n\ndescribe(\"Use Fetch Roles Composable\", () => {\n  let mocks: {\n    composables: {\n      useWerewolvesAssistantApi: {\n        fetchWerewolvesAssistantApi: Mock;\n      }\n    }\n  };\n\n  beforeEach(() => {\n    mocks = { composables: { useWerewolvesAssistantApi: { fetchWerewolvesAssistantApi: vi.fn() } } };\n    const useWerewolvesAssistantApiMock = mocks.composables.useWerewolvesAssistantApi as unknown as ReturnType<typeof UseWerewolvesAssistantApi.useWerewolvesAssistantApi>;\n    vi.spyOn(UseWerewolvesAssistantApi, \"useWerewolvesAssistantApi\").mockReturnValue(useWerewolvesAssistantApiMock);\n  });\n\n  describe(\"fetchRoles\", () => {\n    it(\"should fetch roles when called.\", async() => {\n      await useFetchRoles().fetchRoles();\n\n      expect(mocks.composables.useWerewolvesAssistantApi.fetchWerewolvesAssistantApi).toHaveBeenCalledExactlyOnceWith(`/roles`, { method: \"GET\" });\n    });\n\n    it(\"should return null when fetch roles throws.\", async() => {\n      vi.spyOn(mocks.composables.useWerewolvesAssistantApi, \"fetchWerewolvesAssistantApi\").mockRejectedValue(new Error(\"error\"));\n      const result = await useFetchRoles().fetchRoles();\n\n      expect(result).toBeNull();\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction.class.spec.ts": {
      "tests": [
        {
          "id": "1022",
          "name": "Game Play Source Interaction Class create should create a game play source interaction when called."
        }
      ],
      "source": "import { GamePlaySourceInteraction } from \"~/composables/api/game/types/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction.class\";\nimport { createFakePlayer } from \"~/tests/unit/utils/factories/composables/api/game/player/player.factory\";\n\ndescribe(\"Game Play Source Interaction Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a game play source interaction when called.\", () => {\n      const eligibleTargets = [\n        createFakePlayer(),\n        createFakePlayer(),\n        createFakePlayer(),\n      ];\n      const createdGamePlaySourceInteraction = GamePlaySourceInteraction.create({\n        type: \"steal-role\",\n        source: \"devoted-servant\",\n        eligibleTargets,\n        boundaries: {\n          min: 1,\n          max: 1,\n        },\n        extra: \"Extra\",\n      } as GamePlaySourceInteraction);\n      const expectedGamePlaySourceInteraction = new GamePlaySourceInteraction();\n      expectedGamePlaySourceInteraction.source = \"devoted-servant\";\n      expectedGamePlaySourceInteraction.type = \"steal-role\";\n      expectedGamePlaySourceInteraction.eligibleTargets = eligibleTargets;\n      expectedGamePlaySourceInteraction.boundaries = {\n        min: 1,\n        max: 1,\n      };\n\n      expect(createdGamePlaySourceInteraction).toStrictEqual<GamePlaySourceInteraction>(expectedGamePlaySourceInteraction);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/player/player.class.spec.ts": {
      "tests": [
        {
          "id": "1023",
          "name": "Player Class create should create a player when called."
        }
      ],
      "source": "import { Player } from \"~/composables/api/game/types/players/player.class\";\nimport { createFakePlayerAttribute } from \"~/tests/unit/utils/factories/composables/api/game/player/player-attribute/player-attribute.factory\";\nimport { createFakePlayerRole } from \"~/tests/unit/utils/factories/composables/api/game/player/player-role/player-role.factory\";\nimport { createFakePlayerSide } from \"~/tests/unit/utils/factories/composables/api/game/player/player-side/player-side.factory\";\n\ndescribe(\"Player Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a player when called.\", () => {\n      const role = createFakePlayerRole();\n      const side = createFakePlayerSide();\n      const attributes = [\n        createFakePlayerAttribute(),\n        createFakePlayerAttribute(),\n        createFakePlayerAttribute(),\n      ];\n      const createdPlayer = Player.create({\n        _id: \"1\",\n        name: \"Player 1\",\n        isAlive: true,\n        role,\n        side,\n        attributes,\n        extra: \"Extra\",\n      } as Player);\n      const expectedPlayer = new Player();\n      expectedPlayer._id = \"1\";\n      expectedPlayer.name = \"Player 1\";\n      expectedPlayer.isAlive = true;\n      expectedPlayer.role = role;\n      expectedPlayer.side = side;\n      expectedPlayer.attributes = attributes;\n\n      expect(createdPlayer).toStrictEqual<Player>(expectedPlayer);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/dto/create-game/create-game-player/create-game-player.dto.spec.ts": {
      "tests": [
        {
          "id": "1024",
          "name": "Create Game Player Dto create should create a game player dto when called."
        }
      ],
      "source": "import { CreateGamePlayerDto } from \"~/composables/api/game/dto/create-game/create-game-player/create-game-player.dto\";\nimport { createFakeCreateGamePlayerRoleDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game-player/create-game-player-role/create-game-player-role.dto.factory\";\nimport { createFakeCreateGamePlayerSideDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game-player/create-game-player-side/create-game-player-side.dto.factory\";\n\ndescribe(\"Create Game Player Dto\", () => {\n  describe(\"create\", () => {\n    it(\"should create a game player dto when called.\", () => {\n      const expectedRole = createFakeCreateGamePlayerRoleDto({ name: \"werewolf\" });\n      const expectedSide = createFakeCreateGamePlayerSideDto();\n      const createGamePlayerDto = CreateGamePlayerDto.create({\n        name: \"Player 1\",\n        role: expectedRole,\n        side: {},\n        extra: \"Extra\",\n      } as CreateGamePlayerDto);\n      const expectedCreateGamePlayerDto = new CreateGamePlayerDto();\n      expectedCreateGamePlayerDto.name = \"Player 1\";\n      expectedCreateGamePlayerDto.role = expectedRole;\n      expectedCreateGamePlayerDto.side = expectedSide;\n\n      expect(createGamePlayerDto).toStrictEqual<CreateGamePlayerDto>(expectedCreateGamePlayerDto);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/shared/buttons/CreateAnotherGameButton/CreateAnotherGameButton.nuxt.spec.ts": {
      "tests": [
        {
          "id": "1025",
          "name": "Create Another Game Button should match snapshot when rendered."
        },
        {
          "id": "1026",
          "name": "Create Another Game Button Button Navigation should have 'to' prop set to game lobby when rendered."
        },
        {
          "id": "1027",
          "name": "Create Another Game Button Button Text should translate button text when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\n\nimport CreateAnotherGameButton from \"~/components/shared/buttons/CreateAnotherGameButton/CreateAnotherGameButton.vue\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Create Another Game Button\", () => {\n  let wrapper: ReturnType<typeof mount<typeof CreateAnotherGameButton>>;\n\n  beforeEach(async() => {\n    wrapper = await mountSuspendedComponent(CreateAnotherGameButton);\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Button Navigation\", () => {\n    it(\"should have 'to' prop set to game lobby when rendered.\", () => {\n      const createAnotherGameButton = wrapper.findComponent(\"#create-another-game-button\");\n\n      expect(createAnotherGameButton.attributes(\"to\")).toBe(\"/game-lobby\");\n    });\n  });\n\n  describe(\"Button Text\", () => {\n    it(\"should translate button text when rendered.\", async() => {\n      wrapper = await mountSuspendedComponent(CreateAnotherGameButton, { shallow: false });\n      const buttonText = wrapper.find<HTMLButtonElement>(\"#create-another-game-button\");\n\n      expect(buttonText.text()).toBe(\"Create another game\");\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/game-options.class.spec.ts": {
      "tests": [
        {
          "id": "1028",
          "name": "Game Options Class create should create a game options when called."
        }
      ],
      "source": "import { GameOptions } from \"~/composables/api/game/types/game-options/game-options.class\";\nimport { createFakeCompositionGameOptions } from \"~/tests/unit/utils/factories/composables/api/game/game-options/composition-game-options/composition-game-options.factory\";\nimport { createFakeRolesGameOptions } from \"~/tests/unit/utils/factories/composables/api/game/game-options/roles-game-options/roles-game-options.factory\";\nimport { createFakeVotesGameOptions } from \"~/tests/unit/utils/factories/composables/api/game/game-options/votes-game-options/votes-game-options.factory\";\n\ndescribe(\"Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a game options when called.\", () => {\n      const composition = createFakeCompositionGameOptions();\n      const roles = createFakeRolesGameOptions();\n      const votes = createFakeVotesGameOptions();\n      const createdGameOptions = GameOptions.create({\n        composition,\n        roles,\n        votes,\n      });\n      const expectedGameOptions = new GameOptions();\n      expectedGameOptions.composition = composition;\n      expectedGameOptions.roles = roles;\n      expectedGameOptions.votes = votes;\n\n      expect(createdGameOptions).toStrictEqual<GameOptions>(expectedGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlayground.nuxt.spec.ts": {
      "tests": [
        {
          "id": "1029",
          "name": "Game Playground Component should match snapshot when rendered."
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport GamePlayground from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlayground.vue\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\nimport { createFakeGame } from \"~/tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Playground Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GamePlayground>>;\n  const testingPinia = { initialState: { [StoreIds.GAME]: { game: createFakeGame() } } };\n\n  async function mountGamePlaygroundComponent(options: ComponentMountingOptions<typeof GamePlayground> = {}): Promise<ReturnType<typeof mount<typeof GamePlayground>>> {\n    return mountSuspendedComponent(GamePlayground, {\n      global: { plugins: [createTestingPinia(testingPinia)] },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGamePlaygroundComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/sheriff-game-options/sheriff-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "1030",
          "name": "Sheriff Game Options Class create should create a sheriff game options when called."
        }
      ],
      "source": "import { SheriffGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/sheriff-game-options/sheriff-game-options.class\";\nimport { createFakeSheriffElectionGameOptions } from \"~/tests/unit/utils/factories/composables/api/game/game-options/roles-game-options/sheriff-game-options/sheriff-election-game-options/sheriff-election-game-options.factory\";\n\ndescribe(\"Sheriff Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a sheriff game options when called.\", () => {\n      const sheriffElectionGameOptions = createFakeSheriffElectionGameOptions();\n      const createdSheriffGameOptions = SheriffGameOptions.create({\n        mustSettleTieInVotes: false,\n        isEnabled: false,\n        hasDoubledVote: false,\n        electedAt: sheriffElectionGameOptions,\n      });\n      const expectedSheriffGameOptions = new SheriffGameOptions();\n      expectedSheriffGameOptions.mustSettleTieInVotes = false;\n      expectedSheriffGameOptions.isEnabled = false;\n      expectedSheriffGameOptions.hasDoubledVote = false;\n      expectedSheriffGameOptions.electedAt = sheriffElectionGameOptions;\n\n      expect(createdSheriffGameOptions).toStrictEqual<SheriffGameOptions>(expectedSheriffGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/shared/buttons/BackToHomeButton/BackToHomeButton.nuxt.spec.ts": {
      "tests": [
        {
          "id": "1031",
          "name": "Back To Home Button should match snapshot when rendered."
        },
        {
          "id": "1032",
          "name": "Back To Home Button Button Navigation should have 'to' prop set to home when rendered."
        },
        {
          "id": "1033",
          "name": "Back To Home Button Button Text should translate button text when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\n\nimport type { NuxtLink } from \"#components\";\nimport BackToHomeButton from \"~/components/shared/buttons/BackToHomeButton/BackToHomeButton.vue\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Back To Home Button\", () => {\n  let wrapper: ReturnType<typeof mount<typeof BackToHomeButton>>;\n\n  beforeEach(async() => {\n    wrapper = await mountSuspendedComponent(BackToHomeButton);\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Button Navigation\", () => {\n    it(\"should have 'to' prop set to home when rendered.\", () => {\n      const backToHomeButton = wrapper.findComponent<typeof NuxtLink>(\"#back-to-home-button\");\n\n      expect(backToHomeButton.attributes(\"to\")).toBe(\"/\");\n    });\n  });\n\n  describe(\"Button Text\", () => {\n    it(\"should translate button text when rendered.\", async() => {\n      wrapper = await mountSuspendedComponent(BackToHomeButton, { shallow: false });\n      const buttonText = wrapper.find<HTMLButtonElement>(\"#back-to-home-button\");\n\n      expect(buttonText.text()).toBe(\"Back to home\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameChooseCardPlayground/GameChooseCardPlayground.nuxt.spec.ts": {
      "tests": [
        {
          "id": "1034",
          "name": "Game Choose Card Playground Component should match snapshot when rendered."
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\n\nimport GameChooseCardPlayground from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameChooseCardPlayground/GameChooseCardPlayground.vue\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\nimport { createFakeGame } from \"~/tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Choose Card Playground Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameChooseCardPlayground>>;\n  const testingPinia = { initialState: { [StoreIds.GAME]: { game: createFakeGame() } } };\n\n  async function mountGameChooseCardPlaygroundComponent(): Promise<ReturnType<typeof mount<typeof GameChooseCardPlayground>>> {\n    return mountSuspendedComponent(GameChooseCardPlayground, { global: { plugins: [createTestingPinia(testingPinia)] } });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameChooseCardPlaygroundComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GameOver/GameOverHistory/GameOverHistoryHeader/GameOverHistoryHeader.nuxt.spec.ts": {
      "tests": [
        {
          "id": "1035",
          "name": "Game Over History Header Component should match snapshot when rendered."
        },
        {
          "id": "1036",
          "name": "Game Over History Header Component Header should translate header when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport GameOverHistoryHeader from \"~/components/pages/game/GameOver/GameOverHistory/GameOverHistoryHeader/GameOverHistoryHeader.vue\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Over History Header Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameOverHistoryHeader>>;\n\n  async function mountGameOverHistoryHeaderComponent(options: ComponentMountingOptions<typeof GameOverHistoryHeader> = {}):\n  Promise<ReturnType<typeof mount<typeof GameOverHistoryHeader>>> {\n    return mountSuspendedComponent(GameOverHistoryHeader, { ...options });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameOverHistoryHeaderComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Header\", () => {\n    it(\"should translate header when rendered.\", () => {\n      const header = wrapper.find<HTMLHeadingElement>(\"#game-history-header-title\");\n\n      expect(header.text()).toBe(\"Game history\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameNoActionPlayground/GameNoActionPlayground.nuxt.spec.ts": {
      "tests": [
        {
          "id": "1037",
          "name": "Game No Action Playground Component should match snapshot when rendered."
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\n\nimport GameNoActionPlayground from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameNoActionPlayground/GameNoActionPlayground.vue\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\nimport { createFakeGame } from \"~/tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game No Action Playground Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameNoActionPlayground>>;\n  const testingPinia = { initialState: { [StoreIds.GAME]: { game: createFakeGame() } } };\n\n  async function mountGameNoActionPlaygroundComponent(): Promise<ReturnType<typeof mount<typeof GameNoActionPlayground>>> {\n    return mountSuspendedComponent(GameNoActionPlayground, { global: { plugins: [createTestingPinia(testingPinia)] } });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameNoActionPlaygroundComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GameNotFound/GameNotFound.nuxt.spec.ts": {
      "tests": [
        {
          "id": "1038",
          "name": "Game Not Found Component should match snapshot when rendered."
        },
        {
          "id": "1039",
          "name": "Game Not Found Component should set head title and meta tags when rendered."
        },
        {
          "id": "1040",
          "name": "Game Not Found Component Game not found text should translate game not found text when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { UseHeadInput } from \"unhead\";\nimport { expect } from \"vitest\";\n\nimport GameNotFound from \"~/components/pages/game/GameNotFound/GameNotFound.vue\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Not Found Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameNotFound>>;\n\n  beforeEach(async() => {\n    wrapper = await mountSuspendedComponent(GameNotFound);\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  it(\"should set head title and meta tags when rendered.\", () => {\n    const expectedUseHeadInput: UseHeadInput<object> = { title: \"components.GameNotFound.gameNotFound\" };\n\n    expect(useHead).toHaveBeenCalledExactlyOnceWith(expectedUseHeadInput);\n  });\n\n  describe(\"Game not found text\", () => {\n    it(\"should translate game not found text when rendered.\", () => {\n      const gameNotFoundText = wrapper.find<HTMLHeadElement>(\"#game-not-found-text\");\n\n      expect(gameNotFoundText.text()).toBe(\"Game not found… Did you get lost ?\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameTargetPlayground/GameTargetPlayground.nuxt.spec.ts": {
      "tests": [
        {
          "id": "1041",
          "name": "Game Target Playground Component should match snapshot when rendered."
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\n\nimport GameTargetPlayground from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameTargetPlayground/GameTargetPlayground.vue\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\nimport { createFakeGame } from \"~/tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Target Playground Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameTargetPlayground>>;\n  const testingPinia = { initialState: { [StoreIds.GAME]: { game: createFakeGame() } } };\n\n  async function mountGameTargetPlaygroundComponent(): Promise<ReturnType<typeof mount<typeof GameTargetPlayground>>> {\n    return mountSuspendedComponent(GameTargetPlayground, { global: { plugins: [createTestingPinia(testingPinia)] } });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameTargetPlaygroundComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameVotePlayground/GameVotePlayground.nuxt.spec.ts": {
      "tests": [
        {
          "id": "1042",
          "name": "Game Vote Playground Component should match snapshot when rendered."
        }
      ],
      "source": "import { createTestingPinia } from \"@pinia/testing\";\nimport type { mount } from \"@vue/test-utils\";\n\nimport GameVotePlayground from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundContent/GameVotePlayground/GameVotePlayground.vue\";\nimport { StoreIds } from \"~/stores/enums/store.enum\";\nimport { createFakeGame } from \"~/tests/unit/utils/factories/composables/api/game/game.factory\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Vote Playground Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameVotePlayground>>;\n  const testingPinia = { initialState: { [StoreIds.GAME]: { game: createFakeGame() } } };\n\n  async function mountGameVotePlaygroundComponent(): Promise<ReturnType<typeof mount<typeof GameVotePlayground>>> {\n    return mountSuspendedComponent(GameVotePlayground, { global: { plugins: [createTestingPinia(testingPinia)] } });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameVotePlaygroundComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-voting/game-history-record-play-voting.class.spec.ts": {
      "tests": [
        {
          "id": "1043",
          "name": "Game History Record Play Voting Class Create should create a game history record play voting when called."
        }
      ],
      "source": "import { GameHistoryRecordPlayVoting } from \"~/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-voting/game-history-record-play-voting.class\";\nimport { createFakePlayer } from \"~/tests/unit/utils/factories/composables/api/game/player/player.factory\";\n\ndescribe(\"Game History Record Play Voting Class\", () => {\n  describe(\"Create\", () => {\n    it(\"should create a game history record play voting when called.\", () => {\n      const nominatedPlayers = [\n        createFakePlayer(),\n        createFakePlayer(),\n      ];\n      const gameHistoryRecordPlayVoting = GameHistoryRecordPlayVoting.create({\n        result: \"sheriff-election\",\n        nominatedPlayers,\n        extra: \"Extra\",\n      } as GameHistoryRecordPlayVoting);\n      const expectedGameHistoryRecordPlayVoting = new GameHistoryRecordPlayVoting();\n      expectedGameHistoryRecordPlayVoting.result = \"sheriff-election\";\n      expectedGameHistoryRecordPlayVoting.nominatedPlayers = nominatedPlayers;\n\n      expect(gameHistoryRecordPlayVoting).toStrictEqual<GameHistoryRecordPlayVoting>(expectedGameHistoryRecordPlayVoting);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GameCanceled/GameCanceled.nuxt.spec.ts": {
      "tests": [
        {
          "id": "1044",
          "name": "Game Canceled Component should match snapshot when rendered."
        },
        {
          "id": "1045",
          "name": "Game Canceled Component should set head title and meta tags when rendered."
        },
        {
          "id": "1046",
          "name": "Game Canceled Component Text should display translated text when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { UseHeadInput } from \"unhead\";\nimport { expect } from \"vitest\";\n\nimport GameCanceled from \"~/components/pages/game/GameCanceled/GameCanceled.vue\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Canceled Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameCanceled>>;\n\n  beforeEach(async() => {\n    wrapper = await mountSuspendedComponent(GameCanceled);\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  it(\"should set head title and meta tags when rendered.\", () => {\n    const expectedUseHeadInput: UseHeadInput<object> = { title: \"components.GameCanceled.gameCanceled\" };\n\n    expect(useHead).toHaveBeenCalledExactlyOnceWith(expectedUseHeadInput);\n  });\n\n  describe(\"Text\", () => {\n    it(\"should display translated text when rendered.\", () => {\n      const textDiv = wrapper.find<HTMLDivElement>(\"#game-canceled-text\");\n\n      expect(textDiv.text()).toBe(\"Game canceled\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/shared/external/BuyMeACoffeeButton/BuyMeACoffeeButton.nuxt.spec.ts": {
      "tests": [
        {
          "id": "1047",
          "name": "Buy Me A Coffee Button Component should match snapshot when rendered."
        },
        {
          "id": "1048",
          "name": "Buy Me A Coffee Button Component Link image should call link image with correct src when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\n\nimport BuyMeACoffeeButton from \"~/components/shared/external/BuyMeACoffeeButton/BuyMeACoffeeButton.vue\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Buy Me A Coffee Button Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof BuyMeACoffeeButton>>;\n\n  beforeEach(async() => {\n    wrapper = await mountSuspendedComponent(BuyMeACoffeeButton);\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Link image\", () => {\n    it(\"should call link image with correct src when rendered.\", () => {\n      const linkImage = wrapper.find<HTMLImageElement>(\"[alt='Buy me a coffee']\");\n      const expectedSrc = \"https://img.buymeacoffee.com/button-api/?\" +\n        \"text=Buy%20me%20a%20coffee&slug=antoinezanardi&button_colour=46a6ff&font_colour=FFFFFF&font_family=Lato&outline_colour=000000&coffee_colour=FFDD00\";\n\n      expect(linkImage.attributes(\"src\")).toBe(expectedSrc);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-source/game-history-record-play-source.class.spec.ts": {
      "tests": [
        {
          "id": "1049",
          "name": "Game History Record Play Source Class Create should create a game history record play source when called."
        }
      ],
      "source": "import { GameHistoryRecordPlaySource } from \"~/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-source/game-history-record-play-source.class\";\nimport { createFakePlayer } from \"~/tests/unit/utils/factories/composables/api/game/player/player.factory\";\n\ndescribe(\"Game History Record Play Source Class\", () => {\n  describe(\"Create\", () => {\n    it(\"should create a game history record play source when called.\", () => {\n      const players = [\n        createFakePlayer(),\n        createFakePlayer(),\n      ];\n      const gameHistoryRecordPlaySource = GameHistoryRecordPlaySource.create({\n        name: \"sheriff\",\n        players,\n        extra: \"Extra\",\n      } as GameHistoryRecordPlaySource);\n      const expectedGameHistoryRecordPlaySource = new GameHistoryRecordPlaySource();\n      expectedGameHistoryRecordPlaySource.name = \"sheriff\";\n      expectedGameHistoryRecordPlaySource.players = players;\n\n      expect(gameHistoryRecordPlaySource).toStrictEqual<GameHistoryRecordPlaySource>(expectedGameHistoryRecordPlaySource);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/dto/create-game/create-game.dto.spec.ts": {
      "tests": [
        {
          "id": "1050",
          "name": "Create Game Dto create should create a game when called."
        }
      ],
      "source": "import { CreateGameDto } from \"~/composables/api/game/dto/create-game/create-game.dto\";\nimport { createFakeCreateGamePlayerDto } from \"~/tests/unit/utils/factories/composables/api/game/dto/create-game/create-game-player/create-game-player.dto.factory\";\nimport { createFakeGameOptions } from \"~/tests/unit/utils/factories/composables/api/game/game-options/game-options.factory\";\n\ndescribe(\"Create Game Dto\", () => {\n  describe(\"create\", () => {\n    it(\"should create a game when called.\", () => {\n      const players = [\n        createFakeCreateGamePlayerDto({\n          name: \"Player 1\",\n          role: { name: \"werewolf\" },\n        }),\n      ];\n      const options = createFakeGameOptions();\n      const createGameDto = CreateGameDto.create({\n        players,\n        options,\n        extra: \"Extra\",\n      } as CreateGameDto);\n      const expectedCreateGameDto = new CreateGameDto();\n      expectedCreateGameDto.players = players;\n      expectedCreateGameDto.options = options;\n\n      expect(createGameDto).toStrictEqual<CreateGameDto>(expectedCreateGameDto);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/player/player-attribute/player-attribute.class.spec.ts": {
      "tests": [
        {
          "id": "1051",
          "name": "Player Attribute Class create should create a player attribute when called."
        }
      ],
      "source": "import { PlayerAttribute } from \"~/composables/api/game/types/players/player-attribute/player-attribute.class\";\nimport { createFakePlayerAttributeActivation } from \"~/tests/unit/utils/factories/composables/api/game/player/player-attribute/player-attribute-activation/player-attribute-activation.factory\";\n\ndescribe(\"Player Attribute Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a player attribute when called.\", () => {\n      const activeAt = createFakePlayerAttributeActivation();\n      const createdPlayerAttribute = PlayerAttribute.create({\n        name: \"sheriff\",\n        source: \"werewolves\",\n        activeAt,\n        remainingPhases: 1,\n      } as PlayerAttribute);\n      const expectedPlayerAttribute = new PlayerAttribute();\n      expectedPlayerAttribute.name = \"sheriff\";\n      expectedPlayerAttribute.source = \"werewolves\";\n      expectedPlayerAttribute.activeAt = activeAt;\n      expectedPlayerAttribute.remainingPhases = 1;\n\n      expect(createdPlayerAttribute).toStrictEqual<PlayerAttribute>(expectedPlayerAttribute);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTab.nuxt.spec.ts": {
      "tests": [
        {
          "id": "1052",
          "name": "Game Lobby Options Hub Roles Tab Component should match snapshot when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport GameLobbyOptionsHubRolesTab from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubTabView/GameLobbyOptionsHubRolesTab/GameLobbyOptionsHubRolesTab.vue\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Lobby Options Hub Roles Tab Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTab>>;\n\n  async function mountGameLobbyOptionsHubRolesTabComponent(options: ComponentMountingOptions<typeof GameLobbyOptionsHubRolesTab> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyOptionsHubRolesTab>>> {\n    return mountSuspendedComponent(GameLobbyOptionsHubRolesTab, { ...options });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyOptionsHubRolesTabComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n});"
    },
    "tests/unit/specs/composables/api/role/useRoleName.spec.ts": {
      "tests": [
        {
          "id": "1053",
          "name": "Use Role Name Composable getRoleNameLabel should translate role when called with role name."
        },
        {
          "id": "1054",
          "name": "Use Role Name Composable getDefiniteRoleNameLabel should translate definite role name when called with role name and count."
        }
      ],
      "source": "import { mockNuxtImport } from \"@nuxt/test-utils/runtime\";\n\nimport { useRoleName } from \"~/composables/api/role/useRoleName\";\nimport { createFakeI18n } from \"~/tests/unit/utils/factories/composables/i18n/useI18n.factory\";\n\nconst { tMock } = vi.hoisted(() => ({ tMock: vi.fn() }));\n\ndescribe(\"Use Role Name Composable\", () => {\n  beforeEach(() => {\n    mockNuxtImport<() => ReturnType<typeof createFakeI18n>>(\n      \"useI18n\",\n    () => vi.fn(() => createFakeI18n({ t: tMock })),\n    );\n  });\n\n  describe(\"getRoleNameLabel\", () => {\n    it(\"should translate role when called with role name.\", () => {\n      useRoleName().getRoleNameLabel(\"werewolf\");\n\n      expect(tMock).toHaveBeenCalledExactlyOnceWith(\"shared.role.name.werewolf\");\n    });\n  });\n\n  describe(\"getDefiniteRoleNameLabel\", () => {\n    it(\"should translate definite role name when called with role name and count.\", () => {\n      useRoleName().getDefiniteRoleNameLabel(\"werewolf\", 1);\n\n      expect(tMock).toHaveBeenCalledExactlyOnceWith(\"shared.role.definiteName.werewolf\", 1);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-target/game-history-record-play-target.class.spec.ts": {
      "tests": [
        {
          "id": "1055",
          "name": "Game History Record Play Target Class Create should create a game history record play target when called."
        }
      ],
      "source": "import { GameHistoryRecordPlayTarget } from \"~/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-target/game-history-record-play-target.class\";\nimport { createFakePlayer } from \"~/tests/unit/utils/factories/composables/api/game/player/player.factory\";\n\ndescribe(\"Game History Record Play Target Class\", () => {\n  describe(\"Create\", () => {\n    it(\"should create a game history record play target when called.\", () => {\n      const player = createFakePlayer();\n      const gameHistoryRecordPlayTarget = GameHistoryRecordPlayTarget.create({\n        player,\n        drankPotion: \"death\",\n        extra: \"Extra\",\n      } as GameHistoryRecordPlayTarget);\n      const expectedGameHistoryRecordPlayTarget = new GameHistoryRecordPlayTarget();\n      expectedGameHistoryRecordPlayTarget.player = player;\n      expectedGameHistoryRecordPlayTarget.drankPotion = \"death\";\n\n      expect(gameHistoryRecordPlayTarget).toStrictEqual<GameHistoryRecordPlayTarget>(expectedGameHistoryRecordPlayTarget);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-history-record/game-history-record-play/game-history-record-play-vote/game-history-record-play-vote.class.spec.ts": {
      "tests": [
        {
          "id": "1056",
          "name": "Game History Record Play Vote Class Create should create a game history record play vote when called."
        }
      ],
      "source": "import { GameHistoryRecordPlayVote } from \"~/composables/api/game/types/game-history-record/game-history-record-play/game-history-record-play-vote/game-history-record-play-vote.class\";\nimport { createFakePlayer } from \"~/tests/unit/utils/factories/composables/api/game/player/player.factory\";\n\ndescribe(\"Game History Record Play Vote Class\", () => {\n  describe(\"Create\", () => {\n    it(\"should create a game history record play vote when called.\", () => {\n      const source = createFakePlayer();\n      const target = createFakePlayer();\n      const gameHistoryRecordPlayVote = GameHistoryRecordPlayVote.create({\n        source,\n        target,\n        extra: \"Extra\",\n      } as GameHistoryRecordPlayVote);\n      const expectedGameHistoryRecordPlayVote = new GameHistoryRecordPlayVote();\n      expectedGameHistoryRecordPlayVote.source = source;\n      expectedGameHistoryRecordPlayVote.target = target;\n\n      expect(gameHistoryRecordPlayVote).toStrictEqual<GameHistoryRecordPlayVote>(expectedGameHistoryRecordPlayVote);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/shared/game/game-play/NoActionNeeded/NoActionNeeded.nuxt.spec.ts": {
      "tests": [
        {
          "id": "1057",
          "name": "No Action Needed Component should match snapshot when rendered."
        },
        {
          "id": "1058",
          "name": "No Action Needed Component Message should translate no action needed message when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\n\nimport NoActionNeeded from \"~/components/shared/game/game-play/NoNeededAction/NoActionNeeded.vue\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"No Action Needed Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof NoActionNeeded>>;\n\n  async function mountNoActionNeededComponent(): Promise<ReturnType<typeof mount<typeof NoActionNeeded>>> {\n    return mountSuspendedComponent(NoActionNeeded);\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountNoActionNeededComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Message\", () => {\n    it(\"should translate no action needed message when rendered.\", () => {\n      const message = wrapper.find<HTMLHeadingElement>(\"#no-action-needed-message\");\n\n      expect(message.text()).toBe(\"No action needed, the game can proceed\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubHeader/GameLobbyOptionsHubHeader.nuxt.spec.ts": {
      "tests": [
        {
          "id": "1059",
          "name": "Game Lobby Options Hub Header Component should match snapshot when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport GameLobbyOptionsHubHeader from \"~/components/pages/game-lobby/GameLobbyOptionsHub/GameLobbyOptionsHubHeader/GameLobbyOptionsHubHeader.vue\";\n\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Lobby Options Hub Header Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyOptionsHubHeader>>;\n\n  async function mountGameLobbyOptionsHubHeaderComponent(options: ComponentMountingOptions<typeof GameLobbyOptionsHubHeader> = {}):\n  Promise<ReturnType<typeof mount<typeof GameLobbyOptionsHubHeader>>> {\n    return mountSuspendedComponent(GameLobbyOptionsHubHeader, { ...options });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGameLobbyOptionsHubHeaderComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction-boundaries/game-play-source-interaction-boundaries.class.spec.ts": {
      "tests": [
        {
          "id": "1060",
          "name": "Game Play Source Interaction Boundaries Class create should create a game play source interaction boundaries when called."
        }
      ],
      "source": "import { GamePlaySourceInteractionBoundaries } from \"~/composables/api/game/types/game-play/game-play-source/game-play-source-interaction/game-play-source-interaction-boundaries/game-play-source-interaction-boundaries.class\";\n\ndescribe(\"Game Play Source Interaction Boundaries Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a game play source interaction boundaries when called.\", () => {\n      const createdGamePlaySourceInteractionBoundaries = GamePlaySourceInteractionBoundaries.create({\n        min: 1,\n        max: 1,\n        extra: \"Extra\",\n      } as GamePlaySourceInteractionBoundaries);\n      const expectedGamePlaySourceInteractionBoundaries = new GamePlaySourceInteractionBoundaries();\n      expectedGamePlaySourceInteractionBoundaries.min = 1;\n      expectedGamePlaySourceInteractionBoundaries.max = 1;\n\n      expect(createdGamePlaySourceInteractionBoundaries).toStrictEqual<GamePlaySourceInteractionBoundaries>(expectedGamePlaySourceInteractionBoundaries);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-play/game-play.class.spec.ts": {
      "tests": [
        {
          "id": "1061",
          "name": "Game Play Class create should create a game play when called."
        }
      ],
      "source": "import { GamePlay } from \"~/composables/api/game/types/game-play/game-play.class\";\nimport { createFakeGamePlaySource } from \"~/tests/unit/utils/factories/composables/api/game/game-play/game-play-source/game-play-source.factory\";\n\ndescribe(\"Game Play Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a game play when called.\", () => {\n      const source = createFakeGamePlaySource();\n      const createdGamePlay = GamePlay.create({\n        type: \"target\",\n        source,\n        action: \"eat\",\n        occurrence: \"on-days\",\n        cause: \"stuttering-judge-request\",\n        extra: \"Extra\",\n      } as GamePlay);\n      const expectedGamePlay = new GamePlay();\n      expectedGamePlay.type = \"target\";\n      expectedGamePlay.source = source;\n      expectedGamePlay.action = \"eat\";\n      expectedGamePlay.occurrence = \"on-days\";\n      expectedGamePlay.cause = \"stuttering-judge-request\";\n\n      expect(createdGamePlay).toStrictEqual<GamePlay>(expectedGamePlay);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/cupid-game-options/cupid-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "1062",
          "name": "Cupid Game Options Class create should create a cupid game options when called."
        }
      ],
      "source": "import { CupidGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/cupid-game-options/cupid-game-options.class\";\nimport { createFakeCupidLoversGameOptions } from \"~/tests/unit/utils/factories/composables/api/game/game-options/roles-game-options/cupid-game-options/cupid-lovers-game-options/cupid-lovers-game-options.factory\";\n\ndescribe(\"Cupid Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a cupid game options when called.\", () => {\n      const loversOptions = createFakeCupidLoversGameOptions();\n      const createdCupidGameOptions = CupidGameOptions.create({\n        mustWinWithLovers: true,\n        lovers: loversOptions,\n      });\n      const expectedCupidGameOptions = new CupidGameOptions();\n      expectedCupidGameOptions.mustWinWithLovers = true;\n      expectedCupidGameOptions.lovers = loversOptions;\n\n      expect(createdCupidGameOptions).toStrictEqual<CupidGameOptions>(expectedCupidGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-play/game-play-source/game-play-source.class.spec.ts": {
      "tests": [
        {
          "id": "1063",
          "name": "Game Play Source Class create should create a game play source when called."
        }
      ],
      "source": "import { GamePlaySource } from \"~/composables/api/game/types/game-play/game-play-source/game-play-source.class\";\nimport { createFakePlayer } from \"~/tests/unit/utils/factories/composables/api/game/player/player.factory\";\n\ndescribe(\"Game Play Source Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a game play source when called.\", () => {\n      const players = [\n        createFakePlayer(),\n        createFakePlayer(),\n        createFakePlayer(),\n      ];\n      const createdGamePlaySource = GamePlaySource.create({\n        name: \"sheriff\",\n        players,\n        interactions: [],\n        extra: \"Extra\",\n      } as GamePlaySource);\n      const expectedGamePlaySource = new GamePlaySource();\n      expectedGamePlaySource.name = \"sheriff\";\n      expectedGamePlaySource.players = players;\n      expectedGamePlaySource.interactions = [];\n\n      expect(createdGamePlaySource).toStrictEqual<GamePlaySource>(expectedGamePlaySource);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/role/role.class.spec.ts": {
      "tests": [
        {
          "id": "1064",
          "name": "Role Class create should create a role when called."
        }
      ],
      "source": "import { Role } from \"~/composables/api/role/types/role.class\";\nimport { createFakeRole } from \"~/tests/unit/utils/factories/composables/api/role/role.factory\";\n\ndescribe(\"Role Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a role when called.\", () => {\n      const role = createFakeRole();\n      const createdRole = Role.create(role);\n      const expectedRole = new Role();\n      expectedRole.name = role.name;\n      expectedRole.side = role.side;\n      expectedRole.type = role.type;\n      expectedRole.origin = role.origin;\n      expectedRole.minInGame = role.minInGame;\n      expectedRole.maxInGame = role.maxInGame;\n      expectedRole.additionalCardsEligibleRecipients = role.additionalCardsEligibleRecipients;\n      expectedRole.recommendedMinPlayers = role.recommendedMinPlayers;\n\n      expect(createdRole).toStrictEqual<Role>(expectedRole);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/dto/create-game/create-game-additional-card/create-game-additional-card.dto.spec.ts": {
      "tests": [
        {
          "id": "1065",
          "name": "Create Game Additional Card Dto create should create a game additional card dto when called."
        }
      ],
      "source": "import { CreateGameAdditionalCardDto } from \"~/composables/api/game/dto/create-game/create-game-additional-card/create-game-additional-card.dto\";\n\ndescribe(\"Create Game Additional Card Dto\", () => {\n  describe(\"create\", () => {\n    it(\"should create a game additional card dto when called.\", () => {\n      const createGameAdditionalCardDto = CreateGameAdditionalCardDto.create({\n        roleName: \"werewolf\",\n        recipient: \"thief\",\n        extra: \"Extra\",\n      } as CreateGameAdditionalCardDto);\n      const expectedCreateGameAdditionalCardDto = new CreateGameAdditionalCardDto();\n      expectedCreateGameAdditionalCardDto.roleName = \"werewolf\";\n      expectedCreateGameAdditionalCardDto.recipient = \"thief\";\n\n      expect(createGameAdditionalCardDto).toStrictEqual<CreateGameAdditionalCardDto>(expectedCreateGameAdditionalCardDto);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-additional-card/game-additional-card.class.spec.ts": {
      "tests": [
        {
          "id": "1066",
          "name": "Game Additional Card Class Create should create a game additional card when called."
        }
      ],
      "source": "import { GameAdditionalCard } from \"~/composables/api/game/types/game-additional-card/game-additional-card.class\";\n\ndescribe(\"Game Additional Card Class\", () => {\n  describe(\"Create\", () => {\n    it(\"should create a game additional card when called.\", () => {\n      const gameAdditionalCard = GameAdditionalCard.create({\n        _id: \"id\",\n        isUsed: false,\n        recipient: \"thief\",\n        roleName: \"seer\",\n        extra: \"Extra\",\n      } as GameAdditionalCard);\n      const expectedGameAdditionalCard = new GameAdditionalCard();\n      expectedGameAdditionalCard._id = \"id\";\n      expectedGameAdditionalCard.isUsed = false;\n      expectedGameAdditionalCard.recipient = \"thief\";\n      expectedGameAdditionalCard.roleName = \"seer\";\n\n      expect(gameAdditionalCard).toStrictEqual<GameAdditionalCard>(expectedGameAdditionalCard);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/player/player-attribute/player-attribute-activation/player-attribute-activation.class.spec.ts": {
      "tests": [
        {
          "id": "1067",
          "name": "Player Attribute Activation Class create should create a player attribute activation when called."
        }
      ],
      "source": "import { PlayerAttributeActivation } from \"~/composables/api/game/types/players/player-attribute/player-attribute-activation/player-attribute-activation.class\";\n\ndescribe(\"Player Attribute Activation Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a player attribute activation when called.\", () => {\n      const createdPlayerAttributeActivation = PlayerAttributeActivation.create({\n        turn: 5,\n        phaseName: \"night\",\n        extra: \"Extra\",\n      } as PlayerAttributeActivation);\n      const expectedPlayerAttributeActivation = new PlayerAttributeActivation();\n      expectedPlayerAttributeActivation.turn = 5;\n      expectedPlayerAttributeActivation.phaseName = \"night\";\n\n      expect(createdPlayerAttributeActivation).toStrictEqual<PlayerAttributeActivation>(expectedPlayerAttributeActivation);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/thief-game-options/thief-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "1068",
          "name": "Thief Game Options Class create should create a thief game options when called."
        }
      ],
      "source": "import { ThiefGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/thief-game-options/thief-game-options.class\";\n\ndescribe(\"Thief Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a thief game options when called.\", () => {\n      const createdThiefGameOptions = ThiefGameOptions.create({\n        mustChooseBetweenWerewolves: false,\n        isChosenCardRevealed: false,\n        additionalCardsCount: 4,\n      });\n      const expectedThiefGameOptions = new ThiefGameOptions();\n      expectedThiefGameOptions.mustChooseBetweenWerewolves = false;\n      expectedThiefGameOptions.isChosenCardRevealed = false;\n      expectedThiefGameOptions.additionalCardsCount = 4;\n\n      expect(createdThiefGameOptions).toStrictEqual<ThiefGameOptions>(expectedThiefGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/sheriff-game-options/sheriff-election-game-options/sheriff-election-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "1069",
          "name": "Sheriff Election Game Options Class create should create a sheriff election game options when called."
        }
      ],
      "source": "import { SheriffElectionGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/sheriff-game-options/sheriff-election-game-options/sheriff-election-game-options.class\";\n\ndescribe(\"Sheriff Election Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a sheriff election game options when called.\", () => {\n      const createdSheriffElectionGameOptions = SheriffElectionGameOptions.create({\n        turn: 3,\n        phaseName: \"day\",\n      });\n      const expectedSheriffElectionGameOptions = new SheriffElectionGameOptions();\n      expectedSheriffElectionGameOptions.turn = 3;\n      expectedSheriffElectionGameOptions.phaseName = \"day\";\n\n      expect(createdSheriffElectionGameOptions).toStrictEqual<SheriffElectionGameOptions>(expectedSheriffElectionGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-victory/game-victory.class.spec.ts": {
      "tests": [
        {
          "id": "1070",
          "name": "Game Victory Class create should create a game victory when called."
        }
      ],
      "source": "import { GameVictory } from \"~/composables/api/game/types/game-victory/game-victory.class\";\nimport { createFakePlayer } from \"~/tests/unit/utils/factories/composables/api/game/player/player.factory\";\n\ndescribe(\"Game Victory Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a game victory when called.\", () => {\n      const winners = [\n        createFakePlayer(),\n        createFakePlayer(),\n      ];\n      const createdGameVictory = GameVictory.create({\n        type: \"werewolves\",\n        winners,\n        extra: \"Extra\",\n      } as GameVictory);\n      const expectedGameVictory = new GameVictory();\n      expectedGameVictory.type = \"werewolves\";\n      expectedGameVictory.winners = winners;\n\n      expect(createdGameVictory).toStrictEqual<GameVictory>(expectedGameVictory);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/pied-piper-game-options/pied-piper-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "1071",
          "name": "Pied Piper Game Options Class create should create a pied piper game options when called."
        }
      ],
      "source": "import { PiedPiperGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/pied-piper-game-options/pied-piper-game-options.class\";\n\ndescribe(\"Pied Piper Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a pied piper game options when called.\", () => {\n      const createdPiedPiperGameOptions = PiedPiperGameOptions.create({\n        isPowerlessOnWerewolvesSide: false,\n        charmedPeopleCountPerNight: 1,\n      });\n      const expectedPiedPiperGameOptions = new PiedPiperGameOptions();\n      expectedPiedPiperGameOptions.isPowerlessOnWerewolvesSide = false;\n      expectedPiedPiperGameOptions.charmedPeopleCountPerNight = 1;\n\n      expect(createdPiedPiperGameOptions).toStrictEqual<PiedPiperGameOptions>(expectedPiedPiperGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/index/IndexFooter.nuxt.spec.ts": {
      "tests": [
        {
          "id": "1072",
          "name": "Index Page Footer Component should match snapshot when rendered."
        },
        {
          "id": "1073",
          "name": "Index Page Footer Component Contact Me Button should display contact me with translated text button when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\n\nimport IndexFooter from \"~/components/pages/index/IndexFooter.vue\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Index Page Footer Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof IndexFooter>>;\n\n  beforeEach(async() => {\n    wrapper = await mountSuspendedComponent(IndexFooter);\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Contact Me Button\", () => {\n    it(\"should display contact me with translated text button when rendered.\", () => {\n      const contactMeButton = wrapper.find(\"#contact-button\");\n\n      expect(contactMeButton.text()).toBe(\"Contact me\");\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/wolf-hound-game-options/wolf-hound-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "1074",
          "name": "Wolf Hound Game Options Class create should create a wolf hound game options when called."
        }
      ],
      "source": "import { WolfHoundGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/wolf-hound-game-options/wolf-hound-game-options.class\";\n\ndescribe(\"Wolf Hound Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a wolf hound game options when called.\", () => {\n      const createdWolfHoundGameOptions = WolfHoundGameOptions.create({\n        isSideRandomlyChosen: true,\n        isChosenSideRevealed: false,\n      });\n      const expectedWolfHoundGameOptions = new WolfHoundGameOptions();\n      expectedWolfHoundGameOptions.isSideRandomlyChosen = true;\n      expectedWolfHoundGameOptions.isChosenSideRevealed = false;\n\n      expect(createdWolfHoundGameOptions).toStrictEqual<WolfHoundGameOptions>(expectedWolfHoundGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/actor-game-options/actor-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "1075",
          "name": "Actor Game Options Class create should create an actor game options when called."
        }
      ],
      "source": "import { ActorGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/actor-game-options/actor-game-options.class\";\n\ndescribe(\"Actor Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create an actor game options when called.\", () => {\n      const createdActorGameOptions = ActorGameOptions.create({\n        additionalCardsCount: 1,\n        isPowerlessOnWerewolvesSide: false,\n      });\n      const expectedActorGameOptions = new ActorGameOptions();\n      expectedActorGameOptions.additionalCardsCount = 1;\n      expectedActorGameOptions.isPowerlessOnWerewolvesSide = false;\n\n      expect(createdActorGameOptions).toStrictEqual<ActorGameOptions>(expectedActorGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/stuttering-judge-game-options/stuttering-judge-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "1076",
          "name": "Stuttering Judge Game Options Class create should create a stuttering judge game options when called."
        }
      ],
      "source": "import { StutteringJudgeGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/stuttering-judge-game-options/stuttering-judge-game-options.class\";\n\ndescribe(\"Stuttering Judge Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a stuttering judge game options when called.\", () => {\n      const createdStutteringJudgeGameOptions = StutteringJudgeGameOptions.create({ voteRequestsCount: 3 });\n      const expectedStutteringJudgeGameOptions = new StutteringJudgeGameOptions();\n      expectedStutteringJudgeGameOptions.voteRequestsCount = 3;\n\n      expect(createdStutteringJudgeGameOptions).toStrictEqual<StutteringJudgeGameOptions>(expectedStutteringJudgeGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/elder-game-options/elder-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "1077",
          "name": "Elder Game Options Class create should create an elder game options when called."
        }
      ],
      "source": "import { ElderGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/elder-game-options/elder-game-options.class\";\n\ndescribe(\"Elder Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create an elder game options when called.\", () => {\n      const createdElderGameOptions = ElderGameOptions.create({\n        doesTakeHisRevenge: false,\n        livesCountAgainstWerewolves: 5,\n      });\n      const expectedElderGameOptions = new ElderGameOptions();\n      expectedElderGameOptions.doesTakeHisRevenge = false;\n      expectedElderGameOptions.livesCountAgainstWerewolves = 5;\n\n      expect(createdElderGameOptions).toStrictEqual<ElderGameOptions>(expectedElderGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/cupid-game-options/cupid-lovers-game-options/cupid-lovers-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "1078",
          "name": "Cupid Lovers Game Options Class create should create a cupid lovers game options when called."
        }
      ],
      "source": "import { CupidLoversGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/cupid-game-options/cupid-lovers-game-options/cupid-lovers-game-options.class\";\n\ndescribe(\"Cupid Lovers Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a cupid lovers game options when called.\", () => {\n      const createdCupidLoversGameOptions = CupidLoversGameOptions.create({ doRevealRoleToEachOther: false });\n      const expectedCupidLoversGameOptions = new CupidLoversGameOptions();\n      expectedCupidLoversGameOptions.doRevealRoleToEachOther = false;\n\n      expect(createdCupidLoversGameOptions).toStrictEqual<CupidLoversGameOptions>(expectedCupidLoversGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/useWerewolvesAssistantApi.spec.ts": {
      "tests": [
        {
          "id": "1079",
          "name": "Use Werewolves Assistant Api Composable fetchWerewolvesAssistantApi should create a fetch instance for Werewolves Assistant API when called."
        }
      ],
      "source": "import { useWerewolvesAssistantApi } from \"~/composables/api/useWerewolvesAssistantApi\";\n\nconst { createMock } = vi.hoisted(() => ({ createMock: vi.fn() }));\nvi.mock(\"ofetch\", () => ({ createFetch: vi.fn(() => ({ create: createMock })) }));\n\ndescribe(\"Use Werewolves Assistant Api Composable\", () => {\n  describe(\"fetchWerewolvesAssistantApi\", () => {\n    it(\"should create a fetch instance for Werewolves Assistant API when called.\", () => {\n      useWerewolvesAssistantApi();\n\n      expect(createMock).toHaveBeenCalledExactlyOnceWith({\n        baseURL: \"http://127.0.0.1\",\n        headers: { \"Content-Type\": \"application/json\" },\n        onResponseError: expect.any(Function) as () => void,\n      });\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/three-brothers-game-options/three-brothers-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "1080",
          "name": "Three Brothers Game Options Class create should create a three brothers game options when called."
        }
      ],
      "source": "import { ThreeBrothersGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/three-brothers-game-options/three-brothers-game-options.class\";\n\ndescribe(\"Three Brothers Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a three brothers game options when called.\", () => {\n      const createdThreeBrothersGameOptions = ThreeBrothersGameOptions.create({ wakingUpInterval: 5 });\n      const expectedThreeBrothersGameOptions = new ThreeBrothersGameOptions();\n      expectedThreeBrothersGameOptions.wakingUpInterval = 5;\n\n      expect(createdThreeBrothersGameOptions).toStrictEqual<ThreeBrothersGameOptions>(expectedThreeBrothersGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/scandalmonger-game-options/scandalmonger-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "1081",
          "name": "Scandalmonger Game Options Class create should create a scandalmonger game options when called."
        }
      ],
      "source": "import { ScandalmongerGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/scandalmonger-game-options/scandalmongonger-game-options.class\";\n\ndescribe(\"Scandalmonger Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a scandalmonger game options when called.\", () => {\n      const createdScandalmongerGameOptions = ScandalmongerGameOptions.create({ markPenalty: 4 });\n      const expectedScandalmongerGameOptions = new ScandalmongerGameOptions();\n      expectedScandalmongerGameOptions.markPenalty = 4;\n      \n      expect(createdScandalmongerGameOptions).toStrictEqual<ScandalmongerGameOptions>(expectedScandalmongerGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/player/player-role/player-role.class.spec.ts": {
      "tests": [
        {
          "id": "1082",
          "name": "Player Role Class create should create a player role when called."
        }
      ],
      "source": "import { PlayerRole } from \"~/composables/api/game/types/players/player-role/player-role.class\";\n\ndescribe(\"Player Role Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a player role when called.\", () => {\n      const createdPlayerSide = PlayerRole.create({\n        original: \"werewolf\",\n        current: \"seer\",\n        isRevealed: true,\n        extra: \"Extra\",\n      } as PlayerRole);\n      const expectedPlayerSide = new PlayerRole();\n      expectedPlayerSide.original = \"werewolf\";\n      expectedPlayerSide.current = \"seer\";\n      expectedPlayerSide.isRevealed = true;\n\n      expect(createdPlayerSide).toStrictEqual<PlayerRole>(expectedPlayerSide);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/little-girl-game-options/little-girl-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "1083",
          "name": "Little Girl Game Options Class create should create a little girl game options when called."
        }
      ],
      "source": "import { LittleGirlGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/little-girl-game-options/little-girl-game-options.class\";\n\ndescribe(\"Little Girl Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a little girl game options when called.\", () => {\n      const createdLittleGirlGameOptions = LittleGirlGameOptions.create({ isProtectedByDefender: true });\n      const expectedLittleGirlGameOptions = new LittleGirlGameOptions();\n      expectedLittleGirlGameOptions.isProtectedByDefender = true;\n\n      expect(createdLittleGirlGameOptions).toStrictEqual<LittleGirlGameOptions>(expectedLittleGirlGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/white-werewolf-game-options/white-werewolf-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "1084",
          "name": "White Werewolf create should create a white werewolf game options when called."
        }
      ],
      "source": "import { WhiteWerewolfGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/white-werewolf-options/white-werewolf-game-options.class\";\n\ndescribe(\"White Werewolf\", () => {\n  describe(\"create\", () => {\n    it(\"should create a white werewolf game options when called.\", () => {\n      const createdWhiteWerewolfGameOptions = WhiteWerewolfGameOptions.create({ wakingUpInterval: 3 });\n      const expectedWhiteWerewolfGameOptions = new WhiteWerewolfGameOptions();\n      expectedWhiteWerewolfGameOptions.wakingUpInterval = 3;\n\n      expect(createdWhiteWerewolfGameOptions).toStrictEqual<WhiteWerewolfGameOptions>(expectedWhiteWerewolfGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/bear-tamer-game-options/bear-tamer-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "1085",
          "name": "Bear Tamer Game Options Class create should create a bear tamer game options when called."
        }
      ],
      "source": "import { BearTamerGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/bear-tamer-game-options/bear-tamer-game-options.class\";\n\ndescribe(\"Bear Tamer Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a bear tamer game options when called.\", () => {\n      const createdBearTamerGameOptions = BearTamerGameOptions.create({ doesGrowlOnWerewolvesSide: false });\n      const expectedBearTamerGameOptions = new BearTamerGameOptions();\n      expectedBearTamerGameOptions.doesGrowlOnWerewolvesSide = false;\n\n      expect(createdBearTamerGameOptions).toStrictEqual<BearTamerGameOptions>(expectedBearTamerGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/seer-game-options/seer-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "1086",
          "name": "Seer Game Options Class create should create a seer game options when called."
        }
      ],
      "source": "import { SeerGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/seer-game-options/seer-game-options.class\";\n\ndescribe(\"Seer Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a seer game options when called.\", () => {\n      const createdSeerGameOptions = SeerGameOptions.create({\n        isTalkative: false,\n        canSeeRoles: false,\n      });\n      const expectedSeerGameOptions = new SeerGameOptions();\n      expectedSeerGameOptions.isTalkative = false;\n      expectedSeerGameOptions.canSeeRoles = false;\n\n      expect(createdSeerGameOptions).toStrictEqual<SeerGameOptions>(expectedSeerGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/wild-child-game-options/wild-child-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "1087",
          "name": "Wild Child Game Options Class create should create a wild child game options when called."
        }
      ],
      "source": "import { WildChildGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/wild-child-game-options/wild-child-game-options.class\";\n\ndescribe(\"Wild Child Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a wild child game options when called.\", () => {\n      const createdWildChildGameOptions = WildChildGameOptions.create({ isTransformationRevealed: true });\n      const expectedWildChildGameOptions = new WildChildGameOptions();\n      expectedWildChildGameOptions.isTransformationRevealed = true;\n\n      expect(createdWildChildGameOptions).toStrictEqual<WildChildGameOptions>(expectedWildChildGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/two-sisters-game-options/two-sisters-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "1088",
          "name": "Two Sisters Game Options Class create should create a two sisters game options when called."
        }
      ],
      "source": "import { TwoSistersGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/two-sisters-game-options/two-sisters-game-options.class\";\n\ndescribe(\"Two Sisters Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a two sisters game options when called.\", () => {\n      const createdTwoSistersGameOptions = TwoSistersGameOptions.create({ wakingUpInterval: 5 });\n      const expectedTwoSistersGameOptions = new TwoSistersGameOptions();\n      expectedTwoSistersGameOptions.wakingUpInterval = 5;\n\n      expect(createdTwoSistersGameOptions).toStrictEqual<TwoSistersGameOptions>(expectedTwoSistersGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/big-bad-wolf-options/big-bad-wolf-options.class.spec.ts": {
      "tests": [
        {
          "id": "1089",
          "name": "Big Bad Wolf Game Options Class create should create a big bad wolf options when called."
        }
      ],
      "source": "import { BigBadWolfGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/big-bad-wolf-options/big-bad-wolf-options.class\";\n\ndescribe(\"Big Bad Wolf Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a big bad wolf options when called.\", () => {\n      const createdBigBadWolfOptions = BigBadWolfGameOptions.create({ isPowerlessIfWerewolfDies: false });\n      const expectedBigBadWolfOptions = new BigBadWolfGameOptions();\n      expectedBigBadWolfOptions.isPowerlessIfWerewolfDies = false;\n\n      expect(createdBigBadWolfOptions).toStrictEqual<BigBadWolfGameOptions>(expectedBigBadWolfOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/composition-game-options/composition-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "1090",
          "name": "Composition Game Options Class create should create a composition game options when called."
        }
      ],
      "source": "import { CompositionGameOptions } from \"~/composables/api/game/types/game-options/composition-game-options/composition-game-options.class\";\n\ndescribe(\"Composition Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a composition game options when called.\", () => {\n      const createdCompositionGameOptions = CompositionGameOptions.create({ isHidden: true });\n      const expectedCompositionGameOptions = new CompositionGameOptions();\n      expectedCompositionGameOptions.isHidden = true;\n\n      expect(createdCompositionGameOptions).toStrictEqual<CompositionGameOptions>(expectedCompositionGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/defender-game-options/defender-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "1091",
          "name": "Defender Game Options Class create should create a defender game options when called."
        }
      ],
      "source": "import { DefenderGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/defender-game-options/defender-game-options.class\";\n\ndescribe(\"Defender Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a defender game options when called.\", () => {\n      const createdDefenderGameOptions = DefenderGameOptions.create({ canProtectTwice: true });\n      const expectedDefenderGameOptions = new DefenderGameOptions();\n      expectedDefenderGameOptions.canProtectTwice = true;\n\n      expect(createdDefenderGameOptions).toStrictEqual<DefenderGameOptions>(expectedDefenderGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/player/player-side/player-side.class.spec.ts": {
      "tests": [
        {
          "id": "1092",
          "name": "Player Side Class create should create a player side when called."
        }
      ],
      "source": "import { PlayerSide } from \"~/composables/api/game/types/players/player-side/player-side.class\";\n\ndescribe(\"Player Side Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a player side when called.\", () => {\n      const createdPlayerSide = PlayerSide.create({\n        original: \"werewolves\",\n        current: \"werewolves\",\n        extra: \"Extra\",\n      } as PlayerSide);\n      const expectedPlayerSide = new PlayerSide();\n      expectedPlayerSide.original = \"werewolves\";\n      expectedPlayerSide.current = \"werewolves\";\n\n      expect(createdPlayerSide).toStrictEqual<PlayerSide>(expectedPlayerSide);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundFooter/GamePlaygroundFooter.nuxt.spec.ts": {
      "tests": [
        {
          "id": "1093",
          "name": "Game Playground Footer Component should match snapshot when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\n\nimport GamePlaygroundFooter from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundFooter/GamePlaygroundFooter.vue\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Playground Footer Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GamePlaygroundFooter>>;\n\n  beforeEach(async() => {\n    wrapper = await mountSuspendedComponent(GamePlaygroundFooter);\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundHeader/GamePlaygroundHeader.nuxt.spec.ts": {
      "tests": [
        {
          "id": "1094",
          "name": "Game Playground Header Component should match snapshot when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\n\nimport GamePlaygroundHeader from \"~/components/pages/game/GamePlaying/GamePlayground/GamePlaygroundHeader/GamePlaygroundHeader.vue\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Playground Header Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GamePlaygroundHeader>>;\n\n  beforeEach(async() => {\n    wrapper = await mountSuspendedComponent(GamePlaygroundHeader);\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/witch-game-options/witch-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "1095",
          "name": "Witch Game Options Class create should create a witch game options when called."
        }
      ],
      "source": "import { WitchGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/witch-game-options/witch-game-options.class\";\n\ndescribe(\"Witch Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a witch game options when called.\", () => {\n      const createdWitchGameOptions = WitchGameOptions.create({ doesKnowWerewolvesTargets: false });\n      const expectedWitchGameOptions = new WitchGameOptions();\n      expectedWitchGameOptions.doesKnowWerewolvesTargets = false;\n\n      expect(createdWitchGameOptions).toStrictEqual<WitchGameOptions>(expectedWitchGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/idiot-game-options/idiot-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "1096",
          "name": "Idiot Game Options Class create should create an idiot game options when called."
        }
      ],
      "source": "import { IdiotGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/idiot-game-options/idiot-game-options.class\";\n\ndescribe(\"Idiot Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create an idiot game options when called.\", () => {\n      const createdIdiotGameOptions = IdiotGameOptions.create({ doesDieOnElderDeath: false });\n      const expectedIdiotGameOptions = new IdiotGameOptions();\n      expectedIdiotGameOptions.doesDieOnElderDeath = false;\n\n      expect(createdIdiotGameOptions).toStrictEqual<IdiotGameOptions>(expectedIdiotGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-options/roles-game-options/fox-game-options/fox-game-options.class.spec.ts": {
      "tests": [
        {
          "id": "1097",
          "name": "Fox Game Options Class create should create a fox game options when called."
        }
      ],
      "source": "import { FoxGameOptions } from \"~/composables/api/game/types/game-options/roles-game-options/fox-game-options/fox-game-options.class\";\n\ndescribe(\"Fox Game Options Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a fox game options when called.\", () => {\n      const createdFoxGameOptions = FoxGameOptions.create({ isPowerlessIfMissesWerewolf: false });\n      const expectedFoxGameOptions = new FoxGameOptions();\n      expectedFoxGameOptions.isPowerlessIfMissesWerewolf = false;\n\n      expect(createdFoxGameOptions).toStrictEqual<FoxGameOptions>(expectedFoxGameOptions);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/pages/game-lobby/GameLobbyFooter/GameLobbyFooter.nuxt.spec.ts": {
      "tests": [
        {
          "id": "1098",
          "name": "Game Lobby Footer Component should match snapshot when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\n\nimport GameLobbyFooter from \"~/components/pages/game-lobby/GameLobbyFooter/GameLobbyFooter.vue\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Lobby Footer Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GameLobbyFooter>>;\n\n  beforeEach(async() => {\n    wrapper = await mountSuspendedComponent(GameLobbyFooter);\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n});"
    },
    "tests/unit/specs/components/pages/game/GamePlaying/GamePlaying.nuxt.spec.ts": {
      "tests": [
        {
          "id": "1099",
          "name": "Game Playing Component should match snapshot when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\n\nimport GamePlaying from \"~/components/pages/game/GamePlaying/GamePlaying.vue\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Game Playing Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GamePlaying>>;\n\n  beforeEach(async() => {\n    wrapper = await mountSuspendedComponent(GamePlaying);\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-phase/game-phase.class.spec.ts": {
      "tests": [
        {
          "id": "1100",
          "name": "Game Phase Class create should create a game phase when called."
        }
      ],
      "source": "import { GamePhase } from \"~/composables/api/game/types/game-phase/game-phase.class\";\n\ndescribe(\"Game Phase Class\", () => {\n  describe(\"create\", () => {\n    it(\"should create a game phase when called.\", () => {\n      const createdGamePhase = GamePhase.create({\n        name: \"day\",\n        tick: 1,\n      } as GamePhase);\n      const expectedGamePhase = new GamePhase();\n      expectedGamePhase.name = \"day\";\n      expectedGamePhase.tick = 1;\n\n      expect(createdGamePhase).toStrictEqual<GamePhase>(expectedGamePhase);\n    });\n  });\n});"
    },
    "tests/unit/specs/modules/i18n.spec.ts": {
      "tests": [
        {
          "id": "1101",
          "name": "I18n module Locales should contain all keys set in fr locale when locale is en."
        }
      ],
      "source": "import { crush } from \"radash\";\n\nimport fr from \"~/modules/i18n/locales/fr.json\";\nimport en from \"~/modules/i18n/locales/en.json\";\n\ndescribe(\"I18n module\", () => {\n  describe(\"Locales\", () => {\n    const flatFrLocale = crush(fr);\n    const frKeys = Object.keys(flatFrLocale).toSorted();\n\n    it(\"should contain all keys set in fr locale when locale is en.\", () => {\n      const flatEnLocale = crush(en);\n      const enKeys = Object.keys(flatEnLocale).toSorted();\n\n      expect(frKeys).toStrictEqual<string[]>(enKeys);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/misc/useStrings.spec.ts": {
      "tests": [
        {
          "id": "1102",
          "name": "Use Strings Composable convertBooleanAsAffirmativeString should return 'yes' when value is true."
        },
        {
          "id": "1103",
          "name": "Use Strings Composable convertBooleanAsAffirmativeString should return 'no' when value is false."
        }
      ],
      "source": "import { useStrings } from \"~/composables/misc/useStrings\";\n\ndescribe(\"Use Strings Composable\", () => {\n  describe(\"convertBooleanAsAffirmativeString\", () => {\n    it(\"should return 'yes' when value is true.\", () => {\n      const result = useStrings().convertBooleanAsAffirmativeString(true);\n\n      expect(result).toBe(\"yes\");\n    });\n\n    it(\"should return 'no' when value is false.\", () => {\n      const result = useStrings().convertBooleanAsAffirmativeString(false);\n\n      expect(result).toBe(\"no\");\n    });\n  });\n});"
    },
    "tests/unit/specs/layouts/default.nuxt.spec.ts": {
      "tests": [
        {
          "id": "1104",
          "name": "Default Layout should match snapshot when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\n\nimport Default from \"~/layouts/default.vue\";\nimport { mountSuspendedComponent } from \"~/tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Default Layout\", () => {\n  let wrapper: ReturnType<typeof mount<typeof Default>>;\n\n  beforeEach(async() => {\n    wrapper = await mountSuspendedComponent(Default);\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n});"
    },
    "tests/unit/specs/composables/api/game/game-phase/useGamePhase.spec.ts": {
      "tests": [
        {
          "id": "1105",
          "name": "Use Game Phase Composable getGamePhaseWithTurnText should return game phase with turn text when called."
        }
      ],
      "source": "import { useGamePhase } from \"~/composables/api/game/game-phase/useGamePhase\";\n\ndescribe(\"Use Game Phase Composable\", () => {\n  describe(\"getGamePhaseWithTurnText\", () => {\n    it(\"should return game phase with turn text when called.\", () => {\n      const expectedPhaseWithTurnText = \"shared.game.phase.day 3\";\n\n      expect(useGamePhase().getGamePhaseWithTurnText(\"day\", 3)).toBe(expectedPhaseWithTurnText);\n    });\n  });\n});"
    },
    "tests/unit/specs/utils/url.utils.spec.ts": {
      "tests": [
        {
          "id": "1106",
          "name": "URL Utils removeTrailingSlashes should remove trailing slashes when called."
        }
      ],
      "source": "import { removeTrailingSlashes } from \"~/utils/url.utils\";\n\ndescribe(\"URL Utils\", () => {\n  describe(\"removeTrailingSlashes\", () => {\n    it(\"should remove trailing slashes when called.\", () => {\n      const url = \"https://example.com///\";\n      const expected = \"https://example.com\";\n\n      expect(removeTrailingSlashes(url)).toBe(expected);\n    });\n  });\n});"
    }
  },
  "projectRoot": "/Users/antoinezanardi/WebstormProjects/werewolves-assistant-web-next",
  "config": {
    "cleanTempDir": "always",
    "incremental": true,
    "incrementalFile": "tests/stryker/incremental.json",
    "checkers": [
      "typescript"
    ],
    "tsconfigFile": "tsconfig.json",
    "testRunner": "vitest",
    "ignoreStatic": true,
    "mutate": [
      "app.vue",
      "components/**/*.{ts,vue}",
      "composables/**/*.ts",
      "pages/**/*.{ts,vue}",
      "layouts/**/*.{ts,vue}",
      "stores/**/*.ts",
      "utils/**/*.ts",
      "!utils/**/*.constants.ts"
    ],
    "plugins": [
      "@stryker-mutator/vitest-runner",
      "@stryker-mutator/typescript-checker",
      "./config/stryker/plugins/stryker-define-props-ignorer-plugin.mjs",
      "./config/stryker/plugins/stryker-define-emits-ignorer-plugin.mjs",
      "./config/stryker/plugins/stryker-define-page-meta-ignorer-plugin.mjs",
      "./config/stryker/plugins/stryker-define-model-ignorer-plugin.mjs",
      "./config/stryker/plugins/stryker-define-expose-ignorer-plugin.mjs"
    ],
    "ignorers": [
      "defineProps",
      "defineEmits",
      "definePageMeta",
      "defineModel",
      "defineExpose"
    ],
    "ignorePatterns": [
      "!.nuxt/",
      ".github/",
      ".husky/",
      ".output/",
      ".run/",
      ".idea/",
      "config/commitlint",
      "config/cucumber",
      "config/eslint",
      "config/lint-staged",
      "config/stryker",
      "tests/acceptance",
      "tests/stryker",
      "tests/unit/coverage",
      "scripts/",
      "server/",
      ".editorconfig",
      ".npmrc",
      ".nvmrc",
      ".releaserc.js",
      ".DS_Store",
      ".validate-branch-namerc.json",
      "CHANGELOG.md",
      "LICENSE",
      "pnpm-lock.yaml",
      "sonar-project.properties",
      "README.md"
    ],
    "symlinkNodeModules": false,
    "vitest": {
      "configFile": "config/vitest/vitest.unit-config.ts"
    },
    "reporters": [
      "clear-text",
      "progress",
      "html",
      "json"
    ],
    "htmlReporter": {
      "fileName": "tests/stryker/coverage/index.html"
    },
    "jsonReporter": {
      "fileName": "tests/stryker/coverage/mutation.json"
    },
    "thresholds": {
      "high": 100,
      "low": 100,
      "break": 100
    },
    "disableTypeChecks": true,
    "configFile": "config/stryker/stryker.conf.mjs",
    "allowConsoleColors": true,
    "checkerNodeArgs": [],
    "commandRunner": {
      "command": "npm test"
    },
    "coverageAnalysis": "perTest",
    "clearTextReporter": {
      "allowColor": true,
      "allowEmojis": false,
      "logTests": true,
      "maxTestsToLog": 3,
      "reportTests": true,
      "reportMutants": true,
      "reportScoreTable": true
    },
    "dashboard": {
      "baseUrl": "https://dashboard.stryker-mutator.io/api/reports",
      "reportType": "full"
    },
    "dryRunOnly": false,
    "eventReporter": {
      "baseDir": "reports/mutation/events"
    },
    "force": false,
    "fileLogLevel": "off",
    "inPlace": false,
    "logLevel": "info",
    "maxConcurrentTestRunners": 9007199254740991,
    "maxTestRunnerReuse": 0,
    "mutator": {
      "plugins": null,
      "excludedMutations": []
    },
    "appendPlugins": [],
    "tempDirName": ".stryker-tmp",
    "testRunnerNodeArgs": [],
    "timeoutFactor": 1.5,
    "timeoutMS": 5000,
    "dryRunTimeoutMinutes": 5,
    "warnings": true,
    "disableBail": false,
    "allowEmpty": false,
    "typescriptChecker": {
      "prioritizePerformanceOverAccuracy": true
    }
  },
  "framework": {
    "name": "StrykerJS",
    "version": "8.2.6",
    "branding": {
      "homepageUrl": "https://stryker-mutator.io",
      "imageUrl": "data:image/svg+xml;utf8,%3Csvg viewBox='0 0 1458 1458' xmlns='http://www.w3.org/2000/svg' fill-rule='evenodd' clip-rule='evenodd' stroke-linejoin='round' stroke-miterlimit='2'%3E%3Cpath fill='none' d='M0 0h1458v1458H0z'/%3E%3CclipPath id='a'%3E%3Cpath d='M0 0h1458v1458H0z'/%3E%3C/clipPath%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M1458 729c0 402.655-326.345 729-729 729S0 1131.655 0 729C0 326.445 326.345 0 729 0s729 326.345 729 729' fill='%23e74c3c' fill-rule='nonzero'/%3E%3Cpath d='M778.349 1456.15L576.6 1254.401l233-105 85-78.668v-64.332l-257-257-44-187-50-208 251.806-82.793L1076.6 389.401l380.14 379.15c-19.681 367.728-311.914 663.049-678.391 687.599z' fill-opacity='.3'/%3E%3Cpath d='M753.4 329.503c41.79 0 74.579 7.83 97.925 25.444 23.571 18.015 41.69 43.956 55.167 77.097l11.662 28.679 165.733-58.183-14.137-32.13c-26.688-60.655-64.896-108.61-114.191-144.011-49.329-35.423-117.458-54.302-204.859-54.302-50.78 0-95.646 7.376-134.767 21.542-40.093 14.671-74.09 34.79-102.239 60.259-28.84 26.207-50.646 57.06-65.496 92.701-14.718 35.052-22.101 72.538-22.101 112.401 0 72.536 20.667 133.294 61.165 182.704 38.624 47.255 98.346 88.037 179.861 121.291 42.257 17.475 78.715 33.125 109.227 46.994 27.193 12.361 49.294 26.124 66.157 41.751 15.309 14.186 26.497 30.584 33.63 49.258 7.721 20.214 11.16 45.69 11.16 76.402 0 28.021-4.251 51.787-13.591 71.219-8.832 18.374-20.171 33.178-34.523 44.219-14.787 11.374-31.193 19.591-49.393 24.466-19.68 5.359-39.14 7.993-58.69 7.993-29.359 0-54.387-3.407-75.182-10.747-20.112-7.013-37.144-16.144-51.259-27.486-13.618-11.009-24.971-23.766-33.744-38.279-9.64-15.8-17.272-31.924-23.032-48.408l-10.965-31.376-161.669 60.585 10.734 30.124c10.191 28.601 24.197 56.228 42.059 82.748 18.208 27.144 41.322 51.369 69.525 72.745 27.695 21.075 60.904 38.218 99.481 51.041 37.777 12.664 82.004 19.159 132.552 19.159 49.998 0 95.818-8.321 137.611-24.622 42.228-16.471 78.436-38.992 108.835-67.291 30.719-28.597 54.631-62.103 71.834-100.642 17.263-38.56 25.923-79.392 25.923-122.248 0-54.339-8.368-100.37-24.208-138.32-16.29-38.759-38.252-71.661-65.948-98.797-26.965-26.418-58.269-48.835-93.858-67.175-33.655-17.241-69.196-33.11-106.593-47.533-35.934-13.429-65.822-26.601-89.948-39.525-22.153-11.868-40.009-24.21-53.547-37.309-11.429-11.13-19.83-23.678-24.718-37.664-5.413-15.49-7.98-33.423-7.98-53.577 0-40.883 11.293-71.522 37.086-90.539 28.443-20.825 64.985-30.658 109.311-30.658z' fill='%23f1c40f' fill-rule='nonzero'/%3E%3Cpath d='M720 0h18v113h-18zM1458 738v-18h-113v18h113zM720 1345h18v113h-18zM113 738v-18H0v18h113z'/%3E%3C/g%3E%3C/svg%3E"
    },
    "dependencies": {
      "@stryker-mutator/typescript-checker": "8.2.6",
      "typescript": "5.4.5"
    }
  }
}