import TypescriptParser from "@typescript-eslint/parser";
import TypeScriptPlugin from "@typescript-eslint/eslint-plugin";

import { ERROR, OFF, NAMING_CONVENTION_DEFAULT_CONFIG, NEVER } from "../eslint.constants.mjs";

const ESLINT_TYPESCRIPT_CONFIG = Object.freeze({
  name: "typescript",
  files: [
    "nuxt.config.ts",
    "**/*.ts",
  ],
  plugins: { "@typescript-eslint": TypeScriptPlugin },
  languageOptions: {
    parser: TypescriptParser,
    parserOptions: {
      ecmaVersion: "latest",
      sourceType: "module",
      ecmaFeatures: { jsx: true },
      project: "./tsconfig.json",
      emitDecoratorMetadata: true,
    },
  },
  rules: {
    // ---- ESLint Rules which must be deactivated for typescript to work -----
    "class-methods-use-this": OFF,
    "default-param-last": OFF,
    "dot-notation": OFF,
    "max-params": OFF,
    "no-dupe-class-members": OFF,
    "no-loss-of-precision": OFF,
    "no-unused-vars": OFF,
    "no-use-before-define": OFF,
    "no-array-constructor": OFF,
    "no-empty-function": OFF,
    "no-implied-eval": OFF,
    "no-invalid-this": OFF,
    "no-redeclare": OFF,
    "no-shadow": OFF,
    "no-throw-literal": OFF,
    "no-unused-expressions": OFF,
    "no-useless-constructor": OFF,
    "require-await": OFF,

    // ---- TypeScript Rules -----
    // - Supported Rules (https://typescript-eslint.io/rules/#supported-rules)
    "@typescript-eslint/adjacent-overload-signatures": ERROR,
    "@typescript-eslint/array-type": ERROR,
    "@typescript-eslint/await-thenable": ERROR,
    "@typescript-eslint/ban-ts-comment": ERROR,
    "@typescript-eslint/ban-tslint-comment": ERROR,
    "@typescript-eslint/ban-types": ERROR,
    "@typescript-eslint/class-literal-property-style": ERROR,
    "@typescript-eslint/class-methods-use-this": ERROR,
    "@typescript-eslint/consistent-generic-constructors": [ERROR, "type-annotation"],
    "@typescript-eslint/consistent-indexed-object-style": ERROR,
    "@typescript-eslint/consistent-type-assertions": ERROR,
    "@typescript-eslint/consistent-type-definitions": [ERROR, "type"],
    "@typescript-eslint/consistent-type-exports": ERROR,
    "@typescript-eslint/consistent-type-imports": ERROR,
    "@typescript-eslint/default-param-last": ERROR,
    "@typescript-eslint/dot-notation": [
      ERROR, {
        allowPrivateClassPropertyAccess: true,
        allowProtectedClassPropertyAccess: true,
      },
    ],
    "@typescript-eslint/explicit-function-return-type": ERROR,
    "@typescript-eslint/explicit-member-accessibility": ERROR,
    "@typescript-eslint/explicit-module-boundary-types": ERROR,
    "@typescript-eslint/init-declarations": ERROR,
    "@typescript-eslint/max-params": ERROR,
    "@typescript-eslint/member-ordering": ERROR,
    "@typescript-eslint/method-signature-style": ERROR,
    "@typescript-eslint/naming-convention": [
      ERROR,
      ...NAMING_CONVENTION_DEFAULT_CONFIG,
    ],
    "@typescript-eslint/no-array-constructor": ERROR,
    "@typescript-eslint/no-base-to-string": ERROR,
    "@typescript-eslint/no-confusing-non-null-assertion": ERROR,
    "@typescript-eslint/no-confusing-void-expression": [ERROR, { ignoreArrowShorthand: true }],
    "@typescript-eslint/no-dupe-class-members": ERROR,
    "@typescript-eslint/no-duplicate-enum-values": ERROR,
    "@typescript-eslint/no-dynamic-delete": ERROR,
    "@typescript-eslint/no-empty-function": ERROR,
    "@typescript-eslint/no-empty-interface": ERROR,
    "@typescript-eslint/no-explicit-any": ERROR,
    "@typescript-eslint/no-extra-non-null-assertion": ERROR,
    "@typescript-eslint/no-extraneous-class": OFF,
    "@typescript-eslint/no-floating-promises": ERROR,
    "@typescript-eslint/no-for-in-array": ERROR,
    "@typescript-eslint/no-implied-eval": ERROR,
    "@typescript-eslint/no-import-type-side-effects": ERROR,
    "@typescript-eslint/no-inferrable-types": [ERROR, { ignoreProperties: true }],
    "@typescript-eslint/no-invalid-this": ERROR,
    "@typescript-eslint/no-invalid-void-type": ERROR,
    "@typescript-eslint/no-loop-func": ERROR,
    "@typescript-eslint/no-loss-of-precision": ERROR,
    "@typescript-eslint/no-magic-numbers": [
      ERROR, {
        ignoreArrayIndexes: true,
        ignoreDefaultValues: true,
        ignoreEnums: true,
        ignoreTypeIndexes: true,
        ignore: [0, -1, 1],
      },
    ],
    "@typescript-eslint/no-meaningless-void-operator": ERROR,
    "@typescript-eslint/no-misused-new": ERROR,
    "@typescript-eslint/no-misused-promises": [ERROR, { checksVoidReturn: false }],
    "@typescript-eslint/no-mixed-enums": ERROR,
    "@typescript-eslint/no-namespace": ERROR,
    "@typescript-eslint/no-non-null-asserted-nullish-coalescing": ERROR,
    "@typescript-eslint/no-non-null-asserted-optional-chain": ERROR,
    "@typescript-eslint/no-non-null-assertion": ERROR,
    "@typescript-eslint/no-redeclare": ERROR,
    "@typescript-eslint/no-redundant-type-constituents": ERROR,
    "@typescript-eslint/no-require-imports": ERROR,
    "@typescript-eslint/no-restricted-imports": [
      ERROR, {
        patterns: [
          {
            group: ["./"],
            message: "Relative imports to children directories are not allowed.",
          },
          {
            group: ["../"],
            message: "Relative imports from parent directories are not allowed.",
          },
        ],
      },
    ],
    "@typescript-eslint/no-shadow": [
      ERROR, {
        hoist: NEVER,
        ignoreFunctionTypeParameterNameValueShadow: true,
      },
    ],
    "@typescript-eslint/no-this-alias": ERROR,
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": ERROR,
    "@typescript-eslint/no-unnecessary-condition": ERROR,
    "@typescript-eslint/no-unnecessary-qualifier": ERROR,
    "@typescript-eslint/no-unnecessary-type-arguments": ERROR,
    "@typescript-eslint/no-unnecessary-type-assertion": ERROR,
    "@typescript-eslint/no-unnecessary-type-constraint": ERROR,
    "@typescript-eslint/no-unsafe-argument": ERROR,
    "@typescript-eslint/no-unsafe-assignment": ERROR,
    "@typescript-eslint/no-unsafe-call": ERROR,
    "@typescript-eslint/no-unsafe-declaration-merging": ERROR,
    "@typescript-eslint/no-unsafe-enum-comparison": ERROR,
    "@typescript-eslint/no-unsafe-member-access": ERROR,
    "@typescript-eslint/no-unsafe-return": ERROR,
    "@typescript-eslint/no-unsafe-unary-minus": ERROR,
    "@typescript-eslint/no-unused-expressions": ERROR,
    "@typescript-eslint/no-unused-vars": ERROR,
    "@typescript-eslint/no-use-before-define": OFF,
    "@typescript-eslint/no-useless-constructor": ERROR,
    "@typescript-eslint/no-useless-empty-export": ERROR,
    "@typescript-eslint/no-useless-template-literals": ERROR,
    "@typescript-eslint/no-var-requires": ERROR,
    "@typescript-eslint/non-nullable-type-assertion-style": ERROR,
    "@typescript-eslint/parameter-properties": [ERROR, { allow: ["private readonly"] }],
    "@typescript-eslint/prefer-as-const": ERROR,
    "@typescript-eslint/prefer-enum-initializers": ERROR,
    "@typescript-eslint/prefer-for-of": ERROR,
    "@typescript-eslint/prefer-function-type": ERROR,
    "@typescript-eslint/prefer-includes": ERROR,
    "@typescript-eslint/prefer-literal-enum-member": ERROR,
    "@typescript-eslint/prefer-namespace-keyword": ERROR,
    "@typescript-eslint/prefer-nullish-coalescing": ERROR,
    "@typescript-eslint/prefer-optional-chain": ERROR,
    "@typescript-eslint/prefer-readonly": ERROR,
    "@typescript-eslint/prefer-readonly-parameter-types": OFF,
    "@typescript-eslint/prefer-reduce-type-parameter": ERROR,
    "@typescript-eslint/prefer-regexp-exec": ERROR,
    "@typescript-eslint/prefer-return-this-type": ERROR,
    "@typescript-eslint/prefer-string-starts-ends-with": ERROR,
    "@typescript-eslint/prefer-ts-expect-error": ERROR,
    "@typescript-eslint/promise-function-async": ERROR,
    "@typescript-eslint/require-array-sort-compare": ERROR,
    "@typescript-eslint/require-await": ERROR,
    "@typescript-eslint/restrict-plus-operands": ERROR,
    "@typescript-eslint/restrict-template-expressions": ERROR,
    "@typescript-eslint/return-await": ERROR,
    "@typescript-eslint/sort-type-constituents": ERROR,
    "@typescript-eslint/strict-boolean-expressions": ERROR,
    "@typescript-eslint/switch-exhaustiveness-check": ERROR,
    "@typescript-eslint/triple-slash-reference": ERROR,
    "@typescript-eslint/typedef": ERROR,
    "@typescript-eslint/unbound-method": ERROR,
    "@typescript-eslint/unified-signatures": ERROR,
  },
});

export { ESLINT_TYPESCRIPT_CONFIG };